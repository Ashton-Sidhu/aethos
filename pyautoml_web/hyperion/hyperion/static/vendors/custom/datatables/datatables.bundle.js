/*! DataTables 1.10.19
 * Â©2008-2018 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     DataTables
 * @description Paginate, search and order HTML tables
 * @version     1.10.19
 * @file        jquery.dataTables.js
 * @author      SpryMedia Ltd
 * @contact     www.datatables.net
 * @copyright   Copyright 2008-2018 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/

(function( factory ) {
	"use strict";

	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				// CommonJS environments without a window global must pass a
				// root. This will give an error otherwise
				root = window;
			}

			if ( ! $ ) {
				$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window
					require('jquery') :
					require('jquery')( root );
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}
(function( $, window, document, undefined ) {
	"use strict";

	/**
	 * DataTables is a plug-in for the jQuery Javascript library. It is a highly
	 * flexible tool, based upon the foundations of progressive enhancement,
	 * which will add advanced interaction controls to any HTML table. For a
	 * full list of features please refer to
	 * [DataTables.net](href="http://datatables.net).
	 *
	 * Note that the `DataTable` object is not a global variable but is aliased
	 * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may
	 * be  accessed.
	 *
	 *  @class
	 *  @param {object} [init={}] Configuration object for DataTables. Options
	 *    are defined by {@link DataTable.defaults}
	 *  @requires jQuery 1.7+
	 *
	 *  @example
	 *    // Basic initialisation
	 *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
	 *
	 *  @example
	 *    // Initialisation with configuration options - in this case, disable
	 *    // pagination and sorting.
	 *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
	 */
	var DataTable = function ( options )
	{
		/**
		 * Perform a jQuery selector action on the table's TR elements (from the tbody) and
		 * return the resulting jQuery object.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
		 *    criterion ("applied") or all TR elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {object} jQuery object, filtered by the given selector.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"search": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
		 */
		this.$ = function ( sSelector, oOpts )
		{
			return this.api(true).$( sSelector, oOpts );
		};
		
		
		/**
		 * Almost identical to $ in operation, but in this case returns the data for the matched
		 * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
		 * rather than any descendants, so the data can be obtained for the row/cell. If matching
		 * rows are found, the data returned is the original data array/object that was used to
		 * create the row (or a generated array if from a DOM source).
		 *
		 * This method is often useful in-combination with $ where both functions are given the
		 * same parameters and the array indexes will match identically.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
		 *    criterion ("applied") or all elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the data in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {array} Data for the matched elements. If any elements, as a result of the
		 *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
		 *    entry in the array.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"search": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the search" );
		 *    } );
		 */
		this._ = function ( sSelector, oOpts )
		{
			return this.api(true).rows( sSelector, oOpts ).data();
		};
		
		
		/**
		 * Create a DataTables Api instance, with the currently selected tables for
		 * the Api's context.
		 * @param {boolean} [traditional=false] Set the API instance's context to be
		 *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was
		 *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),
		 *   or if all tables captured in the jQuery object should be used.
		 * @return {DataTables.Api}
		 */
		this.api = function ( traditional )
		{
			return traditional ?
				new _Api(
					_fnSettingsFromNode( this[ _ext.iApiIndex ] )
				) :
				new _Api( this );
		};
		
		
		/**
		 * Add a single new row or multiple rows of data to the table. Please note
		 * that this is suitable for client-side processing only - if you are using
		 * server-side processing (i.e. "bServerSide": true), then to add data, you
		 * must add it to the data source, i.e. the server-side, through an Ajax call.
		 *  @param {array|object} data The data to be added to the table. This can be:
		 *    <ul>
		 *      <li>1D array of data - add a single row with the data provided</li>
		 *      <li>2D array of arrays - add multiple rows in a single call</li>
		 *      <li>object - data object when using <i>mData</i></li>
		 *      <li>array of objects - multiple data objects when using <i>mData</i></li>
		 *    </ul>
		 *  @param {bool} [redraw=true] redraw the table or not
		 *  @returns {array} An array of integers, representing the list of indexes in
		 *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
		 *    the table.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Global var for counter
		 *    var giCount = 2;
		 *
		 *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
		 *
		 *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
		 */
		this.fnAddData = function( data, redraw )
		{
			var api = this.api( true );
		
			/* Check if we want to add multiple rows or not */
			var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?
				api.rows.add( data ) :
				api.row.add( data );
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return rows.flatten().toArray();
		};
		
		
		/**
		 * This function will make DataTables recalculate the column sizes, based on the data
		 * contained in the table and the sizes applied to the columns (in the DOM, CSS or
		 * through the sWidth parameter). This can be useful when the width of the table's
		 * parent element changes (for example a window resize).
		 *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).on('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
		 */
		this.fnAdjustColumnSizing = function ( bRedraw )
		{
			var api = this.api( true ).columns.adjust();
			var settings = api.settings()[0];
			var scroll = settings.oScroll;
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw( false );
			}
			else if ( scroll.sX !== "" || scroll.sY !== "" ) {
				/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
				_fnScrollDraw( settings );
			}
		};
		
		
		/**
		 * Quickly and simply clear a table
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
		 */
		this.fnClearTable = function( bRedraw )
		{
			var api = this.api( true ).clear();
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
		};
		
		
		/**
		 * The exact opposite of 'opening' a row, this function will close any rows which
		 * are currently 'open'.
		 *  @param {node} nTr the table row to 'close'
		 *  @returns {int} 0 on success, or 1 if failed (can't find the row)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnClose = function( nTr )
		{
			this.api( true ).row( nTr ).child.hide();
		};
		
		
		/**
		 * Remove a row for the table
		 *  @param {mixed} target The index of the row from aoData to be deleted, or
		 *    the TR element you want to delete
		 *  @param {function|null} [callBack] Callback function
		 *  @param {bool} [redraw=true] Redraw the table or not
		 *  @returns {array} The row that was deleted
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
		 */
		this.fnDeleteRow = function( target, callback, redraw )
		{
			var api = this.api( true );
			var rows = api.rows( target );
			var settings = rows.settings()[0];
			var data = settings.aoData[ rows[0][0] ];
		
			rows.remove();
		
			if ( callback ) {
				callback.call( this, settings, data );
			}
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return data;
		};
		
		
		/**
		 * Restore the table to it's original state in the DOM by removing all of DataTables
		 * enhancements, alterations to the DOM structure of the table and event listeners.
		 *  @param {boolean} [remove=false] Completely remove the table from the DOM
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
		 */
		this.fnDestroy = function ( remove )
		{
			this.api( true ).destroy( remove );
		};
		
		
		/**
		 * Redraw the table
		 *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
		 */
		this.fnDraw = function( complete )
		{
			// Note that this isn't an exact match to the old call to _fnDraw - it takes
			// into account the new data, but can hold position.
			this.api( true ).draw( complete );
		};
		
		
		/**
		 * Filter the input based on data
		 *  @param {string} sInput String to filter the table on
		 *  @param {int|null} [iColumn] Column to limit filtering to
		 *  @param {bool} [bRegex=false] Treat as regular expression or not
		 *  @param {bool} [bSmart=true] Perform smart filtering or not
		 *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
		 *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
		 */
		this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )
		{
			var api = this.api( true );
		
			if ( iColumn === null || iColumn === undefined ) {
				api.search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
			else {
				api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
		
			api.draw();
		};
		
		
		/**
		 * Get the data for the whole table, an individual row or an individual cell based on the
		 * provided parameters.
		 *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as
		 *    a TR node then the data source for the whole row will be returned. If given as a
		 *    TD/TH cell node then iCol will be automatically calculated and the data for the
		 *    cell returned. If given as an integer, then this is treated as the aoData internal
		 *    data index for the row (see fnGetPosition) and the data for that row used.
		 *  @param {int} [col] Optional column index that you want the data of.
		 *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
		 *    returned. If mRow is defined, just data for that row, and is iCol is
		 *    defined, only data for the designated cell is returned.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Row data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Individual cell data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
		 */
		this.fnGetData = function( src, col )
		{
			var api = this.api( true );
		
			if ( src !== undefined ) {
				var type = src.nodeName ? src.nodeName.toLowerCase() : '';
		
				return col !== undefined || type == 'td' || type == 'th' ?
					api.cell( src, col ).data() :
					api.row( src ).data() || null;
			}
		
			return api.data().toArray();
		};
		
		
		/**
		 * Get an array of the TR nodes that are used in the table's body. Note that you will
		 * typically want to use the '$' API method in preference to this as it is more
		 * flexible.
		 *  @param {int} [iRow] Optional row index for the TR element you want
		 *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
		 *    in the table's body, or iRow is defined, just the TR element requested.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
		 */
		this.fnGetNodes = function( iRow )
		{
			var api = this.api( true );
		
			return iRow !== undefined ?
				api.row( iRow ).node() :
				api.rows().nodes().flatten().toArray();
		};
		
		
		/**
		 * Get the array indexes of a particular cell from it's DOM element
		 * and column index including hidden columns
		 *  @param {node} node this can either be a TR, TD or TH in the table's body
		 *  @returns {int} If nNode is given as a TR, then a single index is returned, or
		 *    if given as a cell, an array of [row index, column index (visible),
		 *    column index (all)] is given.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnGetPosition = function( node )
		{
			var api = this.api( true );
			var nodeName = node.nodeName.toUpperCase();
		
			if ( nodeName == 'TR' ) {
				return api.row( node ).index();
			}
			else if ( nodeName == 'TD' || nodeName == 'TH' ) {
				var cell = api.cell( node ).index();
		
				return [
					cell.row,
					cell.columnVisible,
					cell.column
				];
			}
			return null;
		};
		
		
		/**
		 * Check to see if a row is 'open' or not.
		 *  @param {node} nTr the table row to check
		 *  @returns {boolean} true if the row is currently open, false otherwise
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnIsOpen = function( nTr )
		{
			return this.api( true ).row( nTr ).child.isShown();
		};
		
		
		/**
		 * This function will place a new row directly after a row which is currently
		 * on display on the page, with the HTML contents that is passed into the
		 * function. This can be used, for example, to ask for confirmation that a
		 * particular record should be deleted.
		 *  @param {node} nTr The table row to 'open'
		 *  @param {string|node|jQuery} mHtml The HTML to put into the row
		 *  @param {string} sClass Class to give the new TD cell
		 *  @returns {node} The row opened. Note that if the table row passed in as the
		 *    first parameter, is not found in the table, this method will silently
		 *    return.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnOpen = function( nTr, mHtml, sClass )
		{
			return this.api( true )
				.row( nTr )
				.child( mHtml, sClass )
				.show()
				.child()[0];
		};
		
		
		/**
		 * Change the pagination - provides the internal logic for pagination in a simple API
		 * function. With this function you can have a DataTables table go to the next,
		 * previous, first or last pages.
		 *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
		 *    or page number to jump to (integer), note that page 0 is the first page.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
		 */
		this.fnPageChange = function ( mAction, bRedraw )
		{
			var api = this.api( true ).page( mAction );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw(false);
			}
		};
		
		
		/**
		 * Show a particular column
		 *  @param {int} iCol The column whose display should be changed
		 *  @param {bool} bShow Show (true) or hide (false) the column
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
		 */
		this.fnSetColumnVis = function ( iCol, bShow, bRedraw )
		{
			var api = this.api( true ).column( iCol ).visible( bShow );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.columns.adjust().draw();
			}
		};
		
		
		/**
		 * Get the settings for a particular table for external manipulation
		 *  @returns {object} DataTables settings object. See
		 *    {@link DataTable.models.oSettings}
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
		 */
		this.fnSettings = function()
		{
			return _fnSettingsFromNode( this[_ext.iApiIndex] );
		};
		
		
		/**
		 * Sort the table by a particular column
		 *  @param {int} iCol the data index to sort on. Note that this will not match the
		 *    'display index' if you have hidden data entries
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
		 */
		this.fnSort = function( aaSort )
		{
			this.api( true ).order( aaSort ).draw();
		};
		
		
		/**
		 * Attach a sort listener to an element for a given column
		 *  @param {node} nNode the element to attach the sort listener to
		 *  @param {int} iColumn the column that a click on this node will sort on
		 *  @param {function} [fnCallback] callback function when sort is run
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
		 */
		this.fnSortListener = function( nNode, iColumn, fnCallback )
		{
			this.api( true ).order.listener( nNode, iColumn, fnCallback );
		};
		
		
		/**
		 * Update a table cell or row - this method will accept either a single value to
		 * update the cell with, an array of values with one element for each column or
		 * an object in the same format as the original data source. The function is
		 * self-referencing in order to make the multi column updates easier.
		 *  @param {object|array|string} mData Data to update the cell/row with
		 *  @param {node|int} mRow TR element you want to update or the aoData index
		 *  @param {int} [iColumn] The column to update, give as null or undefined to
		 *    update a whole row.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @param {bool} [bAction=true] Perform pre-draw actions or not
		 *  @returns {int} 0 on success, 1 on error
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
		 */
		this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )
		{
			var api = this.api( true );
		
			if ( iColumn === undefined || iColumn === null ) {
				api.row( mRow ).data( mData );
			}
			else {
				api.cell( mRow, iColumn ).data( mData );
			}
		
			if ( bAction === undefined || bAction ) {
				api.columns.adjust();
			}
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
			return 0;
		};
		
		
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used, in order
		 * to ensure compatibility.
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
		 *    formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
		 *    version, or false if this version of DataTales is not suitable
		 *  @method
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		this.fnVersionCheck = _ext.fnVersionCheck;
		

		var _that = this;
		var emptyInit = options === undefined;
		var len = this.length;

		if ( emptyInit ) {
			options = {};
		}

		this.oApi = this.internal = _ext.internal;

		// Extend with old style plug-in API methods
		for ( var fn in DataTable.ext.internal ) {
			if ( fn ) {
				this[fn] = _fnExternApiFunc(fn);
			}
		}

		this.each(function() {
			// For each initialisation we want to give it a clean initialisation
			// object that can be bashed around
			var o = {};
			var oInit = len > 1 ? // optimisation for single table case
				_fnExtend( o, options, true ) :
				options;

			/*global oInit,_that,emptyInit*/
			var i=0, iLen, j, jLen, k, kLen;
			var sId = this.getAttribute( 'id' );
			var bInitHandedOff = false;
			var defaults = DataTable.defaults;
			var $this = $(this);
			
			
			/* Sanity check */
			if ( this.nodeName.toLowerCase() != 'table' )
			{
				_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );
				return;
			}
			
			/* Backwards compatibility for the defaults */
			_fnCompatOpts( defaults );
			_fnCompatCols( defaults.column );
			
			/* Convert the camel-case defaults to Hungarian */
			_fnCamelToHungarian( defaults, defaults, true );
			_fnCamelToHungarian( defaults.column, defaults.column, true );
			
			/* Setting up the initialisation object */
			_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );
			
			
			
			/* Check to see if we are re-initialising a table */
			var allSettings = DataTable.settings;
			for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )
			{
				var s = allSettings[i];
			
				/* Base check on table node */
				if (
					s.nTable == this ||
					(s.nTHead && s.nTHead.parentNode == this) ||
					(s.nTFoot && s.nTFoot.parentNode == this)
				) {
					var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
					var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
			
					if ( emptyInit || bRetrieve )
					{
						return s.oInstance;
					}
					else if ( bDestroy )
					{
						s.oInstance.fnDestroy();
						break;
					}
					else
					{
						_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );
						return;
					}
				}
			
				/* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
				if ( s.sTableId == this.id )
				{
					allSettings.splice( i, 1 );
					break;
				}
			}
			
			/* Ensure the table has an ID - required for accessibility */
			if ( sId === null || sId === "" )
			{
				sId = "DataTables_Table_"+(DataTable.ext._unique++);
				this.id = sId;
			}
			
			/* Create the settings object for this table and set some of the default parameters */
			var oSettings = $.extend( true, {}, DataTable.models.oSettings, {
				"sDestroyWidth": $this[0].style.width,
				"sInstance":     sId,
				"sTableId":      sId
			} );
			oSettings.nTable = this;
			oSettings.oApi   = _that.internal;
			oSettings.oInit  = oInit;
			
			allSettings.push( oSettings );
			
			// Need to add the instance after the instance after the settings object has been added
			// to the settings array, so we can self reference the table instance if more than one
			oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();
			
			// Backwards compatibility, before we apply all the defaults
			_fnCompatOpts( oInit );
			_fnLanguageCompat( oInit.oLanguage );
			
			// If the length menu is given, but the init display length is not, use the length menu
			if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
			{
				oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?
					oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
			}
			
			// Apply the defaults and init options to make a single init object will all
			// options defined from defaults and instance options.
			oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );
			
			
			// Map the initialisation options onto the settings object
			_fnMap( oSettings.oFeatures, oInit, [
				"bPaginate",
				"bLengthChange",
				"bFilter",
				"bSort",
				"bSortMulti",
				"bInfo",
				"bProcessing",
				"bAutoWidth",
				"bSortClasses",
				"bServerSide",
				"bDeferRender"
			] );
			_fnMap( oSettings, oInit, [
				"asStripeClasses",
				"ajax",
				"fnServerData",
				"fnFormatNumber",
				"sServerMethod",
				"aaSorting",
				"aaSortingFixed",
				"aLengthMenu",
				"sPaginationType",
				"sAjaxSource",
				"sAjaxDataProp",
				"iStateDuration",
				"sDom",
				"bSortCellsTop",
				"iTabIndex",
				"fnStateLoadCallback",
				"fnStateSaveCallback",
				"renderer",
				"searchDelay",
				"rowId",
				[ "iCookieDuration", "iStateDuration" ], // backwards compat
				[ "oSearch", "oPreviousSearch" ],
				[ "aoSearchCols", "aoPreSearchCols" ],
				[ "iDisplayLength", "_iDisplayLength" ]
			] );
			_fnMap( oSettings.oScroll, oInit, [
				[ "sScrollX", "sX" ],
				[ "sScrollXInner", "sXInner" ],
				[ "sScrollY", "sY" ],
				[ "bScrollCollapse", "bCollapse" ]
			] );
			_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
			
			/* Callback functions which are array driven */
			_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );
			_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );
			_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );
			_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );
			_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );
			
			oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );
			
			/* Browser support detection */
			_fnBrowserDetect( oSettings );
			
			var oClasses = oSettings.oClasses;
			
			$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );
			$this.addClass( oClasses.sTable );
			
			
			if ( oSettings.iInitDisplayStart === undefined )
			{
				/* Display start point, taking into account the save saving */
				oSettings.iInitDisplayStart = oInit.iDisplayStart;
				oSettings._iDisplayStart = oInit.iDisplayStart;
			}
			
			if ( oInit.iDeferLoading !== null )
			{
				oSettings.bDeferLoading = true;
				var tmp = $.isArray( oInit.iDeferLoading );
				oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
				oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
			}
			
			/* Language definitions */
			var oLanguage = oSettings.oLanguage;
			$.extend( true, oLanguage, oInit.oLanguage );
			
			if ( oLanguage.sUrl )
			{
				/* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
				$.ajax( {
					dataType: 'json',
					url: oLanguage.sUrl,
					success: function ( json ) {
						_fnLanguageCompat( json );
						_fnCamelToHungarian( defaults.oLanguage, json );
						$.extend( true, oLanguage, json );
						_fnInitialise( oSettings );
					},
					error: function () {
						// Error occurred loading language file, continue on as best we can
						_fnInitialise( oSettings );
					}
				} );
				bInitHandedOff = true;
			}
			
			/*
			 * Stripes
			 */
			if ( oInit.asStripeClasses === null )
			{
				oSettings.asStripeClasses =[
					oClasses.sStripeOdd,
					oClasses.sStripeEven
				];
			}
			
			/* Remove row stripe classes if they are already on the table row */
			var stripeClasses = oSettings.asStripeClasses;
			var rowOne = $this.children('tbody').find('tr').eq(0);
			if ( $.inArray( true, $.map( stripeClasses, function(el, i) {
				return rowOne.hasClass(el);
			} ) ) !== -1 ) {
				$('tbody tr', this).removeClass( stripeClasses.join(' ') );
				oSettings.asDestroyStripes = stripeClasses.slice();
			}
			
			/*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName('thead');
			if ( nThead.length !== 0 )
			{
				_fnDetectHeader( oSettings.aoHeader, nThead[0] );
				anThs = _fnGetUniqueThs( oSettings );
			}
			
			/* If not given a column array, generate one with nulls */
			if ( oInit.aoColumns === null )
			{
				aoColumnsInit = [];
				for ( i=0, iLen=anThs.length ; i<iLen ; i++ )
				{
					aoColumnsInit.push( null );
				}
			}
			else
			{
				aoColumnsInit = oInit.aoColumns;
			}
			
			/* Add the columns */
			for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )
			{
				_fnAddColumn( oSettings, anThs ? anThs[i] : null );
			}
			
			/* Apply the column definitions */
			_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
				_fnColumnOptions( oSettings, iCol, oDef );
			} );
			
			/* HTML5 attribute detection - build an mData object automatically if the
			 * attributes are found
			 */
			if ( rowOne.length ) {
				var a = function ( cell, name ) {
					return cell.getAttribute( 'data-'+name ) !== null ? name : null;
				};
			
				$( rowOne[0] ).children('th, td').each( function (i, cell) {
					var col = oSettings.aoColumns[i];
			
					if ( col.mData === i ) {
						var sort = a( cell, 'sort' ) || a( cell, 'order' );
						var filter = a( cell, 'filter' ) || a( cell, 'search' );
			
						if ( sort !== null || filter !== null ) {
							col.mData = {
								_:      i+'.display',
								sort:   sort !== null   ? i+'.@data-'+sort   : undefined,
								type:   sort !== null   ? i+'.@data-'+sort   : undefined,
								filter: filter !== null ? i+'.@data-'+filter : undefined
							};
			
							_fnColumnOptions( oSettings, i );
						}
					}
				} );
			}
			
			var features = oSettings.oFeatures;
			var loadedInit = function () {
				/*
				 * Sorting
				 * @todo For modularisation (1.11) this needs to do into a sort start up handler
				 */
			
				// If aaSorting is not defined, then we use the first indicator in asSorting
				// in case that has been altered, so the default sort reflects that option
				if ( oInit.aaSorting === undefined ) {
					var sorting = oSettings.aaSorting;
					for ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {
						sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];
					}
				}
			
				/* Do a first pass on the sorting classes (allows any size changes to be taken into
				 * account, and also will apply sorting disabled classes if disabled
				 */
				_fnSortingClasses( oSettings );
			
				if ( features.bSort ) {
					_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
						if ( oSettings.bSorted ) {
							var aSort = _fnSortFlatten( oSettings );
							var sortedColumns = {};
			
							$.each( aSort, function (i, val) {
								sortedColumns[ val.src ] = val.dir;
							} );
			
							_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );
							_fnSortAria( oSettings );
						}
					} );
				}
			
				_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
					if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {
						_fnSortingClasses( oSettings );
					}
				}, 'sc' );
			
			
				/*
				 * Final init
				 * Cache the header, body and footer as required, creating them if needed
				 */
			
				// Work around for Webkit bug 83867 - store the caption-side before removing from doc
				var captions = $this.children('caption').each( function () {
					this._captionSide = $(this).css('caption-side');
				} );
			
				var thead = $this.children('thead');
				if ( thead.length === 0 ) {
					thead = $('<thead/>').appendTo($this);
				}
				oSettings.nTHead = thead[0];
			
				var tbody = $this.children('tbody');
				if ( tbody.length === 0 ) {
					tbody = $('<tbody/>').appendTo($this);
				}
				oSettings.nTBody = tbody[0];
			
				var tfoot = $this.children('tfoot');
				if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") ) {
					// If we are a scrolling table, and no footer has been given, then we need to create
					// a tfoot element for the caption element to be appended to
					tfoot = $('<tfoot/>').appendTo($this);
				}
			
				if ( tfoot.length === 0 || tfoot.children().length === 0 ) {
					$this.addClass( oClasses.sNoFooter );
				}
				else if ( tfoot.length > 0 ) {
					oSettings.nTFoot = tfoot[0];
					_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );
				}
			
				/* Check if there is data passing into the constructor */
				if ( oInit.aaData ) {
					for ( i=0 ; i<oInit.aaData.length ; i++ ) {
						_fnAddData( oSettings, oInit.aaData[ i ] );
					}
				}
				else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {
					/* Grab the data from the page - only do this when deferred loading or no Ajax
					 * source since there is no point in reading the DOM data if we are then going
					 * to replace it with Ajax data
					 */
					_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );
				}
			
				/* Copy the data index array */
				oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
				/* Initialisation complete - table can be drawn */
				oSettings.bInitialised = true;
			
				/* Check if we need to initialise the table (it might not have been handed off to the
				 * language processor)
				 */
				if ( bInitHandedOff === false ) {
					_fnInitialise( oSettings );
				}
			};
			
			/* Must be done after everything which can be overridden by the state saving! */
			if ( oInit.bStateSave )
			{
				features.bStateSave = true;
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );
				_fnLoadState( oSettings, oInit, loadedInit );
			}
			else {
				loadedInit();
			}
			
		} );
		_that = null;
		return this;
	};

	
	/*
	 * It is useful to have variables which are scoped locally so only the
	 * DataTables functions can access them and they don't leak into global space.
	 * At the same time these functions are often useful over multiple files in the
	 * core and API, so we list, or at least document, all variables which are used
	 * by DataTables as private variables here. This also ensures that there is no
	 * clashing of variable names and that they can easily referenced for reuse.
	 */
	
	
	// Defined else where
	//  _selector_run
	//  _selector_opts
	//  _selector_first
	//  _selector_row_indexes
	
	var _ext; // DataTable.ext
	var _Api; // DataTable.Api
	var _api_register; // DataTable.Api.register
	var _api_registerPlural; // DataTable.Api.registerPlural
	
	var _re_dic = {};
	var _re_new_lines = /[\r\n]/g;
	var _re_html = /<.*?>/g;
	
	// This is not strict ISO8601 - Date.parse() is quite lax, although
	// implementations differ between browsers.
	var _re_date = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/;
	
	// Escape regular expression special characters
	var _re_escape_regex = new RegExp( '(\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ].join('|\\') + ')', 'g' );
	
	// http://en.wikipedia.org/wiki/Foreign_exchange_market
	// - \u20BD - Russian ruble.
	// - \u20a9 - South Korean Won
	// - \u20BA - Turkish Lira
	// - \u20B9 - Indian Rupee
	// - R - Brazil (R$) and South Africa
	// - fr - Swiss Franc
	// - kr - Swedish krona, Norwegian krone and Danish krone
	// - \u2009 is thin space and \u202F is narrow no-break space, both used in many
	// - É - Bitcoin
	// - Î - Ethereum
	//   standards as thousands separators.
	var _re_formatted_numeric = /[',$Â£â¬Â¥%\u2009\u202F\u20BD\u20a9\u20BArfkÉÎ]/gi;
	
	
	var _empty = function ( d ) {
		return !d || d === true || d === '-' ? true : false;
	};
	
	
	var _intVal = function ( s ) {
		var integer = parseInt( s, 10 );
		return !isNaN(integer) && isFinite(s) ? integer : null;
	};
	
	// Convert from a formatted number with characters other than `.` as the
	// decimal place, to a Javascript number
	var _numToDecimal = function ( num, decimalPoint ) {
		// Cache created regular expressions for speed as this function is called often
		if ( ! _re_dic[ decimalPoint ] ) {
			_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );
		}
		return typeof num === 'string' && decimalPoint !== '.' ?
			num.replace( /\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :
			num;
	};
	
	
	var _isNumber = function ( d, decimalPoint, formatted ) {
		var strType = typeof d === 'string';
	
		// If empty return immediately so there must be a number if it is a
		// formatted string (this stops the string "k", or "kr", etc being detected
		// as a formatted number for currency
		if ( _empty( d ) ) {
			return true;
		}
	
		if ( decimalPoint && strType ) {
			d = _numToDecimal( d, decimalPoint );
		}
	
		if ( formatted && strType ) {
			d = d.replace( _re_formatted_numeric, '' );
		}
	
		return !isNaN( parseFloat(d) ) && isFinite( d );
	};
	
	
	// A string without HTML in it can be considered to be HTML still
	var _isHtml = function ( d ) {
		return _empty( d ) || typeof d === 'string';
	};
	
	
	var _htmlNumeric = function ( d, decimalPoint, formatted ) {
		if ( _empty( d ) ) {
			return true;
		}
	
		var html = _isHtml( d );
		return ! html ?
			null :
			_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?
				true :
				null;
	};
	
	
	var _pluck = function ( a, prop, prop2 ) {
		var out = [];
		var i=0, ien=a.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[i] && a[i][ prop ] ) {
					out.push( a[i][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				if ( a[i] ) {
					out.push( a[i][ prop ] );
				}
			}
		}
	
		return out;
	};
	
	
	// Basically the same as _pluck, but rather than looping over `a` we use `order`
	// as the indexes to pick from `a`
	var _pluck_order = function ( a, order, prop, prop2 )
	{
		var out = [];
		var i=0, ien=order.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[ order[i] ][ prop ] ) {
					out.push( a[ order[i] ][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				out.push( a[ order[i] ][ prop ] );
			}
		}
	
		return out;
	};
	
	
	var _range = function ( len, start )
	{
		var out = [];
		var end;
	
		if ( start === undefined ) {
			start = 0;
			end = len;
		}
		else {
			end = start;
			start = len;
		}
	
		for ( var i=start ; i<end ; i++ ) {
			out.push( i );
		}
	
		return out;
	};
	
	
	var _removeEmpty = function ( a )
	{
		var out = [];
	
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( a[i] ) { // careful - will remove all falsy values!
				out.push( a[i] );
			}
		}
	
		return out;
	};
	
	
	var _stripHtml = function ( d ) {
		return d.replace( _re_html, '' );
	};
	
	
	/**
	 * Determine if all values in the array are unique. This means we can short
	 * cut the _unique method at the cost of a single loop. A sorted array is used
	 * to easily check the values.
	 *
	 * @param  {array} src Source array
	 * @return {boolean} true if all unique, false otherwise
	 * @ignore
	 */
	var _areAllUnique = function ( src ) {
		if ( src.length < 2 ) {
			return true;
		}
	
		var sorted = src.slice().sort();
		var last = sorted[0];
	
		for ( var i=1, ien=sorted.length ; i<ien ; i++ ) {
			if ( sorted[i] === last ) {
				return false;
			}
	
			last = sorted[i];
		}
	
		return true;
	};
	
	
	/**
	 * Find the unique elements in a source array.
	 *
	 * @param  {array} src Source array
	 * @return {array} Array of unique items
	 * @ignore
	 */
	var _unique = function ( src )
	{
		if ( _areAllUnique( src ) ) {
			return src.slice();
		}
	
		// A faster unique method is to use object keys to identify used values,
		// but this doesn't work with arrays or objects, which we must also
		// consider. See jsperf.com/compare-array-unique-versions/4 for more
		// information.
		var
			out = [],
			val,
			i, ien=src.length,
			j, k=0;
	
		again: for ( i=0 ; i<ien ; i++ ) {
			val = src[i];
	
			for ( j=0 ; j<k ; j++ ) {
				if ( out[j] === val ) {
					continue again;
				}
			}
	
			out.push( val );
			k++;
		}
	
		return out;
	};
	
	
	/**
	 * DataTables utility methods
	 * 
	 * This namespace provides helper methods that DataTables uses internally to
	 * create a DataTable, but which are not exclusively used only for DataTables.
	 * These methods can be used by extension authors to save the duplication of
	 * code.
	 *
	 *  @namespace
	 */
	DataTable.util = {
		/**
		 * Throttle the calls to a function. Arguments and context are maintained
		 * for the throttled function.
		 *
		 * @param {function} fn Function to be called
		 * @param {integer} freq Call frequency in mS
		 * @return {function} Wrapped function
		 */
		throttle: function ( fn, freq ) {
			var
				frequency = freq !== undefined ? freq : 200,
				last,
				timer;
	
			return function () {
				var
					that = this,
					now  = +new Date(),
					args = arguments;
	
				if ( last && now < last + frequency ) {
					clearTimeout( timer );
	
					timer = setTimeout( function () {
						last = undefined;
						fn.apply( that, args );
					}, frequency );
				}
				else {
					last = now;
					fn.apply( that, args );
				}
			};
		},
	
	
		/**
		 * Escape a string such that it can be used in a regular expression
		 *
		 *  @param {string} val string to escape
		 *  @returns {string} escaped string
		 */
		escapeRegex: function ( val ) {
			return val.replace( _re_escape_regex, '\\$1' );
		}
	};
	
	
	
	/**
	 * Create a mapping object that allows camel case parameters to be looked up
	 * for their Hungarian counterparts. The mapping is stored in a private
	 * parameter called `_hungarianMap` which can be accessed on the source object.
	 *  @param {object} o
	 *  @memberof DataTable#oApi
	 */
	function _fnHungarianMap ( o )
	{
		var
			hungarian = 'a aa ai ao as b fn i m o s ',
			match,
			newKey,
			map = {};
	
		$.each( o, function (key, val) {
			match = key.match(/^([^A-Z]+?)([A-Z])/);
	
			if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
			{
				newKey = key.replace( match[0], match[2].toLowerCase() );
				map[ newKey ] = key;
	
				if ( match[1] === 'o' )
				{
					_fnHungarianMap( o[key] );
				}
			}
		} );
	
		o._hungarianMap = map;
	}
	
	
	/**
	 * Convert from camel case parameters to Hungarian, based on a Hungarian map
	 * created by _fnHungarianMap.
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 *  @memberof DataTable#oApi
	 */
	function _fnCamelToHungarian ( src, user, force )
	{
		if ( ! src._hungarianMap ) {
			_fnHungarianMap( src );
		}
	
		var hungarianKey;
	
		$.each( user, function (key, val) {
			hungarianKey = src._hungarianMap[ key ];
	
			if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
			{
				// For objects, we need to buzz down into the object to copy parameters
				if ( hungarianKey.charAt(0) === 'o' )
				{
					// Copy the camelCase options over to the hungarian
					if ( ! user[ hungarianKey ] ) {
						user[ hungarianKey ] = {};
					}
					$.extend( true, user[hungarianKey], user[key] );
	
					_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );
				}
				else {
					user[hungarianKey] = user[ key ];
				}
			}
		} );
	}
	
	
	/**
	 * Language compatibility - when certain options are given, and others aren't, we
	 * need to duplicate the values over, in order to provide backwards compatibility
	 * with older language files.
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnLanguageCompat( lang )
	{
		// Note the use of the Hungarian notation for the parameters in this method as
		// this is called after the mapping of camelCase to Hungarian
		var defaults = DataTable.defaults.oLanguage;
	
		// Default mapping
		var defaultDecimal = defaults.sDecimal;
		if ( defaultDecimal ) {
			_addNumericSort( defaultDecimal );
		}
	
		if ( lang ) {
			var zeroRecords = lang.sZeroRecords;
	
			// Backwards compatibility - if there is no sEmptyTable given, then use the same as
			// sZeroRecords - assuming that is given.
			if ( ! lang.sEmptyTable && zeroRecords &&
				defaults.sEmptyTable === "No data available in table" )
			{
				_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );
			}
	
			// Likewise with loading records
			if ( ! lang.sLoadingRecords && zeroRecords &&
				defaults.sLoadingRecords === "Loading..." )
			{
				_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );
			}
	
			// Old parameter name of the thousands separator mapped onto the new
			if ( lang.sInfoThousands ) {
				lang.sThousands = lang.sInfoThousands;
			}
	
			var decimal = lang.sDecimal;
			if ( decimal && defaultDecimal !== decimal ) {
				_addNumericSort( decimal );
			}
		}
	}
	
	
	/**
	 * Map one parameter onto another
	 *  @param {object} o Object to map
	 *  @param {*} knew The new parameter name
	 *  @param {*} old The old parameter name
	 */
	var _fnCompatMap = function ( o, knew, old ) {
		if ( o[ knew ] !== undefined ) {
			o[ old ] = o[ knew ];
		}
	};
	
	
	/**
	 * Provide backwards compatibility for the main DT options. Note that the new
	 * options are mapped onto the old parameters, so this is an external interface
	 * change only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatOpts ( init )
	{
		_fnCompatMap( init, 'ordering',      'bSort' );
		_fnCompatMap( init, 'orderMulti',    'bSortMulti' );
		_fnCompatMap( init, 'orderClasses',  'bSortClasses' );
		_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );
		_fnCompatMap( init, 'order',         'aaSorting' );
		_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );
		_fnCompatMap( init, 'paging',        'bPaginate' );
		_fnCompatMap( init, 'pagingType',    'sPaginationType' );
		_fnCompatMap( init, 'pageLength',    'iDisplayLength' );
		_fnCompatMap( init, 'searching',     'bFilter' );
	
		// Boolean initialisation of x-scrolling
		if ( typeof init.sScrollX === 'boolean' ) {
			init.sScrollX = init.sScrollX ? '100%' : '';
		}
		if ( typeof init.scrollX === 'boolean' ) {
			init.scrollX = init.scrollX ? '100%' : '';
		}
	
		// Column search objects are in an array, so it needs to be converted
		// element by element
		var searchCols = init.aoSearchCols;
	
		if ( searchCols ) {
			for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {
				if ( searchCols[i] ) {
					_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );
				}
			}
		}
	}
	
	
	/**
	 * Provide backwards compatibility for column options. Note that the new options
	 * are mapped onto the old parameters, so this is an external interface change
	 * only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatCols ( init )
	{
		_fnCompatMap( init, 'orderable',     'bSortable' );
		_fnCompatMap( init, 'orderData',     'aDataSort' );
		_fnCompatMap( init, 'orderSequence', 'asSorting' );
		_fnCompatMap( init, 'orderDataType', 'sortDataType' );
	
		// orderData can be given as an integer
		var dataSort = init.aDataSort;
		if ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {
			init.aDataSort = [ dataSort ];
		}
	}
	
	
	/**
	 * Browser feature detection for capabilities, quirks
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBrowserDetect( settings )
	{
		// We don't need to do this every time DataTables is constructed, the values
		// calculated are specific to the browser and OS configuration which we
		// don't expect to change between initialisations
		if ( ! DataTable.__browser ) {
			var browser = {};
			DataTable.__browser = browser;
	
			// Scrolling feature / quirks detection
			var n = $('<div/>')
				.css( {
					position: 'fixed',
					top: 0,
					left: $(window).scrollLeft()*-1, // allow for scrolling
					height: 1,
					width: 1,
					overflow: 'hidden'
				} )
				.append(
					$('<div/>')
						.css( {
							position: 'absolute',
							top: 1,
							left: 1,
							width: 100,
							overflow: 'scroll'
						} )
						.append(
							$('<div/>')
								.css( {
									width: '100%',
									height: 10
								} )
						)
				)
				.appendTo( 'body' );
	
			var outer = n.children();
			var inner = outer.children();
	
			// Numbers below, in order, are:
			// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth
			//
			// IE6 XP:                           100 100 100  83
			// IE7 Vista:                        100 100 100  83
			// IE 8+ Windows:                     83  83 100  83
			// Evergreen Windows:                 83  83 100  83
			// Evergreen Mac with scrollbars:     85  85 100  85
			// Evergreen Mac without scrollbars: 100 100 100 100
	
			// Get scrollbar width
			browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
	
			// IE6/7 will oversize a width 100% element inside a scrolling element, to
			// include the width of the scrollbar, while other browsers ensure the inner
			// element is contained without forcing scrolling
			browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
	
			// In rtl text layout, some browsers (most, but not all) will place the
			// scrollbar on the left, rather than the right.
			browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;
	
			// IE8- don't provide height and width for getBoundingClientRect
			browser.bBounding = n[0].getBoundingClientRect().width ? true : false;
	
			n.remove();
		}
	
		$.extend( settings.oBrowser, DataTable.__browser );
		settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
	}
	
	
	/**
	 * Array.prototype reduce[Right] method, used for browsers which don't support
	 * JS 1.6. Done this way to reduce code size, since we iterate either way
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnReduce ( that, fn, init, start, end, inc )
	{
		var
			i = start,
			value,
			isSet = false;
	
		if ( init !== undefined ) {
			value = init;
			isSet = true;
		}
	
		while ( i !== end ) {
			if ( ! that.hasOwnProperty(i) ) {
				continue;
			}
	
			value = isSet ?
				fn( value, that[i], i, that ) :
				that[i];
	
			isSet = true;
			i += inc;
		}
	
		return value;
	}
	
	/**
	 * Add a column to the list used for the table with default values
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nTh The th element for this column
	 *  @memberof DataTable#oApi
	 */
	function _fnAddColumn( oSettings, nTh )
	{
		// Add column to aoColumns array
		var oDefaults = DataTable.defaults.column;
		var iCol = oSettings.aoColumns.length;
		var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {
			"nTh": nTh ? nTh : document.createElement('th'),
			"sTitle":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',
			"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
			"mData": oDefaults.mData ? oDefaults.mData : iCol,
			idx: iCol
		} );
		oSettings.aoColumns.push( oCol );
	
		// Add search object for column specific search. Note that the `searchCols[ iCol ]`
		// passed into extend can be undefined. This allows the user to give a default
		// with only some of the parameters defined, and also not give a default
		var searchCols = oSettings.aoPreSearchCols;
		searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );
	
		// Use the default column options function to initialise classes etc
		_fnColumnOptions( oSettings, iCol, $(nTh).data() );
	}
	
	
	/**
	 * Apply options for a column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column index to consider
	 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOptions( oSettings, iCol, oOptions )
	{
		var oCol = oSettings.aoColumns[ iCol ];
		var oClasses = oSettings.oClasses;
		var th = $(oCol.nTh);
	
		// Try to get width information from the DOM. We can't get it from CSS
		// as we'd need to parse the CSS stylesheet. `width` option can override
		if ( ! oCol.sWidthOrig ) {
			// Width attribute
			oCol.sWidthOrig = th.attr('width') || null;
	
			// Style attribute
			var t = (th.attr('style') || '').match(/width:\s*(\d+[pxem%]+)/);
			if ( t ) {
				oCol.sWidthOrig = t[1];
			}
		}
	
		/* User specified column options */
		if ( oOptions !== undefined && oOptions !== null )
		{
			// Backwards compatibility
			_fnCompatCols( oOptions );
	
			// Map camel case parameters to their Hungarian counterparts
			_fnCamelToHungarian( DataTable.defaults.column, oOptions );
	
			/* Backwards compatibility for mDataProp */
			if ( oOptions.mDataProp !== undefined && !oOptions.mData )
			{
				oOptions.mData = oOptions.mDataProp;
			}
	
			if ( oOptions.sType )
			{
				oCol._sManualType = oOptions.sType;
			}
	
			// `class` is a reserved word in Javascript, so we need to provide
			// the ability to use a valid name for the camel case input
			if ( oOptions.className && ! oOptions.sClass )
			{
				oOptions.sClass = oOptions.className;
			}
			if ( oOptions.sClass ) {
				th.addClass( oOptions.sClass );
			}
	
			$.extend( oCol, oOptions );
			_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );
	
			/* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
			if ( oOptions.iDataSort !== undefined )
			{
				oCol.aDataSort = [ oOptions.iDataSort ];
			}
			_fnMap( oCol, oOptions, "aDataSort" );
		}
	
		/* Cache the data get and set functions for speed */
		var mDataSrc = oCol.mData;
		var mData = _fnGetObjectDataFn( mDataSrc );
		var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;
	
		var attrTest = function( src ) {
			return typeof src === 'string' && src.indexOf('@') !== -1;
		};
		oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (
			attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
		);
		oCol._setter = null;
	
		oCol.fnGetData = function (rowData, type, meta) {
			var innerData = mData( rowData, type, undefined, meta );
	
			return mRender && type ?
				mRender( innerData, type, rowData, meta ) :
				innerData;
		};
		oCol.fnSetData = function ( rowData, val, meta ) {
			return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );
		};
	
		// Indicate if DataTables should read DOM data as an object or array
		// Used in _fnGetRowElements
		if ( typeof mDataSrc !== 'number' ) {
			oSettings._rowReadObject = true;
		}
	
		/* Feature sorting overrides column specific when off */
		if ( !oSettings.oFeatures.bSort )
		{
			oCol.bSortable = false;
			th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called
		}
	
		/* Check that the class assignment is correct for sorting */
		var bAsc = $.inArray('asc', oCol.asSorting) !== -1;
		var bDesc = $.inArray('desc', oCol.asSorting) !== -1;
		if ( !oCol.bSortable || (!bAsc && !bDesc) )
		{
			oCol.sSortingClass = oClasses.sSortableNone;
			oCol.sSortingClassJUI = "";
		}
		else if ( bAsc && !bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableAsc;
			oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
		}
		else if ( !bAsc && bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableDesc;
			oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
		}
		else
		{
			oCol.sSortingClass = oClasses.sSortable;
			oCol.sSortingClassJUI = oClasses.sSortJUI;
		}
	}
	
	
	/**
	 * Adjust the table column widths for new data. Note: you would probably want to
	 * do a redraw after calling this function!
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAdjustColumnSizing ( settings )
	{
		/* Not interested in doing column width calculation if auto-width is disabled */
		if ( settings.oFeatures.bAutoWidth !== false )
		{
			var columns = settings.aoColumns;
	
			_fnCalculateColumnWidths( settings );
			for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )
			{
				columns[i].nTh.style.width = columns[i].sWidth;
			}
		}
	
		var scroll = settings.oScroll;
		if ( scroll.sY !== '' || scroll.sX !== '')
		{
			_fnScrollDraw( settings );
		}
	
		_fnCallbackFire( settings, null, 'column-sizing', [settings] );
	}
	
	
	/**
	 * Covert the index of a visible column to the index in the data array (take account
	 * of hidden columns)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMatch Visible column index to lookup
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnVisibleToColumnIndex( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	
		return typeof aiVis[iMatch] === 'number' ?
			aiVis[iMatch] :
			null;
	}
	
	
	/**
	 * Covert the index of an index in the data array and convert it to the visible
	 *   column index (take account of hidden columns)
	 *  @param {int} iMatch Column index to lookup
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnIndexToVisible( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
		var iPos = $.inArray( iMatch, aiVis );
	
		return iPos !== -1 ? iPos : null;
	}
	
	
	/**
	 * Get the number of visible columns
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the number of visible columns
	 *  @memberof DataTable#oApi
	 */
	function _fnVisbleColumns( oSettings )
	{
		var vis = 0;
	
		// No reduce in IE8, use a loop for now
		$.each( oSettings.aoColumns, function ( i, col ) {
			if ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {
				vis++;
			}
		} );
	
		return vis;
	}
	
	
	/**
	 * Get an array of column indexes that match a given property
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sParam Parameter in aoColumns to look for - typically
	 *    bVisible or bSearchable
	 *  @returns {array} Array of indexes with matched properties
	 *  @memberof DataTable#oApi
	 */
	function _fnGetColumns( oSettings, sParam )
	{
		var a = [];
	
		$.map( oSettings.aoColumns, function(val, i) {
			if ( val[sParam] ) {
				a.push( i );
			}
		} );
	
		return a;
	}
	
	
	/**
	 * Calculate the 'type' of a column
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnTypes ( settings )
	{
		var columns = settings.aoColumns;
		var data = settings.aoData;
		var types = DataTable.ext.type.detect;
		var i, ien, j, jen, k, ken;
		var col, cell, detectedType, cache;
	
		// For each column, spin over the 
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			col = columns[i];
			cache = [];
	
			if ( ! col.sType && col._sManualType ) {
				col.sType = col._sManualType;
			}
			else if ( ! col.sType ) {
				for ( j=0, jen=types.length ; j<jen ; j++ ) {
					for ( k=0, ken=data.length ; k<ken ; k++ ) {
						// Use a cache array so we only need to get the type data
						// from the formatter once (when using multiple detectors)
						if ( cache[k] === undefined ) {
							cache[k] = _fnGetCellData( settings, k, i, 'type' );
						}
	
						detectedType = types[j]( cache[k], settings );
	
						// If null, then this type can't apply to this column, so
						// rather than testing all cells, break out. There is an
						// exception for the last type which is `html`. We need to
						// scan all rows since it is possible to mix string and HTML
						// types
						if ( ! detectedType && j !== types.length-1 ) {
							break;
						}
	
						// Only a single match is needed for html type since it is
						// bottom of the pile and very similar to string
						if ( detectedType === 'html' ) {
							break;
						}
					}
	
					// Type is valid for all data points in the column - use this
					// type
					if ( detectedType ) {
						col.sType = detectedType;
						break;
					}
				}
	
				// Fall back - if no type was detected, always use string
				if ( ! col.sType ) {
					col.sType = 'string';
				}
			}
		}
	}
	
	
	/**
	 * Take the column definitions and static columns arrays and calculate how
	 * they relate to column indexes. The callback function will then apply the
	 * definition found for a column to a suitable configuration object.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
	 *  @param {array} aoCols The aoColumns array that defines columns individually
	 *  @param {function} fn Callback function - takes two parameters, the calculated
	 *    column index and the definition for that column.
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )
	{
		var i, iLen, j, jLen, k, kLen, def;
		var columns = oSettings.aoColumns;
	
		// Column definitions with aTargets
		if ( aoColDefs )
		{
			/* Loop over the definitions array - loop in reverse so first instance has priority */
			for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
			{
				def = aoColDefs[i];
	
				/* Each definition can target multiple columns, as it is an array */
				var aTargets = def.targets !== undefined ?
					def.targets :
					def.aTargets;
	
				if ( ! $.isArray( aTargets ) )
				{
					aTargets = [ aTargets ];
				}
	
				for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
				{
					if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )
					{
						/* Add columns that we don't yet know about */
						while( columns.length <= aTargets[j] )
						{
							_fnAddColumn( oSettings );
						}
	
						/* Integer, basic index */
						fn( aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )
					{
						/* Negative integer, right to left column counting */
						fn( columns.length+aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'string' )
					{
						/* Class name matching on TH element */
						for ( k=0, kLen=columns.length ; k<kLen ; k++ )
						{
							if ( aTargets[j] == "_all" ||
							     $(columns[k].nTh).hasClass( aTargets[j] ) )
							{
								fn( k, def );
							}
						}
					}
				}
			}
		}
	
		// Statically defined columns array
		if ( aoCols )
		{
			for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )
			{
				fn( i, aoCols[i] );
			}
		}
	}
	
	/**
	 * Add a data array to the table, creating DOM node etc. This is the parallel to
	 * _fnGatherData, but for adding rows from a Javascript source, rather than a
	 * DOM source.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData data array to be added
	 *  @param {node} [nTr] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
	 *  @memberof DataTable#oApi
	 */
	function _fnAddData ( oSettings, aDataIn, nTr, anTds )
	{
		/* Create the object for storing information about this new row */
		var iRow = oSettings.aoData.length;
		var oData = $.extend( true, {}, DataTable.models.oRow, {
			src: nTr ? 'dom' : 'data',
			idx: iRow
		} );
	
		oData._aData = aDataIn;
		oSettings.aoData.push( oData );
	
		/* Create the cells */
		var nTd, sThisType;
		var columns = oSettings.aoColumns;
	
		// Invalidate the column types as the new data needs to be revalidated
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			columns[i].sType = null;
		}
	
		/* Add to the display array */
		oSettings.aiDisplayMaster.push( iRow );
	
		var id = oSettings.rowIdFn( aDataIn );
		if ( id !== undefined ) {
			oSettings.aIds[ id ] = oData;
		}
	
		/* Create the DOM information, or register it if already present */
		if ( nTr || ! oSettings.oFeatures.bDeferRender )
		{
			_fnCreateTr( oSettings, iRow, nTr, anTds );
		}
	
		return iRow;
	}
	
	
	/**
	 * Add one or more TR elements to the table. Generally we'd expect to
	 * use this for reading data from a DOM sourced table, but it could be
	 * used for an TR element. Note that if a TR is given, it is used (i.e.
	 * it is not cloned).
	 *  @param {object} settings dataTables settings object
	 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
	 *  @returns {array} Array of indexes for the added rows
	 *  @memberof DataTable#oApi
	 */
	function _fnAddTr( settings, trs )
	{
		var row;
	
		// Allow an individual node to be passed in
		if ( ! (trs instanceof $) ) {
			trs = $(trs);
		}
	
		return trs.map( function (i, el) {
			row = _fnGetRowElements( settings, el );
			return _fnAddData( settings, row.data, el, row.cells );
		} );
	}
	
	
	/**
	 * Take a TR element and convert it to an index in aoData
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n the TR element to find
	 *  @returns {int} index if the node is found, null if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToDataIndex( oSettings, n )
	{
		return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;
	}
	
	
	/**
	 * Take a TD element and convert it into a column data index (not the visible index)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow The row number the TD/TH can be found in
	 *  @param {node} n The TD/TH element to find
	 *  @returns {int} index if the node is found, -1 if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToColumnIndex( oSettings, iRow, n )
	{
		return $.inArray( n, oSettings.aoData[ iRow ].anCells );
	}
	
	
	/**
	 * Get the data for a given cell from the internal cache, taking into account data mapping
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {string} type data get type ('display', 'type' 'filter' 'sort')
	 *  @returns {*} Cell data
	 *  @memberof DataTable#oApi
	 */
	function _fnGetCellData( settings, rowIdx, colIdx, type )
	{
		var draw           = settings.iDraw;
		var col            = settings.aoColumns[colIdx];
		var rowData        = settings.aoData[rowIdx]._aData;
		var defaultContent = col.sDefaultContent;
		var cellData       = col.fnGetData( rowData, type, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		} );
	
		if ( cellData === undefined ) {
			if ( settings.iDrawError != draw && defaultContent === null ) {
				_fnLog( settings, 0, "Requested unknown parameter "+
					(typeof col.mData=='function' ? '{function}' : "'"+col.mData+"'")+
					" for row "+rowIdx+", column "+colIdx, 4 );
				settings.iDrawError = draw;
			}
			return defaultContent;
		}
	
		// When the data source is null and a specific data type is requested (i.e.
		// not the original data), we can use default column data
		if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {
			cellData = defaultContent;
		}
		else if ( typeof cellData === 'function' ) {
			// If the data source is a function, then we run it and use the return,
			// executing in the scope of the data object (for instances)
			return cellData.call( rowData );
		}
	
		if ( cellData === null && type == 'display' ) {
			return '';
		}
		return cellData;
	}
	
	
	/**
	 * Set the value for a specific cell, into the internal data cache
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {*} val Value to set
	 *  @memberof DataTable#oApi
	 */
	function _fnSetCellData( settings, rowIdx, colIdx, val )
	{
		var col     = settings.aoColumns[colIdx];
		var rowData = settings.aoData[rowIdx]._aData;
	
		col.fnSetData( rowData, val, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		}  );
	}
	
	
	// Private variable that is used to match action syntax in the data property object
	var __reArray = /\[.*?\]$/;
	var __reFn = /\(\)$/;
	
	/**
	 * Split string on periods, taking into account escaped periods
	 * @param  {string} str String to split
	 * @return {array} Split string
	 */
	function _fnSplitObjNotation( str )
	{
		return $.map( str.match(/(\\.|[^\.])+/g) || [''], function ( s ) {
			return s.replace(/\\\./g, '.');
		} );
	}
	
	
	/**
	 * Return a function that can be used to get data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data get function
	 *  @memberof DataTable#oApi
	 */
	function _fnGetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Build an object of get functions, and wrap them in a single call */
			var o = {};
			$.each( mSource, function (key, val) {
				if ( val ) {
					o[key] = _fnGetObjectDataFn( val );
				}
			} );
	
			return function (data, type, row, meta) {
				var t = o[type] || o._;
				return t !== undefined ?
					t(data, type, row, meta) :
					data;
			};
		}
		else if ( mSource === null )
		{
			/* Give an empty string for rendering / sorting etc */
			return function (data) { // type, row and meta also passed, but not used
				return data;
			};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, type, row, meta) {
				return mSource( data, type, row, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
			var fetchData = function (data, type, src) {
				var arrayNotation, funcNotation, out, innerSrc;
	
				if ( src !== "" )
				{
					var a = _fnSplitObjNotation( src );
	
					for ( var i=0, iLen=a.length ; i<iLen ; i++ )
					{
						// Check if we are dealing with special notation
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
	
						if ( arrayNotation )
						{
							// Array notation
							a[i] = a[i].replace(__reArray, '');
	
							// Condition allows simply [] to be passed in
							if ( a[i] !== "" ) {
								data = data[ a[i] ];
							}
							out = [];
	
							// Get the remainder of the nested object to get
							a.splice( 0, i+1 );
							innerSrc = a.join('.');
	
							// Traverse each entry in the array getting the properties requested
							if ( $.isArray( data ) ) {
								for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
									out.push( fetchData( data[j], type, innerSrc ) );
								}
							}
	
							// If a string is given in between the array notation indicators, that
							// is used to join the strings together, otherwise an array is returned
							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
							data = (join==="") ? out : out.join(join);
	
							// The inner call to fetchData has already traversed through the remainder
							// of the source requested, so we exit from the loop
							break;
						}
						else if ( funcNotation )
						{
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]();
							continue;
						}
	
						if ( data === null || data[ a[i] ] === undefined )
						{
							return undefined;
						}
						data = data[ a[i] ];
					}
				}
	
				return data;
			};
	
			return function (data, type) { // row and meta also passed, but not used
				return fetchData( data, type, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, type) { // row and meta also passed, but not used
				return data[mSource];
			};
		}
	}
	
	
	/**
	 * Return a function that can be used to set data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data set function
	 *  @memberof DataTable#oApi
	 */
	function _fnSetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
			return _fnSetObjectDataFn( mSource._ );
		}
		else if ( mSource === null )
		{
			/* Nothing to do when the data source is null */
			return function () {};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, val, meta) {
				mSource( data, 'set', val, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* Like the get, we need to get data from a nested object */
			var setData = function (data, val, src) {
				var a = _fnSplitObjNotation( src ), b;
				var aLast = a[a.length-1];
				var arrayNotation, funcNotation, o, innerSrc;
	
				for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )
				{
					// Check if we are dealing with an array notation request
					arrayNotation = a[i].match(__reArray);
					funcNotation = a[i].match(__reFn);
	
					if ( arrayNotation )
					{
						a[i] = a[i].replace(__reArray, '');
						data[ a[i] ] = [];
	
						// Get the remainder of the nested object to set so we can recurse
						b = a.slice();
						b.splice( 0, i+1 );
						innerSrc = b.join('.');
	
						// Traverse each entry in the array setting the properties requested
						if ( $.isArray( val ) )
						{
							for ( var j=0, jLen=val.length ; j<jLen ; j++ )
							{
								o = {};
								setData( o, val[j], innerSrc );
								data[ a[i] ].push( o );
							}
						}
						else
						{
							// We've been asked to save data to an array, but it
							// isn't array data to be saved. Best that can be done
							// is to just save the value.
							data[ a[i] ] = val;
						}
	
						// The inner call to setData has already traversed through the remainder
						// of the source and has set the data, thus we can exit here
						return;
					}
					else if ( funcNotation )
					{
						// Function call
						a[i] = a[i].replace(__reFn, '');
						data = data[ a[i] ]( val );
					}
	
					// If the nested object doesn't currently exist - since we are
					// trying to set the value - create it
					if ( data[ a[i] ] === null || data[ a[i] ] === undefined )
					{
						data[ a[i] ] = {};
					}
					data = data[ a[i] ];
				}
	
				// Last item in the input - i.e, the actual set
				if ( aLast.match(__reFn ) )
				{
					// Function call
					data = data[ aLast.replace(__reFn, '') ]( val );
				}
				else
				{
					// If array notation is used, we just want to strip it and use the property name
					// and assign the value. If it isn't used, then we get the result we want anyway
					data[ aLast.replace(__reArray, '') ] = val;
				}
			};
	
			return function (data, val) { // meta is also passed in, but not used
				return setData( data, val, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, val) { // meta is also passed in, but not used
				data[mSource] = val;
			};
		}
	}
	
	
	/**
	 * Return an array with the full table data
	 *  @param {object} oSettings dataTables settings object
	 *  @returns array {array} aData Master data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetDataMaster ( settings )
	{
		return _pluck( settings.aoData, '_aData' );
	}
	
	
	/**
	 * Nuke the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnClearTable( settings )
	{
		settings.aoData.length = 0;
		settings.aiDisplayMaster.length = 0;
		settings.aiDisplay.length = 0;
		settings.aIds = {};
	}
	
	
	 /**
	 * Take an array of integers (index array) and remove a target integer (value - not
	 * the key!)
	 *  @param {array} a Index array to target
	 *  @param {int} iTarget value to find
	 *  @memberof DataTable#oApi
	 */
	function _fnDeleteIndex( a, iTarget, splice )
	{
		var iTargetIndex = -1;
	
		for ( var i=0, iLen=a.length ; i<iLen ; i++ )
		{
			if ( a[i] == iTarget )
			{
				iTargetIndex = i;
			}
			else if ( a[i] > iTarget )
			{
				a[i]--;
			}
		}
	
		if ( iTargetIndex != -1 && splice === undefined )
		{
			a.splice( iTargetIndex, 1 );
		}
	}
	
	
	/**
	 * Mark cached data as invalid such that a re-read of the data will occur when
	 * the cached data is next requested. Also update from the data source object.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {int}    rowIdx   Row index to invalidate
	 * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
	 *     or 'data'
	 * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
	 *     row will be invalidated
	 * @memberof DataTable#oApi
	 *
	 * @todo For the modularisation of v1.11 this will need to become a callback, so
	 *   the sort and filter methods can subscribe to it. That will required
	 *   initialisation options for sorting, which is why it is not already baked in
	 */
	function _fnInvalidate( settings, rowIdx, src, colIdx )
	{
		var row = settings.aoData[ rowIdx ];
		var i, ien;
		var cellWrite = function ( cell, col ) {
			// This is very frustrating, but in IE if you just write directly
			// to innerHTML, and elements that are overwritten are GC'ed,
			// even if there is a reference to them elsewhere
			while ( cell.childNodes.length ) {
				cell.removeChild( cell.firstChild );
			}
	
			cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );
		};
	
		// Are we reading last data from DOM or the data object?
		if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {
			// Read the data from the DOM
			row._aData = _fnGetRowElements(
					settings, row, colIdx, colIdx === undefined ? undefined : row._aData
				)
				.data;
		}
		else {
			// Reading from data object, update the DOM
			var cells = row.anCells;
	
			if ( cells ) {
				if ( colIdx !== undefined ) {
					cellWrite( cells[colIdx], colIdx );
				}
				else {
					for ( i=0, ien=cells.length ; i<ien ; i++ ) {
						cellWrite( cells[i], i );
					}
				}
			}
		}
	
		// For both row and cell invalidation, the cached data for sorting and
		// filtering is nulled out
		row._aSortData = null;
		row._aFilterData = null;
	
		// Invalidate the type for a specific column (if given) or all columns since
		// the data might have changed
		var cols = settings.aoColumns;
		if ( colIdx !== undefined ) {
			cols[ colIdx ].sType = null;
		}
		else {
			for ( i=0, ien=cols.length ; i<ien ; i++ ) {
				cols[i].sType = null;
			}
	
			// Update DataTables special `DT_*` attributes for the row
			_fnRowAttributes( settings, row );
		}
	}
	
	
	/**
	 * Build a data source object from an HTML row, reading the contents of the
	 * cells that are in the row.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {node|object} TR element from which to read data or existing row
	 *   object from which to re-read the data from the cells
	 * @param {int} [colIdx] Optional column index
	 * @param {array|object} [d] Data source object. If `colIdx` is given then this
	 *   parameter should also be given and will be used to write the data into.
	 *   Only the column in question will be written
	 * @returns {object} Object with two parameters: `data` the data read, in
	 *   document order, and `cells` and array of nodes (they can be useful to the
	 *   caller, so rather than needing a second traversal to get them, just return
	 *   them from here).
	 * @memberof DataTable#oApi
	 */
	function _fnGetRowElements( settings, row, colIdx, d )
	{
		var
			tds = [],
			td = row.firstChild,
			name, col, o, i=0, contents,
			columns = settings.aoColumns,
			objectRead = settings._rowReadObject;
	
		// Allow the data object to be passed in, or construct
		d = d !== undefined ?
			d :
			objectRead ?
				{} :
				[];
	
		var attr = function ( str, td  ) {
			if ( typeof str === 'string' ) {
				var idx = str.indexOf('@');
	
				if ( idx !== -1 ) {
					var attr = str.substring( idx+1 );
					var setter = _fnSetObjectDataFn( str );
					setter( d, td.getAttribute( attr ) );
				}
			}
		};
	
		// Read data from a cell and store into the data object
		var cellProcess = function ( cell ) {
			if ( colIdx === undefined || colIdx === i ) {
				col = columns[i];
				contents = $.trim(cell.innerHTML);
	
				if ( col && col._bAttrSrc ) {
					var setter = _fnSetObjectDataFn( col.mData._ );
					setter( d, contents );
	
					attr( col.mData.sort, cell );
					attr( col.mData.type, cell );
					attr( col.mData.filter, cell );
				}
				else {
					// Depending on the `data` option for the columns the data can
					// be read to either an object or an array.
					if ( objectRead ) {
						if ( ! col._setter ) {
							// Cache the setter function
							col._setter = _fnSetObjectDataFn( col.mData );
						}
						col._setter( d, contents );
					}
					else {
						d[i] = contents;
					}
				}
			}
	
			i++;
		};
	
		if ( td ) {
			// `tr` element was passed in
			while ( td ) {
				name = td.nodeName.toUpperCase();
	
				if ( name == "TD" || name == "TH" ) {
					cellProcess( td );
					tds.push( td );
				}
	
				td = td.nextSibling;
			}
		}
		else {
			// Existing row object passed in
			tds = row.anCells;
	
			for ( var j=0, jen=tds.length ; j<jen ; j++ ) {
				cellProcess( tds[j] );
			}
		}
	
		// Read the ID from the DOM if present
		var rowNode = row.firstChild ? row : row.nTr;
	
		if ( rowNode ) {
			var id = rowNode.getAttribute( 'id' );
	
			if ( id ) {
				_fnSetObjectDataFn( settings.rowId )( d, id );
			}
		}
	
		return {
			data: d,
			cells: tds
		};
	}
	/**
	 * Create a new TR element (and it's TD children) for a row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow Row to consider
	 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @memberof DataTable#oApi
	 */
	function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
	{
		var
			row = oSettings.aoData[iRow],
			rowData = row._aData,
			cells = [],
			nTr, nTd, oCol,
			i, iLen;
	
		if ( row.nTr === null )
		{
			nTr = nTrIn || document.createElement('tr');
	
			row.nTr = nTr;
			row.anCells = cells;
	
			/* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
			nTr._DT_RowIndex = iRow;
	
			/* Special parameters can be given by the data source to be used on the row */
			_fnRowAttributes( oSettings, row );
	
			/* Process each column */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				oCol = oSettings.aoColumns[i];
	
				nTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );
				nTd._DT_CellIndex = {
					row: iRow,
					column: i
				};
				
				cells.push( nTd );
	
				// Need to create the HTML if new, or if a rendering function is defined
				if ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&
					 (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')
				) {
					nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );
				}
	
				/* Add user defined class */
				if ( oCol.sClass )
				{
					nTd.className += ' '+oCol.sClass;
				}
	
				// Visibility - add or remove as required
				if ( oCol.bVisible && ! nTrIn )
				{
					nTr.appendChild( nTd );
				}
				else if ( ! oCol.bVisible && nTrIn )
				{
					nTd.parentNode.removeChild( nTd );
				}
	
				if ( oCol.fnCreatedCell )
				{
					oCol.fnCreatedCell.call( oSettings.oInstance,
						nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i
					);
				}
			}
	
			_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );
		}
	
		// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved
		// and deployed
		row.nTr.setAttribute( 'role', 'row' );
	}
	
	
	/**
	 * Add attributes to a row based on the special `DT_*` parameters in a data
	 * source object.
	 *  @param {object} settings DataTables settings object
	 *  @param {object} DataTables row object for the row to be modified
	 *  @memberof DataTable#oApi
	 */
	function _fnRowAttributes( settings, row )
	{
		var tr = row.nTr;
		var data = row._aData;
	
		if ( tr ) {
			var id = settings.rowIdFn( data );
	
			if ( id ) {
				tr.id = id;
			}
	
			if ( data.DT_RowClass ) {
				// Remove any classes added by DT_RowClass before
				var a = data.DT_RowClass.split(' ');
				row.__rowc = row.__rowc ?
					_unique( row.__rowc.concat( a ) ) :
					a;
	
				$(tr)
					.removeClass( row.__rowc.join(' ') )
					.addClass( data.DT_RowClass );
			}
	
			if ( data.DT_RowAttr ) {
				$(tr).attr( data.DT_RowAttr );
			}
	
			if ( data.DT_RowData ) {
				$(tr).data( data.DT_RowData );
			}
		}
	}
	
	
	/**
	 * Create the HTML header for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildHead( oSettings )
	{
		var i, ien, cell, row, column;
		var thead = oSettings.nTHead;
		var tfoot = oSettings.nTFoot;
		var createHeader = $('th, td', thead).length === 0;
		var classes = oSettings.oClasses;
		var columns = oSettings.aoColumns;
	
		if ( createHeader ) {
			row = $('<tr/>').appendTo( thead );
		}
	
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			column = columns[i];
			cell = $( column.nTh ).addClass( column.sClass );
	
			if ( createHeader ) {
				cell.appendTo( row );
			}
	
			// 1.11 move into sorting
			if ( oSettings.oFeatures.bSort ) {
				cell.addClass( column.sSortingClass );
	
				if ( column.bSortable !== false ) {
					cell
						.attr( 'tabindex', oSettings.iTabIndex )
						.attr( 'aria-controls', oSettings.sTableId );
	
					_fnSortAttachListener( oSettings, column.nTh, i );
				}
			}
	
			if ( column.sTitle != cell[0].innerHTML ) {
				cell.html( column.sTitle );
			}
	
			_fnRenderer( oSettings, 'header' )(
				oSettings, cell, column, classes
			);
		}
	
		if ( createHeader ) {
			_fnDetectHeader( oSettings.aoHeader, thead );
		}
		
		/* ARIA role for the rows */
	 	$(thead).find('>tr').attr('role', 'row');
	
		/* Deal with the footer - add classes if required */
		$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );
		$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );
	
		// Cache the footer cells. Note that we only take the cells from the first
		// row in the footer. If there is more than one row the user wants to
		// interact with, they need to use the table().foot() method. Note also this
		// allows cells to be used for multiple columns using colspan
		if ( tfoot !== null ) {
			var cells = oSettings.aoFooter[0];
	
			for ( i=0, ien=cells.length ; i<ien ; i++ ) {
				column = columns[i];
				column.nTf = cells[i].cell;
	
				if ( column.sClass ) {
					$(column.nTf).addClass( column.sClass );
				}
			}
		}
	}
	
	
	/**
	 * Draw the header (or footer) element based on the column visibility states. The
	 * methodology here is to use the layout array from _fnDetectHeader, modified for
	 * the instantaneous column visibility, to construct the new layout. The grid is
	 * traversed over cell at a time in a rows x columns grid fashion, although each
	 * cell insert can cover multiple elements in the grid - which is tracks using the
	 * aApplied array. Cell inserts in the grid will only occur where there isn't
	 * already a cell in that position.
	 *  @param {object} oSettings dataTables settings object
	 *  @param array {objects} aoSource Layout array from _fnDetectHeader
	 *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
	 *  @memberof DataTable#oApi
	 */
	function _fnDrawHead( oSettings, aoSource, bIncludeHidden )
	{
		var i, iLen, j, jLen, k, kLen, n, nLocalTr;
		var aoLocal = [];
		var aApplied = [];
		var iColumns = oSettings.aoColumns.length;
		var iRowspan, iColspan;
	
		if ( ! aoSource )
		{
			return;
		}
	
		if (  bIncludeHidden === undefined )
		{
			bIncludeHidden = false;
		}
	
		/* Make a copy of the master layout array, but without the visible columns in it */
		for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )
		{
			aoLocal[i] = aoSource[i].slice();
			aoLocal[i].nTr = aoSource[i].nTr;
	
			/* Remove any columns which are currently hidden */
			for ( j=iColumns-1 ; j>=0 ; j-- )
			{
				if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )
				{
					aoLocal[i].splice( j, 1 );
				}
			}
	
			/* Prep the applied array - it needs an element for each row */
			aApplied.push( [] );
		}
	
		for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )
		{
			nLocalTr = aoLocal[i].nTr;
	
			/* All cells are going to be replaced, so empty out the row */
			if ( nLocalTr )
			{
				while( (n = nLocalTr.firstChild) )
				{
					nLocalTr.removeChild( n );
				}
			}
	
			for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )
			{
				iRowspan = 1;
				iColspan = 1;
	
				/* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
				if ( aApplied[i][j] === undefined )
				{
					nLocalTr.appendChild( aoLocal[i][j].cell );
					aApplied[i][j] = 1;
	
					/* Expand the cell to cover as many rows as needed */
					while ( aoLocal[i+iRowspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )
					{
						aApplied[i+iRowspan][j] = 1;
						iRowspan++;
					}
	
					/* Expand the cell to cover as many columns as needed */
					while ( aoLocal[i][j+iColspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )
					{
						/* Must update the applied array over the rows for the columns */
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aApplied[i+k][j+iColspan] = 1;
						}
						iColspan++;
					}
	
					/* Do the actual expansion in the DOM */
					$(aoLocal[i][j].cell)
						.attr('rowspan', iRowspan)
						.attr('colspan', iColspan);
				}
			}
		}
	}
	
	
	/**
	 * Insert the required TR nodes into the table for display
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnDraw( oSettings )
	{
		/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
		var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
		if ( $.inArray( false, aPreDraw ) !== -1 )
		{
			_fnProcessingDisplay( oSettings, false );
			return;
		}
	
		var i, iLen, n;
		var anRows = [];
		var iRowCount = 0;
		var asStripeClasses = oSettings.asStripeClasses;
		var iStripes = asStripeClasses.length;
		var iOpenRows = oSettings.aoOpenRows.length;
		var oLang = oSettings.oLanguage;
		var iInitDisplayStart = oSettings.iInitDisplayStart;
		var bServerSide = _fnDataSource( oSettings ) == 'ssp';
		var aiDisplay = oSettings.aiDisplay;
	
		oSettings.bDrawing = true;
	
		/* Check and see if we have an initial draw position from state saving */
		if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )
		{
			oSettings._iDisplayStart = bServerSide ?
				iInitDisplayStart :
				iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
					0 :
					iInitDisplayStart;
	
			oSettings.iInitDisplayStart = -1;
		}
	
		var iDisplayStart = oSettings._iDisplayStart;
		var iDisplayEnd = oSettings.fnDisplayEnd();
	
		/* Server-side processing draw intercept */
		if ( oSettings.bDeferLoading )
		{
			oSettings.bDeferLoading = false;
			oSettings.iDraw++;
			_fnProcessingDisplay( oSettings, false );
		}
		else if ( !bServerSide )
		{
			oSettings.iDraw++;
		}
		else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )
		{
			return;
		}
	
		if ( aiDisplay.length !== 0 )
		{
			var iStart = bServerSide ? 0 : iDisplayStart;
			var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
	
			for ( var j=iStart ; j<iEnd ; j++ )
			{
				var iDataIndex = aiDisplay[j];
				var aoData = oSettings.aoData[ iDataIndex ];
				if ( aoData.nTr === null )
				{
					_fnCreateTr( oSettings, iDataIndex );
				}
	
				var nRow = aoData.nTr;
	
				/* Remove the old striping classes and then add the new one */
				if ( iStripes !== 0 )
				{
					var sStripe = asStripeClasses[ iRowCount % iStripes ];
					if ( aoData._sRowStripe != sStripe )
					{
						$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );
						aoData._sRowStripe = sStripe;
					}
				}
	
				// Row callback functions - might want to manipulate the row
				// iRowCount and j are not currently documented. Are they at all
				// useful?
				_fnCallbackFire( oSettings, 'aoRowCallback', null,
					[nRow, aoData._aData, iRowCount, j, iDataIndex] );
	
				anRows.push( nRow );
				iRowCount++;
			}
		}
		else
		{
			/* Table is empty - create a row with an empty message in it */
			var sZero = oLang.sZeroRecords;
			if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )
			{
				sZero = oLang.sLoadingRecords;
			}
			else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )
			{
				sZero = oLang.sEmptyTable;
			}
	
			anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )
				.append( $('<td />', {
					'valign':  'top',
					'colSpan': _fnVisbleColumns( oSettings ),
					'class':   oSettings.oClasses.sRowEmpty
				} ).html( sZero ) )[0];
		}
	
		/* Header and footer callbacks */
		_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		var body = $(oSettings.nTBody);
	
		body.children().detach();
		body.append( $(anRows) );
	
		/* Call all required callback functions for the end of a draw */
		_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );
	
		/* Draw is complete, sorting and filtering must be as well */
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		oSettings.bDrawing = false;
	}
	
	
	/**
	 * Redraw the table - taking account of the various features which are enabled
	 *  @param {object} oSettings dataTables settings object
	 *  @param {boolean} [holdPosition] Keep the current paging position. By default
	 *    the paging is reset to the first page
	 *  @memberof DataTable#oApi
	 */
	function _fnReDraw( settings, holdPosition )
	{
		var
			features = settings.oFeatures,
			sort     = features.bSort,
			filter   = features.bFilter;
	
		if ( sort ) {
			_fnSort( settings );
		}
	
		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	
		if ( holdPosition !== true ) {
			settings._iDisplayStart = 0;
		}
	
		// Let any modules know about the draw hold position state (used by
		// scrolling internally)
		settings._drawHold = holdPosition;
	
		_fnDraw( settings );
	
		settings._drawHold = false;
	}
	
	
	/**
	 * Add the options to the page HTML for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAddOptionsHtml ( oSettings )
	{
		var classes = oSettings.oClasses;
		var table = $(oSettings.nTable);
		var holding = $('<div/>').insertBefore( table ); // Holding element for speed
		var features = oSettings.oFeatures;
	
		// All DataTables are wrapped in a div
		var insert = $('<div/>', {
			id:      oSettings.sTableId+'_wrapper',
			'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)
		} );
	
		oSettings.nHolding = holding[0];
		oSettings.nTableWrapper = insert[0];
		oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
	
		/* Loop over the user set positioning and place the elements as needed */
		var aDom = oSettings.sDom.split('');
		var featureNode, cOption, nNewNode, cNext, sAttr, j;
		for ( var i=0 ; i<aDom.length ; i++ )
		{
			featureNode = null;
			cOption = aDom[i];
	
			if ( cOption == '<' )
			{
				/* New container div */
				nNewNode = $('<div/>')[0];
	
				/* Check to see if we should append an id and/or a class name to the container */
				cNext = aDom[i+1];
				if ( cNext == "'" || cNext == '"' )
				{
					sAttr = "";
					j = 2;
					while ( aDom[i+j] != cNext )
					{
						sAttr += aDom[i+j];
						j++;
					}
	
					/* Replace jQuery UI constants @todo depreciated */
					if ( sAttr == "H" )
					{
						sAttr = classes.sJUIHeader;
					}
					else if ( sAttr == "F" )
					{
						sAttr = classes.sJUIFooter;
					}
	
					/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
					if ( sAttr.indexOf('.') != -1 )
					{
						var aSplit = sAttr.split('.');
						nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);
						nNewNode.className = aSplit[1];
					}
					else if ( sAttr.charAt(0) == "#" )
					{
						nNewNode.id = sAttr.substr(1, sAttr.length-1);
					}
					else
					{
						nNewNode.className = sAttr;
					}
	
					i += j; /* Move along the position array */
				}
	
				insert.append( nNewNode );
				insert = $(nNewNode);
			}
			else if ( cOption == '>' )
			{
				/* End container div */
				insert = insert.parent();
			}
			// @todo Move options into their own plugins?
			else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )
			{
				/* Length */
				featureNode = _fnFeatureHtmlLength( oSettings );
			}
			else if ( cOption == 'f' && features.bFilter )
			{
				/* Filter */
				featureNode = _fnFeatureHtmlFilter( oSettings );
			}
			else if ( cOption == 'r' && features.bProcessing )
			{
				/* pRocessing */
				featureNode = _fnFeatureHtmlProcessing( oSettings );
			}
			else if ( cOption == 't' )
			{
				/* Table */
				featureNode = _fnFeatureHtmlTable( oSettings );
			}
			else if ( cOption ==  'i' && features.bInfo )
			{
				/* Info */
				featureNode = _fnFeatureHtmlInfo( oSettings );
			}
			else if ( cOption == 'p' && features.bPaginate )
			{
				/* Pagination */
				featureNode = _fnFeatureHtmlPaginate( oSettings );
			}
			else if ( DataTable.ext.feature.length !== 0 )
			{
				/* Plug-in features */
				var aoFeatures = DataTable.ext.feature;
				for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )
				{
					if ( cOption == aoFeatures[k].cFeature )
					{
						featureNode = aoFeatures[k].fnInit( oSettings );
						break;
					}
				}
			}
	
			/* Add to the 2D features array */
			if ( featureNode )
			{
				var aanFeatures = oSettings.aanFeatures;
	
				if ( ! aanFeatures[cOption] )
				{
					aanFeatures[cOption] = [];
				}
	
				aanFeatures[cOption].push( featureNode );
				insert.append( featureNode );
			}
		}
	
		/* Built our DOM structure - replace the holding div with what we want */
		holding.replaceWith( insert );
		oSettings.nHolding = null;
	}
	
	
	/**
	 * Use the DOM source to create up an array of header cells. The idea here is to
	 * create a layout grid (array) of rows x columns, which contains a reference
	 * to the cell that that point in the grid (regardless of col/rowspan), such that
	 * any column / row could be removed and the new grid constructed
	 *  @param array {object} aLayout Array to store the calculated layout in
	 *  @param {node} nThead The header/footer element for the table
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectHeader ( aLayout, nThead )
	{
		var nTrs = $(nThead).children('tr');
		var nTr, nCell;
		var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
		var bUnique;
		var fnShiftCol = function ( a, i, j ) {
			var k = a[i];
	                while ( k[j] ) {
				j++;
			}
			return j;
		};
	
		aLayout.splice( 0, aLayout.length );
	
		/* We know how many rows there are in the layout - so prep it */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			aLayout.push( [] );
		}
	
		/* Calculate a layout array */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			nTr = nTrs[i];
			iColumn = 0;
	
			/* For every cell in the row... */
			nCell = nTr.firstChild;
			while ( nCell ) {
				if ( nCell.nodeName.toUpperCase() == "TD" ||
				     nCell.nodeName.toUpperCase() == "TH" )
				{
					/* Get the col and rowspan attributes from the DOM and sanitise them */
					iColspan = nCell.getAttribute('colspan') * 1;
					iRowspan = nCell.getAttribute('rowspan') * 1;
					iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;
					iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;
	
					/* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
					iColShifted = fnShiftCol( aLayout, i, iColumn );
	
					/* Cache calculation for unique columns */
					bUnique = iColspan === 1 ? true : false;
	
					/* If there is col / rowspan, copy the information into the layout grid */
					for ( l=0 ; l<iColspan ; l++ )
					{
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aLayout[i+k][iColShifted+l] = {
								"cell": nCell,
								"unique": bUnique
							};
							aLayout[i+k].nTr = nTr;
						}
					}
				}
				nCell = nCell.nextSibling;
			}
		}
	}
	
	
	/**
	 * Get an array of unique th elements, one for each column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nHeader automatically detect the layout from this node - optional
	 *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
	 *  @returns array {node} aReturn list of unique th's
	 *  @memberof DataTable#oApi
	 */
	function _fnGetUniqueThs ( oSettings, nHeader, aLayout )
	{
		var aReturn = [];
		if ( !aLayout )
		{
			aLayout = oSettings.aoHeader;
			if ( nHeader )
			{
				aLayout = [];
				_fnDetectHeader( aLayout, nHeader );
			}
		}
	
		for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )
		{
			for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )
			{
				if ( aLayout[i][j].unique &&
					 (!aReturn[j] || !oSettings.bSortCellsTop) )
				{
					aReturn[j] = aLayout[i][j].cell;
				}
			}
		}
	
		return aReturn;
	}
	
	/**
	 * Create an Ajax call based on the table's settings, taking into account that
	 * parameters can have multiple forms, and backwards compatibility.
	 *
	 * @param {object} oSettings dataTables settings object
	 * @param {array} data Data to send to the server, required by
	 *     DataTables - may be augmented by developer callbacks
	 * @param {function} fn Callback function to run when data is obtained
	 */
	function _fnBuildAjax( oSettings, data, fn )
	{
		// Compatibility with 1.9-, allow fnServerData and event to manipulate
		_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );
	
		// Convert to object based for 1.10+ if using the old array scheme which can
		// come from server-side processing or serverParams
		if ( data && $.isArray(data) ) {
			var tmp = {};
			var rbracket = /(.*?)\[\]$/;
	
			$.each( data, function (key, val) {
				var match = val.name.match(rbracket);
	
				if ( match ) {
					// Support for arrays
					var name = match[0];
	
					if ( ! tmp[ name ] ) {
						tmp[ name ] = [];
					}
					tmp[ name ].push( val.value );
				}
				else {
					tmp[val.name] = val.value;
				}
			} );
			data = tmp;
		}
	
		var ajaxData;
		var ajax = oSettings.ajax;
		var instance = oSettings.oInstance;
		var callback = function ( json ) {
			_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );
			fn( json );
		};
	
		if ( $.isPlainObject( ajax ) && ajax.data )
		{
			ajaxData = ajax.data;
	
			var newData = typeof ajaxData === 'function' ?
				ajaxData( data, oSettings ) :  // fn can manipulate data or return
				ajaxData;                      // an object object or array to merge
	
			// If the function returned something, use that alone
			data = typeof ajaxData === 'function' && newData ?
				newData :
				$.extend( true, data, newData );
	
			// Remove the data property as we've resolved it already and don't want
			// jQuery to do it again (it is restored at the end of the function)
			delete ajax.data;
		}
	
		var baseAjax = {
			"data": data,
			"success": function (json) {
				var error = json.error || json.sError;
				if ( error ) {
					_fnLog( oSettings, 0, error );
				}
	
				oSettings.json = json;
				callback( json );
			},
			"dataType": "json",
			"cache": false,
			"type": oSettings.sServerMethod,
			"error": function (xhr, error, thrown) {
				var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );
	
				if ( $.inArray( true, ret ) === -1 ) {
					if ( error == "parsererror" ) {
						_fnLog( oSettings, 0, 'Invalid JSON response', 1 );
					}
					else if ( xhr.readyState === 4 ) {
						_fnLog( oSettings, 0, 'Ajax error', 7 );
					}
				}
	
				_fnProcessingDisplay( oSettings, false );
			}
		};
	
		// Store the data submitted for the API
		oSettings.oAjaxData = data;
	
		// Allow plug-ins and external processes to modify the data
		_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );
	
		if ( oSettings.fnServerData )
		{
			// DataTables 1.9- compatibility
			oSettings.fnServerData.call( instance,
				oSettings.sAjaxSource,
				$.map( data, function (val, key) { // Need to convert back to 1.9 trad format
					return { name: key, value: val };
				} ),
				callback,
				oSettings
			);
		}
		else if ( oSettings.sAjaxSource || typeof ajax === 'string' )
		{
			// DataTables 1.9- compatibility
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, {
				url: ajax || oSettings.sAjaxSource
			} ) );
		}
		else if ( typeof ajax === 'function' )
		{
			// Is a function - let the caller define what needs to be done
			oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );
		}
		else
		{
			// Object to extend the base settings
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );
	
			// Restore for next time around
			ajax.data = ajaxData;
		}
	}
	
	
	/**
	 * Update the table using an Ajax call
	 *  @param {object} settings dataTables settings object
	 *  @returns {boolean} Block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdate( settings )
	{
		if ( settings.bAjaxDataGet ) {
			settings.iDraw++;
			_fnProcessingDisplay( settings, true );
	
			_fnBuildAjax(
				settings,
				_fnAjaxParameters( settings ),
				function(json) {
					_fnAjaxUpdateDraw( settings, json );
				}
			);
	
			return false;
		}
		return true;
	}
	
	
	/**
	 * Build up the parameters in an object needed for a server-side processing
	 * request. Note that this is basically done twice, is different ways - a modern
	 * method which is used by default in DataTables 1.10 which uses objects and
	 * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if
	 * the sAjaxSource option is used in the initialisation, or the legacyAjax
	 * option is set.
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {bool} block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxParameters( settings )
	{
		var
			columns = settings.aoColumns,
			columnCount = columns.length,
			features = settings.oFeatures,
			preSearch = settings.oPreviousSearch,
			preColSearch = settings.aoPreSearchCols,
			i, data = [], dataProp, column, columnSearch,
			sort = _fnSortFlatten( settings ),
			displayStart = settings._iDisplayStart,
			displayLength = features.bPaginate !== false ?
				settings._iDisplayLength :
				-1;
	
		var param = function ( name, value ) {
			data.push( { 'name': name, 'value': value } );
		};
	
		// DataTables 1.9- compatible method
		param( 'sEcho',          settings.iDraw );
		param( 'iColumns',       columnCount );
		param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );
		param( 'iDisplayStart',  displayStart );
		param( 'iDisplayLength', displayLength );
	
		// DataTables 1.10+ method
		var d = {
			draw:    settings.iDraw,
			columns: [],
			order:   [],
			start:   displayStart,
			length:  displayLength,
			search:  {
				value: preSearch.sSearch,
				regex: preSearch.bRegex
			}
		};
	
		for ( i=0 ; i<columnCount ; i++ ) {
			column = columns[i];
			columnSearch = preColSearch[i];
			dataProp = typeof column.mData=="function" ? 'function' : column.mData ;
	
			d.columns.push( {
				data:       dataProp,
				name:       column.sName,
				searchable: column.bSearchable,
				orderable:  column.bSortable,
				search:     {
					value: columnSearch.sSearch,
					regex: columnSearch.bRegex
				}
			} );
	
			param( "mDataProp_"+i, dataProp );
	
			if ( features.bFilter ) {
				param( 'sSearch_'+i,     columnSearch.sSearch );
				param( 'bRegex_'+i,      columnSearch.bRegex );
				param( 'bSearchable_'+i, column.bSearchable );
			}
	
			if ( features.bSort ) {
				param( 'bSortable_'+i, column.bSortable );
			}
		}
	
		if ( features.bFilter ) {
			param( 'sSearch', preSearch.sSearch );
			param( 'bRegex', preSearch.bRegex );
		}
	
		if ( features.bSort ) {
			$.each( sort, function ( i, val ) {
				d.order.push( { column: val.col, dir: val.dir } );
	
				param( 'iSortCol_'+i, val.col );
				param( 'sSortDir_'+i, val.dir );
			} );
	
			param( 'iSortingCols', sort.length );
		}
	
		// If the legacy.ajax parameter is null, then we automatically decide which
		// form to use, based on sAjaxSource
		var legacy = DataTable.ext.legacy.ajax;
		if ( legacy === null ) {
			return settings.sAjaxSource ? data : d;
		}
	
		// Otherwise, if legacy has been specified then we use that to decide on the
		// form
		return legacy ? data : d;
	}
	
	
	/**
	 * Data the data from the server (nuking the old) and redraw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} json json data return from the server.
	 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
	 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
	 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
	 *  @param {array} json.aaData The data to display on this page
	 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdateDraw ( settings, json )
	{
		// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.
		// Support both
		var compat = function ( old, modern ) {
			return json[old] !== undefined ? json[old] : json[modern];
		};
	
		var data = _fnAjaxDataSrc( settings, json );
		var draw            = compat( 'sEcho',                'draw' );
		var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );
		var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );
	
		if ( draw ) {
			// Protect against out of sequence returns
			if ( draw*1 < settings.iDraw ) {
				return;
			}
			settings.iDraw = draw * 1;
		}
	
		_fnClearTable( settings );
		settings._iRecordsTotal   = parseInt(recordsTotal, 10);
		settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
	
		for ( var i=0, ien=data.length ; i<ien ; i++ ) {
			_fnAddData( settings, data[i] );
		}
		settings.aiDisplay = settings.aiDisplayMaster.slice();
	
		settings.bAjaxDataGet = false;
		_fnDraw( settings );
	
		if ( ! settings._bInitComplete ) {
			_fnInitComplete( settings, json );
		}
	
		settings.bAjaxDataGet = true;
		_fnProcessingDisplay( settings, false );
	}
	
	
	/**
	 * Get the data from the JSON data source to use for drawing a table. Using
	 * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
	 * source object, or from a processing function.
	 *  @param {object} oSettings dataTables settings object
	 *  @param  {object} json Data source object / array from the server
	 *  @return {array} Array of data to use
	 */
	function _fnAjaxDataSrc ( oSettings, json )
	{
		var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?
			oSettings.ajax.dataSrc :
			oSettings.sAjaxDataProp; // Compatibility with 1.9-.
	
		// Compatibility with 1.9-. In order to read from aaData, check if the
		// default has been changed, if not, check for aaData
		if ( dataSrc === 'data' ) {
			return json.aaData || json[dataSrc];
		}
	
		return dataSrc !== "" ?
			_fnGetObjectDataFn( dataSrc )( json ) :
			json;
	}
	
	/**
	 * Generate the node required for filtering text
	 *  @returns {node} Filter control element
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlFilter ( settings )
	{
		var classes = settings.oClasses;
		var tableId = settings.sTableId;
		var language = settings.oLanguage;
		var previousSearch = settings.oPreviousSearch;
		var features = settings.aanFeatures;
		var input = '<input type="search" class="'+classes.sFilterInput+'"/>';
	
		var str = language.sSearch;
		str = str.match(/_INPUT_/) ?
			str.replace('_INPUT_', input) :
			str+input;
	
		var filter = $('<div/>', {
				'id': ! features.f ? tableId+'_filter' : null,
				'class': classes.sFilter
			} )
			.append( $('<label/>' ).append( str ) );
	
		var searchFn = function() {
			/* Update all other filter input elements for the new display */
			var n = features.f;
			var val = !this.value ? "" : this.value; // mental IE8 fix :-(
	
			/* Now do the filter */
			if ( val != previousSearch.sSearch ) {
				_fnFilterComplete( settings, {
					"sSearch": val,
					"bRegex": previousSearch.bRegex,
					"bSmart": previousSearch.bSmart ,
					"bCaseInsensitive": previousSearch.bCaseInsensitive
				} );
	
				// Need to redraw, without resorting
				settings._iDisplayStart = 0;
				_fnDraw( settings );
			}
		};
	
		var searchDelay = settings.searchDelay !== null ?
			settings.searchDelay :
			_fnDataSource( settings ) === 'ssp' ?
				400 :
				0;
	
		var jqFilter = $('input', filter)
			.val( previousSearch.sSearch )
			.attr( 'placeholder', language.sSearchPlaceholder )
			.on(
				'keyup.DT search.DT input.DT paste.DT cut.DT',
				searchDelay ?
					_fnThrottle( searchFn, searchDelay ) :
					searchFn
			)
			.on( 'keypress.DT', function(e) {
				/* Prevent form submission */
				if ( e.keyCode == 13 ) {
					return false;
				}
			} )
			.attr('aria-controls', tableId);
	
		// Update the input elements whenever the table is filtered
		$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {
			if ( settings === s ) {
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame...
				try {
					if ( jqFilter[0] !== document.activeElement ) {
						jqFilter.val( previousSearch.sSearch );
					}
				}
				catch ( e ) {}
			}
		} );
	
		return filter[0];
	}
	
	
	/**
	 * Filter the table using both the global filter and column based filtering
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oSearch search information
	 *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterComplete ( oSettings, oInput, iForce )
	{
		var oPrevSearch = oSettings.oPreviousSearch;
		var aoPrevSearch = oSettings.aoPreSearchCols;
		var fnSaveFilter = function ( oFilter ) {
			/* Save the filtering values */
			oPrevSearch.sSearch = oFilter.sSearch;
			oPrevSearch.bRegex = oFilter.bRegex;
			oPrevSearch.bSmart = oFilter.bSmart;
			oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
		};
		var fnRegex = function ( o ) {
			// Backwards compatibility with the bEscapeRegex option
			return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;
		};
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo As per sort - can this be moved into an event handler?
		_fnColumnTypes( oSettings );
	
		/* In server-side processing all filtering is done by the server, so no point hanging around here */
		if ( _fnDataSource( oSettings ) != 'ssp' )
		{
			/* Global filter */
			_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );
			fnSaveFilter( oInput );
	
			/* Now do the individual column filter */
			for ( var i=0 ; i<aoPrevSearch.length ; i++ )
			{
				_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),
					aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );
			}
	
			/* Custom filtering */
			_fnFilterCustom( oSettings );
		}
		else
		{
			fnSaveFilter( oInput );
		}
	
		/* Tell the draw function we have been filtering */
		oSettings.bFiltered = true;
		_fnCallbackFire( oSettings, null, 'search', [oSettings] );
	}
	
	
	/**
	 * Apply custom filtering functions
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCustom( settings )
	{
		var filters = DataTable.ext.search;
		var displayRows = settings.aiDisplay;
		var row, rowIdx;
	
		for ( var i=0, ien=filters.length ; i<ien ; i++ ) {
			var rows = [];
	
			// Loop over each row and see if it should be included
			for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {
				rowIdx = displayRows[ j ];
				row = settings.aoData[ rowIdx ];
	
				if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {
					rows.push( rowIdx );
				}
			}
	
			// So the array reference doesn't break set the results into the
			// existing array
			displayRows.length = 0;
			$.merge( displayRows, rows );
		}
	}
	
	
	/**
	 * Filter the table on a per-column basis
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iColumn column to filter
	 *  @param {bool} bRegex treat search string as a regular expression or not
	 *  @param {bool} bSmart use smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )
	{
		if ( searchStr === '' ) {
			return;
		}
	
		var data;
		var out = [];
		var display = settings.aiDisplay;
		var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );
	
		for ( var i=0 ; i<display.length ; i++ ) {
			data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];
	
			if ( rpSearch.test( data ) ) {
				out.push( display[i] );
			}
		}
	
		settings.aiDisplay = out;
	}
	
	
	/**
	 * Filter the data table based on user input and draw the table
	 *  @param {object} settings dataTables settings object
	 *  @param {string} input string to filter on
	 *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)
	 *  @param {bool} regex treat as a regular expression or not
	 *  @param {bool} smart perform smart filtering or not
	 *  @param {bool} caseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilter( settings, input, force, regex, smart, caseInsensitive )
	{
		var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );
		var prevSearch = settings.oPreviousSearch.sSearch;
		var displayMaster = settings.aiDisplayMaster;
		var display, invalidated, i;
		var filtered = [];
	
		// Need to take account of custom filtering functions - always filter
		if ( DataTable.ext.search.length !== 0 ) {
			force = true;
		}
	
		// Check if any of the rows were invalidated
		invalidated = _fnFilterData( settings );
	
		// If the input is blank - we just want the full data set
		if ( input.length <= 0 ) {
			settings.aiDisplay = displayMaster.slice();
		}
		else {
			// New search - start from the master array
			if ( invalidated ||
				 force ||
				 prevSearch.length > input.length ||
				 input.indexOf(prevSearch) !== 0 ||
				 settings.bSorted // On resort, the display master needs to be
				                  // re-filtered since indexes will have changed
			) {
				settings.aiDisplay = displayMaster.slice();
			}
	
			// Search the display array
			display = settings.aiDisplay;
	
			for ( i=0 ; i<display.length ; i++ ) {
				if ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {
					filtered.push( display[i] );
				}
			}
	
			settings.aiDisplay = filtered;
		}
	}
	
	
	/**
	 * Build a regular expression object suitable for searching a table
	 *  @param {string} sSearch string to search for
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @returns {RegExp} constructed object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )
	{
		search = regex ?
			search :
			_fnEscapeRegex( search );
		
		if ( smart ) {
			/* For smart filtering we want to allow the search to work regardless of
			 * word order. We also want double quoted text to be preserved, so word
			 * order is important - a la google. So this is what we want to
			 * generate:
			 * 
			 * ^(?=.*?\bone\b)(?=.*?\btwo three\b)(?=.*?\bfour\b).*$
			 */
			var a = $.map( search.match( /"[^"]+"|[^ ]+/g ) || [''], function ( word ) {
				if ( word.charAt(0) === '"' ) {
					var m = word.match( /^"(.*)"$/ );
					word = m ? m[1] : word;
				}
	
				return word.replace('"', '');
			} );
	
			search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';
		}
	
		return new RegExp( search, caseInsensitive ? 'i' : '' );
	}
	
	
	/**
	 * Escape a string such that it can be used in a regular expression
	 *  @param {string} sVal string to escape
	 *  @returns {string} escaped string
	 *  @memberof DataTable#oApi
	 */
	var _fnEscapeRegex = DataTable.util.escapeRegex;
	
	var __filter_div = $('<div>')[0];
	var __filter_div_textContent = __filter_div.textContent !== undefined;
	
	// Update the filtering data for each row if needed (by invalidation or first run)
	function _fnFilterData ( settings )
	{
		var columns = settings.aoColumns;
		var column;
		var i, j, ien, jen, filterData, cellData, row;
		var fomatters = DataTable.ext.type.search;
		var wasInvalidated = false;
	
		for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aFilterData ) {
				filterData = [];
	
				for ( j=0, jen=columns.length ; j<jen ; j++ ) {
					column = columns[j];
	
					if ( column.bSearchable ) {
						cellData = _fnGetCellData( settings, i, j, 'filter' );
	
						if ( fomatters[ column.sType ] ) {
							cellData = fomatters[ column.sType ]( cellData );
						}
	
						// Search in DataTables 1.10 is string based. In 1.11 this
						// should be altered to also allow strict type checking.
						if ( cellData === null ) {
							cellData = '';
						}
	
						if ( typeof cellData !== 'string' && cellData.toString ) {
							cellData = cellData.toString();
						}
					}
					else {
						cellData = '';
					}
	
					// If it looks like there is an HTML entity in the string,
					// attempt to decode it so sorting works as expected. Note that
					// we could use a single line of jQuery to do this, but the DOM
					// method used here is much faster http://jsperf.com/html-decode
					if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {
						__filter_div.innerHTML = cellData;
						cellData = __filter_div_textContent ?
							__filter_div.textContent :
							__filter_div.innerText;
					}
	
					if ( cellData.replace ) {
						cellData = cellData.replace(/[\r\n]/g, '');
					}
	
					filterData.push( cellData );
				}
	
				row._aFilterData = filterData;
				row._sFilterRow = filterData.join('  ');
				wasInvalidated = true;
			}
		}
	
		return wasInvalidated;
	}
	
	
	/**
	 * Convert from the internal Hungarian notation to camelCase for external
	 * interaction
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToCamel ( obj )
	{
		return {
			search:          obj.sSearch,
			smart:           obj.bSmart,
			regex:           obj.bRegex,
			caseInsensitive: obj.bCaseInsensitive
		};
	}
	
	
	
	/**
	 * Convert from camelCase notation to the internal Hungarian. We could use the
	 * Hungarian convert function here, but this is cleaner
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToHung ( obj )
	{
		return {
			sSearch:          obj.search,
			bSmart:           obj.smart,
			bRegex:           obj.regex,
			bCaseInsensitive: obj.caseInsensitive
		};
	}
	
	/**
	 * Generate the node required for the info display
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Information element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlInfo ( settings )
	{
		var
			tid = settings.sTableId,
			nodes = settings.aanFeatures.i,
			n = $('<div/>', {
				'class': settings.oClasses.sInfo,
				'id': ! nodes ? tid+'_info' : null
			} );
	
		if ( ! nodes ) {
			// Update display on each draw
			settings.aoDrawCallback.push( {
				"fn": _fnUpdateInfo,
				"sName": "information"
			} );
	
			n
				.attr( 'role', 'status' )
				.attr( 'aria-live', 'polite' );
	
			// Table is described by our info div
			$(settings.nTable).attr( 'aria-describedby', tid+'_info' );
		}
	
		return n[0];
	}
	
	
	/**
	 * Update the information elements in the display
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnUpdateInfo ( settings )
	{
		/* Show information about the table */
		var nodes = settings.aanFeatures.i;
		if ( nodes.length === 0 ) {
			return;
		}
	
		var
			lang  = settings.oLanguage,
			start = settings._iDisplayStart+1,
			end   = settings.fnDisplayEnd(),
			max   = settings.fnRecordsTotal(),
			total = settings.fnRecordsDisplay(),
			out   = total ?
				lang.sInfo :
				lang.sInfoEmpty;
	
		if ( total !== max ) {
			/* Record set after filtering */
			out += ' ' + lang.sInfoFiltered;
		}
	
		// Convert the macros
		out += lang.sInfoPostFix;
		out = _fnInfoMacros( settings, out );
	
		var callback = lang.fnInfoCallback;
		if ( callback !== null ) {
			out = callback.call( settings.oInstance,
				settings, start, end, max, total, out
			);
		}
	
		$(nodes).html( out );
	}
	
	
	function _fnInfoMacros ( settings, str )
	{
		// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
		// internally
		var
			formatter  = settings.fnFormatNumber,
			start      = settings._iDisplayStart+1,
			len        = settings._iDisplayLength,
			vis        = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return str.
			replace(/_START_/g, formatter.call( settings, start ) ).
			replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).
			replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).
			replace(/_TOTAL_/g, formatter.call( settings, vis ) ).
			replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).
			replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );
	}
	
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnInitialise ( settings )
	{
		var i, iLen, iAjaxStart=settings.iInitDisplayStart;
		var columns = settings.aoColumns, column;
		var features = settings.oFeatures;
		var deferLoading = settings.bDeferLoading; // value modified by the draw
	
		/* Ensure that the table data is fully initialised */
		if ( ! settings.bInitialised ) {
			setTimeout( function(){ _fnInitialise( settings ); }, 200 );
			return;
		}
	
		/* Show the display HTML options */
		_fnAddOptionsHtml( settings );
	
		/* Build and draw the header / footer for the table */
		_fnBuildHead( settings );
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		/* Okay to show that something is going on now */
		_fnProcessingDisplay( settings, true );
	
		/* Calculate sizes for columns */
		if ( features.bAutoWidth ) {
			_fnCalculateColumnWidths( settings );
		}
	
		for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {
			column = columns[i];
	
			if ( column.sWidth ) {
				column.nTh.style.width = _fnStringToCss( column.sWidth );
			}
		}
	
		_fnCallbackFire( settings, null, 'preInit', [settings] );
	
		// If there is default sorting required - let's do it. The sort function
		// will do the drawing for us. Otherwise we draw the table regardless of the
		// Ajax source - this allows the table to look initialised for Ajax sourcing
		// data (show 'loading' message possibly)
		_fnReDraw( settings );
	
		// Server-side processing init complete is done by _fnAjaxUpdateDraw
		var dataSrc = _fnDataSource( settings );
		if ( dataSrc != 'ssp' || deferLoading ) {
			// if there is an ajax source load the data
			if ( dataSrc == 'ajax' ) {
				_fnBuildAjax( settings, [], function(json) {
					var aData = _fnAjaxDataSrc( settings, json );
	
					// Got the data - add it to the table
					for ( i=0 ; i<aData.length ; i++ ) {
						_fnAddData( settings, aData[i] );
					}
	
					// Reset the init display for cookie saving. We've already done
					// a filter, and therefore cleared it before. So we need to make
					// it appear 'fresh'
					settings.iInitDisplayStart = iAjaxStart;
	
					_fnReDraw( settings );
	
					_fnProcessingDisplay( settings, false );
					_fnInitComplete( settings, json );
				}, settings );
			}
			else {
				_fnProcessingDisplay( settings, false );
				_fnInitComplete( settings );
			}
		}
	}
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
	 *    with client-side processing (optional)
	 *  @memberof DataTable#oApi
	 */
	function _fnInitComplete ( settings, json )
	{
		settings._bInitComplete = true;
	
		// When data was added after the initialisation (data or Ajax) we need to
		// calculate the column sizing
		if ( json || settings.oInit.aaData ) {
			_fnAdjustColumnSizing( settings );
		}
	
		_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );
		_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );
	}
	
	
	function _fnLengthChange ( settings, val )
	{
		var len = parseInt( val, 10 );
		settings._iDisplayLength = len;
	
		_fnLengthOverflow( settings );
	
		// Fire length change event
		_fnCallbackFire( settings, null, 'length', [settings, len] );
	}
	
	
	/**
	 * Generate the node required for user display length changing
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Display length feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlLength ( settings )
	{
		var
			classes  = settings.oClasses,
			tableId  = settings.sTableId,
			menu     = settings.aLengthMenu,
			d2       = $.isArray( menu[0] ),
			lengths  = d2 ? menu[0] : menu,
			language = d2 ? menu[1] : menu;
	
		var select = $('<select/>', {
			'name':          tableId+'_length',
			'aria-controls': tableId,
			'class':         classes.sLengthSelect
		} );
	
		for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {
			select[0][ i ] = new Option(
				typeof language[i] === 'number' ?
					settings.fnFormatNumber( language[i] ) :
					language[i],
				lengths[i]
			);
		}
	
		var div = $('<div><label/></div>').addClass( classes.sLength );
		if ( ! settings.aanFeatures.l ) {
			div[0].id = tableId+'_length';
		}
	
		div.children().append(
			settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )
		);
	
		// Can't use `select` variable as user might provide their own and the
		// reference is broken by the use of outerHTML
		$('select', div)
			.val( settings._iDisplayLength )
			.on( 'change.DT', function(e) {
				_fnLengthChange( settings, $(this).val() );
				_fnDraw( settings );
			} );
	
		// Update node value whenever anything changes the table's length
		$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {
			if ( settings === s ) {
				$('select', div).val( len );
			}
		} );
	
		return div[0];
	}
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.pager
	 */
	
	/**
	 * Generate the node required for default pagination
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Pagination feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlPaginate ( settings )
	{
		var
			type   = settings.sPaginationType,
			plugin = DataTable.ext.pager[ type ],
			modern = typeof plugin === 'function',
			redraw = function( settings ) {
				_fnDraw( settings );
			},
			node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],
			features = settings.aanFeatures;
	
		if ( ! modern ) {
			plugin.fnInit( settings, node, redraw );
		}
	
		/* Add a draw callback for the pagination on first instance, to update the paging display */
		if ( ! features.p )
		{
			node.id = settings.sTableId+'_paginate';
	
			settings.aoDrawCallback.push( {
				"fn": function( settings ) {
					if ( modern ) {
						var
							start      = settings._iDisplayStart,
							len        = settings._iDisplayLength,
							visRecords = settings.fnRecordsDisplay(),
							all        = len === -1,
							page = all ? 0 : Math.ceil( start / len ),
							pages = all ? 1 : Math.ceil( visRecords / len ),
							buttons = plugin(page, pages),
							i, ien;
	
						for ( i=0, ien=features.p.length ; i<ien ; i++ ) {
							_fnRenderer( settings, 'pageButton' )(
								settings, features.p[i], i, buttons, page, pages
							);
						}
					}
					else {
						plugin.fnUpdate( settings, redraw );
					}
				},
				"sName": "pagination"
			} );
		}
	
		return node;
	}
	
	
	/**
	 * Alter the display settings to change the page
	 *  @param {object} settings DataTables settings object
	 *  @param {string|int} action Paging action to take: "first", "previous",
	 *    "next" or "last" or page number to jump to (integer)
	 *  @param [bool] redraw Automatically draw the update or not
	 *  @returns {bool} true page has changed, false - no change
	 *  @memberof DataTable#oApi
	 */
	function _fnPageChange ( settings, action, redraw )
	{
		var
			start     = settings._iDisplayStart,
			len       = settings._iDisplayLength,
			records   = settings.fnRecordsDisplay();
	
		if ( records === 0 || len === -1 )
		{
			start = 0;
		}
		else if ( typeof action === "number" )
		{
			start = action * len;
	
			if ( start > records )
			{
				start = 0;
			}
		}
		else if ( action == "first" )
		{
			start = 0;
		}
		else if ( action == "previous" )
		{
			start = len >= 0 ?
				start - len :
				0;
	
			if ( start < 0 )
			{
			  start = 0;
			}
		}
		else if ( action == "next" )
		{
			if ( start + len < records )
			{
				start += len;
			}
		}
		else if ( action == "last" )
		{
			start = Math.floor( (records-1) / len) * len;
		}
		else
		{
			_fnLog( settings, 0, "Unknown paging action: "+action, 5 );
		}
	
		var changed = settings._iDisplayStart !== start;
		settings._iDisplayStart = start;
	
		if ( changed ) {
			_fnCallbackFire( settings, null, 'page', [settings] );
	
			if ( redraw ) {
				_fnDraw( settings );
			}
		}
	
		return changed;
	}
	
	
	
	/**
	 * Generate the node required for the processing node
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Processing element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlProcessing ( settings )
	{
		return $('<div/>', {
				'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,
				'class': settings.oClasses.sProcessing
			} )
			.html( settings.oLanguage.sProcessing )
			.insertBefore( settings.nTable )[0];
	}
	
	
	/**
	 * Display or hide the processing indicator
	 *  @param {object} settings dataTables settings object
	 *  @param {bool} show Show the processing indicator (true) or not (false)
	 *  @memberof DataTable#oApi
	 */
	function _fnProcessingDisplay ( settings, show )
	{
		if ( settings.oFeatures.bProcessing ) {
			$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );
		}
	
		_fnCallbackFire( settings, null, 'processing', [settings, show] );
	}
	
	/**
	 * Add any control elements for the table - specifically scrolling
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlTable ( settings )
	{
		var table = $(settings.nTable);
	
		// Add the ARIA grid role to the table
		table.attr( 'role', 'grid' );
	
		// Scrolling from here on in
		var scroll = settings.oScroll;
	
		if ( scroll.sX === '' && scroll.sY === '' ) {
			return settings.nTable;
		}
	
		var scrollX = scroll.sX;
		var scrollY = scroll.sY;
		var classes = settings.oClasses;
		var caption = table.children('caption');
		var captionSide = caption.length ? caption[0]._captionSide : null;
		var headerClone = $( table[0].cloneNode(false) );
		var footerClone = $( table[0].cloneNode(false) );
		var footer = table.children('tfoot');
		var _div = '<div/>';
		var size = function ( s ) {
			return !s ? null : _fnStringToCss( s );
		};
	
		if ( ! footer.length ) {
			footer = null;
		}
	
		/*
		 * The HTML structure that we want to generate in this function is:
		 *  div - scroller
		 *    div - scroll head
		 *      div - scroll head inner
		 *        table - scroll head table
		 *          thead - thead
		 *    div - scroll body
		 *      table - table (master table)
		 *        thead - thead clone for sizing
		 *        tbody - tbody
		 *    div - scroll foot
		 *      div - scroll foot inner
		 *        table - scroll foot table
		 *          tfoot - tfoot
		 */
		var scroller = $( _div, { 'class': classes.sScrollWrapper } )
			.append(
				$(_div, { 'class': classes.sScrollHead } )
					.css( {
						overflow: 'hidden',
						position: 'relative',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollHeadInner } )
							.css( {
								'box-sizing': 'content-box',
								width: scroll.sXInner || '100%'
							} )
							.append(
								headerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'top' ? caption : null )
									.append(
										table.children('thead')
									)
							)
					)
			)
			.append(
				$(_div, { 'class': classes.sScrollBody } )
					.css( {
						position: 'relative',
						overflow: 'auto',
						width: size( scrollX )
					} )
					.append( table )
			);
	
		if ( footer ) {
			scroller.append(
				$(_div, { 'class': classes.sScrollFoot } )
					.css( {
						overflow: 'hidden',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollFootInner } )
							.append(
								footerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'bottom' ? caption : null )
									.append(
										table.children('tfoot')
									)
							)
					)
			);
		}
	
		var children = scroller.children();
		var scrollHead = children[0];
		var scrollBody = children[1];
		var scrollFoot = footer ? children[2] : null;
	
		// When the body is scrolled, then we also want to scroll the headers
		if ( scrollX ) {
			$(scrollBody).on( 'scroll.DT', function (e) {
				var scrollLeft = this.scrollLeft;
	
				scrollHead.scrollLeft = scrollLeft;
	
				if ( footer ) {
					scrollFoot.scrollLeft = scrollLeft;
				}
			} );
		}
	
		$(scrollBody).css(
			scrollY && scroll.bCollapse ? 'max-height' : 'height', 
			scrollY
		);
	
		settings.nScrollHead = scrollHead;
		settings.nScrollBody = scrollBody;
		settings.nScrollFoot = scrollFoot;
	
		// On redraw - align columns
		settings.aoDrawCallback.push( {
			"fn": _fnScrollDraw,
			"sName": "scrolling"
		} );
	
		return scroller[0];
	}
	
	
	
	/**
	 * Update the header, footer and body tables for resizing - i.e. column
	 * alignment.
	 *
	 * Welcome to the most horrible function DataTables. The process that this
	 * function follows is basically:
	 *   1. Re-create the table inside the scrolling div
	 *   2. Take live measurements from the DOM
	 *   3. Apply the measurements to align the columns
	 *   4. Clean up
	 *
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollDraw ( settings )
	{
		// Given that this is such a monster function, a lot of variables are use
		// to try and keep the minimised size as small as possible
		var
			scroll         = settings.oScroll,
			scrollX        = scroll.sX,
			scrollXInner   = scroll.sXInner,
			scrollY        = scroll.sY,
			barWidth       = scroll.iBarWidth,
			divHeader      = $(settings.nScrollHead),
			divHeaderStyle = divHeader[0].style,
			divHeaderInner = divHeader.children('div'),
			divHeaderInnerStyle = divHeaderInner[0].style,
			divHeaderTable = divHeaderInner.children('table'),
			divBodyEl      = settings.nScrollBody,
			divBody        = $(divBodyEl),
			divBodyStyle   = divBodyEl.style,
			divFooter      = $(settings.nScrollFoot),
			divFooterInner = divFooter.children('div'),
			divFooterTable = divFooterInner.children('table'),
			header         = $(settings.nTHead),
			table          = $(settings.nTable),
			tableEl        = table[0],
			tableStyle     = tableEl.style,
			footer         = settings.nTFoot ? $(settings.nTFoot) : null,
			browser        = settings.oBrowser,
			ie67           = browser.bScrollOversize,
			dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),
			headerTrgEls, footerTrgEls,
			headerSrcEls, footerSrcEls,
			headerCopy, footerCopy,
			headerWidths=[], footerWidths=[],
			headerContent=[], footerContent=[],
			idx, correction, sanityWidth,
			zeroOut = function(nSizer) {
				var style = nSizer.style;
				style.paddingTop = "0";
				style.paddingBottom = "0";
				style.borderTopWidth = "0";
				style.borderBottomWidth = "0";
				style.height = 0;
			};
	
		// If the scrollbar visibility has changed from the last draw, we need to
		// adjust the column sizes as the table width will have changed to account
		// for the scrollbar
		var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
		
		if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {
			settings.scrollBarVis = scrollBarVis;
			_fnAdjustColumnSizing( settings );
			return; // adjust column sizing will call this function again
		}
		else {
			settings.scrollBarVis = scrollBarVis;
		}
	
		/*
		 * 1. Re-create the table inside the scrolling div
		 */
	
		// Remove the old minimised thead and tfoot elements in the inner table
		table.children('thead, tfoot').remove();
	
		if ( footer ) {
			footerCopy = footer.clone().prependTo( table );
			footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized
			footerSrcEls = footerCopy.find('tr');
		}
	
		// Clone the current header and footer elements and then place it into the inner table
		headerCopy = header.clone().prependTo( table );
		headerTrgEls = header.find('tr'); // original header is in its own table
		headerSrcEls = headerCopy.find('tr');
		headerCopy.find('th, td').removeAttr('tabindex');
	
	
		/*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */
	
		// Remove old sizing and apply the calculated column widths
		// Get the unique column headers in the newly created (cloned) header. We want to apply the
		// calculated sizes to this header
		if ( ! scrollX )
		{
			divBodyStyle.width = '100%';
			divHeader[0].style.width = '100%';
		}
	
		$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {
			idx = _fnVisibleToColumnIndex( settings, i );
			el.style.width = settings.aoColumns[idx].sWidth;
		} );
	
		if ( footer ) {
			_fnApplyToChildren( function(n) {
				n.style.width = "";
			}, footerSrcEls );
		}
	
		// Size the table as a whole
		sanityWidth = table.outerWidth();
		if ( scrollX === "" ) {
			// No x scrolling
			tableStyle.width = "100%";
	
			// IE7 will make the width of the table when 100% include the scrollbar
			// - which is shouldn't. When there is a scrollbar we need to take this
			// into account.
			if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);
			}
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
		else if ( scrollXInner !== "" ) {
			// legacy x scroll inner has been given - use it
			tableStyle.width = _fnStringToCss(scrollXInner);
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
	
		// Hidden header should have zero height, so remove padding and borders. Then
		// set the width based on the real headers
	
		// Apply all styles in one pass
		_fnApplyToChildren( zeroOut, headerSrcEls );
	
		// Read all widths in next pass
		_fnApplyToChildren( function(nSizer) {
			headerContent.push( nSizer.innerHTML );
			headerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
		}, headerSrcEls );
	
		// Apply all widths in final pass
		_fnApplyToChildren( function(nToSize, i) {
			// Only apply widths to the DataTables detected header cells - this
			// prevents complex headers from having contradictory sizes applied
			if ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {
				nToSize.style.width = headerWidths[i];
			}
		}, headerTrgEls );
	
		$(headerSrcEls).height(0);
	
		/* Same again with the footer if we have one */
		if ( footer )
		{
			_fnApplyToChildren( zeroOut, footerSrcEls );
	
			_fnApplyToChildren( function(nSizer) {
				footerContent.push( nSizer.innerHTML );
				footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
			}, footerSrcEls );
	
			_fnApplyToChildren( function(nToSize, i) {
				nToSize.style.width = footerWidths[i];
			}, footerTrgEls );
	
			$(footerSrcEls).height(0);
		}
	
	
		/*
		 * 3. Apply the measurements
		 */
	
		// "Hide" the header and footer that we used for the sizing. We need to keep
		// the content of the cell so that the width applied to the header and body
		// both match, but we want to hide it completely. We want to also fix their
		// width to what they currently are
		_fnApplyToChildren( function(nSizer, i) {
			nSizer.innerHTML = '<div class="dataTables_sizing">'+headerContent[i]+'</div>';
			nSizer.childNodes[0].style.height = "0";
			nSizer.childNodes[0].style.overflow = "hidden";
			nSizer.style.width = headerWidths[i];
		}, headerSrcEls );
	
		if ( footer )
		{
			_fnApplyToChildren( function(nSizer, i) {
				nSizer.innerHTML = '<div class="dataTables_sizing">'+footerContent[i]+'</div>';
				nSizer.childNodes[0].style.height = "0";
				nSizer.childNodes[0].style.overflow = "hidden";
				nSizer.style.width = footerWidths[i];
			}, footerSrcEls );
		}
	
		// Sanity check that the table is of a sensible width. If not then we are going to get
		// misalignment - try to prevent this by not allowing the table to shrink below its min width
		if ( table.outerWidth() < sanityWidth )
		{
			// The min width depends upon if we have a vertical scrollbar visible or not */
			correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")) ?
					sanityWidth+barWidth :
					sanityWidth;
	
			// IE6/7 are a law unto themselves...
			if ( ie67 && (divBodyEl.scrollHeight >
				divBodyEl.offsetHeight || divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( correction-barWidth );
			}
	
			// And give the user a warning that we've stopped the table getting too small
			if ( scrollX === "" || scrollXInner !== "" ) {
				_fnLog( settings, 1, 'Possible column misalignment', 6 );
			}
		}
		else
		{
			correction = '100%';
		}
	
		// Apply to the container elements
		divBodyStyle.width = _fnStringToCss( correction );
		divHeaderStyle.width = _fnStringToCss( correction );
	
		if ( footer ) {
			settings.nScrollFoot.style.width = _fnStringToCss( correction );
		}
	
	
		/*
		 * 4. Clean up
		 */
		if ( ! scrollY ) {
			/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
			if ( ie67 ) {
				divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );
			}
		}
	
		/* Finally set the width's of the header and footer tables */
		var iOuterWidth = table.outerWidth();
		divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );
		divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );
	
		// Figure out if there are scrollbar present - if so then we need a the header and footer to
		// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
		var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
		var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );
		divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+"px" : "0px";
	
		if ( footer ) {
			divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style[padding] = bScrolling ? barWidth+"px" : "0px";
		}
	
		// Correct DOM ordering for colgroup - comes before the thead
		table.children('colgroup').insertBefore( table.children('thead') );
	
		/* Adjust the position of the header in case we loose the y-scrollbar */
		divBody.scroll();
	
		// If sorting or filtering has occurred, jump the scrolling back to the top
		// only if we aren't holding the position
		if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {
			divBodyEl.scrollTop = 0;
		}
	}
	
	
	
	/**
	 * Apply a given function to the display child nodes of an element array (typically
	 * TD children of TR rows
	 *  @param {function} fn Method to apply to the objects
	 *  @param array {nodes} an1 List of elements to look through for display children
	 *  @param array {nodes} an2 Another list (identical structure to the first) - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyToChildren( fn, an1, an2 )
	{
		var index=0, i=0, iLen=an1.length;
		var nNode1, nNode2;
	
		while ( i < iLen ) {
			nNode1 = an1[i].firstChild;
			nNode2 = an2 ? an2[i].firstChild : null;
	
			while ( nNode1 ) {
				if ( nNode1.nodeType === 1 ) {
					if ( an2 ) {
						fn( nNode1, nNode2, index );
					}
					else {
						fn( nNode1, index );
					}
	
					index++;
				}
	
				nNode1 = nNode1.nextSibling;
				nNode2 = an2 ? nNode2.nextSibling : null;
			}
	
			i++;
		}
	}
	
	
	
	var __re_html_remove = /<.*?>/g;
	
	
	/**
	 * Calculate the width of columns for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateColumnWidths ( oSettings )
	{
		var
			table = oSettings.nTable,
			columns = oSettings.aoColumns,
			scroll = oSettings.oScroll,
			scrollY = scroll.sY,
			scrollX = scroll.sX,
			scrollXInner = scroll.sXInner,
			columnCount = columns.length,
			visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),
			headerCells = $('th', oSettings.nTHead),
			tableWidthAttr = table.getAttribute('width'), // from DOM element
			tableContainer = table.parentNode,
			userInputs = false,
			i, column, columnIdx, width, outerWidth,
			browser = oSettings.oBrowser,
			ie67 = browser.bScrollOversize;
	
		var styleWidth = table.style.width;
		if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {
			tableWidthAttr = styleWidth;
		}
	
		/* Convert any user input sizes into pixel sizes */
		for ( i=0 ; i<visibleColumns.length ; i++ ) {
			column = columns[ visibleColumns[i] ];
	
			if ( column.sWidth !== null ) {
				column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );
	
				userInputs = true;
			}
		}
	
		/* If the number of columns in the DOM equals the number that we have to
		 * process in DataTables, then we can use the offsets that are created by
		 * the web- browser. No custom sizes can be set in order for this to happen,
		 * nor scrolling used
		 */
		if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&
		     columnCount == _fnVisbleColumns( oSettings ) &&
		     columnCount == headerCells.length
		) {
			for ( i=0 ; i<columnCount ; i++ ) {
				var colIdx = _fnVisibleToColumnIndex( oSettings, i );
	
				if ( colIdx !== null ) {
					columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );
				}
			}
		}
		else
		{
			// Otherwise construct a single row, worst case, table with the widest
			// node in the data, assign any user defined widths, then insert it into
			// the DOM and allow the browser to do all the hard work of calculating
			// table widths
			var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table
				.css( 'visibility', 'hidden' )
				.removeAttr( 'id' );
	
			// Clean up the table body
			tmpTable.find('tbody tr').remove();
			var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );
	
			// Clone the table header and footer - we can't use the header / footer
			// from the cloned table, since if scrolling is active, the table's
			// real header and footer are contained in different table tags
			tmpTable.find('thead, tfoot').remove();
			tmpTable
				.append( $(oSettings.nTHead).clone() )
				.append( $(oSettings.nTFoot).clone() );
	
			// Remove any assigned widths from the footer (from scrolling)
			tmpTable.find('tfoot th, tfoot td').css('width', '');
	
			// Apply custom sizing to the cloned header
			headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );
	
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				column = columns[ visibleColumns[i] ];
	
				headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?
					_fnStringToCss( column.sWidthOrig ) :
					'';
	
				// For scrollX we need to force the column width otherwise the
				// browser will collapse it. If this width is smaller than the
				// width the column requires, then it will have no effect
				if ( column.sWidthOrig && scrollX ) {
					$( headerCells[i] ).append( $('<div/>').css( {
						width: column.sWidthOrig,
						margin: 0,
						padding: 0,
						border: 0,
						height: 1
					} ) );
				}
			}
	
			// Find the widest cell for each column and put it into the table
			if ( oSettings.aoData.length ) {
				for ( i=0 ; i<visibleColumns.length ; i++ ) {
					columnIdx = visibleColumns[i];
					column = columns[ columnIdx ];
	
					$( _fnGetWidestNode( oSettings, columnIdx ) )
						.clone( false )
						.append( column.sContentPadding )
						.appendTo( tr );
				}
			}
	
			// Tidy the temporary table - remove name attributes so there aren't
			// duplicated in the dom (radio elements for example)
			$('[name]', tmpTable).removeAttr('name');
	
			// Table has been built, attach to the document so we can work with it.
			// A holding element is used, positioned at the top of the container
			// with minimal height, so it has no effect on if the container scrolls
			// or not. Otherwise it might trigger scrolling when it actually isn't
			// needed
			var holder = $('<div/>').css( scrollX || scrollY ?
					{
						position: 'absolute',
						top: 0,
						left: 0,
						height: 1,
						right: 0,
						overflow: 'hidden'
					} :
					{}
				)
				.append( tmpTable )
				.appendTo( tableContainer );
	
			// When scrolling (X or Y) we want to set the width of the table as 
			// appropriate. However, when not scrolling leave the table width as it
			// is. This results in slightly different, but I think correct behaviour
			if ( scrollX && scrollXInner ) {
				tmpTable.width( scrollXInner );
			}
			else if ( scrollX ) {
				tmpTable.css( 'width', 'auto' );
				tmpTable.removeAttr('width');
	
				// If there is no width attribute or style, then allow the table to
				// collapse
				if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {
					tmpTable.width( tableContainer.clientWidth );
				}
			}
			else if ( scrollY ) {
				tmpTable.width( tableContainer.clientWidth );
			}
			else if ( tableWidthAttr ) {
				tmpTable.width( tableWidthAttr );
			}
	
			// Get the width of each column in the constructed table - we need to
			// know the inner width (so it can be assigned to the other table's
			// cells) and the outer width so we can calculate the full width of the
			// table. This is safe since DataTables requires a unique cell for each
			// column, but if ever a header can span multiple columns, this will
			// need to be modified.
			var total = 0;
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				var cell = $(headerCells[i]);
				var border = cell.outerWidth() - cell.width();
	
				// Use getBounding... where possible (not IE8-) because it can give
				// sub-pixel accuracy, which we then want to round up!
				var bounding = browser.bBounding ?
					Math.ceil( headerCells[i].getBoundingClientRect().width ) :
					cell.outerWidth();
	
				// Total is tracked to remove any sub-pixel errors as the outerWidth
				// of the table might not equal the total given here (IE!).
				total += bounding;
	
				// Width for each column to use
				columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );
			}
	
			table.style.width = _fnStringToCss( total );
	
			// Finished with the table - ditch it
			holder.remove();
		}
	
		// If there is a width attr, we want to attach an event listener which
		// allows the table sizing to automatically adjust when the window is
		// resized. Use the width attr rather than CSS, since we can't know if the
		// CSS is a relative value or absolute - DOM read is always px.
		if ( tableWidthAttr ) {
			table.style.width = _fnStringToCss( tableWidthAttr );
		}
	
		if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {
			var bindResize = function () {
				$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {
					_fnAdjustColumnSizing( oSettings );
				} ) );
			};
	
			// IE6/7 will crash if we bind a resize event handler on page load.
			// To be removed in 1.11 which drops IE6/7 support
			if ( ie67 ) {
				setTimeout( bindResize, 1000 );
			}
			else {
				bindResize();
			}
	
			oSettings._reszEvt = true;
		}
	}
	
	
	/**
	 * Throttle the calls to a function. Arguments and context are maintained for
	 * the throttled function
	 *  @param {function} fn Function to be called
	 *  @param {int} [freq=200] call frequency in mS
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#oApi
	 */
	var _fnThrottle = DataTable.util.throttle;
	
	
	/**
	 * Convert a CSS unit width to pixels (e.g. 2em)
	 *  @param {string} width width to be converted
	 *  @param {node} parent parent to get the with for (required for relative widths) - optional
	 *  @returns {int} width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnConvertToWidth ( width, parent )
	{
		if ( ! width ) {
			return 0;
		}
	
		var n = $('<div/>')
			.css( 'width', _fnStringToCss( width ) )
			.appendTo( parent || document.body );
	
		var val = n[0].offsetWidth;
		n.remove();
	
		return val;
	}
	
	
	/**
	 * Get the widest node
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {node} widest table node
	 *  @memberof DataTable#oApi
	 */
	function _fnGetWidestNode( settings, colIdx )
	{
		var idx = _fnGetMaxLenString( settings, colIdx );
		if ( idx < 0 ) {
			return null;
		}
	
		var data = settings.aoData[ idx ];
		return ! data.nTr ? // Might not have been created when deferred rendering
			$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :
			data.anCells[ colIdx ];
	}
	
	
	/**
	 * Get the maximum strlen for each data column
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {string} max string length for each column
	 *  @memberof DataTable#oApi
	 */
	function _fnGetMaxLenString( settings, colIdx )
	{
		var s, max=-1, maxIdx = -1;
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			s = _fnGetCellData( settings, i, colIdx, 'display' )+'';
			s = s.replace( __re_html_remove, '' );
			s = s.replace( /&nbsp;/g, ' ' );
	
			if ( s.length > max ) {
				max = s.length;
				maxIdx = i;
			}
		}
	
		return maxIdx;
	}
	
	
	/**
	 * Append a CSS unit (only if required) to a string
	 *  @param {string} value to css-ify
	 *  @returns {string} value with css unit
	 *  @memberof DataTable#oApi
	 */
	function _fnStringToCss( s )
	{
		if ( s === null ) {
			return '0px';
		}
	
		if ( typeof s == 'number' ) {
			return s < 0 ?
				'0px' :
				s+'px';
		}
	
		// Check it has a unit character already
		return s.match(/\d$/) ?
			s+'px' :
			s;
	}
	
	
	
	function _fnSortFlatten ( settings )
	{
		var
			i, iLen, k, kLen,
			aSort = [],
			aiOrig = [],
			aoColumns = settings.aoColumns,
			aDataSort, iCol, sType, srcCol,
			fixed = settings.aaSortingFixed,
			fixedObj = $.isPlainObject( fixed ),
			nestedSort = [],
			add = function ( a ) {
				if ( a.length && ! $.isArray( a[0] ) ) {
					// 1D array
					nestedSort.push( a );
				}
				else {
					// 2D array
					$.merge( nestedSort, a );
				}
			};
	
		// Build the sort array, with pre-fix and post-fix options if they have been
		// specified
		if ( $.isArray( fixed ) ) {
			add( fixed );
		}
	
		if ( fixedObj && fixed.pre ) {
			add( fixed.pre );
		}
	
		add( settings.aaSorting );
	
		if (fixedObj && fixed.post ) {
			add( fixed.post );
		}
	
		for ( i=0 ; i<nestedSort.length ; i++ )
		{
			srcCol = nestedSort[i][0];
			aDataSort = aoColumns[ srcCol ].aDataSort;
	
			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';
	
				if ( nestedSort[i]._idx === undefined ) {
					nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );
				}
	
				aSort.push( {
					src:       srcCol,
					col:       iCol,
					dir:       nestedSort[i][1],
					index:     nestedSort[i]._idx,
					type:      sType,
					formatter: DataTable.ext.type.order[ sType+"-pre" ]
				} );
			}
		}
	
		return aSort;
	}
	
	/**
	 * Change the order of the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 *  @todo This really needs split up!
	 */
	function _fnSort ( oSettings )
	{
		var
			i, ien, iLen, j, jLen, k, kLen,
			sDataType, nTh,
			aiOrig = [],
			oExtSort = DataTable.ext.type.order,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns,
			aDataSort, data, iCol, sType, oSort,
			formatters = 0,
			sortCol,
			displayMaster = oSettings.aiDisplayMaster,
			aSort;
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo Can this be moved into a 'data-ready' handler which is called when
		//   data is going to be used in the table?
		_fnColumnTypes( oSettings );
	
		aSort = _fnSortFlatten( oSettings );
	
		for ( i=0, ien=aSort.length ; i<ien ; i++ ) {
			sortCol = aSort[i];
	
			// Track if we can use the fast sort algorithm
			if ( sortCol.formatter ) {
				formatters++;
			}
	
			// Load the data needed for the sort, for each cell
			_fnSortData( oSettings, sortCol.col );
		}
	
		/* No sorting required if server-side or no sorting array */
		if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )
		{
			// Create a value - key array of the current row positions such that we can use their
			// current position during the sort, if values match, in order to perform stable sorting
			for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {
				aiOrig[ displayMaster[i] ] = i;
			}
	
			/* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
			if ( formatters === aSort.length ) {
				// All sort types have formatting functions
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = x<y ? -1 : x>y ? 1 : 0;
						if ( test !== 0 ) {
							return sort.dir === 'asc' ? test : -test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
			else {
				// Depreciated - remove in 1.11 (providing a plug-in option)
				// Not all sort types have formatting methods, so we have to call their sorting
				// methods.
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, l, test, sort, fn,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						fn = oExtSort[ sort.type+"-"+sort.dir ] || oExtSort[ "string-"+sort.dir ];
						test = fn( x, y );
						if ( test !== 0 ) {
							return test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
		}
	
		/* Tell the draw function that we have sorted the data */
		oSettings.bSorted = true;
	}
	
	
	function _fnSortAria ( settings )
	{
		var label;
		var nextSort;
		var columns = settings.aoColumns;
		var aSort = _fnSortFlatten( settings );
		var oAria = settings.oLanguage.oAria;
	
		// ARIA attributes - need to loop all columns, to update all (removing old
		// attributes as needed)
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			var col = columns[i];
			var asSorting = col.asSorting;
			var sTitle = col.sTitle.replace( /<.*?>/g, "" );
			var th = col.nTh;
	
			// IE7 is throwing an error when setting these properties with jQuery's
			// attr() and removeAttr() methods...
			th.removeAttribute('aria-sort');
	
			/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
			if ( col.bSortable ) {
				if ( aSort.length > 0 && aSort[0].col == i ) {
					th.setAttribute('aria-sort', aSort[0].dir=="asc" ? "ascending" : "descending" );
					nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];
				}
				else {
					nextSort = asSorting[0];
				}
	
				label = sTitle + ( nextSort === "asc" ?
					oAria.sSortAscending :
					oAria.sSortDescending
				);
			}
			else {
				label = sTitle;
			}
	
			th.setAttribute('aria-label', label);
		}
	}
	
	
	/**
	 * Function to run on user sort request
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {boolean} [append=false] Append the requested sort to the existing
	 *    sort if true (i.e. multi-column sort)
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortListener ( settings, colIdx, append, callback )
	{
		var col = settings.aoColumns[ colIdx ];
		var sorting = settings.aaSorting;
		var asSorting = col.asSorting;
		var nextSortIdx;
		var next = function ( a, overflow ) {
			var idx = a._idx;
			if ( idx === undefined ) {
				idx = $.inArray( a[1], asSorting );
			}
	
			return idx+1 < asSorting.length ?
				idx+1 :
				overflow ?
					null :
					0;
		};
	
		// Convert to 2D array if needed
		if ( typeof sorting[0] === 'number' ) {
			sorting = settings.aaSorting = [ sorting ];
		}
	
		// If appending the sort then we are multi-column sorting
		if ( append && settings.oFeatures.bSortMulti ) {
			// Are we already doing some kind of sort on this column?
			var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );
	
			if ( sortIdx !== -1 ) {
				// Yes, modify the sort
				nextSortIdx = next( sorting[sortIdx], true );
	
				if ( nextSortIdx === null && sorting.length === 1 ) {
					nextSortIdx = 0; // can't remove sorting completely
				}
	
				if ( nextSortIdx === null ) {
					sorting.splice( sortIdx, 1 );
				}
				else {
					sorting[sortIdx][1] = asSorting[ nextSortIdx ];
					sorting[sortIdx]._idx = nextSortIdx;
				}
			}
			else {
				// No sort on this column yet
				sorting.push( [ colIdx, asSorting[0], 0 ] );
				sorting[sorting.length-1]._idx = 0;
			}
		}
		else if ( sorting.length && sorting[0][0] == colIdx ) {
			// Single column - already sorting on this column, modify the sort
			nextSortIdx = next( sorting[0] );
	
			sorting.length = 1;
			sorting[0][1] = asSorting[ nextSortIdx ];
			sorting[0]._idx = nextSortIdx;
		}
		else {
			// Single column - sort only on this column
			sorting.length = 0;
			sorting.push( [ colIdx, asSorting[0] ] );
			sorting[0]._idx = 0;
		}
	
		// Run the sort by calling a full redraw
		_fnReDraw( settings );
	
		// callback used for async user interaction
		if ( typeof callback == 'function' ) {
			callback( settings );
		}
	}
	
	
	/**
	 * Attach a sort handler (click) to a node
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortAttachListener ( settings, attachTo, colIdx, callback )
	{
		var col = settings.aoColumns[ colIdx ];
	
		_fnBindAction( attachTo, {}, function (e) {
			/* If the column is not sortable - don't to anything */
			if ( col.bSortable === false ) {
				return;
			}
	
			// If processing is enabled use a timeout to allow the processing
			// display to be shown - otherwise to it synchronously
			if ( settings.oFeatures.bProcessing ) {
				_fnProcessingDisplay( settings, true );
	
				setTimeout( function() {
					_fnSortListener( settings, colIdx, e.shiftKey, callback );
	
					// In server-side processing, the draw callback will remove the
					// processing display
					if ( _fnDataSource( settings ) !== 'ssp' ) {
						_fnProcessingDisplay( settings, false );
					}
				}, 0 );
			}
			else {
				_fnSortListener( settings, colIdx, e.shiftKey, callback );
			}
		} );
	}
	
	
	/**
	 * Set the sorting classes on table's body, Note: it is safe to call this function
	 * when bSort and bSortClasses are false
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSortingClasses( settings )
	{
		var oldSort = settings.aLastSort;
		var sortClass = settings.oClasses.sSortColumn;
		var sort = _fnSortFlatten( settings );
		var features = settings.oFeatures;
		var i, ien, colIdx;
	
		if ( features.bSort && features.bSortClasses ) {
			// Remove old sorting classes
			for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {
				colIdx = oldSort[i].src;
	
				// Remove column sorting
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.removeClass( sortClass + (i<2 ? i+1 : 3) );
			}
	
			// Add new column sorting
			for ( i=0, ien=sort.length ; i<ien ; i++ ) {
				colIdx = sort[i].src;
	
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.addClass( sortClass + (i<2 ? i+1 : 3) );
			}
		}
	
		settings.aLastSort = sort;
	}
	
	
	// Get the data to sort a column, be it from cache, fresh (populating the
	// cache), or from a sort formatter
	function _fnSortData( settings, idx )
	{
		// Custom sorting function - provided by the sort data type
		var column = settings.aoColumns[ idx ];
		var customSort = DataTable.ext.order[ column.sSortDataType ];
		var customData;
	
		if ( customSort ) {
			customData = customSort.call( settings.oInstance, settings, idx,
				_fnColumnIndexToVisible( settings, idx )
			);
		}
	
		// Use / populate cache
		var row, cellData;
		var formatter = DataTable.ext.type.order[ column.sType+"-pre" ];
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aSortData ) {
				row._aSortData = [];
			}
	
			if ( ! row._aSortData[idx] || customSort ) {
				cellData = customSort ?
					customData[i] : // If there was a custom sort function, use data from there
					_fnGetCellData( settings, i, idx, 'sort' );
	
				row._aSortData[ idx ] = formatter ?
					formatter( cellData ) :
					cellData;
			}
		}
	}
	
	
	
	/**
	 * Save the state of a table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSaveState ( settings )
	{
		if ( !settings.oFeatures.bStateSave || settings.bDestroying )
		{
			return;
		}
	
		/* Store the interesting variables */
		var state = {
			time:    +new Date(),
			start:   settings._iDisplayStart,
			length:  settings._iDisplayLength,
			order:   $.extend( true, [], settings.aaSorting ),
			search:  _fnSearchToCamel( settings.oPreviousSearch ),
			columns: $.map( settings.aoColumns, function ( col, i ) {
				return {
					visible: col.bVisible,
					search: _fnSearchToCamel( settings.aoPreSearchCols[i] )
				};
			} )
		};
	
		_fnCallbackFire( settings, "aoStateSaveParams", 'stateSaveParams', [settings, state] );
	
		settings.oSavedState = state;
		settings.fnStateSaveCallback.call( settings.oInstance, settings, state );
	}
	
	
	/**
	 * Attempt to load a saved table state
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oInit DataTables init object so we can override settings
	 *  @param {function} callback Callback to execute when the state has been loaded
	 *  @memberof DataTable#oApi
	 */
	function _fnLoadState ( settings, oInit, callback )
	{
		var i, ien;
		var columns = settings.aoColumns;
		var loaded = function ( s ) {
			if ( ! s || ! s.time ) {
				callback();
				return;
			}
	
			// Allow custom and plug-in manipulation functions to alter the saved data set and
			// cancelling of loading by returning false
			var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );
			if ( $.inArray( false, abStateLoad ) !== -1 ) {
				callback();
				return;
			}
	
			// Reject old data
			var duration = settings.iStateDuration;
			if ( duration > 0 && s.time < +new Date() - (duration*1000) ) {
				callback();
				return;
			}
	
			// Number of columns have changed - all bets are off, no restore of settings
			if ( s.columns && columns.length !== s.columns.length ) {
				callback();
				return;
			}
	
			// Store the saved state so it might be accessed at any time
			settings.oLoadedState = $.extend( true, {}, s );
	
			// Restore key features - todo - for 1.11 this needs to be done by
			// subscribed events
			if ( s.start !== undefined ) {
				settings._iDisplayStart    = s.start;
				settings.iInitDisplayStart = s.start;
			}
			if ( s.length !== undefined ) {
				settings._iDisplayLength   = s.length;
			}
	
			// Order
			if ( s.order !== undefined ) {
				settings.aaSorting = [];
				$.each( s.order, function ( i, col ) {
					settings.aaSorting.push( col[0] >= columns.length ?
						[ 0, col[1] ] :
						col
					);
				} );
			}
	
			// Search
			if ( s.search !== undefined ) {
				$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );
			}
	
			// Columns
			//
			if ( s.columns ) {
				for ( i=0, ien=s.columns.length ; i<ien ; i++ ) {
					var col = s.columns[i];
	
					// Visibility
					if ( col.visible !== undefined ) {
						columns[i].bVisible = col.visible;
					}
	
					// Search
					if ( col.search !== undefined ) {
						$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );
					}
				}
			}
	
			_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );
			callback();
		}
	
		if ( ! settings.oFeatures.bStateSave ) {
			callback();
			return;
		}
	
		var state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );
	
		if ( state !== undefined ) {
			loaded( state );
		}
		// otherwise, wait for the loaded callback to be executed
	}
	
	
	/**
	 * Return the settings object for a particular table
	 *  @param {node} table table we are using as a dataTable
	 *  @returns {object} Settings object - or null if not found
	 *  @memberof DataTable#oApi
	 */
	function _fnSettingsFromNode ( table )
	{
		var settings = DataTable.settings;
		var idx = $.inArray( table, _pluck( settings, 'nTable' ) );
	
		return idx !== -1 ?
			settings[ idx ] :
			null;
	}
	
	
	/**
	 * Log an error message
	 *  @param {object} settings dataTables settings object
	 *  @param {int} level log error messages, or display them to the user
	 *  @param {string} msg error message
	 *  @param {int} tn Technical note id to get more information about the error.
	 *  @memberof DataTable#oApi
	 */
	function _fnLog( settings, level, msg, tn )
	{
		msg = 'DataTables warning: '+
			(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;
	
		if ( tn ) {
			msg += '. For more information about this error, please see '+
			'http://datatables.net/tn/'+tn;
		}
	
		if ( ! level  ) {
			// Backwards compatibility pre 1.10
			var ext = DataTable.ext;
			var type = ext.sErrMode || ext.errMode;
	
			if ( settings ) {
				_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );
			}
	
			if ( type == 'alert' ) {
				alert( msg );
			}
			else if ( type == 'throw' ) {
				throw new Error(msg);
			}
			else if ( typeof type == 'function' ) {
				type( settings, tn, msg );
			}
		}
		else if ( window.console && console.log ) {
			console.log( msg );
		}
	}
	
	
	/**
	 * See if a property is defined on one object, if so assign it to the other object
	 *  @param {object} ret target object
	 *  @param {object} src source object
	 *  @param {string} name property
	 *  @param {string} [mappedName] name to map too - optional, name used if not given
	 *  @memberof DataTable#oApi
	 */
	function _fnMap( ret, src, name, mappedName )
	{
		if ( $.isArray( name ) ) {
			$.each( name, function (i, val) {
				if ( $.isArray( val ) ) {
					_fnMap( ret, src, val[0], val[1] );
				}
				else {
					_fnMap( ret, src, val );
				}
			} );
	
			return;
		}
	
		if ( mappedName === undefined ) {
			mappedName = name;
		}
	
		if ( src[name] !== undefined ) {
			ret[mappedName] = src[name];
		}
	}
	
	
	/**
	 * Extend objects - very similar to jQuery.extend, but deep copy objects, and
	 * shallow copy arrays. The reason we need to do this, is that we don't want to
	 * deep copy array init values (such as aaSorting) since the dev wouldn't be
	 * able to override them, but we do want to deep copy arrays.
	 *  @param {object} out Object to extend
	 *  @param {object} extender Object from which the properties will be applied to
	 *      out
	 *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
	 *      independent copy with the exception of the `data` or `aaData` parameters
	 *      if they are present. This is so you can pass in a collection to
	 *      DataTables and have that used as your data source without breaking the
	 *      references
	 *  @returns {object} out Reference, just for convenience - out === the return.
	 *  @memberof DataTable#oApi
	 *  @todo This doesn't take account of arrays inside the deep copied objects.
	 */
	function _fnExtend( out, extender, breakRefs )
	{
		var val;
	
		for ( var prop in extender ) {
			if ( extender.hasOwnProperty(prop) ) {
				val = extender[prop];
	
				if ( $.isPlainObject( val ) ) {
					if ( ! $.isPlainObject( out[prop] ) ) {
						out[prop] = {};
					}
					$.extend( true, out[prop], val );
				}
				else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {
					out[prop] = val.slice();
				}
				else {
					out[prop] = val;
				}
			}
		}
	
		return out;
	}
	
	
	/**
	 * Bind an event handers to allow a click or return key to activate the callback.
	 * This is good for accessibility since a return on the keyboard will have the
	 * same effect as a click, if the element has focus.
	 *  @param {element} n Element to bind the action to
	 *  @param {object} oData Data object to pass to the triggered function
	 *  @param {function} fn Callback function for when the event is triggered
	 *  @memberof DataTable#oApi
	 */
	function _fnBindAction( n, oData, fn )
	{
		$(n)
			.on( 'click.DT', oData, function (e) {
					$(n).blur(); // Remove focus outline for mouse users
					fn(e);
				} )
			.on( 'keypress.DT', oData, function (e){
					if ( e.which === 13 ) {
						e.preventDefault();
						fn(e);
					}
				} )
			.on( 'selectstart.DT', function () {
					/* Take the brutal approach to cancelling text selection */
					return false;
				} );
	}
	
	
	/**
	 * Register a callback function. Easily allows a callback function to be added to
	 * an array store of callback functions that can then all be called together.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {function} fn Function to be called back
	 *  @param {string} sName Identifying name for the callback (i.e. a label)
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackReg( oSettings, sStore, fn, sName )
	{
		if ( fn )
		{
			oSettings[sStore].push( {
				"fn": fn,
				"sName": sName
			} );
		}
	}
	
	
	/**
	 * Fire callback functions and trigger events. Note that the loop over the
	 * callback array store is done backwards! Further note that you do not want to
	 * fire off triggers in time sensitive applications (for example cell creation)
	 * as its slow.
	 *  @param {object} settings dataTables settings object
	 *  @param {string} callbackArr Name of the array storage for the callbacks in
	 *      oSettings
	 *  @param {string} eventName Name of the jQuery custom event to trigger. If
	 *      null no trigger is fired
	 *  @param {array} args Array of arguments to pass to the callback function /
	 *      trigger
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackFire( settings, callbackArr, eventName, args )
	{
		var ret = [];
	
		if ( callbackArr ) {
			ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {
				return val.fn.apply( settings.oInstance, args );
			} );
		}
	
		if ( eventName !== null ) {
			var e = $.Event( eventName+'.dt' );
	
			$(settings.nTable).trigger( e, args );
	
			ret.push( e.result );
		}
	
		return ret;
	}
	
	
	function _fnLengthOverflow ( settings )
	{
		var
			start = settings._iDisplayStart,
			end = settings.fnDisplayEnd(),
			len = settings._iDisplayLength;
	
		/* If we have space to show extra rows (backing up from the end point - then do so */
		if ( start >= end )
		{
			start = end - len;
		}
	
		// Keep the start record on the current page
		start -= (start % len);
	
		if ( len === -1 || start < 0 )
		{
			start = 0;
		}
	
		settings._iDisplayStart = start;
	}
	
	
	function _fnRenderer( settings, type )
	{
		var renderer = settings.renderer;
		var host = DataTable.ext.renderer[type];
	
		if ( $.isPlainObject( renderer ) && renderer[type] ) {
			// Specific renderer for this type. If available use it, otherwise use
			// the default.
			return host[renderer[type]] || host._;
		}
		else if ( typeof renderer === 'string' ) {
			// Common renderer - if there is one available for this type use it,
			// otherwise use the default
			return host[renderer] || host._;
		}
	
		// Use the default
		return host._;
	}
	
	
	/**
	 * Detect the data source being used for the table. Used to simplify the code
	 * a little (ajax) and to make it compress a little smaller.
	 *
	 *  @param {object} settings dataTables settings object
	 *  @returns {string} Data source
	 *  @memberof DataTable#oApi
	 */
	function _fnDataSource ( settings )
	{
		if ( settings.oFeatures.bServerSide ) {
			return 'ssp';
		}
		else if ( settings.ajax || settings.sAjaxSource ) {
			return 'ajax';
		}
		return 'dom';
	}
	

	
	
	/**
	 * Computed structure of the DataTables API, defined by the options passed to
	 * `DataTable.Api.register()` when building the API.
	 *
	 * The structure is built in order to speed creation and extension of the Api
	 * objects since the extensions are effectively pre-parsed.
	 *
	 * The array is an array of objects with the following structure, where this
	 * base array represents the Api prototype base:
	 *
	 *     [
	 *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
	 *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
	 *     ]
	 *
	 * @type {Array}
	 * @ignore
	 */
	var __apiStruct = [];
	
	
	/**
	 * `Array.prototype` reference.
	 *
	 * @type object
	 * @ignore
	 */
	var __arrayProto = Array.prototype;
	
	
	/**
	 * Abstraction for `context` parameter of the `Api` constructor to allow it to
	 * take several different forms for ease of use.
	 *
	 * Each of the input parameter types will be converted to a DataTables settings
	 * object where possible.
	 *
	 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
	 *   of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 *   * `DataTables.Api` - API instance
	 * @return {array|null} Matching DataTables settings objects. `null` or
	 *   `undefined` is returned if no matching DataTable is found.
	 * @ignore
	 */
	var _toSettings = function ( mixed )
	{
		var idx, jq;
		var settings = DataTable.settings;
		var tables = $.map( settings, function (el, i) {
			return el.nTable;
		} );
	
		if ( ! mixed ) {
			return [];
		}
		else if ( mixed.nTable && mixed.oApi ) {
			// DataTables settings object
			return [ mixed ];
		}
		else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
			// Table node
			idx = $.inArray( mixed, tables );
			return idx !== -1 ? [ settings[idx] ] : null;
		}
		else if ( mixed && typeof mixed.settings === 'function' ) {
			return mixed.settings().toArray();
		}
		else if ( typeof mixed === 'string' ) {
			// jQuery selector
			jq = $(mixed);
		}
		else if ( mixed instanceof $ ) {
			// jQuery object (also DataTables instance)
			jq = mixed;
		}
	
		if ( jq ) {
			return jq.map( function(i) {
				idx = $.inArray( this, tables );
				return idx !== -1 ? settings[idx] : null;
			} ).toArray();
		}
	};
	
	
	/**
	 * DataTables API class - used to control and interface with  one or more
	 * DataTables enhanced tables.
	 *
	 * The API class is heavily based on jQuery, presenting a chainable interface
	 * that you can use to interact with tables. Each instance of the API class has
	 * a "context" - i.e. the tables that it will operate on. This could be a single
	 * table, all tables on a page or a sub-set thereof.
	 *
	 * Additionally the API is designed to allow you to easily work with the data in
	 * the tables, retrieving and manipulating it as required. This is done by
	 * presenting the API class as an array like interface. The contents of the
	 * array depend upon the actions requested by each method (for example
	 * `rows().nodes()` will return an array of nodes, while `rows().data()` will
	 * return an array of objects or arrays depending upon your table's
	 * configuration). The API object has a number of array like methods (`push`,
	 * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
	 * `unique` etc) to assist your working with the data held in a table.
	 *
	 * Most methods (those which return an Api instance) are chainable, which means
	 * the return from a method call also has all of the methods available that the
	 * top level object had. For example, these two calls are equivalent:
	 *
	 *     // Not chained
	 *     api.row.add( {...} );
	 *     api.draw();
	 *
	 *     // Chained
	 *     api.row.add( {...} ).draw();
	 *
	 * @class DataTable.Api
	 * @param {array|object|string|jQuery} context DataTable identifier. This is
	 *   used to define which DataTables enhanced tables this API will operate on.
	 *   Can be one of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 * @param {array} [data] Data to initialise the Api instance with.
	 *
	 * @example
	 *   // Direct initialisation during DataTables construction
	 *   var api = $('#example').DataTable();
	 *
	 * @example
	 *   // Initialisation using a DataTables jQuery object
	 *   var api = $('#example').dataTable().api();
	 *
	 * @example
	 *   // Initialisation as a constructor
	 *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
	 */
	_Api = function ( context, data )
	{
		if ( ! (this instanceof _Api) ) {
			return new _Api( context, data );
		}
	
		var settings = [];
		var ctxSettings = function ( o ) {
			var a = _toSettings( o );
			if ( a ) {
				settings = settings.concat( a );
			}
		};
	
		if ( $.isArray( context ) ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				ctxSettings( context[i] );
			}
		}
		else {
			ctxSettings( context );
		}
	
		// Remove duplicates
		this.context = _unique( settings );
	
		// Initial data
		if ( data ) {
			$.merge( this, data );
		}
	
		// selector
		this.selector = {
			rows: null,
			cols: null,
			opts: null
		};
	
		_Api.extend( this, this, __apiStruct );
	};
	
	DataTable.Api = _Api;
	
	// Don't destroy the existing prototype, just extend it. Required for jQuery 2's
	// isPlainObject.
	$.extend( _Api.prototype, {
		any: function ()
		{
			return this.count() !== 0;
		},
	
	
		concat:  __arrayProto.concat,
	
	
		context: [], // array of table settings objects
	
	
		count: function ()
		{
			return this.flatten().length;
		},
	
	
		each: function ( fn )
		{
			for ( var i=0, ien=this.length ; i<ien; i++ ) {
				fn.call( this, this[i], i, this );
			}
	
			return this;
		},
	
	
		eq: function ( idx )
		{
			var ctx = this.context;
	
			return ctx.length > idx ?
				new _Api( ctx[idx], this[idx] ) :
				null;
		},
	
	
		filter: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.filter ) {
				a = __arrayProto.filter.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					if ( fn.call( this, this[i], i, this ) ) {
						a.push( this[i] );
					}
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		flatten: function ()
		{
			var a = [];
			return new _Api( this.context, a.concat.apply( a, this.toArray() ) );
		},
	
	
		join:    __arrayProto.join,
	
	
		indexOf: __arrayProto.indexOf || function (obj, start)
		{
			for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {
				if ( this[i] === obj ) {
					return i;
				}
			}
			return -1;
		},
	
		iterator: function ( flatten, type, fn, alwaysNew ) {
			var
				a = [], ret,
				i, ien, j, jen,
				context = this.context,
				rows, items, item,
				selector = this.selector;
	
			// Argument shifting
			if ( typeof flatten === 'string' ) {
				alwaysNew = fn;
				fn = type;
				type = flatten;
				flatten = false;
			}
	
			for ( i=0, ien=context.length ; i<ien ; i++ ) {
				var apiInst = new _Api( context[i] );
	
				if ( type === 'table' ) {
					ret = fn.call( apiInst, context[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'columns' || type === 'rows' ) {
					// this has same length as context - one entry for each table
					ret = fn.call( apiInst, context[i], this[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {
					// columns and rows share the same structure.
					// 'this' is an array of column indexes for each context
					items = this[i];
	
					if ( type === 'column-rows' ) {
						rows = _selector_row_indexes( context[i], selector.opts );
					}
	
					for ( j=0, jen=items.length ; j<jen ; j++ ) {
						item = items[j];
	
						if ( type === 'cell' ) {
							ret = fn.call( apiInst, context[i], item.row, item.column, i, j );
						}
						else {
							ret = fn.call( apiInst, context[i], item, i, j, rows );
						}
	
						if ( ret !== undefined ) {
							a.push( ret );
						}
					}
				}
			}
	
			if ( a.length || alwaysNew ) {
				var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );
				var apiSelector = api.selector;
				apiSelector.rows = selector.rows;
				apiSelector.cols = selector.cols;
				apiSelector.opts = selector.opts;
				return api;
			}
			return this;
		},
	
	
		lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)
		{
			// Bit cheeky...
			return this.indexOf.apply( this.toArray.reverse(), arguments );
		},
	
	
		length:  0,
	
	
		map: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.map ) {
				a = __arrayProto.map.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					a.push( fn.call( this, this[i], i ) );
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		pluck: function ( prop )
		{
			return this.map( function ( el ) {
				return el[ prop ];
			} );
		},
	
		pop:     __arrayProto.pop,
	
	
		push:    __arrayProto.push,
	
	
		// Does not return an API instance
		reduce: __arrayProto.reduce || function ( fn, init )
		{
			return _fnReduce( this, fn, init, 0, this.length, 1 );
		},
	
	
		reduceRight: __arrayProto.reduceRight || function ( fn, init )
		{
			return _fnReduce( this, fn, init, this.length-1, -1, -1 );
		},
	
	
		reverse: __arrayProto.reverse,
	
	
		// Object with rows, columns and opts
		selector: null,
	
	
		shift:   __arrayProto.shift,
	
	
		slice: function () {
			return new _Api( this.context, this );
		},
	
	
		sort:    __arrayProto.sort, // ? name - order?
	
	
		splice:  __arrayProto.splice,
	
	
		toArray: function ()
		{
			return __arrayProto.slice.call( this );
		},
	
	
		to$: function ()
		{
			return $( this );
		},
	
	
		toJQuery: function ()
		{
			return $( this );
		},
	
	
		unique: function ()
		{
			return new _Api( this.context, _unique(this) );
		},
	
	
		unshift: __arrayProto.unshift
	} );
	
	
	_Api.extend = function ( scope, obj, ext )
	{
		// Only extend API instances and static properties of the API
		if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {
			return;
		}
	
		var
			i, ien,
			j, jen,
			struct, inner,
			methodScoping = function ( scope, fn, struc ) {
				return function () {
					var ret = fn.apply( scope, arguments );
	
					// Method extension
					_Api.extend( ret, ret, struc.methodExt );
					return ret;
				};
			};
	
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			struct = ext[i];
	
			// Value
			obj[ struct.name ] = typeof struct.val === 'function' ?
				methodScoping( scope, struct.val, struct ) :
				$.isPlainObject( struct.val ) ?
					{} :
					struct.val;
	
			obj[ struct.name ].__dt_wrapper = true;
	
			// Property extension
			_Api.extend( scope, obj[ struct.name ], struct.propExt );
		}
	};
	
	
	// @todo - Is there need for an augment function?
	// _Api.augment = function ( inst, name )
	// {
	// 	// Find src object in the structure from the name
	// 	var parts = name.split('.');
	
	// 	_Api.extend( inst, obj );
	// };
	
	
	//     [
	//       {
	//         name:      'data'                -- string   - Property name
	//         val:       function () {},       -- function - Api method (or undefined if just an object
	//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	//       },
	//       {
	//         name:     'row'
	//         val:       {},
	//         methodExt: [ ... ],
	//         propExt:   [
	//           {
	//             name:      'data'
	//             val:       function () {},
	//             methodExt: [ ... ],
	//             propExt:   [ ... ]
	//           },
	//           ...
	//         ]
	//       }
	//     ]
	
	_Api.register = _api_register = function ( name, val )
	{
		if ( $.isArray( name ) ) {
			for ( var j=0, jen=name.length ; j<jen ; j++ ) {
				_Api.register( name[j], val );
			}
			return;
		}
	
		var
			i, ien,
			heir = name.split('.'),
			struct = __apiStruct,
			key, method;
	
		var find = function ( src, name ) {
			for ( var i=0, ien=src.length ; i<ien ; i++ ) {
				if ( src[i].name === name ) {
					return src[i];
				}
			}
			return null;
		};
	
		for ( i=0, ien=heir.length ; i<ien ; i++ ) {
			method = heir[i].indexOf('()') !== -1;
			key = method ?
				heir[i].replace('()', '') :
				heir[i];
	
			var src = find( struct, key );
			if ( ! src ) {
				src = {
					name:      key,
					val:       {},
					methodExt: [],
					propExt:   []
				};
				struct.push( src );
			}
	
			if ( i === ien-1 ) {
				src.val = val;
			}
			else {
				struct = method ?
					src.methodExt :
					src.propExt;
			}
		}
	};
	
	
	_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {
		_Api.register( pluralName, val );
	
		_Api.register( singularName, function () {
			var ret = val.apply( this, arguments );
	
			if ( ret === this ) {
				// Returned item is the API instance that was passed in, return it
				return this;
			}
			else if ( ret instanceof _Api ) {
				// New API instance returned, want the value from the first item
				// in the returned array for the singular result.
				return ret.length ?
					$.isArray( ret[0] ) ?
						new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'
						ret[0] :
					undefined;
			}
	
			// Non-API return - just fire it back
			return ret;
		} );
	};
	
	
	/**
	 * Selector for HTML tables. Apply the given selector to the give array of
	 * DataTables settings objects.
	 *
	 * @param {string|integer} [selector] jQuery selector string or integer
	 * @param  {array} Array of DataTables settings objects to be filtered
	 * @return {array}
	 * @ignore
	 */
	var __table_selector = function ( selector, a )
	{
		// Integer is used to pick out a table by index
		if ( typeof selector === 'number' ) {
			return [ a[ selector ] ];
		}
	
		// Perform a jQuery selector on the table nodes
		var nodes = $.map( a, function (el, i) {
			return el.nTable;
		} );
	
		return $(nodes)
			.filter( selector )
			.map( function (i) {
				// Need to translate back from the table node to the settings
				var idx = $.inArray( this, nodes );
				return a[ idx ];
			} )
			.toArray();
	};
	
	
	
	/**
	 * Context selector for the API's context (i.e. the tables the API instance
	 * refers to.
	 *
	 * @name    DataTable.Api#tables
	 * @param {string|integer} [selector] Selector to pick which tables the iterator
	 *   should operate on. If not given, all tables in the current context are
	 *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
	 *   select multiple tables or as an integer to select a single table.
	 * @returns {DataTable.Api} Returns a new API instance if a selector is given.
	 */
	_api_register( 'tables()', function ( selector ) {
		// A new instance is created if there was a selector specified
		return selector ?
			new _Api( __table_selector( selector, this.context ) ) :
			this;
	} );
	
	
	_api_register( 'table()', function ( selector ) {
		var tables = this.tables( selector );
		var ctx = tables.context;
	
		// Truncate to the first matched table
		return ctx.length ?
			new _Api( ctx[0] ) :
			tables;
	} );
	
	
	_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTable;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().body()', 'table().body()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTBody;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().header()', 'table().header()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTHead;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTFoot;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().containers()', 'table().container()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTableWrapper;
		}, 1 );
	} );
	
	
	
	/**
	 * Redraw the tables in the current context.
	 */
	_api_register( 'draw()', function ( paging ) {
		return this.iterator( 'table', function ( settings ) {
			if ( paging === 'page' ) {
				_fnDraw( settings );
			}
			else {
				if ( typeof paging === 'string' ) {
					paging = paging === 'full-hold' ?
						false :
						true;
				}
	
				_fnReDraw( settings, paging===false );
			}
		} );
	} );
	
	
	
	/**
	 * Get the current page index.
	 *
	 * @return {integer} Current page index (zero based)
	 *//**
	 * Set the current page.
	 *
	 * Note that if you attempt to show a page which does not exist, DataTables will
	 * not throw an error, but rather reset the paging.
	 *
	 * @param {integer|string} action The paging action to take. This can be one of:
	 *  * `integer` - The page index to jump to
	 *  * `string` - An action to take:
	 *    * `first` - Jump to first page.
	 *    * `next` - Jump to the next page
	 *    * `previous` - Jump to previous page
	 *    * `last` - Jump to the last page.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page()', function ( action ) {
		if ( action === undefined ) {
			return this.page.info().page; // not an expensive call
		}
	
		// else, have an action to take on all tables
		return this.iterator( 'table', function ( settings ) {
			_fnPageChange( settings, action );
		} );
	} );
	
	
	/**
	 * Paging information for the first table in the current context.
	 *
	 * If you require paging information for another table, use the `table()` method
	 * with a suitable selector.
	 *
	 * @return {object} Object with the following properties set:
	 *  * `page` - Current page index (zero based - i.e. the first page is `0`)
	 *  * `pages` - Total number of pages
	 *  * `start` - Display index for the first record shown on the current page
	 *  * `end` - Display index for the last record shown on the current page
	 *  * `length` - Display length (number of records). Note that generally `start
	 *    + length = end`, but this is not always true, for example if there are
	 *    only 2 records to show on the final page, with a length of 10.
	 *  * `recordsTotal` - Full data set length
	 *  * `recordsDisplay` - Data set length once the current filtering criterion
	 *    are applied.
	 */
	_api_register( 'page.info()', function ( action ) {
		if ( this.context.length === 0 ) {
			return undefined;
		}
	
		var
			settings   = this.context[0],
			start      = settings._iDisplayStart,
			len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
			visRecords = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return {
			"page":           all ? 0 : Math.floor( start / len ),
			"pages":          all ? 1 : Math.ceil( visRecords / len ),
			"start":          start,
			"end":            settings.fnDisplayEnd(),
			"length":         len,
			"recordsTotal":   settings.fnRecordsTotal(),
			"recordsDisplay": visRecords,
			"serverSide":     _fnDataSource( settings ) === 'ssp'
		};
	} );
	
	
	/**
	 * Get the current page length.
	 *
	 * @return {integer} Current page length. Note `-1` indicates that all records
	 *   are to be shown.
	 *//**
	 * Set the current page length.
	 *
	 * @param {integer} Page length to set. Use `-1` to show all records.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page.len()', function ( len ) {
		// Note that we can't call this function 'length()' because `length`
		// is a Javascript property of functions which defines how many arguments
		// the function expects.
		if ( len === undefined ) {
			return this.context.length !== 0 ?
				this.context[0]._iDisplayLength :
				undefined;
		}
	
		// else, set the page length
		return this.iterator( 'table', function ( settings ) {
			_fnLengthChange( settings, len );
		} );
	} );
	
	
	
	var __reload = function ( settings, holdPosition, callback ) {
		// Use the draw event to trigger a callback
		if ( callback ) {
			var api = new _Api( settings );
	
			api.one( 'draw', function () {
				callback( api.ajax.json() );
			} );
		}
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			_fnReDraw( settings, holdPosition );
		}
		else {
			_fnProcessingDisplay( settings, true );
	
			// Cancel an existing request
			var xhr = settings.jqXHR;
			if ( xhr && xhr.readyState !== 4 ) {
				xhr.abort();
			}
	
			// Trigger xhr
			_fnBuildAjax( settings, [], function( json ) {
				_fnClearTable( settings );
	
				var data = _fnAjaxDataSrc( settings, json );
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					_fnAddData( settings, data[i] );
				}
	
				_fnReDraw( settings, holdPosition );
				_fnProcessingDisplay( settings, false );
			} );
		}
	};
	
	
	/**
	 * Get the JSON response from the last Ajax request that DataTables made to the
	 * server. Note that this returns the JSON from the first table in the current
	 * context.
	 *
	 * @return {object} JSON received from the server.
	 */
	_api_register( 'ajax.json()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].json;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Get the data submitted in the last Ajax request
	 */
	_api_register( 'ajax.params()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].oAjaxData;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Reload tables from the Ajax data source. Note that this function will
	 * automatically re-draw the table when the remote data has been loaded.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.reload()', function ( callback, resetPaging ) {
		return this.iterator( 'table', function (settings) {
			__reload( settings, resetPaging===false, callback );
		} );
	} );
	
	
	/**
	 * Get the current Ajax URL. Note that this returns the URL from the first
	 * table in the current context.
	 *
	 * @return {string} Current Ajax source URL
	 *//**
	 * Set the Ajax URL. Note that this will set the URL for all tables in the
	 * current context.
	 *
	 * @param {string} url URL to set.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url()', function ( url ) {
		var ctx = this.context;
	
		if ( url === undefined ) {
			// get
			if ( ctx.length === 0 ) {
				return undefined;
			}
			ctx = ctx[0];
	
			return ctx.ajax ?
				$.isPlainObject( ctx.ajax ) ?
					ctx.ajax.url :
					ctx.ajax :
				ctx.sAjaxSource;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( $.isPlainObject( settings.ajax ) ) {
				settings.ajax.url = url;
			}
			else {
				settings.ajax = url;
			}
			// No need to consider sAjaxSource here since DataTables gives priority
			// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any
			// value of `sAjaxSource` redundant.
		} );
	} );
	
	
	/**
	 * Load data from the newly set Ajax URL. Note that this method is only
	 * available when `ajax.url()` is used to set a URL. Additionally, this method
	 * has the same effect as calling `ajax.reload()` but is provided for
	 * convenience when setting a new URL. Like `ajax.reload()` it will
	 * automatically redraw the table once the remote data has been loaded.
	 *
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {
		// Same as a reload, but makes sense to present it for easy access after a
		// url change
		return this.iterator( 'table', function ( ctx ) {
			__reload( ctx, resetPaging===false, callback );
		} );
	} );
	
	
	
	
	var _selector_run = function ( type, selector, selectFn, settings, opts )
	{
		var
			out = [], res,
			a, i, ien, j, jen,
			selectorType = typeof selector;
	
		// Can't just check for isArray here, as an API or jQuery instance might be
		// given with their array like look
		if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {
			selector = [ selector ];
		}
	
		for ( i=0, ien=selector.length ; i<ien ; i++ ) {
			// Only split on simple strings - complex expressions will be jQuery selectors
			a = selector[i] && selector[i].split && ! selector[i].match(/[\[\(:]/) ?
				selector[i].split(',') :
				[ selector[i] ];
	
			for ( j=0, jen=a.length ; j<jen ; j++ ) {
				res = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );
	
				if ( res && res.length ) {
					out = out.concat( res );
				}
			}
		}
	
		// selector extensions
		var ext = _ext.selector[ type ];
		if ( ext.length ) {
			for ( i=0, ien=ext.length ; i<ien ; i++ ) {
				out = ext[i]( settings, opts, out );
			}
		}
	
		return _unique( out );
	};
	
	
	var _selector_opts = function ( opts )
	{
		if ( ! opts ) {
			opts = {};
		}
	
		// Backwards compatibility for 1.9- which used the terminology filter rather
		// than search
		if ( opts.filter && opts.search === undefined ) {
			opts.search = opts.filter;
		}
	
		return $.extend( {
			search: 'none',
			order: 'current',
			page: 'all'
		}, opts );
	};
	
	
	var _selector_first = function ( inst )
	{
		// Reduce the API instance to the first item found
		for ( var i=0, ien=inst.length ; i<ien ; i++ ) {
			if ( inst[i].length > 0 ) {
				// Assign the first element to the first item in the instance
				// and truncate the instance and context
				inst[0] = inst[i];
				inst[0].length = 1;
				inst.length = 1;
				inst.context = [ inst.context[i] ];
	
				return inst;
			}
		}
	
		// Not found - return an empty instance
		inst.length = 0;
		return inst;
	};
	
	
	var _selector_row_indexes = function ( settings, opts )
	{
		var
			i, ien, tmp, a=[],
			displayFiltered = settings.aiDisplay,
			displayMaster = settings.aiDisplayMaster;
	
		var
			search = opts.search,  // none, applied, removed
			order  = opts.order,   // applied, current, index (original - compatibility with 1.9)
			page   = opts.page;    // all, current
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			// In server-side processing mode, most options are irrelevant since
			// rows not shown don't exist and the index order is the applied order
			// Removed is a special case - for consistency just return an empty
			// array
			return search === 'removed' ?
				[] :
				_range( 0, displayMaster.length );
		}
		else if ( page == 'current' ) {
			// Current page implies that order=current and fitler=applied, since it is
			// fairly senseless otherwise, regardless of what order and search actually
			// are
			for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {
				a.push( displayFiltered[i] );
			}
		}
		else if ( order == 'current' || order == 'applied' ) {
			if ( search == 'none') {
				a = displayMaster.slice();
			}
			else if ( search == 'applied' ) {
				a = displayFiltered.slice();
			}
			else if ( search == 'removed' ) {
				// O(n+m) solution by creating a hash map
				var displayFilteredMap = {};
	
				for ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {
					displayFilteredMap[displayFiltered[i]] = null;
				}
	
				a = $.map( displayMaster, function (el) {
					return ! displayFilteredMap.hasOwnProperty(el) ?
						el :
						null;
				} );
			}
		}
		else if ( order == 'index' || order == 'original' ) {
			for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				if ( search == 'none' ) {
					a.push( i );
				}
				else { // applied | removed
					tmp = $.inArray( i, displayFiltered );
	
					if ((tmp === -1 && search == 'removed') ||
						(tmp >= 0   && search == 'applied') )
					{
						a.push( i );
					}
				}
			}
		}
	
		return a;
	};
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Rows
	 *
	 * {}          - no selector - use all available rows
	 * {integer}   - row aoData index
	 * {node}      - TR node
	 * {string}    - jQuery selector to apply to the TR elements
	 * {array}     - jQuery array of nodes, or simply an array of TR nodes
	 *
	 */
	var __row_selector = function ( settings, selector, opts )
	{
		var rows;
		var run = function ( sel ) {
			var selInt = _intVal( sel );
			var i, ien;
			var aoData = settings.aoData;
	
			// Short cut - selector is a number and no options provided (default is
			// all records, so no need to check if the index is in there, since it
			// must be - dev error if the index doesn't exist).
			if ( selInt !== null && ! opts ) {
				return [ selInt ];
			}
	
			if ( ! rows ) {
				rows = _selector_row_indexes( settings, opts );
			}
	
			if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {
				// Selector - integer
				return [ selInt ];
			}
			else if ( sel === null || sel === undefined || sel === '' ) {
				// Selector - none
				return rows;
			}
	
			// Selector - function
			if ( typeof sel === 'function' ) {
				return $.map( rows, function (idx) {
					var row = aoData[ idx ];
					return sel( idx, row._aData, row.nTr ) ? idx : null;
				} );
			}
	
			// Selector - node
			if ( sel.nodeName ) {
				var rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup
				var cellIdx = sel._DT_CellIndex;
	
				if ( rowIdx !== undefined ) {
					// Make sure that the row is actually still present in the table
					return aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?
						[ rowIdx ] :
						[];
				}
				else if ( cellIdx ) {
					return aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel ?
						[ cellIdx.row ] :
						[];
				}
				else {
					var host = $(sel).closest('*[data-dt-row]');
					return host.length ?
						[ host.data('dt-row') ] :
						[];
				}
			}
	
			// ID selector. Want to always be able to select rows by id, regardless
			// of if the tr element has been created or not, so can't rely upon
			// jQuery here - hence a custom implementation. This does not match
			// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
			// but to select it using a CSS selector engine (like Sizzle or
			// querySelect) it would need to need to be escaped for some characters.
			// DataTables simplifies this for row selectors since you can select
			// only a row. A # indicates an id any anything that follows is the id -
			// unescaped.
			if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {
				// get row index from id
				var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];
				if ( rowObj !== undefined ) {
					return [ rowObj.idx ];
				}
	
				// need to fall through to jQuery in case there is DOM id that
				// matches
			}
			
			// Get nodes in the order from the `rows` array with null values removed
			var nodes = _removeEmpty(
				_pluck_order( settings.aoData, rows, 'nTr' )
			);
	
			// Selector - jQuery selector string, array of nodes or jQuery object/
			// As jQuery's .filter() allows jQuery objects to be passed in filter,
			// it also allows arrays, so this will cope with all three options
			return $(nodes)
				.filter( sel )
				.map( function () {
					return this._DT_RowIndex;
				} )
				.toArray();
		};
	
		return _selector_run( 'row', selector, run, settings, opts );
	};
	
	
	_api_register( 'rows()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __row_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in __row_selector?
		inst.selector.rows = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_register( 'rows().nodes()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return settings.aoData[ row ].nTr || undefined;
		}, 1 );
	} );
	
	_api_register( 'rows().data()', function () {
		return this.iterator( true, 'rows', function ( settings, rows ) {
			return _pluck_order( settings.aoData, rows, '_aData' );
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {
		return this.iterator( 'row', function ( settings, row ) {
			var r = settings.aoData[ row ];
			return type === 'search' ? r._aFilterData : r._aSortData;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {
		return this.iterator( 'row', function ( settings, row ) {
			_fnInvalidate( settings, row, src );
		} );
	} );
	
	_api_registerPlural( 'rows().indexes()', 'row().index()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return row;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {
		var a = [];
		var context = this.context;
	
		// `iterator` will drop undefined values, but in this case we want them
		for ( var i=0, ien=context.length ; i<ien ; i++ ) {
			for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {
				var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );
				a.push( (hash === true ? '#' : '' )+ id );
			}
		}
	
		return new _Api( context, a );
	} );
	
	_api_registerPlural( 'rows().remove()', 'row().remove()', function () {
		var that = this;
	
		this.iterator( 'row', function ( settings, row, thatIdx ) {
			var data = settings.aoData;
			var rowData = data[ row ];
			var i, ien, j, jen;
			var loopRow, loopCells;
	
			data.splice( row, 1 );
	
			// Update the cached indexes
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				loopRow = data[i];
				loopCells = loopRow.anCells;
	
				// Rows
				if ( loopRow.nTr !== null ) {
					loopRow.nTr._DT_RowIndex = i;
				}
	
				// Cells
				if ( loopCells !== null ) {
					for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {
						loopCells[j]._DT_CellIndex.row = i;
					}
				}
			}
	
			// Delete from the display arrays
			_fnDeleteIndex( settings.aiDisplayMaster, row );
			_fnDeleteIndex( settings.aiDisplay, row );
			_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes
	
			// For server-side processing tables - subtract the deleted row from the count
			if ( settings._iRecordsDisplay > 0 ) {
				settings._iRecordsDisplay--;
			}
	
			// Check for an 'overflow' they case for displaying the table
			_fnLengthOverflow( settings );
	
			// Remove the row's ID reference if there is one
			var id = settings.rowIdFn( rowData._aData );
			if ( id !== undefined ) {
				delete settings.aIds[ id ];
			}
		} );
	
		this.iterator( 'table', function ( settings ) {
			for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				settings.aoData[i].idx = i;
			}
		} );
	
		return this;
	} );
	
	
	_api_register( 'rows.add()', function ( rows ) {
		var newRows = this.iterator( 'table', function ( settings ) {
				var row, i, ien;
				var out = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
						out.push( _fnAddTr( settings, row )[0] );
					}
					else {
						out.push( _fnAddData( settings, row ) );
					}
				}
	
				return out;
			}, 1 );
	
		// Return an Api.rows() extended instance, so rows().nodes() etc can be used
		var modRows = this.rows( -1 );
		modRows.pop();
		$.merge( modRows, newRows );
	
		return modRows;
	} );
	
	
	
	
	
	/**
	 *
	 */
	_api_register( 'row()', function ( selector, opts ) {
		return _selector_first( this.rows( selector, opts ) );
	} );
	
	
	_api_register( 'row().data()', function ( data ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// Get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._aData :
				undefined;
		}
	
		// Set
		var row = ctx[0].aoData[ this[0] ];
		row._aData = data;
	
		// If the DOM has an id, and the data source is an array
		if ( $.isArray( data ) && row.nTr.id ) {
			_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );
		}
	
		// Automatically invalidate
		_fnInvalidate( ctx[0], this[0], 'data' );
	
		return this;
	} );
	
	
	_api_register( 'row().node()', function () {
		var ctx = this.context;
	
		return ctx.length && this.length ?
			ctx[0].aoData[ this[0] ].nTr || null :
			null;
	} );
	
	
	_api_register( 'row.add()', function ( row ) {
		// Allow a jQuery object to be passed in - only a single row is added from
		// it though - the first element in the set
		if ( row instanceof $ && row.length ) {
			row = row[0];
		}
	
		var rows = this.iterator( 'table', function ( settings ) {
			if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
				return _fnAddTr( settings, row )[0];
			}
			return _fnAddData( settings, row );
		} );
	
		// Return an Api.rows() extended instance, with the newly added row selected
		return this.row( rows[0] );
	} );
	
	
	
	var __details_add = function ( ctx, row, data, klass )
	{
		// Convert to array of TR elements
		var rows = [];
		var addRow = function ( r, k ) {
			// Recursion to allow for arrays of jQuery objects
			if ( $.isArray( r ) || r instanceof $ ) {
				for ( var i=0, ien=r.length ; i<ien ; i++ ) {
					addRow( r[i], k );
				}
				return;
			}
	
			// If we get a TR element, then just add it directly - up to the dev
			// to add the correct number of columns etc
			if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {
				rows.push( r );
			}
			else {
				// Otherwise create a row with a wrapper
				var created = $('<tr><td/></tr>').addClass( k );
				$('td', created)
					.addClass( k )
					.html( r )
					[0].colSpan = _fnVisbleColumns( ctx );
	
				rows.push( created[0] );
			}
		};
	
		addRow( data, klass );
	
		if ( row._details ) {
			row._details.detach();
		}
	
		row._details = $(rows);
	
		// If the children were already shown, that state should be retained
		if ( row._detailsShow ) {
			row._details.insertAfter( row.nTr );
		}
	};
	
	
	var __details_remove = function ( api, idx )
	{
		var ctx = api.context;
	
		if ( ctx.length ) {
			var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];
	
			if ( row && row._details ) {
				row._details.remove();
	
				row._detailsShow = undefined;
				row._details = undefined;
			}
		}
	};
	
	
	var __details_display = function ( api, show ) {
		var ctx = api.context;
	
		if ( ctx.length && api.length ) {
			var row = ctx[0].aoData[ api[0] ];
	
			if ( row._details ) {
				row._detailsShow = show;
	
				if ( show ) {
					row._details.insertAfter( row.nTr );
				}
				else {
					row._details.detach();
				}
	
				__details_events( ctx[0] );
			}
		}
	};
	
	
	var __details_events = function ( settings )
	{
		var api = new _Api( settings );
		var namespace = '.dt.DT_details';
		var drawEvent = 'draw'+namespace;
		var colvisEvent = 'column-visibility'+namespace;
		var destroyEvent = 'destroy'+namespace;
		var data = settings.aoData;
	
		api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );
	
		if ( _pluck( data, '_details' ).length > 0 ) {
			// On each draw, insert the required elements into the document
			api.on( drawEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				api.rows( {page:'current'} ).eq(0).each( function (idx) {
					// Internal data grab
					var row = data[ idx ];
	
					if ( row._detailsShow ) {
						row._details.insertAfter( row.nTr );
					}
				} );
			} );
	
			// Column visibility change - update the colspan
			api.on( colvisEvent, function ( e, ctx, idx, vis ) {
				if ( settings !== ctx ) {
					return;
				}
	
				// Update the colspan for the details rows (note, only if it already has
				// a colspan)
				var row, visible = _fnVisbleColumns( ctx );
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					row = data[i];
	
					if ( row._details ) {
						row._details.children('td[colspan]').attr('colspan', visible );
					}
				}
			} );
	
			// Table destroyed - nuke any child rows
			api.on( destroyEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					if ( data[i]._details ) {
						__details_remove( api, i );
					}
				}
			} );
		}
	};
	
	// Strings for the method names to help minification
	var _emp = '';
	var _child_obj = _emp+'row().child';
	var _child_mth = _child_obj+'()';
	
	// data can be:
	//  tr
	//  string
	//  jQuery or array of any of the above
	_api_register( _child_mth, function ( data, klass ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._details :
				undefined;
		}
		else if ( data === true ) {
			// show
			this.child.show();
		}
		else if ( data === false ) {
			// remove
			__details_remove( this );
		}
		else if ( ctx.length && this.length ) {
			// set
			__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );
		}
	
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.show()',
		_child_mth+'.show()' // only when `child()` was called with parameters (without
	], function ( show ) {   // it returns an object and this method is not executed)
		__details_display( this, true );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.hide()',
		_child_mth+'.hide()' // only when `child()` was called with parameters (without
	], function () {         // it returns an object and this method is not executed)
		__details_display( this, false );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.remove()',
		_child_mth+'.remove()' // only when `child()` was called with parameters (without
	], function () {           // it returns an object and this method is not executed)
		__details_remove( this );
		return this;
	} );
	
	
	_api_register( _child_obj+'.isShown()', function () {
		var ctx = this.context;
	
		if ( ctx.length && this.length ) {
			// _detailsShown as false or undefined will fall through to return false
			return ctx[0].aoData[ this[0] ]._detailsShow || false;
		}
		return false;
	} );
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Columns
	 *
	 * {integer}           - column index (>=0 count from left, <0 count from right)
	 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
	 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
	 * "{string}:name"     - column name
	 * "{string}"          - jQuery selector on column header nodes
	 *
	 */
	
	// can be an array of these items, comma separated list, or an array of comma
	// separated lists
	
	var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;
	
	
	// r1 and r2 are redundant - but it means that the parameters match for the
	// iterator callback in columns().data()
	var __columnData = function ( settings, column, r1, r2, rows ) {
		var a = [];
		for ( var row=0, ien=rows.length ; row<ien ; row++ ) {
			a.push( _fnGetCellData( settings, rows[row], column ) );
		}
		return a;
	};
	
	
	var __column_selector = function ( settings, selector, opts )
	{
		var
			columns = settings.aoColumns,
			names = _pluck( columns, 'sName' ),
			nodes = _pluck( columns, 'nTh' );
	
		var run = function ( s ) {
			var selInt = _intVal( s );
	
			// Selector - all
			if ( s === '' ) {
				return _range( columns.length );
			}
	
			// Selector - index
			if ( selInt !== null ) {
				return [ selInt >= 0 ?
					selInt : // Count from left
					columns.length + selInt // Count from right (+ because its a negative value)
				];
			}
	
			// Selector = function
			if ( typeof s === 'function' ) {
				var rows = _selector_row_indexes( settings, opts );
	
				return $.map( columns, function (col, idx) {
					return s(
							idx,
							__columnData( settings, idx, 0, 0, rows ),
							nodes[ idx ]
						) ? idx : null;
				} );
			}
	
			// jQuery or string selector
			var match = typeof s === 'string' ?
				s.match( __re_column_selector ) :
				'';
	
			if ( match ) {
				switch( match[2] ) {
					case 'visIdx':
					case 'visible':
						var idx = parseInt( match[1], 10 );
						// Visible index given, convert to column index
						if ( idx < 0 ) {
							// Counting from the right
							var visColumns = $.map( columns, function (col,i) {
								return col.bVisible ? i : null;
							} );
							return [ visColumns[ visColumns.length + idx ] ];
						}
						// Counting from the left
						return [ _fnVisibleToColumnIndex( settings, idx ) ];
	
					case 'name':
						// match by name. `names` is column index complete and in order
						return $.map( names, function (name, i) {
							return name === match[1] ? i : null;
						} );
	
					default:
						return [];
				}
			}
	
			// Cell in the table body
			if ( s.nodeName && s._DT_CellIndex ) {
				return [ s._DT_CellIndex.column ];
			}
	
			// jQuery selector on the TH elements for the columns
			var jqResult = $( nodes )
				.filter( s )
				.map( function () {
					return $.inArray( this, nodes ); // `nodes` is column index complete and in order
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise a node which might have a `dt-column` data attribute, or be
			// a child or such an element
			var host = $(s).closest('*[data-dt-column]');
			return host.length ?
				[ host.data('dt-column') ] :
				[];
		};
	
		return _selector_run( 'column', selector, run, settings, opts );
	};
	
	
	var __setColumnVis = function ( settings, column, vis ) {
		var
			cols = settings.aoColumns,
			col  = cols[ column ],
			data = settings.aoData,
			row, cells, i, ien, tr;
	
		// Get
		if ( vis === undefined ) {
			return col.bVisible;
		}
	
		// Set
		// No change
		if ( col.bVisible === vis ) {
			return;
		}
	
		if ( vis ) {
			// Insert column
			// Need to decide if we should use appendChild or insertBefore
			var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );
	
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				tr = data[i].nTr;
				cells = data[i].anCells;
	
				if ( tr ) {
					// insertBefore can act like appendChild if 2nd arg is null
					tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );
				}
			}
		}
		else {
			// Remove column
			$( _pluck( settings.aoData, 'anCells', column ) ).detach();
		}
	
		// Common actions
		col.bVisible = vis;
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		// Update colspan for no records display. Child rows and extensions will use their own
		// listeners to do this - only need to update the empty table item here
		if ( ! settings.aiDisplay.length ) {
			$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));
		}
	
		_fnSaveState( settings );
	};
	
	
	_api_register( 'columns()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __column_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in _row_selector?
		inst.selector.cols = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTh;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTf;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().data()', 'column().data()', function () {
		return this.iterator( 'column-rows', __columnData, 1 );
	} );
	
	_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].mData;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows,
				type === 'search' ? '_aFilterData' : '_aSortData', column
			);
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows, 'anCells', column ) ;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {
		var ret = this.iterator( 'column', function ( settings, column ) {
			if ( vis === undefined ) {
				return settings.aoColumns[ column ].bVisible;
			} // else
			__setColumnVis( settings, column, vis );
		} );
	
		// Group the column visibility changes
		if ( vis !== undefined ) {
			// Second loop once the first is done for events
			this.iterator( 'column', function ( settings, column ) {
				_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );
			} );
	
			if ( calc === undefined || calc ) {
				this.columns.adjust();
			}
		}
	
		return ret;
	} );
	
	_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {
		return this.iterator( 'column', function ( settings, column ) {
			return type === 'visible' ?
				_fnColumnIndexToVisible( settings, column ) :
				column;
		}, 1 );
	} );
	
	_api_register( 'columns.adjust()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnAdjustColumnSizing( settings );
		}, 1 );
	} );
	
	_api_register( 'column.index()', function ( type, idx ) {
		if ( this.context.length !== 0 ) {
			var ctx = this.context[0];
	
			if ( type === 'fromVisible' || type === 'toData' ) {
				return _fnVisibleToColumnIndex( ctx, idx );
			}
			else if ( type === 'fromData' || type === 'toVisible' ) {
				return _fnColumnIndexToVisible( ctx, idx );
			}
		}
	} );
	
	_api_register( 'column()', function ( selector, opts ) {
		return _selector_first( this.columns( selector, opts ) );
	} );
	
	
	
	var __cell_selector = function ( settings, selector, opts )
	{
		var data = settings.aoData;
		var rows = _selector_row_indexes( settings, opts );
		var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );
		var allCells = $( [].concat.apply([], cells) );
		var row;
		var columns = settings.aoColumns.length;
		var a, i, ien, j, o, host;
	
		var run = function ( s ) {
			var fnSelector = typeof s === 'function';
	
			if ( s === null || s === undefined || fnSelector ) {
				// All cells and function selectors
				a = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					for ( j=0 ; j<columns ; j++ ) {
						o = {
							row: row,
							column: j
						};
	
						if ( fnSelector ) {
							// Selector - function
							host = data[ row ];
	
							if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {
								a.push( o );
							}
						}
						else {
							// Selector - all
							a.push( o );
						}
					}
				}
	
				return a;
			}
			
			// Selector - index
			if ( $.isPlainObject( s ) ) {
				// Valid cell index and its in the array of selectable rows
				return s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?
					[s] :
					[];
			}
	
			// Selector - jQuery filtered cells
			var jqResult = allCells
				.filter( s )
				.map( function (i, el) {
					return { // use a new object, in case someone changes the values
						row:    el._DT_CellIndex.row,
						column: el._DT_CellIndex.column
	 				};
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise the selector is a node, and there is one last option - the
			// element might be a child of an element which has dt-row and dt-column
			// data attributes
			host = $(s).closest('*[data-dt-row]');
			return host.length ?
				[ {
					row: host.data('dt-row'),
					column: host.data('dt-column')
				} ] :
				[];
		};
	
		return _selector_run( 'cell', selector, run, settings, opts );
	};
	
	
	
	
	_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {
		// Argument shifting
		if ( $.isPlainObject( rowSelector ) ) {
			// Indexes
			if ( rowSelector.row === undefined ) {
				// Selector options in first parameter
				opts = rowSelector;
				rowSelector = null;
			}
			else {
				// Cell index objects in first parameter
				opts = columnSelector;
				columnSelector = null;
			}
		}
		if ( $.isPlainObject( columnSelector ) ) {
			opts = columnSelector;
			columnSelector = null;
		}
	
		// Cell selector
		if ( columnSelector === null || columnSelector === undefined ) {
			return this.iterator( 'table', function ( settings ) {
				return __cell_selector( settings, rowSelector, _selector_opts( opts ) );
			} );
		}
	
		// Row + column selector
		var columns = this.columns( columnSelector );
		var rows = this.rows( rowSelector );
		var a, i, ien, j, jen;
	
		this.iterator( 'table', function ( settings, idx ) {
			a = [];
	
			for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {
				for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {
					a.push( {
						row:    rows[idx][i],
						column: columns[idx][j]
					} );
				}
			}
		}, 1 );
	
	    // Now pass through the cell selector for options
	    var cells = this.cells( a, opts );
	
		$.extend( cells.selector, {
			cols: columnSelector,
			rows: rowSelector,
			opts: opts
		} );
	
		return cells;
	} );
	
	
	_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			var data = settings.aoData[ row ];
	
			return data && data.anCells ?
				data.anCells[ column ] :
				undefined;
		}, 1 );
	} );
	
	
	_api_register( 'cells().data()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {
		type = type === 'search' ? '_aFilterData' : '_aSortData';
	
		return this.iterator( 'cell', function ( settings, row, column ) {
			return settings.aoData[ row ][ type ][ column ];
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column, type );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return {
				row: row,
				column: column,
				columnVisible: _fnColumnIndexToVisible( settings, column )
			};
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			_fnInvalidate( settings, row, src, column );
		} );
	} );
	
	
	
	_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {
		return _selector_first( this.cells( rowSelector, columnSelector, opts ) );
	} );
	
	
	_api_register( 'cell().data()', function ( data ) {
		var ctx = this.context;
		var cell = this[0];
	
		if ( data === undefined ) {
			// Get
			return ctx.length && cell.length ?
				_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :
				undefined;
		}
	
		// Set
		_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );
		_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );
	
		return this;
	} );
	
	
	
	/**
	 * Get current ordering (sorting) that has been applied to the table.
	 *
	 * @returns {array} 2D array containing the sorting information for the first
	 *   table in the current context. Each element in the parent array represents
	 *   a column being sorted upon (i.e. multi-sorting with two columns would have
	 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
	 *   the column index that the sorting condition applies to, the second is the
	 *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
	 *   index of the sorting order from the `column.sorting` initialisation array.
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {integer} order Column index to sort upon.
	 * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 1D array of sorting information to be applied.
	 * @param {array} [...] Optional additional sorting conditions
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 2D array of sorting information to be applied.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order()', function ( order, dir ) {
		var ctx = this.context;
	
		if ( order === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].aaSorting :
				undefined;
		}
	
		// set
		if ( typeof order === 'number' ) {
			// Simple column / direction passed in
			order = [ [ order, dir ] ];
		}
		else if ( order.length && ! $.isArray( order[0] ) ) {
			// Arguments passed in (list of 1D arrays)
			order = Array.prototype.slice.call( arguments );
		}
		// otherwise a 2D array was passed in
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSorting = order.slice();
		} );
	} );
	
	
	/**
	 * Attach a sort listener to an element for a given column
	 *
	 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
	 *   listener to. This can take the form of a single DOM node, a jQuery
	 *   collection of nodes or a jQuery selector which will identify the node(s).
	 * @param {integer} column the column that a click on this node will sort on
	 * @param {function} [callback] callback function when sort is run
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order.listener()', function ( node, column, callback ) {
		return this.iterator( 'table', function ( settings ) {
			_fnSortAttachListener( settings, node, column, callback );
		} );
	} );
	
	
	_api_register( 'order.fixed()', function ( set ) {
		if ( ! set ) {
			var ctx = this.context;
			var fixed = ctx.length ?
				ctx[0].aaSortingFixed :
				undefined;
	
			return $.isArray( fixed ) ?
				{ pre: fixed } :
				fixed;
		}
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSortingFixed = $.extend( true, {}, set );
		} );
	} );
	
	
	// Order by the selected column(s)
	_api_register( [
		'columns().order()',
		'column().order()'
	], function ( dir ) {
		var that = this;
	
		return this.iterator( 'table', function ( settings, i ) {
			var sort = [];
	
			$.each( that[i], function (j, col) {
				sort.push( [ col, dir ] );
			} );
	
			settings.aaSorting = sort;
		} );
	} );
	
	
	
	_api_register( 'search()', function ( input, regex, smart, caseInsen ) {
		var ctx = this.context;
	
		if ( input === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].oPreviousSearch.sSearch :
				undefined;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( ! settings.oFeatures.bFilter ) {
				return;
			}
	
			_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {
				"sSearch": input+"",
				"bRegex":  regex === null ? false : regex,
				"bSmart":  smart === null ? true  : smart,
				"bCaseInsensitive": caseInsen === null ? true : caseInsen
			} ), 1 );
		} );
	} );
	
	
	_api_registerPlural(
		'columns().search()',
		'column().search()',
		function ( input, regex, smart, caseInsen ) {
			return this.iterator( 'column', function ( settings, column ) {
				var preSearch = settings.aoPreSearchCols;
	
				if ( input === undefined ) {
					// get
					return preSearch[ column ].sSearch;
				}
	
				// set
				if ( ! settings.oFeatures.bFilter ) {
					return;
				}
	
				$.extend( preSearch[ column ], {
					"sSearch": input+"",
					"bRegex":  regex === null ? false : regex,
					"bSmart":  smart === null ? true  : smart,
					"bCaseInsensitive": caseInsen === null ? true : caseInsen
				} );
	
				_fnFilterComplete( settings, settings.oPreviousSearch, 1 );
			} );
		}
	);
	
	/*
	 * State API methods
	 */
	
	_api_register( 'state()', function () {
		return this.context.length ?
			this.context[0].oSavedState :
			null;
	} );
	
	
	_api_register( 'state.clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			// Save an empty object
			settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );
		} );
	} );
	
	
	_api_register( 'state.loaded()', function () {
		return this.context.length ?
			this.context[0].oLoadedState :
			null;
	} );
	
	
	_api_register( 'state.save()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnSaveState( settings );
		} );
	} );
	
	
	
	/**
	 * Provide a common method for plug-ins to check the version of DataTables being
	 * used, in order to ensure compatibility.
	 *
	 *  @param {string} version Version string to check for, in the format "X.Y.Z".
	 *    Note that the formats "X" and "X.Y" are also acceptable.
	 *  @returns {boolean} true if this version of DataTables is greater or equal to
	 *    the required version, or false if this version of DataTales is not
	 *    suitable
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
	 */
	DataTable.versionCheck = DataTable.fnVersionCheck = function( version )
	{
		var aThis = DataTable.version.split('.');
		var aThat = version.split('.');
		var iThis, iThat;
	
		for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {
			iThis = parseInt( aThis[i], 10 ) || 0;
			iThat = parseInt( aThat[i], 10 ) || 0;
	
			// Parts are the same, keep comparing
			if (iThis === iThat) {
				continue;
			}
	
			// Parts are different, return immediately
			return iThis > iThat;
		}
	
		return true;
	};
	
	
	/**
	 * Check if a `<table>` node is a DataTable table already or not.
	 *
	 *  @param {node|jquery|string} table Table node, jQuery object or jQuery
	 *      selector for the table to test. Note that if more than more than one
	 *      table is passed on, only the first will be checked
	 *  @returns {boolean} true the table given is a DataTable, or false otherwise
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
	 *      $('#example').dataTable();
	 *    }
	 */
	DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )
	{
		var t = $(table).get(0);
		var is = false;
	
		if ( table instanceof DataTable.Api ) {
			return true;
		}
	
		$.each( DataTable.settings, function (i, o) {
			var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;
			var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;
	
			if ( o.nTable === t || head === t || foot === t ) {
				is = true;
			}
		} );
	
		return is;
	};
	
	
	/**
	 * Get all DataTable tables that have been initialised - optionally you can
	 * select to get only currently visible tables.
	 *
	 *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
	 *    or visible tables only.
	 *  @returns {array} Array of `table` nodes (not DataTable instances) which are
	 *    DataTables
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    $.each( $.fn.dataTable.tables(true), function () {
	 *      $(table).DataTable().columns.adjust();
	 *    } );
	 */
	DataTable.tables = DataTable.fnTables = function ( visible )
	{
		var api = false;
	
		if ( $.isPlainObject( visible ) ) {
			api = visible.api;
			visible = visible.visible;
		}
	
		var a = $.map( DataTable.settings, function (o) {
			if ( !visible || (visible && $(o.nTable).is(':visible')) ) {
				return o.nTable;
			}
		} );
	
		return api ?
			new _Api( a ) :
			a;
	};
	
	
	/**
	 * Convert from camel case parameters to Hungarian notation. This is made public
	 * for the extensions to provide the same ability as DataTables core to accept
	 * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
	 * parameters.
	 *
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 */
	DataTable.camelToHungarian = _fnCamelToHungarian;
	
	
	
	/**
	 *
	 */
	_api_register( '$()', function ( selector, opts ) {
		var
			rows   = this.rows( opts ).nodes(), // Get all rows
			jqRows = $(rows);
	
		return $( [].concat(
			jqRows.filter( selector ).toArray(),
			jqRows.find( selector ).toArray()
		) );
	} );
	
	
	// jQuery functions to operate on the tables
	$.each( [ 'on', 'one', 'off' ], function (i, key) {
		_api_register( key+'()', function ( /* event, handler */ ) {
			var args = Array.prototype.slice.call(arguments);
	
			// Add the `dt` namespace automatically if it isn't already present
			args[0] = $.map( args[0].split( /\s/ ), function ( e ) {
				return ! e.match(/\.dt\b/) ?
					e+'.dt' :
					e;
				} ).join( ' ' );
	
			var inst = $( this.tables().nodes() );
			inst[key].apply( inst, args );
			return this;
		} );
	} );
	
	
	_api_register( 'clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnClearTable( settings );
		} );
	} );
	
	
	_api_register( 'settings()', function () {
		return new _Api( this.context, this.context );
	} );
	
	
	_api_register( 'init()', function () {
		var ctx = this.context;
		return ctx.length ? ctx[0].oInit : null;
	} );
	
	
	_api_register( 'data()', function () {
		return this.iterator( 'table', function ( settings ) {
			return _pluck( settings.aoData, '_aData' );
		} ).flatten();
	} );
	
	
	_api_register( 'destroy()', function ( remove ) {
		remove = remove || false;
	
		return this.iterator( 'table', function ( settings ) {
			var orig      = settings.nTableWrapper.parentNode;
			var classes   = settings.oClasses;
			var table     = settings.nTable;
			var tbody     = settings.nTBody;
			var thead     = settings.nTHead;
			var tfoot     = settings.nTFoot;
			var jqTable   = $(table);
			var jqTbody   = $(tbody);
			var jqWrapper = $(settings.nTableWrapper);
			var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );
			var i, ien;
	
			// Flag to note that the table is currently being destroyed - no action
			// should be taken
			settings.bDestroying = true;
	
			// Fire off the destroy callbacks for plug-ins etc
			_fnCallbackFire( settings, "aoDestroyCallback", "destroy", [settings] );
	
			// If not being removed from the document, make all columns visible
			if ( ! remove ) {
				new _Api( settings ).columns().visible( true );
			}
	
			// Blitz all `DT` namespaced events (these are internal events, the
			// lowercase, `dt` events are user subscribed and they are responsible
			// for removing them
			jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');
			$(window).off('.DT-'+settings.sInstance);
	
			// When scrolling we had to break the table up - restore it
			if ( table != thead.parentNode ) {
				jqTable.children('thead').detach();
				jqTable.append( thead );
			}
	
			if ( tfoot && table != tfoot.parentNode ) {
				jqTable.children('tfoot').detach();
				jqTable.append( tfoot );
			}
	
			settings.aaSorting = [];
			settings.aaSortingFixed = [];
			_fnSortingClasses( settings );
	
			$( rows ).removeClass( settings.asStripeClasses.join(' ') );
	
			$('th, td', thead).removeClass( classes.sSortable+' '+
				classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone
			);
	
			// Add the TR elements back into the table in their original order
			jqTbody.children().detach();
			jqTbody.append( rows );
	
			// Remove the DataTables generated nodes, events and classes
			var removedMethod = remove ? 'remove' : 'detach';
			jqTable[ removedMethod ]();
			jqWrapper[ removedMethod ]();
	
			// If we need to reattach the table to the document
			if ( ! remove && orig ) {
				// insertBefore acts like appendChild if !arg[1]
				orig.insertBefore( table, settings.nTableReinsertBefore );
	
				// Restore the width of the original table - was read from the style property,
				// so we can restore directly to that
				jqTable
					.css( 'width', settings.sDestroyWidth )
					.removeClass( classes.sTable );
	
				// If the were originally stripe classes - then we add them back here.
				// Note this is not fool proof (for example if not all rows had stripe
				// classes - but it's a good effort without getting carried away
				ien = settings.asDestroyStripes.length;
	
				if ( ien ) {
					jqTbody.children().each( function (i) {
						$(this).addClass( settings.asDestroyStripes[i % ien] );
					} );
				}
			}
	
			/* Remove the settings object from the settings array */
			var idx = $.inArray( settings, DataTable.settings );
			if ( idx !== -1 ) {
				DataTable.settings.splice( idx, 1 );
			}
		} );
	} );
	
	
	// Add the `every()` method for rows, columns and cells in a compact form
	$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {
		_api_register( type+'s().every()', function ( fn ) {
			var opts = this.selector.opts;
			var api = this;
	
			return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {
				// Rows and columns:
				//  arg1 - index
				//  arg2 - table counter
				//  arg3 - loop counter
				//  arg4 - undefined
				// Cells:
				//  arg1 - row index
				//  arg2 - column index
				//  arg3 - table counter
				//  arg4 - loop counter
				fn.call(
					api[ type ](
						arg1,
						type==='cell' ? arg2 : opts,
						type==='cell' ? opts : undefined
					),
					arg1, arg2, arg3, arg4
				);
			} );
		} );
	} );
	
	
	// i18n method for extensions to be able to use the language object from the
	// DataTable
	_api_register( 'i18n()', function ( token, def, plural ) {
		var ctx = this.context[0];
		var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );
	
		if ( resolved === undefined ) {
			resolved = def;
		}
	
		if ( plural !== undefined && $.isPlainObject( resolved ) ) {
			resolved = resolved[ plural ] !== undefined ?
				resolved[ plural ] :
				resolved._;
		}
	
		return resolved.replace( '%d', plural ); // nb: plural might be undefined,
	} );
	/**
	 * Version string for plug-ins to check compatibility. Allowed format is
	 * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
	 * only for non-release builds. See http://semver.org/ for more information.
	 *  @member
	 *  @type string
	 *  @default Version number
	 */
	DataTable.version = "1.10.19";

	/**
	 * Private data store, containing all of the settings objects that are
	 * created for the tables on a given page.
	 *
	 * Note that the `DataTable.settings` object is aliased to
	 * `jQuery.fn.dataTableExt` through which it may be accessed and
	 * manipulated, or `jQuery.fn.dataTable.settings`.
	 *  @member
	 *  @type array
	 *  @default []
	 *  @private
	 */
	DataTable.settings = [];

	/**
	 * Object models container, for the various models that DataTables has
	 * available to it. These models define the objects that are used to hold
	 * the active state and configuration of the table.
	 *  @namespace
	 */
	DataTable.models = {};
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * search information for the global filter and individual column filters.
	 *  @namespace
	 */
	DataTable.models.oSearch = {
		/**
		 * Flag to indicate if the filtering should be case insensitive or not
		 *  @type boolean
		 *  @default true
		 */
		"bCaseInsensitive": true,
	
		/**
		 * Applied search term
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sSearch": "",
	
		/**
		 * Flag to indicate if the search term should be interpreted as a
		 * regular expression (true) or not (false) and therefore and special
		 * regex characters escaped.
		 *  @type boolean
		 *  @default false
		 */
		"bRegex": false,
	
		/**
		 * Flag to indicate if DataTables is to use its smart filtering or not.
		 *  @type boolean
		 *  @default true
		 */
		"bSmart": true
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * each individual row. This is the object format used for the settings
	 * aoData array.
	 *  @namespace
	 */
	DataTable.models.oRow = {
		/**
		 * TR element for the row
		 *  @type node
		 *  @default null
		 */
		"nTr": null,
	
		/**
		 * Array of TD elements for each row. This is null until the row has been
		 * created.
		 *  @type array nodes
		 *  @default []
		 */
		"anCells": null,
	
		/**
		 * Data object from the original data source for the row. This is either
		 * an array if using the traditional form of DataTables, or an object if
		 * using mData options. The exact type will depend on the passed in
		 * data from the data source, or will be an array if using DOM a data
		 * source.
		 *  @type array|object
		 *  @default []
		 */
		"_aData": [],
	
		/**
		 * Sorting data cache - this array is ostensibly the same length as the
		 * number of columns (although each index is generated only as it is
		 * needed), and holds the data that is used for sorting each column in the
		 * row. We do this cache generation at the start of the sort in order that
		 * the formatting of the sort data need be done only once for each cell
		 * per sort. This array should not be read from or written to by anything
		 * other than the master sorting methods.
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aSortData": null,
	
		/**
		 * Per cell filtering data cache. As per the sort data cache, used to
		 * increase the performance of the filtering in DataTables
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aFilterData": null,
	
		/**
		 * Filtering data cache. This is the same as the cell filtering cache, but
		 * in this case a string rather than an array. This is easily computed with
		 * a join on `_aFilterData`, but is provided as a cache so the join isn't
		 * needed on every search (memory traded for performance)
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_sFilterRow": null,
	
		/**
		 * Cache of the class name that DataTables has applied to the row, so we
		 * can quickly look at this variable rather than needing to do a DOM check
		 * on className for the nTr property.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *  @private
		 */
		"_sRowStripe": "",
	
		/**
		 * Denote if the original data source was from the DOM, or the data source
		 * object. This is used for invalidating data, so DataTables can
		 * automatically read data from the original source, unless uninstructed
		 * otherwise.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"src": null,
	
		/**
		 * Index in the aoData array. This saves an indexOf lookup when we have the
		 * object, but want to know the index
		 *  @type integer
		 *  @default -1
		 *  @private
		 */
		"idx": -1
	};
	
	
	/**
	 * Template object for the column information object in DataTables. This object
	 * is held in the settings aoColumns array and contains all the information that
	 * DataTables needs about each individual column.
	 *
	 * Note that this object is related to {@link DataTable.defaults.column}
	 * but this one is the internal data store for DataTables's cache of columns.
	 * It should NOT be manipulated outside of DataTables. Any configuration should
	 * be done through the initialisation options.
	 *  @namespace
	 */
	DataTable.models.oColumn = {
		/**
		 * Column index. This could be worked out on-the-fly with $.inArray, but it
		 * is faster to just hold it as a variable
		 *  @type integer
		 *  @default null
		 */
		"idx": null,
	
		/**
		 * A list of the columns that sorting should occur on when this column
		 * is sorted. That this property is an array allows multi-column sorting
		 * to be defined for a column (for example first name / last name columns
		 * would benefit from this). The values are integers pointing to the
		 * columns to be sorted on (typically it will be a single integer pointing
		 * at itself, but that doesn't need to be the case).
		 *  @type array
		 */
		"aDataSort": null,
	
		/**
		 * Define the sorting directions that are applied to the column, in sequence
		 * as the column is repeatedly sorted upon - i.e. the first value is used
		 * as the sorting direction when the column if first sorted (clicked on).
		 * Sort it again (click again) and it will move on to the next index.
		 * Repeat until loop.
		 *  @type array
		 */
		"asSorting": null,
	
		/**
		 * Flag to indicate if the column is searchable, and thus should be included
		 * in the filtering or not.
		 *  @type boolean
		 */
		"bSearchable": null,
	
		/**
		 * Flag to indicate if the column is sortable or not.
		 *  @type boolean
		 */
		"bSortable": null,
	
		/**
		 * Flag to indicate if the column is currently visible in the table or not
		 *  @type boolean
		 */
		"bVisible": null,
	
		/**
		 * Store for manual type assignment using the `column.type` option. This
		 * is held in store so we can manipulate the column's `sType` property.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"_sManualType": null,
	
		/**
		 * Flag to indicate if HTML5 data attributes should be used as the data
		 * source for filtering or sorting. True is either are.
		 *  @type boolean
		 *  @default false
		 *  @private
		 */
		"_bAttrSrc": false,
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} nTd The TD node that has been created
		 *  @param {*} sData The Data for the cell
		 *  @param {array|object} oData The data for the whole row
		 *  @param {int} iRow The row index for the aoData data store
		 *  @default null
		 */
		"fnCreatedCell": null,
	
		/**
		 * Function to get data from a cell in a column. You should <b>never</b>
		 * access data directly through _aData internally in DataTables - always use
		 * the method attached to this property. It allows mData to function as
		 * required. This function is automatically assigned by the column
		 * initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {string} sSpecific The specific data type you want to get -
		 *    'display', 'type' 'filter' 'sort'
		 *  @returns {*} The data for the cell from the given row's data
		 *  @default null
		 */
		"fnGetData": null,
	
		/**
		 * Function to set data for a cell in the column. You should <b>never</b>
		 * set the data directly to _aData internally in DataTables - always use
		 * this method. It allows mData to function as required. This function
		 * is automatically assigned by the column initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {*} sValue Value to set
		 *  @default null
		 */
		"fnSetData": null,
	
		/**
		 * Property to read the value for the cells in the column from the data
		 * source array / object. If null, then the default content is used, if a
		 * function is given then the return from the function is used.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mData": null,
	
		/**
		 * Partner property to mData which is used (only when defined) to get
		 * the data - i.e. it is basically the same as mData, but without the
		 * 'set' option, and also the data fed to it is the result from mData.
		 * This is the rendering method to match the data method of mData.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mRender": null,
	
		/**
		 * Unique header TH/TD element for this column - this is what the sorting
		 * listener is attached to (if sorting is enabled.)
		 *  @type node
		 *  @default null
		 */
		"nTh": null,
	
		/**
		 * Unique footer TH/TD element for this column (if there is one). Not used
		 * in DataTables as such, but can be used for plug-ins to reference the
		 * footer for each column.
		 *  @type node
		 *  @default null
		 */
		"nTf": null,
	
		/**
		 * The class to apply to all TD elements in the table's TBODY for the column
		 *  @type string
		 *  @default null
		 */
		"sClass": null,
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 *  @type string
		 */
		"sContentPadding": null,
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because mData
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 */
		"sDefaultContent": null,
	
		/**
		 * Name for the column, allowing reference to the column by name as well as
		 * by index (needs a lookup to work by name).
		 *  @type string
		 */
		"sName": null,
	
		/**
		 * Custom sorting data type - defines which of the available plug-ins in
		 * afnSortData the custom sorting will use - if any is defined.
		 *  @type string
		 *  @default std
		 */
		"sSortDataType": 'std',
	
		/**
		 * Class to be applied to the header element when sorting on this column
		 *  @type string
		 *  @default null
		 */
		"sSortingClass": null,
	
		/**
		 * Class to be applied to the header element when sorting on this column -
		 * when jQuery UI theming is used.
		 *  @type string
		 *  @default null
		 */
		"sSortingClassJUI": null,
	
		/**
		 * Title of the column - what is seen in the TH element (nTh).
		 *  @type string
		 */
		"sTitle": null,
	
		/**
		 * Column sorting and filtering type
		 *  @type string
		 *  @default null
		 */
		"sType": null,
	
		/**
		 * Width of the column
		 *  @type string
		 *  @default null
		 */
		"sWidth": null,
	
		/**
		 * Width of the column when it was first "encountered"
		 *  @type string
		 *  @default null
		 */
		"sWidthOrig": null
	};
	
	
	/*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would at around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit.
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */
	
	/**
	 * Initialisation options that can be given to DataTables at initialisation
	 * time.
	 *  @namespace
	 */
	DataTable.defaults = {
		/**
		 * An array of data to use for the table, passed in at initialisation which
		 * will be used in preference to any data which is already in the DOM. This is
		 * particularly useful for constructing tables purely in Javascript, for
		 * example with a custom Ajax call.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.data
		 *
		 *  @example
		 *    // Using a 2D array data source
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using an array of objects as a data source (`data`)
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"aaData": null,
	
	
		/**
		 * If ordering is enabled, then DataTables will perform a first pass sort on
		 * initialisation. You can define which column(s) the sort is performed
		 * upon, and the sorting direction, with this variable. The `sorting` array
		 * should contain an array for each column to be sorted initially containing
		 * the column's index and a direction string ('asc' or 'desc').
		 *  @type array
		 *  @default [[0,'asc']]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.order
		 *
		 *  @example
		 *    // Sort by 3rd column first, and then 4th column
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
		 *
		 *    // No initial sorting
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": []
		 *      } );
		 *    } );
		 */
		"aaSorting": [[0,'asc']],
	
	
		/**
		 * This parameter is basically identical to the `sorting` parameter, but
		 * cannot be overridden by user interaction with the table. What this means
		 * is that you could have a column (visible or hidden) which the sorting
		 * will always be forced on first - any sorting after that (from the user)
		 * will then be performed as required. This can be useful for grouping rows
		 * together.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.orderFixed
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderFixed": [[0,'asc']]
		 *      } );
		 *    } )
		 */
		"aaSortingFixed": [],
	
	
		/**
		 * DataTables can be instructed to load data to display in the table from a
		 * Ajax source. This option defines how that Ajax call is made and where to.
		 *
		 * The `ajax` property has three different modes of operation, depending on
		 * how it is defined. These are:
		 *
		 * * `string` - Set the URL from where the data should be loaded from.
		 * * `object` - Define properties for `jQuery.ajax`.
		 * * `function` - Custom data get function
		 *
		 * `string`
		 * --------
		 *
		 * As a string, the `ajax` property simply defines the URL from which
		 * DataTables will load data.
		 *
		 * `object`
		 * --------
		 *
		 * As an object, the parameters in the object are passed to
		 * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
		 * of the Ajax request. DataTables has a number of default parameters which
		 * you can override using this option. Please refer to the jQuery
		 * documentation for a full description of the options available, although
		 * the following parameters provide additional options in DataTables or
		 * require special consideration:
		 *
		 * * `data` - As with jQuery, `data` can be provided as an object, but it
		 *   can also be used as a function to manipulate the data DataTables sends
		 *   to the server. The function takes a single parameter, an object of
		 *   parameters with the values that DataTables has readied for sending. An
		 *   object may be returned which will be merged into the DataTables
		 *   defaults, or you can add the items to the object that was passed in and
		 *   not return anything from the function. This supersedes `fnServerParams`
		 *   from DataTables 1.9-.
		 *
		 * * `dataSrc` - By default DataTables will look for the property `data` (or
		 *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
		 *   from an Ajax source or for server-side processing - this parameter
		 *   allows that property to be changed. You can use Javascript dotted
		 *   object notation to get a data source for multiple levels of nesting, or
		 *   it my be used as a function. As a function it takes a single parameter,
		 *   the JSON returned from the server, which can be manipulated as
		 *   required, with the returned value being that used by DataTables as the
		 *   data source for the table. This supersedes `sAjaxDataProp` from
		 *   DataTables 1.9-.
		 *
		 * * `success` - Should not be overridden it is used internally in
		 *   DataTables. To manipulate / transform the data returned by the server
		 *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
		 *
		 * `function`
		 * ----------
		 *
		 * As a function, making the Ajax call is left up to yourself allowing
		 * complete control of the Ajax request. Indeed, if desired, a method other
		 * than Ajax could be used to obtain the required data, such as Web storage
		 * or an AIR database.
		 *
		 * The function is given four parameters and no return is required. The
		 * parameters are:
		 *
		 * 1. _object_ - Data to send to the server
		 * 2. _function_ - Callback function that must be executed when the required
		 *    data has been obtained. That data should be passed into the callback
		 *    as the only parameter
		 * 3. _object_ - DataTables settings object for the table
		 *
		 * Note that this supersedes `fnServerData` from DataTables 1.9-.
		 *
		 *  @type string|object|function
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.ajax
		 *  @since 1.10.0
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax.
		 *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).
		 *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to change
		 *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to read data
		 *   // from a plain array rather than an array in an object
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Manipulate the data returned from the server - add a link to data
		 *   // (note this can, should, be done using `render` for the column - this
		 *   // is just a simple example of how the data can be manipulated).
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Add data to the request
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Send request as POST
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get the data from localStorage (could interface with a form for
		 *   // adding, editing and removing rows).
		 *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
		 */
		"ajax": null,
	
	
		/**
		 * This parameter allows you to readily specify the entries in the length drop
		 * down menu that DataTables shows when pagination is enabled. It can be
		 * either a 1D array of options which will be used for both the displayed
		 * option and the value, or a 2D array which will use the array in the first
		 * position as the value, and the array in the second position as the
		 * displayed options (useful for language strings such as 'All').
		 *
		 * Note that the `pageLength` property will be automatically set to the
		 * first value given in this array, unless `pageLength` is also provided.
		 *  @type array
		 *  @default [ 10, 25, 50, 100 ]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.lengthMenu
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
		 */
		"aLengthMenu": [ 10, 25, 50, 100 ],
	
	
		/**
		 * The `columns` option in the initialisation parameter allows you to define
		 * details about the way individual columns behave. For a full list of
		 * column options that can be set, please see
		 * {@link DataTable.defaults.column}. Note that if you use `columns` to
		 * define your columns, you must have an entry in the array for every single
		 * column that you have in your table (these can be null if you don't which
		 * to specify any options).
		 *  @member
		 *
		 *  @name DataTable.defaults.column
		 */
		"aoColumns": null,
	
		/**
		 * Very similar to `columns`, `columnDefs` allows you to target a specific
		 * column, multiple columns, or all columns, using the `targets` property of
		 * each object in the array. This allows great flexibility when creating
		 * tables, as the `columnDefs` arrays can be of any length, targeting the
		 * columns you specifically want. `columnDefs` may use any of the column
		 * options available: {@link DataTable.defaults.column}, but it _must_
		 * have `targets` defined in each object in the array. Values in the `targets`
		 * array may be:
		 *   <ul>
		 *     <li>a string - class name will be matched on the TH for the column</li>
		 *     <li>0 or a positive integer - column index counting from the left</li>
		 *     <li>a negative integer - column index counting from the right</li>
		 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
		 *   </ul>
		 *  @member
		 *
		 *  @name DataTable.defaults.columnDefs
		 */
		"aoColumnDefs": null,
	
	
		/**
		 * Basically the same as `search`, this parameter defines the individual column
		 * filtering state at initialisation time. The array must be of the same size
		 * as the number of columns, and each element be an object with the parameters
		 * `search` and `escapeRegex` (the latter is optional). 'null' is also
		 * accepted and the default will be used.
		 *  @type array
		 *  @default []
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.searchCols
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
		 */
		"aoSearchCols": [],
	
	
		/**
		 * An array of CSS classes that should be applied to displayed rows. This
		 * array may be of any length, and DataTables will apply each class
		 * sequentially, looping when required.
		 *  @type array
		 *  @default null <i>Will take the values determined by the `oClasses.stripe*`
		 *    options</i>
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.stripeClasses
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
		 */
		"asStripeClasses": null,
	
	
		/**
		 * Enable or disable automatic column width calculation. This can be disabled
		 * as an optimisation (it takes some time to calculate the widths) if the
		 * tables widths are passed in using `columns`.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.autoWidth
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
		 */
		"bAutoWidth": true,
	
	
		/**
		 * Deferred rendering can provide DataTables with a huge speed boost when you
		 * are using an Ajax or JS data source for the table. This option, when set to
		 * true, will cause DataTables to defer the creation of the table elements for
		 * each row until they are needed for a draw - saving a significant amount of
		 * time.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.deferRender
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajax": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
		 */
		"bDeferRender": false,
	
	
		/**
		 * Replace a DataTable which matches the given selector and replace it with
		 * one which has the properties of the new initialisation object passed. If no
		 * table matches the selector, then the new DataTable will be constructed as
		 * per normal.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.destroy
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
		 */
		"bDestroy": false,
	
	
		/**
		 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
		 * that it allows the end user to input multiple words (space separated) and
		 * will match a row containing those words, even if not in the order that was
		 * specified (this allow matching across multiple columns). Note that if you
		 * wish to use filtering in DataTables this must remain 'true' - to remove the
		 * default filtering input box and retain filtering abilities, please use
		 * {@link DataTable.defaults.dom}.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.searching
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "searching": false
		 *      } );
		 *    } );
		 */
		"bFilter": true,
	
	
		/**
		 * Enable or disable the table information display. This shows information
		 * about the data that is currently visible on the page, including information
		 * about filtered data if that action is being performed.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.info
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
		 */
		"bInfo": true,
	
	
		/**
		 * Allows the end user to select the size of a formatted page from a select
		 * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.lengthChange
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
		 */
		"bLengthChange": true,
	
	
		/**
		 * Enable or disable pagination.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.paging
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paging": false
		 *      } );
		 *    } );
		 */
		"bPaginate": true,
	
	
		/**
		 * Enable or disable the display of a 'processing' indicator when the table is
		 * being processed (e.g. a sort). This is particularly useful for tables with
		 * large amounts of data where it can take a noticeable amount of time to sort
		 * the entries.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.processing
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
		 */
		"bProcessing": false,
	
	
		/**
		 * Retrieve the DataTables object for the given selector. Note that if the
		 * table has already been initialised, this parameter will cause DataTables
		 * to simply return the object that has already been set up - it will not take
		 * account of any changes you might have made to the initialisation object
		 * passed to DataTables (setting this parameter to true is an acknowledgement
		 * that you understand this). `destroy` can be used to reinitialise a table if
		 * you need.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.retrieve
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
		 *
		 *    function initTable ()
		 *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
		 *
		 *    function tableActions ()
		 *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
		 */
		"bRetrieve": false,
	
	
		/**
		 * When vertical (y) scrolling is enabled, DataTables will force the height of
		 * the table's viewport to the given height at all times (useful for layout).
		 * However, this can look odd when filtering data down to a small data set,
		 * and the footer is left "floating" further down. This parameter (when
		 * enabled) will cause DataTables to collapse the table's viewport down when
		 * the result set will fit within the given Y height.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollCollapse
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"bScrollCollapse": false,
	
	
		/**
		 * Configure DataTables to use server-side processing. Note that the
		 * `ajax` parameter must also be given in order to give DataTables a
		 * source to obtain the required data for each draw.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverSide
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
		 */
		"bServerSide": false,
	
	
		/**
		 * Enable or disable sorting of columns. Sorting of individual columns can be
		 * disabled by the `sortable` option for each column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.ordering
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "ordering": false
		 *      } );
		 *    } );
		 */
		"bSort": true,
	
	
		/**
		 * Enable or display DataTables' ability to sort multiple columns at the
		 * same time (activated by shift-click by the user).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderMulti
		 *
		 *  @example
		 *    // Disable multiple column sorting ability
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderMulti": false
		 *      } );
		 *    } );
		 */
		"bSortMulti": true,
	
	
		/**
		 * Allows control over whether DataTables should use the top (true) unique
		 * cell that is found for a single column, or the bottom (false - default).
		 * This is useful when using complex headers.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderCellsTop
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderCellsTop": true
		 *      } );
		 *    } );
		 */
		"bSortCellsTop": false,
	
	
		/**
		 * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
		 * `sorting\_3` to the columns which are currently being sorted on. This is
		 * presented as a feature switch as it can increase processing time (while
		 * classes are removed and added) so for large data sets you might want to
		 * turn this off.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.orderClasses
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderClasses": false
		 *      } );
		 *    } );
		 */
		"bSortClasses": true,
	
	
		/**
		 * Enable or disable state saving. When enabled HTML5 `localStorage` will be
		 * used to save table display information such as pagination information,
		 * display length, filtering and sorting. As such when the end user reloads
		 * the page the display display will match what thy had previously set up.
		 *
		 * Due to the use of `localStorage` the default state saving is not supported
		 * in IE6 or 7. If state saving is required in those browsers, use
		 * `stateSaveCallback` to provide a storage solution such as cookies.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.stateSave
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
		 */
		"bStateSave": false,
	
	
		/**
		 * This function is called when a TR element is created (and all TD child
		 * elements have been inserted), or registered if using a DOM source, allowing
		 * manipulation of the TR element (adding classes etc).
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} dataIndex The index of this row in the internal aoData array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.createdRow
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnCreatedRow": null,
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify any aspect you want about the created DOM.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.drawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "drawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnDrawCallback": null,
	
	
		/**
		 * Identical to fnHeaderCallback() but for the table footer this function
		 * allows you to modify the table footer on every 'draw' event.
		 *  @type function
		 *  @param {node} foot "TR" element for the footer
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.footerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( tfoot, data, start, end, display ) {
		 *          tfoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
		 */
		"fnFooterCallback": null,
	
	
		/**
		 * When rendering large numbers in the information element for the table
		 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
		 * to have a comma separator for the 'thousands' units (e.g. 1 million is
		 * rendered as "1,000,000") to help readability for the end user. This
		 * function will override the default method DataTables uses.
		 *  @type function
		 *  @member
		 *  @param {int} toFormat number to be formatted
		 *  @returns {string} formatted string for DataTables to show the number
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.formatNumber
		 *
		 *  @example
		 *    // Format a number using a single quote for the separator (note that
		 *    // this can also be done with the language.thousands option)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          return toFormat.toString().replace(
		 *            /\B(?=(\d{3})+(?!\d))/g, "'"
		 *          );
		 *        };
		 *      } );
		 *    } );
		 */
		"fnFormatNumber": function ( toFormat ) {
			return toFormat.toString().replace(
				/\B(?=(\d{3})+(?!\d))/g,
				this.oLanguage.sThousands
			);
		},
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify the header row. This can be used to calculate and
		 * display useful information about the table.
		 *  @type function
		 *  @param {node} head "TR" element for the header
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.headerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
		 */
		"fnHeaderCallback": null,
	
	
		/**
		 * The information element can be used to convey information about the current
		 * state of the table. Although the internationalisation options presented by
		 * DataTables are quite capable of dealing with most customisations, there may
		 * be times where you wish to customise the string further. This callback
		 * allows you to do exactly that.
		 *  @type function
		 *  @param {object} oSettings DataTables settings object
		 *  @param {int} start Starting position in data for the draw
		 *  @param {int} end End position in data for the draw
		 *  @param {int} max Total number of rows in the table (regardless of
		 *    filtering)
		 *  @param {int} total Total number of rows in the data set, after filtering
		 *  @param {string} pre The string that DataTables has formatted using it's
		 *    own rules
		 *  @returns {string} The string to be displayed in the information element.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.infoCallback
		 *
		 *  @example
		 *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, max, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
		 */
		"fnInfoCallback": null,
	
	
		/**
		 * Called when the table has been initialised. Normally DataTables will
		 * initialise sequentially and there will be no need for this function,
		 * however, this does not hold true when using external language information
		 * since that is obtained using an async XHR call.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} json The JSON object request from the server - only
		 *    present if client-side Ajax sourced data is used
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.initComplete
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
		 */
		"fnInitComplete": null,
	
	
		/**
		 * Called at the very start of each table draw and can be used to cancel the
		 * draw by returning false, any other return (including undefined) results in
		 * the full draw occurring).
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @returns {boolean} False will cancel the draw, anything else (including no
		 *    return) will allow it to complete.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.preDrawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnPreDrawCallback": null,
	
	
		/**
		 * This function allows you to 'post process' each row after it have been
		 * generated for each table draw, but before it is rendered on screen. This
		 * function might be used for setting the row class name etc.
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} displayIndex The display index for the current table draw
		 *  @param {int} displayIndexFull The index of the data in the full list of
		 *    rows (after filtering)
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.rowCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnRowCallback": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * This parameter allows you to override the default function which obtains
		 * the data from the server so something more suitable for your application.
		 * For example you could use POST data, or pull information from a Gears or
		 * AIR database.
		 *  @type function
		 *  @member
		 *  @param {string} source HTTP source to obtain the data from (`ajax`)
		 *  @param {array} data A key/value pair object containing the data to send
		 *    to the server
		 *  @param {function} callback to be called on completion of the data get
		 *    process that will draw the data on the page.
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverData
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerData": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 *  It is often useful to send extra data to the server when making an Ajax
		 * request - for example custom filtering information, and this callback
		 * function makes it trivial to send extra information to the server. The
		 * passed in parameter is the data set that has been constructed by
		 * DataTables, and you can add to this or modify it as you require.
		 *  @type function
		 *  @param {array} data Data array (array of objects which are name/value
		 *    pairs) that has been constructed by DataTables and will be sent to the
		 *    server. In the case of Ajax sourced data with server-side processing
		 *    this will be an empty array, for server-side processing there will be a
		 *    significant number of parameters!
		 *  @returns {undefined} Ensure that you modify the data array passed in,
		 *    as this is passed by reference.
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverParams
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerParams": null,
	
	
		/**
		 * Load the table state. With this function you can define from where, and how, the
		 * state of a table is loaded. By default DataTables will load from `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} callback Callback that can be executed when done. It
		 *    should be passed the loaded state object.
		 *  @return {object} The DataTables state object to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings, callback) {
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              callback( json );
		 *            }
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadCallback": function ( settings ) {
			try {
				return JSON.parse(
					(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
						'DataTables_'+settings.sInstance+'_'+location.pathname
					)
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the saved state prior to loading that state.
		 * This callback is called when the table is loading state from the stored data, but
		 * prior to the settings object being modified by the saved state. Note that for
		 * plug-in authors, you should use the `stateLoadParams` event to load parameters for
		 * a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that is to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never loaded
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Disallow state loading by returning false
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadParams": null,
	
	
		/**
		 * Callback that is called when the state has been loaded from the state saving method
		 * and the DataTables settings object has been modified as a result of the loaded state.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that was loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoaded
		 *
		 *  @example
		 *    // Show an alert with the filtering value that was saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoaded": null,
	
	
		/**
		 * Save the table state. This function allows you to define where and how the state
		 * information for the table is stored By default DataTables will use `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveCallback": function ( settings, data ) {
			try {
				(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
					'DataTables_'+settings.sInstance+'_'+location.pathname,
					JSON.stringify( data )
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the state to be saved. Called when the table
		 * has changed state a new state save is required. This method allows modification of
		 * the state saving object prior to actually doing the save, including addition or
		 * other state properties or modification. Note that for plug-in authors, you should
		 * use the `stateSaveParams` event to save parameters for a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveParams": null,
	
	
		/**
		 * Duration for which the saved state information is considered valid. After this period
		 * has elapsed the state will be returned to the default.
		 * Value is given in seconds.
		 *  @type int
		 *  @default 7200 <i>(2 hours)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.stateDuration
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
		 */
		"iStateDuration": 7200,
	
	
		/**
		 * When enabled DataTables will not make a request to the server for the first
		 * page draw - rather it will use the data already on the page (no sorting etc
		 * will be applied to it), thus saving on an XHR at load time. `deferLoading`
		 * is used to indicate that deferred loading is required, but it is also used
		 * to tell DataTables how many records there are in the full table (allowing
		 * the information element and pagination to be displayed correctly). In the case
		 * where a filtering is applied to the table on initial load, this can be
		 * indicated by giving the parameter as an array, where the first element is
		 * the number of records available after filtering and the second element is the
		 * number of records without filtering (allowing the table information element
		 * to be shown correctly).
		 *  @type int | array
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.deferLoading
		 *
		 *  @example
		 *    // 57 records available in the table, no filtering applied
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // 57 records after filtering, 100 without filtering (an initial filter applied)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
		 */
		"iDeferLoading": null,
	
	
		/**
		 * Number of rows to display on a single page when using pagination. If
		 * feature enabled (`lengthChange`) then the end user will be able to override
		 * this to a custom setting using a pop-up menu.
		 *  @type int
		 *  @default 10
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pageLength
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pageLength": 50
		 *      } );
		 *    } )
		 */
		"iDisplayLength": 10,
	
	
		/**
		 * Define the starting point for data display when using DataTables with
		 * pagination. Note that this parameter is the number of records, rather than
		 * the page number, so if you have 10 records per page and want to start on
		 * the third page, it should be "20".
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayStart
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
		 */
		"iDisplayStart": 0,
	
	
		/**
		 * By default DataTables allows keyboard navigation of the table (sorting, paging,
		 * and filtering) by adding a `tabindex` attribute to the required elements. This
		 * allows you to tab through the controls and press the enter key to activate them.
		 * The tabindex is default 0, meaning that the tab follows the flow of the document.
		 * You can overrule this using this parameter if you wish. Use a value of -1 to
		 * disable built-in keyboard navigation.
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.tabIndex
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
		 */
		"iTabIndex": 0,
	
	
		/**
		 * Classes that DataTables assigns to the various components and features
		 * that it adds to the HTML table. This allows classes to be configured
		 * during initialisation in addition to through the static
		 * {@link DataTable.ext.oStdClasses} object).
		 *  @namespace
		 *  @name DataTable.defaults.classes
		 */
		"oClasses": {},
	
	
		/**
		 * All strings that DataTables uses in the user interface that it creates
		 * are defined in this object, allowing you to modified them individually or
		 * completely replace them all as required.
		 *  @namespace
		 *  @name DataTable.defaults.language
		 */
		"oLanguage": {
			/**
			 * Strings that are used for WAI-ARIA labels and controls only (these are not
			 * actually visible on the page, but will be read by screenreaders, and thus
			 * must be internationalised as well).
			 *  @namespace
			 *  @name DataTable.defaults.language.aria
			 */
			"oAria": {
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted ascending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortAscending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortAscending": ": activate to sort column ascending",
	
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted descending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortDescending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortDescending": ": activate to sort column descending"
			},
	
			/**
			 * Pagination string used by DataTables for the built-in pagination
			 * control types.
			 *  @namespace
			 *  @name DataTable.defaults.language.paginate
			 */
			"oPaginate": {
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the first page.
				 *  @type string
				 *  @default First
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.first
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sFirst": "First",
	
	
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the last page.
				 *  @type string
				 *  @default Last
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.last
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sLast": "Last",
	
	
				/**
				 * Text to use for the 'next' pagination button (to take the user to the
				 * next page).
				 *  @type string
				 *  @default Next
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.next
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sNext": "Next",
	
	
				/**
				 * Text to use for the 'previous' pagination button (to take the user to
				 * the previous page).
				 *  @type string
				 *  @default Previous
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.previous
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sPrevious": "Previous"
			},
	
			/**
			 * This string is shown in preference to `zeroRecords` when the table is
			 * empty of data (regardless of filtering). Note that this is an optional
			 * parameter - if it is not given, the value of `zeroRecords` will be used
			 * instead (either the default or given value).
			 *  @type string
			 *  @default No data available in table
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.emptyTable
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sEmptyTable": "No data available in table",
	
	
			/**
			 * This string gives information to the end user about the information
			 * that is current on display on the page. The following tokens can be
			 * used in the string and will be dynamically replaced as the table
			 * display updates. This tokens can be placed anywhere in the string, or
			 * removed as needed by the language requires:
			 *
			 * * `\_START\_` - Display index of the first record on the current page
			 * * `\_END\_` - Display index of the last record on the current page
			 * * `\_TOTAL\_` - Number of records in the table after filtering
			 * * `\_MAX\_` - Number of records in the table without filtering
			 * * `\_PAGE\_` - Current page number
			 * * `\_PAGES\_` - Total number of pages of data in the table
			 *
			 *  @type string
			 *  @default Showing _START_ to _END_ of _TOTAL_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.info
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Showing page _PAGE_ of _PAGES_"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
	
	
			/**
			 * Display information string for when the table is empty. Typically the
			 * format of this string should match `info`.
			 *  @type string
			 *  @default Showing 0 to 0 of 0 entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoEmpty
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoEmpty": "Showing 0 to 0 of 0 entries",
	
	
			/**
			 * When a user filters the information in a table, this string is appended
			 * to the information (`info`) to give an idea of how strong the filtering
			 * is. The variable _MAX_ is dynamically updated.
			 *  @type string
			 *  @default (filtered from _MAX_ total entries)
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoFiltered
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoFiltered": "(filtered from _MAX_ total entries)",
	
	
			/**
			 * If can be useful to append extra information to the info string at times,
			 * and this variable does exactly that. This information will be appended to
			 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
			 * being used) at all times.
			 *  @type string
			 *  @default <i>Empty string</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoPostFix
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoPostFix": "",
	
	
			/**
			 * This decimal place operator is a little different from the other
			 * language options since DataTables doesn't output floating point
			 * numbers, so it won't ever use this for display of a number. Rather,
			 * what this parameter does is modify the sort methods of the table so
			 * that numbers which are in a format which has a character other than
			 * a period (`.`) as a decimal place will be sorted numerically.
			 *
			 * Note that numbers with different decimal places cannot be shown in
			 * the same table and still be sortable, the table must be consistent.
			 * However, multiple different tables on the page can use different
			 * decimal place characters.
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.decimal
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "decimal": ","
			 *          "thousands": "."
			 *        }
			 *      } );
			 *    } );
			 */
			"sDecimal": "",
	
	
			/**
			 * DataTables has a build in number formatter (`formatNumber`) which is
			 * used to format large numbers that are used in the table information.
			 * By default a comma is used, but this can be trivially changed to any
			 * character you wish with this parameter.
			 *  @type string
			 *  @default ,
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.thousands
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "thousands": "'"
			 *        }
			 *      } );
			 *    } );
			 */
			"sThousands": ",",
	
	
			/**
			 * Detail the action that will be taken when the drop down menu for the
			 * pagination length option is changed. The '_MENU_' variable is replaced
			 * with a default select list of 10, 25, 50 and 100, and can be replaced
			 * with a custom select box if required.
			 *  @type string
			 *  @default Show _MENU_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.lengthMenu
			 *
			 *  @example
			 *    // Language change only
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Language and options change
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
			 */
			"sLengthMenu": "Show _MENU_ entries",
	
	
			/**
			 * When using Ajax sourced data and during the first draw when DataTables is
			 * gathering the data, this message is shown in an empty row in the table to
			 * indicate to the end user the the data is being loaded. Note that this
			 * parameter is not used when loading data by server-side processing, just
			 * Ajax sourced data with client-side processing.
			 *  @type string
			 *  @default Loading...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.loadingRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
			 */
			"sLoadingRecords": "Loading...",
	
	
			/**
			 * Text which is displayed when the table is processing a user action
			 * (usually a sort command or similar).
			 *  @type string
			 *  @default Processing...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.processing
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
			 */
			"sProcessing": "Processing...",
	
	
			/**
			 * Details the actions that will be taken when the user types into the
			 * filtering input text box. The variable "_INPUT_", if used in the string,
			 * is replaced with the HTML text box for the filtering input allowing
			 * control over where it appears in the string. If "_INPUT_" is not given
			 * then the input box is appended to the string automatically.
			 *  @type string
			 *  @default Search:
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.search
			 *
			 *  @example
			 *    // Input text box will be appended at the end automatically
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Specify where the filter should appear
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sSearch": "Search:",
	
	
			/**
			 * Assign a `placeholder` attribute to the search `input` element
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.searchPlaceholder
			 */
			"sSearchPlaceholder": "",
	
	
			/**
			 * All of the language information can be stored in a file on the
			 * server-side, which DataTables will look up if this parameter is passed.
			 * It must store the URL of the language file, which is in a JSON format,
			 * and the object has the same properties as the oLanguage object in the
			 * initialiser object (i.e. the above parameters). Please refer to one of
			 * the example language files to see how this works in action.
			 *  @type string
			 *  @default <i>Empty string - i.e. disabled</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.url
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
			 */
			"sUrl": "",
	
	
			/**
			 * Text shown inside the table records when the is no information to be
			 * displayed after filtering. `emptyTable` is shown when there is simply no
			 * information in the table at all (regardless of filtering).
			 *  @type string
			 *  @default No matching records found
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.zeroRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
			 */
			"sZeroRecords": "No matching records found"
		},
	
	
		/**
		 * This parameter allows you to have define the global filtering state at
		 * initialisation time. As an object the `search` parameter must be
		 * defined, but all other parameters are optional. When `regex` is true,
		 * the search string will be treated as a regular expression, when false
		 * (default) it will be treated as a straight string. When `smart`
		 * DataTables will use it's smart filtering methods (to word match at
		 * any point in the data), when false this will not be done.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.search
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
		 */
		"oSearch": $.extend( {}, DataTable.models.oSearch ),
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * By default DataTables will look for the property `data` (or `aaData` for
		 * compatibility with DataTables 1.9-) when obtaining data from an Ajax
		 * source or for server-side processing - this parameter allows that
		 * property to be changed. You can use Javascript dotted object notation to
		 * get a data source for multiple levels of nesting.
		 *  @type string
		 *  @default data
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxDataProp
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxDataProp": "data",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * You can instruct DataTables to load data from an external
		 * source using this parameter (use aData if you want to pass data in you
		 * already have). Simply provide a url a JSON object can be obtained from.
		 *  @type string
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxSource
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxSource": null,
	
	
		/**
		 * This initialisation variable allows you to specify exactly where in the
		 * DOM you want DataTables to inject the various controls it adds to the page
		 * (for example you might want the pagination controls at the top of the
		 * table). DIV elements (with or without a custom class) can also be added to
		 * aid styling. The follow syntax is used:
		 *   <ul>
		 *     <li>The following options are allowed:
		 *       <ul>
		 *         <li>'l' - Length changing</li>
		 *         <li>'f' - Filtering input</li>
		 *         <li>'t' - The table!</li>
		 *         <li>'i' - Information</li>
		 *         <li>'p' - Pagination</li>
		 *         <li>'r' - pRocessing</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following constants are allowed:
		 *       <ul>
		 *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
		 *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following syntax is expected:
		 *       <ul>
		 *         <li>'&lt;' and '&gt;' - div elements</li>
		 *         <li>'&lt;"class" and '&gt;' - div with a class</li>
		 *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
		 *       </ul>
		 *     </li>
		 *     <li>Examples:
		 *       <ul>
		 *         <li>'&lt;"wrapper"flipt&gt;'</li>
		 *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
		 *       </ul>
		 *     </li>
		 *   </ul>
		 *  @type string
		 *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>
		 *    <"H"lfr>t<"F"ip> <i>(when `jQueryUI` is true)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.dom
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
		 */
		"sDom": "lfrtip",
	
	
		/**
		 * Search delay option. This will throttle full table searches that use the
		 * DataTables provided search input element (it does not effect calls to
		 * `dt-api search()`, providing a delay before the search is made.
		 *  @type integer
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.searchDelay
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchDelay": 200
		 *      } );
		 *    } )
		 */
		"searchDelay": null,
	
	
		/**
		 * DataTables features six different built-in options for the buttons to
		 * display for pagination control:
		 *
		 * * `numbers` - Page number buttons only
		 * * `simple` - 'Previous' and 'Next' buttons only
		 * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
		 * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
		 * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
		 * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
		 *  
		 * Further methods can be added using {@link DataTable.ext.oPagination}.
		 *  @type string
		 *  @default simple_numbers
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pagingType
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pagingType": "full_numbers"
		 *      } );
		 *    } )
		 */
		"sPaginationType": "simple_numbers",
	
	
		/**
		 * Enable horizontal scrolling. When a table is too wide to fit into a
		 * certain layout, or you have a large number of columns in the table, you
		 * can enable x-scrolling to show the table in a viewport, which can be
		 * scrolled. This property can be `true` which will allow the table to
		 * scroll horizontally when needed, or any CSS unit, or a number (in which
		 * case it will be treated as a pixel measurement). Setting as simply `true`
		 * is recommended.
		 *  @type boolean|string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollX
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": true,
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"sScrollX": "",
	
	
		/**
		 * This property can be used to force a DataTable to use more width than it
		 * might otherwise do when x-scrolling is enabled. For example if you have a
		 * table which requires to be well spaced, this parameter is useful for
		 * "over-sizing" the table, and thus forcing scrolling. This property can by
		 * any CSS unit, or a number (in which case it will be treated as a pixel
		 * measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollXInner
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
		 */
		"sScrollXInner": "",
	
	
		/**
		 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
		 * to the given height, and enable scrolling for any data which overflows the
		 * current viewport. This can be used as an alternative to paging to display
		 * a lot of data in a small area (although paging and scrolling can both be
		 * enabled at the same time). This property can be any CSS unit, or a number
		 * (in which case it will be treated as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollY
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"sScrollY": "",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * Set the HTTP method that is used to make the Ajax call for server-side
		 * processing or Ajax sourced data.
		 *  @type string
		 *  @default GET
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverMethod
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sServerMethod": "GET",
	
	
		/**
		 * DataTables makes use of renderers when displaying HTML elements for
		 * a table. These renderers can be added or modified by plug-ins to
		 * generate suitable mark-up for a site. For example the Bootstrap
		 * integration plug-in for DataTables uses a paging button renderer to
		 * display pagination buttons in the mark-up required by Bootstrap.
		 *
		 * For further information about the renderers available see
		 * DataTable.ext.renderer
		 *  @type string|object
		 *  @default null
		 *
		 *  @name DataTable.defaults.renderer
		 *
		 */
		"renderer": null,
	
	
		/**
		 * Set the data property name that DataTables should use to get a row's id
		 * to set as the `id` property in the node.
		 *  @type string
		 *  @default DT_RowId
		 *
		 *  @name DataTable.defaults.rowId
		 */
		"rowId": "DT_RowId"
	};
	
	_fnHungarianMap( DataTable.defaults );
	
	
	
	/*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */
	
	/**
	 * Column options that can be given to DataTables at initialisation time.
	 *  @namespace
	 */
	DataTable.defaults.column = {
		/**
		 * Define which column(s) an order will occur on for this column. This
		 * allows a column's ordering to take multiple columns into account when
		 * doing a sort or use the data from a different column. For example first
		 * name / last name columns make sense to do a multi-column sort over the
		 * two columns.
		 *  @type array|int
		 *  @default null <i>Takes the value of the column index automatically</i>
		 *
		 *  @name DataTable.defaults.column.orderData
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderData": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "orderData": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "orderData": 2, "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderData": [ 0, 1 ] },
		 *          { "orderData": [ 1, 0 ] },
		 *          { "orderData": 2 },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"aDataSort": null,
		"iDataSort": -1,
	
	
		/**
		 * You can control the default ordering direction, and even alter the
		 * behaviour of the sort handler (i.e. only allow ascending ordering etc)
		 * using this parameter.
		 *  @type array
		 *  @default [ 'asc', 'desc' ]
		 *
		 *  @name DataTable.defaults.column.orderSequence
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderSequence": [ "asc" ], "targets": [ 1 ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "orderSequence": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "orderSequence": [ "asc" ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ] },
		 *          { "orderSequence": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"asSorting": [ 'asc', 'desc' ],
	
	
		/**
		 * Enable or disable filtering on the data in this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.searchable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSearchable": true,
	
	
		/**
		 * Enable or disable ordering on this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.orderable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSortable": true,
	
	
		/**
		 * Enable or disable the display of this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.visible
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bVisible": true,
	
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} td The TD node that has been created
		 *  @param {*} cellData The Data for the cell
		 *  @param {array|object} rowData The data for the whole row
		 *  @param {int} row The row index for the aoData data store
		 *  @param {int} col The column index for aoColumns
		 *
		 *  @name DataTable.defaults.column.createdCell
		 *  @dtopt Columns
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
		 */
		"fnCreatedCell": null,
	
	
		/**
		 * This parameter has been replaced by `data` in DataTables to ensure naming
		 * consistency. `dataProp` can still be used, as there is backwards
		 * compatibility in DataTables for this option, but it is strongly
		 * recommended that you use `data` in preference to `dataProp`.
		 *  @name DataTable.defaults.column.dataProp
		 */
	
	
		/**
		 * This property can be used to read data from any data source property,
		 * including deeply nested objects / properties. `data` can be given in a
		 * number of different ways which effect its behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object. Note that
		 *      function notation is recommended for use in `render` rather than
		 *      `data` as it is much simpler to use as a renderer.
		 * * `null` - use the original data source for the row rather than plucking
		 *   data directly from it. This action has effects on two other
		 *   initialisation options:
		 *    * `defaultContent` - When null is given as the `data` option and
		 *      `defaultContent` is specified for the column, the value defined by
		 *      `defaultContent` will be used for the cell.
		 *    * `render` - When null is used for the `data` option and the `render`
		 *      option is specified for the column, the whole data source for the
		 *      row is used for the renderer.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * `{array|object}` The data source for the row
		 *      * `{string}` The type call data requested - this will be 'set' when
		 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
		 *        when gathering data. Note that when `undefined` is given for the
		 *        type DataTables expects to get the raw data for the object back<
		 *      * `{*}` Data to set when the second parameter is 'set'.
		 *    * Return:
		 *      * The return value from the function is not required when 'set' is
		 *        the type of call, but otherwise the return is what will be used
		 *        for the data requested.
		 *
		 * Note that `data` is a getter and setter option. If you just require
		 * formatting of data for output, you will likely want to use `render` which
		 * is simply a getter and thus simpler to use.
		 *
		 * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
		 * name change reflects the flexibility of this property and is consistent
		 * with the naming of mRender. If 'mDataProp' is given, then it will still
		 * be used by DataTables, as it automatically maps the old name to the new
		 * if required.
		 *
		 *  @type string|int|function|null
		 *  @default null <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.data
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Read table data from objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Read information from deeply nested objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "details.0" },
		 *          { "data": "details.1" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `data` as a function to provide different information for
		 *    // sorting, filtering and display. In this case, currency (price)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using default content
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using array notation - outputting a list from an array
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 */
		"mData": null,
	
	
		/**
		 * This property is the rendering partner to `data` and it is suggested that
		 * when you want to manipulate data for display (including filtering,
		 * sorting etc) without altering the underlying data for the table, use this
		 * property. `render` can be considered to be the the read only companion to
		 * `data` which is read / write (then as such more complex). Like `data`
		 * this option can be given in a number of different ways to effect its
		 * behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object.
		 * * `object` - use different data for the different data types requested by
		 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
		 *   of the object is the data type the property refers to and the value can
		 *   defined using an integer, string or function using the same rules as
		 *   `render` normally does. Note that an `_` option _must_ be specified.
		 *   This is the default value to use if you haven't specified a value for
		 *   the data type requested by DataTables.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * {array|object} The data source for the row (based on `data`)
		 *      * {string} The type call data requested - this will be 'filter',
		 *        'display', 'type' or 'sort'.
		 *      * {array|object} The full data source for the row (not based on
		 *        `data`)
		 *    * Return:
		 *      * The return value from the function is what will be used for the
		 *        data requested.
		 *
		 *  @type string|int|function|object|null
		 *  @default null Use the data source value.
		 *
		 *  @name DataTable.defaults.column.render
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Create a comma separated list from an array of objects
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Execute a function to obtain data
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // As an object, extracting different data for the different types
		 *    // This would be used with a data source such as:
		 *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
		 *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`
		 *    // (which has both forms) is used for filtering for if a user inputs either format, while
		 *    // the formatted phone number is the one that is shown in the table.
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Use as a function to create a link from the data source
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 */
		"mRender": null,
	
	
		/**
		 * Change the cell type created for the column - either TD cells or TH cells. This
		 * can be useful as TH cells have semantic meaning in the table body, allowing them
		 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
		 *  @type string
		 *  @default td
		 *
		 *  @name DataTable.defaults.column.cellType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Make the first column use TH cells
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
		 */
		"sCellType": "td",
	
	
		/**
		 * Class to give to each cell in this column.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.class
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sClass": "",
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 * Generally you shouldn't need this!
		 *  @type string
		 *  @default <i>Empty string<i>
		 *
		 *  @name DataTable.defaults.column.contentPadding
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sContentPadding": "",
	
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because `data`
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 *
		 *  @name DataTable.defaults.column.defaultContent
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sDefaultContent": null,
	
	
		/**
		 * This parameter is only used in DataTables' server-side processing. It can
		 * be exceptionally useful to know what columns are being displayed on the
		 * client side, and to map these to database fields. When defined, the names
		 * also allow DataTables to reorder information from the server if it comes
		 * back in an unexpected order (i.e. if you switch your columns around on the
		 * client-side, your server-side code does not also need updating).
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.name
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sName": "",
	
	
		/**
		 * Defines a data source type for the ordering which can be used to read
		 * real-time information from the table (updating the internally cached
		 * version) prior to ordering. This allows ordering to occur on user
		 * editable elements such as form inputs.
		 *  @type string
		 *  @default std
		 *
		 *  @name DataTable.defaults.column.orderDataType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "orderDataType": "dom-select", "targets": [ 4 ] },
		 *          { "orderDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "orderDataType": "dom-text" },
		 *          { "orderDataType": "dom-text", "type": "numeric" },
		 *          { "orderDataType": "dom-select" },
		 *          { "orderDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sSortDataType": "std",
	
	
		/**
		 * The title of this column.
		 *  @type string
		 *  @default null <i>Derived from the 'TH' value for this column in the
		 *    original HTML table.</i>
		 *
		 *  @name DataTable.defaults.column.title
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sTitle": null,
	
	
		/**
		 * The type allows you to specify how the data for this column will be
		 * ordered. Four types (string, numeric, date and html (which will strip
		 * HTML tags before ordering)) are currently available. Note that only date
		 * formats understood by Javascript's Date() object will be accepted as type
		 * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
		 * 'numeric', 'date' or 'html' (by default). Further types can be adding
		 * through plug-ins.
		 *  @type string
		 *  @default null <i>Auto-detected from raw data</i>
		 *
		 *  @name DataTable.defaults.column.type
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sType": null,
	
	
		/**
		 * Defining the width of the column, this parameter may take any CSS value
		 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
		 * been given a specific width through this interface ensuring that the table
		 * remains readable.
		 *  @type string
		 *  @default null <i>Automatic</i>
		 *
		 *  @name DataTable.defaults.column.width
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sWidth": null
	};
	
	_fnHungarianMap( DataTable.defaults.column );
	
	
	
	/**
	 * DataTables settings object - this holds all the information needed for a
	 * given table, including configuration, data and current application of the
	 * table options. DataTables does not have a single instance for each DataTable
	 * with the settings attached to that instance, but rather instances of the
	 * DataTable "class" are created on-the-fly as needed (typically by a
	 * $().dataTable() call) and the settings object is then applied to that
	 * instance.
	 *
	 * Note that this object is related to {@link DataTable.defaults} but this
	 * one is the internal data store for DataTables's cache of columns. It should
	 * NOT be manipulated outside of DataTables. Any configuration should be done
	 * through the initialisation options.
	 *  @namespace
	 *  @todo Really should attach the settings object to individual instances so we
	 *    don't need to create new instances on each $().dataTable() call (if the
	 *    table already exists). It would also save passing oSettings around and
	 *    into every single function. However, this is a very significant
	 *    architecture change for DataTables and will almost certainly break
	 *    backwards compatibility with older installations. This is something that
	 *    will be done in 2.0.
	 */
	DataTable.models.oSettings = {
		/**
		 * Primary features of DataTables and their enablement state.
		 *  @namespace
		 */
		"oFeatures": {
	
			/**
			 * Flag to say if DataTables should automatically try to calculate the
			 * optimum table and columns widths (true) or not (false).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoWidth": null,
	
			/**
			 * Delay the creation of TR and TD elements until they are actually
			 * needed by a driven page draw. This can give a significant speed
			 * increase for Ajax source and Javascript source data, but makes no
			 * difference at all fro DOM and server-side processing tables.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bDeferRender": null,
	
			/**
			 * Enable filtering on the table or not. Note that if this is disabled
			 * then there is no filtering at all on the table, including fnFilter.
			 * To just remove the filtering input use sDom and remove the 'f' option.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bFilter": null,
	
			/**
			 * Table information element (the 'Showing x of y records' div) enable
			 * flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfo": null,
	
			/**
			 * Present a user control allowing the end user to change the page size
			 * when pagination is enabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bLengthChange": null,
	
			/**
			 * Pagination enabled or not. Note that if this is disabled then length
			 * changing must also be disabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bPaginate": null,
	
			/**
			 * Processing indicator enable flag whenever DataTables is enacting a
			 * user request - typically an Ajax request for server-side processing.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bProcessing": null,
	
			/**
			 * Server-side processing enabled flag - when enabled DataTables will
			 * get all data from the server for every draw - there is no filtering,
			 * sorting or paging done on the client-side.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bServerSide": null,
	
			/**
			 * Sorting enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSort": null,
	
			/**
			 * Multi-column sorting
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortMulti": null,
	
			/**
			 * Apply a class to the columns which are being sorted to provide a
			 * visual highlight or not. This can slow things down when enabled since
			 * there is a lot of DOM interaction.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortClasses": null,
	
			/**
			 * State saving enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bStateSave": null
		},
	
	
		/**
		 * Scrolling settings for a table.
		 *  @namespace
		 */
		"oScroll": {
			/**
			 * When the table is shorter in height than sScrollY, collapse the
			 * table container down to the height of the table (when true).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bCollapse": null,
	
			/**
			 * Width of the scrollbar for the web-browser's platform. Calculated
			 * during table initialisation.
			 *  @type int
			 *  @default 0
			 */
			"iBarWidth": 0,
	
			/**
			 * Viewport width for horizontal scrolling. Horizontal scrolling is
			 * disabled if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sX": null,
	
			/**
			 * Width to expand the table to when using x-scrolling. Typically you
			 * should not need to use this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 *  @deprecated
			 */
			"sXInner": null,
	
			/**
			 * Viewport height for vertical scrolling. Vertical scrolling is disabled
			 * if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sY": null
		},
	
		/**
		 * Language information for the table.
		 *  @namespace
		 *  @extends DataTable.defaults.oLanguage
		 */
		"oLanguage": {
			/**
			 * Information callback function. See
			 * {@link DataTable.defaults.fnInfoCallback}
			 *  @type function
			 *  @default null
			 */
			"fnInfoCallback": null
		},
	
		/**
		 * Browser support parameters
		 *  @namespace
		 */
		"oBrowser": {
			/**
			 * Indicate if the browser incorrectly calculates width:100% inside a
			 * scrolling element (IE6/7)
			 *  @type boolean
			 *  @default false
			 */
			"bScrollOversize": false,
	
			/**
			 * Determine if the vertical scrollbar is on the right or left of the
			 * scrolling container - needed for rtl language layout, although not
			 * all browsers move the scrollbar (Safari).
			 *  @type boolean
			 *  @default false
			 */
			"bScrollbarLeft": false,
	
			/**
			 * Flag for if `getBoundingClientRect` is fully supported or not
			 *  @type boolean
			 *  @default false
			 */
			"bBounding": false,
	
			/**
			 * Browser scrollbar width
			 *  @type integer
			 *  @default 0
			 */
			"barWidth": 0
		},
	
	
		"ajax": null,
	
	
		/**
		 * Array referencing the nodes which are used for the features. The
		 * parameters of this object match what is allowed by sDom - i.e.
		 *   <ul>
		 *     <li>'l' - Length changing</li>
		 *     <li>'f' - Filtering input</li>
		 *     <li>'t' - The table!</li>
		 *     <li>'i' - Information</li>
		 *     <li>'p' - Pagination</li>
		 *     <li>'r' - pRocessing</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aanFeatures": [],
	
		/**
		 * Store data information - see {@link DataTable.models.oRow} for detailed
		 * information.
		 *  @type array
		 *  @default []
		 */
		"aoData": [],
	
		/**
		 * Array of indexes which are in the current display (after filtering etc)
		 *  @type array
		 *  @default []
		 */
		"aiDisplay": [],
	
		/**
		 * Array of indexes for display - no filtering
		 *  @type array
		 *  @default []
		 */
		"aiDisplayMaster": [],
	
		/**
		 * Map of row ids to data indexes
		 *  @type object
		 *  @default {}
		 */
		"aIds": {},
	
		/**
		 * Store information about each column that is in use
		 *  @type array
		 *  @default []
		 */
		"aoColumns": [],
	
		/**
		 * Store information about the table's header
		 *  @type array
		 *  @default []
		 */
		"aoHeader": [],
	
		/**
		 * Store information about the table's footer
		 *  @type array
		 *  @default []
		 */
		"aoFooter": [],
	
		/**
		 * Store the applied global search information in case we want to force a
		 * research or compare the old search to a new one.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 */
		"oPreviousSearch": {},
	
		/**
		 * Store the applied search for each column - see
		 * {@link DataTable.models.oSearch} for the format that is used for the
		 * filtering information for each column.
		 *  @type array
		 *  @default []
		 */
		"aoPreSearchCols": [],
	
		/**
		 * Sorting that is applied to the table. Note that the inner arrays are
		 * used in the following manner:
		 * <ul>
		 *   <li>Index 0 - column number</li>
		 *   <li>Index 1 - current sorting direction</li>
		 * </ul>
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @todo These inner arrays should really be objects
		 */
		"aaSorting": null,
	
		/**
		 * Sorting that is always applied to the table (i.e. prefixed in front of
		 * aaSorting).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aaSortingFixed": [],
	
		/**
		 * Classes to use for the striping of a table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"asStripeClasses": null,
	
		/**
		 * If restoring a table - we should restore its striping classes as well
		 *  @type array
		 *  @default []
		 */
		"asDestroyStripes": [],
	
		/**
		 * If restoring a table - we should restore its width
		 *  @type int
		 *  @default 0
		 */
		"sDestroyWidth": 0,
	
		/**
		 * Callback functions array for every time a row is inserted (i.e. on a draw).
		 *  @type array
		 *  @default []
		 */
		"aoRowCallback": [],
	
		/**
		 * Callback functions for the header on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoHeaderCallback": [],
	
		/**
		 * Callback function for the footer on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoFooterCallback": [],
	
		/**
		 * Array of callback functions for draw callback functions
		 *  @type array
		 *  @default []
		 */
		"aoDrawCallback": [],
	
		/**
		 * Array of callback functions for row created function
		 *  @type array
		 *  @default []
		 */
		"aoRowCreatedCallback": [],
	
		/**
		 * Callback functions for just before the table is redrawn. A return of
		 * false will be used to cancel the draw.
		 *  @type array
		 *  @default []
		 */
		"aoPreDrawCallback": [],
	
		/**
		 * Callback functions for when the table has been initialised.
		 *  @type array
		 *  @default []
		 */
		"aoInitComplete": [],
	
	
		/**
		 * Callbacks for modifying the settings to be stored for state saving, prior to
		 * saving state.
		 *  @type array
		 *  @default []
		 */
		"aoStateSaveParams": [],
	
		/**
		 * Callbacks for modifying the settings that have been stored for state saving
		 * prior to using the stored values to restore the state.
		 *  @type array
		 *  @default []
		 */
		"aoStateLoadParams": [],
	
		/**
		 * Callbacks for operating on the settings object once the saved state has been
		 * loaded
		 *  @type array
		 *  @default []
		 */
		"aoStateLoaded": [],
	
		/**
		 * Cache the table ID for quick access
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sTableId": "",
	
		/**
		 * The TABLE node for the main table
		 *  @type node
		 *  @default null
		 */
		"nTable": null,
	
		/**
		 * Permanent ref to the thead element
		 *  @type node
		 *  @default null
		 */
		"nTHead": null,
	
		/**
		 * Permanent ref to the tfoot element - if it exists
		 *  @type node
		 *  @default null
		 */
		"nTFoot": null,
	
		/**
		 * Permanent ref to the tbody element
		 *  @type node
		 *  @default null
		 */
		"nTBody": null,
	
		/**
		 * Cache the wrapper node (contains all DataTables controlled elements)
		 *  @type node
		 *  @default null
		 */
		"nTableWrapper": null,
	
		/**
		 * Indicate if when using server-side processing the loading of data
		 * should be deferred until the second draw.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 *  @default false
		 */
		"bDeferLoading": false,
	
		/**
		 * Indicate if all required information has been read in
		 *  @type boolean
		 *  @default false
		 */
		"bInitialised": false,
	
		/**
		 * Information about open rows. Each object in the array has the parameters
		 * 'nTr' and 'nParent'
		 *  @type array
		 *  @default []
		 */
		"aoOpenRows": [],
	
		/**
		 * Dictate the positioning of DataTables' control elements - see
		 * {@link DataTable.model.oInit.sDom}.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sDom": null,
	
		/**
		 * Search delay (in mS)
		 *  @type integer
		 *  @default null
		 */
		"searchDelay": null,
	
		/**
		 * Which type of pagination should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default two_button
		 */
		"sPaginationType": "two_button",
	
		/**
		 * The state duration (for `stateSave`) in seconds.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type int
		 *  @default 0
		 */
		"iStateDuration": 0,
	
		/**
		 * Array of callback functions for state saving. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the JSON string to save that has been thus far created. Returns
		 *       a JSON string to be inserted into a json object
		 *       (i.e. '"param": [ 0, 1, 2]')</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateSave": [],
	
		/**
		 * Array of callback functions for state loading. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the object stored. May return false to cancel state loading</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateLoad": [],
	
		/**
		 * State that was saved. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oSavedState": null,
	
		/**
		 * State that was loaded. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oLoadedState": null,
	
		/**
		 * Source url for AJAX data for the table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sAjaxSource": null,
	
		/**
		 * Property from a given object from which to read the table data from. This
		 * can be an empty string (when not server-side processing), in which case
		 * it is  assumed an an array is given directly.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sAjaxDataProp": null,
	
		/**
		 * Note if draw should be blocked while getting data
		 *  @type boolean
		 *  @default true
		 */
		"bAjaxDataGet": true,
	
		/**
		 * The last jQuery XHR object that was used for server-side data gathering.
		 * This can be used for working with the XHR information in one of the
		 * callbacks
		 *  @type object
		 *  @default null
		 */
		"jqXHR": null,
	
		/**
		 * JSON returned from the server in the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"json": undefined,
	
		/**
		 * Data submitted as part of the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"oAjaxData": undefined,
	
		/**
		 * Function to get the server-side data.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnServerData": null,
	
		/**
		 * Functions which are called prior to sending an Ajax request so extra
		 * parameters can easily be sent to the server
		 *  @type array
		 *  @default []
		 */
		"aoServerParams": [],
	
		/**
		 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
		 * required).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sServerMethod": null,
	
		/**
		 * Format numbers for display.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnFormatNumber": null,
	
		/**
		 * List of options that can be used for the user selectable length menu.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aLengthMenu": null,
	
		/**
		 * Counter for the draws that the table does. Also used as a tracker for
		 * server-side processing
		 *  @type int
		 *  @default 0
		 */
		"iDraw": 0,
	
		/**
		 * Indicate if a redraw is being done - useful for Ajax
		 *  @type boolean
		 *  @default false
		 */
		"bDrawing": false,
	
		/**
		 * Draw index (iDraw) of the last error when parsing the returned data
		 *  @type int
		 *  @default -1
		 */
		"iDrawError": -1,
	
		/**
		 * Paging display length
		 *  @type int
		 *  @default 10
		 */
		"_iDisplayLength": 10,
	
		/**
		 * Paging start point - aiDisplay index
		 *  @type int
		 *  @default 0
		 */
		"_iDisplayStart": 0,
	
		/**
		 * Server-side processing - number of records in the result set
		 * (i.e. before filtering), Use fnRecordsTotal rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type int
		 *  @default 0
		 *  @private
		 */
		"_iRecordsTotal": 0,
	
		/**
		 * Server-side processing - number of records in the current display set
		 * (i.e. after filtering). Use fnRecordsDisplay rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type boolean
		 *  @default 0
		 *  @private
		 */
		"_iRecordsDisplay": 0,
	
		/**
		 * The classes to use for the table
		 *  @type object
		 *  @default {}
		 */
		"oClasses": {},
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if filtering has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bFiltered": false,
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if sorting has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bSorted": false,
	
		/**
		 * Indicate that if multiple rows are in the header and there is more than
		 * one unique cell per column, if the top one (true) or bottom one (false)
		 * should be used for sorting / title by DataTables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bSortCellsTop": null,
	
		/**
		 * Initialisation object that is used for the table
		 *  @type object
		 *  @default null
		 */
		"oInit": null,
	
		/**
		 * Destroy callback functions - for plug-ins to attach themselves to the
		 * destroy so they can clean up markup and events.
		 *  @type array
		 *  @default []
		 */
		"aoDestroyCallback": [],
	
	
		/**
		 * Get the number of records in the current record set, before filtering
		 *  @type function
		 */
		"fnRecordsTotal": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsTotal * 1 :
				this.aiDisplayMaster.length;
		},
	
		/**
		 * Get the number of records in the current record set, after filtering
		 *  @type function
		 */
		"fnRecordsDisplay": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsDisplay * 1 :
				this.aiDisplay.length;
		},
	
		/**
		 * Get the display end point - aiDisplay index
		 *  @type function
		 */
		"fnDisplayEnd": function ()
		{
			var
				len      = this._iDisplayLength,
				start    = this._iDisplayStart,
				calc     = start + len,
				records  = this.aiDisplay.length,
				features = this.oFeatures,
				paginate = features.bPaginate;
	
			if ( features.bServerSide ) {
				return paginate === false || len === -1 ?
					start + records :
					Math.min( start+len, this._iRecordsDisplay );
			}
			else {
				return ! paginate || calc>records || len===-1 ?
					records :
					calc;
			}
		},
	
		/**
		 * The DataTables object for this table
		 *  @type object
		 *  @default null
		 */
		"oInstance": null,
	
		/**
		 * Unique identifier for each instance of the DataTables object. If there
		 * is an ID on the table node, then it takes that value, otherwise an
		 * incrementing internal counter is used.
		 *  @type string
		 *  @default null
		 */
		"sInstance": null,
	
		/**
		 * tabindex attribute value that is added to DataTables control elements, allowing
		 * keyboard navigation of the table and its controls.
		 */
		"iTabIndex": 0,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollHead": null,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollFoot": null,
	
		/**
		 * Last applied sort
		 *  @type array
		 *  @default []
		 */
		"aLastSort": [],
	
		/**
		 * Stored plug-in instances
		 *  @type object
		 *  @default {}
		 */
		"oPlugins": {},
	
		/**
		 * Function used to get a row's id from the row's data
		 *  @type function
		 *  @default null
		 */
		"rowIdFn": null,
	
		/**
		 * Data location where to store a row's id
		 *  @type string
		 *  @default null
		 */
		"rowId": null
	};

	/**
	 * Extension object for DataTables that is used to provide all extension
	 * options.
	 *
	 * Note that the `DataTable.ext` object is available through
	 * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
	 * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
	 *  @namespace
	 *  @extends DataTable.models.ext
	 */
	
	
	/**
	 * DataTables extensions
	 * 
	 * This namespace acts as a collection area for plug-ins that can be used to
	 * extend DataTables capabilities. Indeed many of the build in methods
	 * use this method to provide their own capabilities (sorting methods for
	 * example).
	 *
	 * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy
	 * reasons
	 *
	 *  @namespace
	 */
	DataTable.ext = _ext = {
		/**
		 * Buttons. For use with the Buttons extension for DataTables. This is
		 * defined here so other extensions can define buttons regardless of load
		 * order. It is _not_ used by DataTables core.
		 *
		 *  @type object
		 *  @default {}
		 */
		buttons: {},
	
	
		/**
		 * Element class names
		 *
		 *  @type object
		 *  @default {}
		 */
		classes: {},
	
	
		/**
		 * DataTables build type (expanded by the download builder)
		 *
		 *  @type string
		 */
		builder: "-source-",
	
	
		/**
		 * Error reporting.
		 * 
		 * How should DataTables report an error. Can take the value 'alert',
		 * 'throw', 'none' or a function.
		 *
		 *  @type string|function
		 *  @default alert
		 */
		errMode: "alert",
	
	
		/**
		 * Feature plug-ins.
		 * 
		 * This is an array of objects which describe the feature plug-ins that are
		 * available to DataTables. These feature plug-ins are then available for
		 * use through the `dom` initialisation option.
		 * 
		 * Each feature plug-in is described by an object which must have the
		 * following properties:
		 * 
		 * * `fnInit` - function that is used to initialise the plug-in,
		 * * `cFeature` - a character so the feature can be enabled by the `dom`
		 *   instillation option. This is case sensitive.
		 *
		 * The `fnInit` function has the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 *
		 * And the following return is expected:
		 * 
		 * * {node|null} The element which contains your feature. Note that the
		 *   return may also be void if your plug-in does not require to inject any
		 *   DOM elements into DataTables control (`dom`) - for example this might
		 *   be useful when developing a plug-in which allows table control via
		 *   keyboard entry
		 *
		 *  @type array
		 *
		 *  @example
		 *    $.fn.dataTable.ext.features.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T"
		 *    } );
		 */
		feature: [],
	
	
		/**
		 * Row searching.
		 * 
		 * This method of searching is complimentary to the default type based
		 * searching, and a lot more comprehensive as it allows you complete control
		 * over the searching logic. Each element in this array is a function
		 * (parameters described below) that is called for every row in the table,
		 * and your logic decides if it should be included in the searching data set
		 * or not.
		 *
		 * Searching functions have the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{array|object}` Data for the row to be processed (same as the
		 *    original format that was passed in as the data source, or an array
		 *    from a DOM data source
		 * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
		 *    can be useful to retrieve the `TR` element if you need DOM interaction.
		 *
		 * And the following return is expected:
		 *
		 * * {boolean} Include the row in the searched result set (true) or not
		 *   (false)
		 *
		 * Note that as with the main search ability in DataTables, technically this
		 * is "filtering", since it is subtractive. However, for consistency in
		 * naming we call it searching here.
		 *
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // The following example shows custom search being applied to the
		 *    // fourth column (i.e. the data[3] index) based on two input values
		 *    // from the end-user, matching the data in a certain range.
		 *    $.fn.dataTable.ext.search.push(
		 *      function( settings, data, dataIndex ) {
		 *        var min = document.getElementById('min').value * 1;
		 *        var max = document.getElementById('max').value * 1;
		 *        var version = data[3] == "-" ? 0 : data[3]*1;
		 *
		 *        if ( min == "" && max == "" ) {
		 *          return true;
		 *        }
		 *        else if ( min == "" && version < max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && "" == max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && version < max ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
		 *    );
		 */
		search: [],
	
	
		/**
		 * Selector extensions
		 *
		 * The `selector` option can be used to extend the options available for the
		 * selector modifier options (`selector-modifier` object data type) that
		 * each of the three built in selector types offer (row, column and cell +
		 * their plural counterparts). For example the Select extension uses this
		 * mechanism to provide an option to select only rows, columns and cells
		 * that have been marked as selected by the end user (`{selected: true}`),
		 * which can be used in conjunction with the existing built in selector
		 * options.
		 *
		 * Each property is an array to which functions can be pushed. The functions
		 * take three attributes:
		 *
		 * * Settings object for the host table
		 * * Options object (`selector-modifier` object type)
		 * * Array of selected item indexes
		 *
		 * The return is an array of the resulting item indexes after the custom
		 * selector has been applied.
		 *
		 *  @type object
		 */
		selector: {
			cell: [],
			column: [],
			row: []
		},
	
	
		/**
		 * Internal functions, exposed for used in plug-ins.
		 * 
		 * Please note that you should not need to use the internal methods for
		 * anything other than a plug-in (and even then, try to avoid if possible).
		 * The internal function may change between releases.
		 *
		 *  @type object
		 *  @default {}
		 */
		internal: {},
	
	
		/**
		 * Legacy configuration options. Enable and disable legacy options that
		 * are available in DataTables.
		 *
		 *  @type object
		 */
		legacy: {
			/**
			 * Enable / disable DataTables 1.9 compatible server-side processing
			 * requests
			 *
			 *  @type boolean
			 *  @default null
			 */
			ajax: null
		},
	
	
		/**
		 * Pagination plug-in methods.
		 * 
		 * Each entry in this object is a function and defines which buttons should
		 * be shown by the pagination rendering method that is used for the table:
		 * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
		 * buttons are displayed in the document, while the functions here tell it
		 * what buttons to display. This is done by returning an array of button
		 * descriptions (what each button will do).
		 *
		 * Pagination types (the four built in options and any additional plug-in
		 * options defined here) can be used through the `paginationType`
		 * initialisation parameter.
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{int} page` The current page index
		 * 2. `{int} pages` The number of pages in the table
		 *
		 * Each function is expected to return an array where each element of the
		 * array can be one of:
		 *
		 * * `first` - Jump to first page when activated
		 * * `last` - Jump to last page when activated
		 * * `previous` - Show previous page when activated
		 * * `next` - Show next page when activated
		 * * `{int}` - Show page of the index given
		 * * `{array}` - A nested array containing the above elements to add a
		 *   containing 'DIV' element (might be useful for styling).
		 *
		 * Note that DataTables v1.9- used this object slightly differently whereby
		 * an object with two functions would be defined for each plug-in. That
		 * ability is still supported by DataTables 1.10+ to provide backwards
		 * compatibility, but this option of use is now decremented and no longer
		 * documented in DataTables 1.10+.
		 *
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Show previous, next and current page buttons only
		 *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
		 *      return [ 'previous', page, 'next' ];
		 *    };
		 */
		pager: {},
	
	
		renderer: {
			pageButton: {},
			header: {}
		},
	
	
		/**
		 * Ordering plug-ins - custom data source
		 * 
		 * The extension options for ordering of data available here is complimentary
		 * to the default type based ordering that DataTables typically uses. It
		 * allows much greater control over the the data that is being used to
		 * order a column, but is necessarily therefore more complex.
		 * 
		 * This type of ordering is useful if you want to do ordering based on data
		 * live from the DOM (for example the contents of an 'input' element) rather
		 * than just the static string that DataTables knows of.
		 * 
		 * The way these plug-ins work is that you create an array of the values you
		 * wish to be ordering for the column in question and then return that
		 * array. The data in the array much be in the index order of the rows in
		 * the table (not the currently ordering order!). Which order data gathering
		 * function is run here depends on the `dt-init columns.orderDataType`
		 * parameter that is used for the column (if any).
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{int}` Target column index
		 *
		 * Each function is expected to return an array:
		 *
		 * * `{array}` Data for the column to be ordering upon
		 *
		 *  @type array
		 *
		 *  @example
		 *    // Ordering using `input` node values
		 *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
		 *    {
		 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
		 *        return $('input', td).val();
		 *      } );
		 *    }
		 */
		order: {},
	
	
		/**
		 * Type based plug-ins.
		 *
		 * Each column in DataTables has a type assigned to it, either by automatic
		 * detection or by direct assignment using the `type` option for the column.
		 * The type of a column will effect how it is ordering and search (plug-ins
		 * can also make use of the column type if required).
		 *
		 * @namespace
		 */
		type: {
			/**
			 * Type detection functions.
			 *
			 * The functions defined in this object are used to automatically detect
			 * a column's type, making initialisation of DataTables super easy, even
			 * when complex data is in the table.
			 *
			 * The functions defined take two parameters:
			 *
		     *  1. `{*}` Data from the column cell to be analysed
		     *  2. `{settings}` DataTables settings object. This can be used to
		     *     perform context specific type detection - for example detection
		     *     based on language settings such as using a comma for a decimal
		     *     place. Generally speaking the options from the settings will not
		     *     be required
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Data type detected, or null if unknown (and thus
			 *   pass it on to the other type detection functions.
			 *
			 *  @type array
			 *
			 *  @example
			 *    // Currency type detection plug-in:
			 *    $.fn.dataTable.ext.type.detect.push(
			 *      function ( data, settings ) {
			 *        // Check the numeric part
			 *        if ( ! data.substring(1).match(/[0-9]/) ) {
			 *          return null;
			 *        }
			 *
			 *        // Check prefixed by currency
			 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
			 *          return 'currency';
			 *        }
			 *        return null;
			 *      }
			 *    );
			 */
			detect: [],
	
	
			/**
			 * Type based search formatting.
			 *
			 * The type based searching functions can be used to pre-format the
			 * data to be search on. For example, it can be used to strip HTML
			 * tags or to de-format telephone numbers for numeric only searching.
			 *
			 * Note that is a search is not defined for a column of a given type,
			 * no search formatting will be performed.
			 * 
			 * Pre-processing of searching data plug-ins - When you assign the sType
			 * for a column (or have it automatically detected for you by DataTables
			 * or a type detection plug-in), you will typically be using this for
			 * custom sorting, but it can also be used to provide custom searching
			 * by allowing you to pre-processing the data and returning the data in
			 * the format that should be searched upon. This is done by adding
			 * functions this object with a parameter name which matches the sType
			 * for that target column. This is the corollary of <i>afnSortData</i>
			 * for searching data.
			 *
			 * The functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for searching
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Formatted string that will be used for the searching.
			 *
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
			 *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
			 *    }
			 */
			search: {},
	
	
			/**
			 * Type based ordering.
			 *
			 * The column type tells DataTables what ordering to apply to the table
			 * when a column is sorted upon. The order for each type that is defined,
			 * is defined by the functions available in this object.
			 *
			 * Each ordering option can be described by three properties added to
			 * this object:
			 *
			 * * `{type}-pre` - Pre-formatting function
			 * * `{type}-asc` - Ascending order function
			 * * `{type}-desc` - Descending order function
			 *
			 * All three can be used together, only `{type}-pre` or only
			 * `{type}-asc` and `{type}-desc` together. It is generally recommended
			 * that only `{type}-pre` is used, as this provides the optimal
			 * implementation in terms of speed, although the others are provided
			 * for compatibility with existing Javascript sort functions.
			 *
			 * `{type}-pre`: Functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for ordering
			 *
			 * And return:
			 *
			 * * `{*}` Data to be sorted upon
			 *
			 * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
			 * functions, taking two parameters:
			 *
		     *  1. `{*}` Data to compare to the second parameter
		     *  2. `{*}` Data to compare to the first parameter
			 *
			 * And returning:
			 *
			 * * `{*}` Ordering match: <0 if first parameter should be sorted lower
			 *   than the second parameter, ===0 if the two parameters are equal and
			 *   >0 if the first parameter should be sorted height than the second
			 *   parameter.
			 * 
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    // Numeric ordering of formatted numbers with a pre-formatter
			 *    $.extend( $.fn.dataTable.ext.type.order, {
			 *      "string-pre": function(x) {
			 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
			 *        return parseFloat( a );
			 *      }
			 *    } );
			 *
			 *  @example
			 *    // Case-sensitive string ordering, with no pre-formatting method
			 *    $.extend( $.fn.dataTable.ext.order, {
			 *      "string-case-asc": function(x,y) {
			 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			 *      },
			 *      "string-case-desc": function(x,y) {
			 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
			 *      }
			 *    } );
			 */
			order: {}
		},
	
		/**
		 * Unique DataTables instance counter
		 *
		 * @type int
		 * @private
		 */
		_unique: 0,
	
	
		//
		// Depreciated
		// The following properties are retained for backwards compatiblity only.
		// The should not be used in new projects and will be removed in a future
		// version
		//
	
		/**
		 * Version check function.
		 *  @type function
		 *  @depreciated Since 1.10
		 */
		fnVersionCheck: DataTable.fnVersionCheck,
	
	
		/**
		 * Index for what 'this' index API functions should use
		 *  @type int
		 *  @deprecated Since v1.10
		 */
		iApiIndex: 0,
	
	
		/**
		 * jQuery UI class container
		 *  @type object
		 *  @deprecated Since v1.10
		 */
		oJUIClasses: {},
	
	
		/**
		 * Software version
		 *  @type string
		 *  @deprecated Since v1.10
		 */
		sVersion: DataTable.version
	};
	
	
	//
	// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
	//
	$.extend( _ext, {
		afnFiltering: _ext.search,
		aTypes:       _ext.type.detect,
		ofnSearch:    _ext.type.search,
		oSort:        _ext.type.order,
		afnSortData:  _ext.order,
		aoFeatures:   _ext.feature,
		oApi:         _ext.internal,
		oStdClasses:  _ext.classes,
		oPagination:  _ext.pager
	} );
	
	
	$.extend( DataTable.ext.classes, {
		"sTable": "dataTable",
		"sNoFooter": "no-footer",
	
		/* Paging buttons */
		"sPageButton": "paginate_button",
		"sPageButtonActive": "current",
		"sPageButtonDisabled": "disabled",
	
		/* Striping classes */
		"sStripeOdd": "odd",
		"sStripeEven": "even",
	
		/* Empty row */
		"sRowEmpty": "dataTables_empty",
	
		/* Features */
		"sWrapper": "dataTables_wrapper",
		"sFilter": "dataTables_filter",
		"sInfo": "dataTables_info",
		"sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
		"sLength": "dataTables_length",
		"sProcessing": "dataTables_processing",
	
		/* Sorting */
		"sSortAsc": "sorting_asc",
		"sSortDesc": "sorting_desc",
		"sSortable": "sorting", /* Sortable in both directions */
		"sSortableAsc": "sorting_asc_disabled",
		"sSortableDesc": "sorting_desc_disabled",
		"sSortableNone": "sorting_disabled",
		"sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
	
		/* Filtering */
		"sFilterInput": "",
	
		/* Page length */
		"sLengthSelect": "",
	
		/* Scrolling */
		"sScrollWrapper": "dataTables_scroll",
		"sScrollHead": "dataTables_scrollHead",
		"sScrollHeadInner": "dataTables_scrollHeadInner",
		"sScrollBody": "dataTables_scrollBody",
		"sScrollFoot": "dataTables_scrollFoot",
		"sScrollFootInner": "dataTables_scrollFootInner",
	
		/* Misc */
		"sHeaderTH": "",
		"sFooterTH": "",
	
		// Deprecated
		"sSortJUIAsc": "",
		"sSortJUIDesc": "",
		"sSortJUI": "",
		"sSortJUIAscAllowed": "",
		"sSortJUIDescAllowed": "",
		"sSortJUIWrapper": "",
		"sSortIcon": "",
		"sJUIHeader": "",
		"sJUIFooter": ""
	} );
	
	
	var extPagination = DataTable.ext.pager;
	
	function _numbers ( page, pages ) {
		var
			numbers = [],
			buttons = extPagination.numbers_length,
			half = Math.floor( buttons / 2 ),
			i = 1;
	
		if ( pages <= buttons ) {
			numbers = _range( 0, pages );
		}
		else if ( page <= half ) {
			numbers = _range( 0, buttons-2 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
		}
		else if ( page >= pages - 1 - half ) {
			numbers = _range( pages-(buttons-2), pages );
			numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6
			numbers.splice( 0, 0, 0 );
		}
		else {
			numbers = _range( page-half+2, page+half-1 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
			numbers.splice( 0, 0, 'ellipsis' );
			numbers.splice( 0, 0, 0 );
		}
	
		numbers.DT_el = 'span';
		return numbers;
	}
	
	
	$.extend( extPagination, {
		simple: function ( page, pages ) {
			return [ 'previous', 'next' ];
		},
	
		full: function ( page, pages ) {
			return [  'first', 'previous', 'next', 'last' ];
		},
	
		numbers: function ( page, pages ) {
			return [ _numbers(page, pages) ];
		},
	
		simple_numbers: function ( page, pages ) {
			return [ 'previous', _numbers(page, pages), 'next' ];
		},
	
		full_numbers: function ( page, pages ) {
			return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];
		},
		
		first_last_numbers: function (page, pages) {
	 		return ['first', _numbers(page, pages), 'last'];
	 	},
	
		// For testing and plug-ins to use
		_numbers: _numbers,
	
		// Number of number buttons (including ellipsis) to show. _Must be odd!_
		numbers_length: 7
	} );
	
	
	$.extend( true, DataTable.ext.renderer, {
		pageButton: {
			_: function ( settings, host, idx, buttons, page, pages ) {
				var classes = settings.oClasses;
				var lang = settings.oLanguage.oPaginate;
				var aria = settings.oLanguage.oAria.paginate || {};
				var btnDisplay, btnClass, counter=0;
	
				var attach = function( container, buttons ) {
					var i, ien, node, button;
					var clickHandler = function ( e ) {
						_fnPageChange( settings, e.data.action, true );
					};
	
					for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
						button = buttons[i];
	
						if ( $.isArray( button ) ) {
							var inner = $( '<'+(button.DT_el || 'div')+'/>' )
								.appendTo( container );
							attach( inner, button );
						}
						else {
							btnDisplay = null;
							btnClass = '';
	
							switch ( button ) {
								case 'ellipsis':
									container.append('<span class="ellipsis">&#x2026;</span>');
									break;
	
								case 'first':
									btnDisplay = lang.sFirst;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'previous':
									btnDisplay = lang.sPrevious;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'next':
									btnDisplay = lang.sNext;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'last':
									btnDisplay = lang.sLast;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								default:
									btnDisplay = button + 1;
									btnClass = page === button ?
										classes.sPageButtonActive : '';
									break;
							}
	
							if ( btnDisplay !== null ) {
								node = $('<a>', {
										'class': classes.sPageButton+' '+btnClass,
										'aria-controls': settings.sTableId,
										'aria-label': aria[ button ],
										'data-dt-idx': counter,
										'tabindex': settings.iTabIndex,
										'id': idx === 0 && typeof button === 'string' ?
											settings.sTableId +'_'+ button :
											null
									} )
									.html( btnDisplay )
									.appendTo( container );
	
								_fnBindAction(
									node, {action: button}, clickHandler
								);
	
								counter++;
							}
						}
					}
				};
	
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame. Try / catch the error. Not good for
				// accessibility, but neither are frames.
				var activeEl;
	
				try {
					// Because this approach is destroying and recreating the paging
					// elements, focus is lost on the select button which is bad for
					// accessibility. So we want to restore focus once the draw has
					// completed
					activeEl = $(host).find(document.activeElement).data('dt-idx');
				}
				catch (e) {}
	
				attach( $(host).empty(), buttons );
	
				if ( activeEl !== undefined ) {
					$(host).find( '[data-dt-idx='+activeEl+']' ).focus();
				}
			}
		}
	} );
	
	
	
	// Built in type detection. See model.ext.aTypes for information about
	// what is required from this methods.
	$.extend( DataTable.ext.type.detect, [
		// Plain numbers - first since V8 detects some plain numbers as dates
		// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal ) ? 'num'+decimal : null;
		},
	
		// Dates (only those recognised by the browser's Date.parse)
		function ( d, settings )
		{
			// V8 tries _very_ hard to make a string passed into `Date.parse()`
			// valid, so we need to use a regex to restrict date formats. Use a
			// plug-in for anything other than ISO8601 style strings
			if ( d && !(d instanceof Date) && ! _re_date.test(d) ) {
				return null;
			}
			var parsed = Date.parse(d);
			return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
		},
	
		// Formatted numbers
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;
		},
	
		// HTML numeric
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;
		},
	
		// HTML numeric, formatted
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;
		},
	
		// HTML (this is strict checking - there must be html)
		function ( d, settings )
		{
			return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
				'html' : null;
		}
	] );
	
	
	
	// Filter formatting functions. See model.ext.ofnSearch for information about
	// what is required from these methods.
	// 
	// Note that additional search methods are added for the html numbers and
	// html formatted numbers by `_addNumericSort()` when we know what the decimal
	// place is
	
	
	$.extend( DataTable.ext.type.search, {
		html: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data
						.replace( _re_new_lines, " " )
						.replace( _re_html, "" ) :
					'';
		},
	
		string: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data.replace( _re_new_lines, " " ) :
					data;
		}
	} );
	
	
	
	var __numericReplace = function ( d, decimalPlace, re1, re2 ) {
		if ( d !== 0 && (!d || d === '-') ) {
			return -Infinity;
		}
	
		// If a decimal place other than `.` is used, it needs to be given to the
		// function so we can detect it and replace with a `.` which is the only
		// decimal place Javascript recognises - it is not locale aware.
		if ( decimalPlace ) {
			d = _numToDecimal( d, decimalPlace );
		}
	
		if ( d.replace ) {
			if ( re1 ) {
				d = d.replace( re1, '' );
			}
	
			if ( re2 ) {
				d = d.replace( re2, '' );
			}
		}
	
		return d * 1;
	};
	
	
	// Add the numeric 'deformatting' functions for sorting and search. This is done
	// in a function to provide an easy ability for the language options to add
	// additional methods if a non-period decimal place is used.
	function _addNumericSort ( decimalPlace ) {
		$.each(
			{
				// Plain numbers
				"num": function ( d ) {
					return __numericReplace( d, decimalPlace );
				},
	
				// Formatted numbers
				"num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_formatted_numeric );
				},
	
				// HTML numeric
				"html-num": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html );
				},
	
				// HTML numeric, formatted
				"html-num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );
				}
			},
			function ( key, fn ) {
				// Add the ordering method
				_ext.type.order[ key+decimalPlace+'-pre' ] = fn;
	
				// For HTML types add a search formatter that will strip the HTML
				if ( key.match(/^html\-/) ) {
					_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;
				}
			}
		);
	}
	
	
	// Default sort methods
	$.extend( _ext.type.order, {
		// Dates
		"date-pre": function ( d ) {
			var ts = Date.parse( d );
			return isNaN(ts) ? -Infinity : ts;
		},
	
		// html
		"html-pre": function ( a ) {
			return _empty(a) ?
				'' :
				a.replace ?
					a.replace( /<.*?>/g, "" ).toLowerCase() :
					a+'';
		},
	
		// string
		"string-pre": function ( a ) {
			// This is a little complex, but faster than always calling toString,
			// http://jsperf.com/tostring-v-check
			return _empty(a) ?
				'' :
				typeof a === 'string' ?
					a.toLowerCase() :
					! a.toString ?
						'' :
						a.toString();
		},
	
		// string-asc and -desc are retained only for compatibility with the old
		// sort methods
		"string-asc": function ( x, y ) {
			return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		},
	
		"string-desc": function ( x, y ) {
			return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		}
	} );
	
	
	// Numeric sorting types - order doesn't matter here
	_addNumericSort( '' );
	
	
	$.extend( true, DataTable.ext.renderer, {
		header: {
			_: function ( settings, cell, column, classes ) {
				// No additional mark-up required
				// Attach a sort listener to update on sort - note that using the
				// `DT` namespace will allow the event to be removed automatically
				// on destroy, while the `dt` namespaced event is the one we are
				// listening for
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) { // need to check this this is the host
						return;               // table, not a nested one
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass(
							column.sSortingClass +' '+
							classes.sSortAsc +' '+
							classes.sSortDesc
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
				} );
			},
	
			jqueryui: function ( settings, cell, column, classes ) {
				$('<div/>')
					.addClass( classes.sSortJUIWrapper )
					.append( cell.contents() )
					.append( $('<span/>')
						.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )
					)
					.appendTo( cell );
	
				// Attach a sort listener to update on sort
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) {
						return;
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass( classes.sSortAsc +" "+classes.sSortDesc )
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
	
					cell
						.find( 'span.'+classes.sSortIcon )
						.removeClass(
							classes.sSortJUIAsc +" "+
							classes.sSortJUIDesc +" "+
							classes.sSortJUI +" "+
							classes.sSortJUIAscAllowed +" "+
							classes.sSortJUIDescAllowed
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortJUIDesc :
								column.sSortingClassJUI
						);
				} );
			}
		}
	} );
	
	/*
	 * Public helper functions. These aren't used internally by DataTables, or
	 * called by any of the options passed into DataTables, but they can be used
	 * externally by developers working with DataTables. They are helper functions
	 * to make working with DataTables a little bit easier.
	 */
	
	var __htmlEscapeEntities = function ( d ) {
		return typeof d === 'string' ?
			d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;') :
			d;
	};
	
	/**
	 * Helpers for `columns.render`.
	 *
	 * The options defined here can be used with the `columns.render` initialisation
	 * option to provide a display renderer. The following functions are defined:
	 *
	 * * `number` - Will format numeric data (defined by `columns.data`) for
	 *   display, retaining the original unformatted data for sorting and filtering.
	 *   It takes 5 parameters:
	 *   * `string` - Thousands grouping separator
	 *   * `string` - Decimal point indicator
	 *   * `integer` - Number of decimal points to show
	 *   * `string` (optional) - Prefix.
	 *   * `string` (optional) - Postfix (/suffix).
	 * * `text` - Escape HTML to help prevent XSS attacks. It has no optional
	 *   parameters.
	 *
	 * @example
	 *   // Column definition using the number renderer
	 *   {
	 *     data: "salary",
	 *     render: $.fn.dataTable.render.number( '\'', '.', 0, '$' )
	 *   }
	 *
	 * @namespace
	 */
	DataTable.render = {
		number: function ( thousands, decimal, precision, prefix, postfix ) {
			return {
				display: function ( d ) {
					if ( typeof d !== 'number' && typeof d !== 'string' ) {
						return d;
					}
	
					var negative = d < 0 ? '-' : '';
					var flo = parseFloat( d );
	
					// If NaN then there isn't much formatting that we can do - just
					// return immediately, escaping any HTML (this was supposed to
					// be a number after all)
					if ( isNaN( flo ) ) {
						return __htmlEscapeEntities( d );
					}
	
					flo = flo.toFixed( precision );
					d = Math.abs( flo );
	
					var intPart = parseInt( d, 10 );
					var floatPart = precision ?
						decimal+(d - intPart).toFixed( precision ).substring( 2 ):
						'';
	
					return negative + (prefix||'') +
						intPart.toString().replace(
							/\B(?=(\d{3})+(?!\d))/g, thousands
						) +
						floatPart +
						(postfix||'');
				}
			};
		},
	
		text: function () {
			return {
				display: __htmlEscapeEntities,
				filter: __htmlEscapeEntities
			};
		}
	};
	
	
	/*
	 * This is really a good bit rubbish this method of exposing the internal methods
	 * publicly... - To be fixed in 2.0 using methods on the prototype
	 */
	
	
	/**
	 * Create a wrapper function for exporting an internal functions to an external API.
	 *  @param {string} fn API function name
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#internal
	 */
	function _fnExternApiFunc (fn)
	{
		return function() {
			var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(
				Array.prototype.slice.call(arguments)
			);
			return DataTable.ext.internal[fn].apply( this, args );
		};
	}
	
	
	/**
	 * Reference to internal functions for use by plug-in developers. Note that
	 * these methods are references to internal functions and are considered to be
	 * private. If you use these methods, be aware that they are liable to change
	 * between versions.
	 *  @namespace
	 */
	$.extend( DataTable.ext.internal, {
		_fnExternApiFunc: _fnExternApiFunc,
		_fnBuildAjax: _fnBuildAjax,
		_fnAjaxUpdate: _fnAjaxUpdate,
		_fnAjaxParameters: _fnAjaxParameters,
		_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
		_fnAjaxDataSrc: _fnAjaxDataSrc,
		_fnAddColumn: _fnAddColumn,
		_fnColumnOptions: _fnColumnOptions,
		_fnAdjustColumnSizing: _fnAdjustColumnSizing,
		_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
		_fnColumnIndexToVisible: _fnColumnIndexToVisible,
		_fnVisbleColumns: _fnVisbleColumns,
		_fnGetColumns: _fnGetColumns,
		_fnColumnTypes: _fnColumnTypes,
		_fnApplyColumnDefs: _fnApplyColumnDefs,
		_fnHungarianMap: _fnHungarianMap,
		_fnCamelToHungarian: _fnCamelToHungarian,
		_fnLanguageCompat: _fnLanguageCompat,
		_fnBrowserDetect: _fnBrowserDetect,
		_fnAddData: _fnAddData,
		_fnAddTr: _fnAddTr,
		_fnNodeToDataIndex: _fnNodeToDataIndex,
		_fnNodeToColumnIndex: _fnNodeToColumnIndex,
		_fnGetCellData: _fnGetCellData,
		_fnSetCellData: _fnSetCellData,
		_fnSplitObjNotation: _fnSplitObjNotation,
		_fnGetObjectDataFn: _fnGetObjectDataFn,
		_fnSetObjectDataFn: _fnSetObjectDataFn,
		_fnGetDataMaster: _fnGetDataMaster,
		_fnClearTable: _fnClearTable,
		_fnDeleteIndex: _fnDeleteIndex,
		_fnInvalidate: _fnInvalidate,
		_fnGetRowElements: _fnGetRowElements,
		_fnCreateTr: _fnCreateTr,
		_fnBuildHead: _fnBuildHead,
		_fnDrawHead: _fnDrawHead,
		_fnDraw: _fnDraw,
		_fnReDraw: _fnReDraw,
		_fnAddOptionsHtml: _fnAddOptionsHtml,
		_fnDetectHeader: _fnDetectHeader,
		_fnGetUniqueThs: _fnGetUniqueThs,
		_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
		_fnFilterComplete: _fnFilterComplete,
		_fnFilterCustom: _fnFilterCustom,
		_fnFilterColumn: _fnFilterColumn,
		_fnFilter: _fnFilter,
		_fnFilterCreateSearch: _fnFilterCreateSearch,
		_fnEscapeRegex: _fnEscapeRegex,
		_fnFilterData: _fnFilterData,
		_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
		_fnUpdateInfo: _fnUpdateInfo,
		_fnInfoMacros: _fnInfoMacros,
		_fnInitialise: _fnInitialise,
		_fnInitComplete: _fnInitComplete,
		_fnLengthChange: _fnLengthChange,
		_fnFeatureHtmlLength: _fnFeatureHtmlLength,
		_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
		_fnPageChange: _fnPageChange,
		_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
		_fnProcessingDisplay: _fnProcessingDisplay,
		_fnFeatureHtmlTable: _fnFeatureHtmlTable,
		_fnScrollDraw: _fnScrollDraw,
		_fnApplyToChildren: _fnApplyToChildren,
		_fnCalculateColumnWidths: _fnCalculateColumnWidths,
		_fnThrottle: _fnThrottle,
		_fnConvertToWidth: _fnConvertToWidth,
		_fnGetWidestNode: _fnGetWidestNode,
		_fnGetMaxLenString: _fnGetMaxLenString,
		_fnStringToCss: _fnStringToCss,
		_fnSortFlatten: _fnSortFlatten,
		_fnSort: _fnSort,
		_fnSortAria: _fnSortAria,
		_fnSortListener: _fnSortListener,
		_fnSortAttachListener: _fnSortAttachListener,
		_fnSortingClasses: _fnSortingClasses,
		_fnSortData: _fnSortData,
		_fnSaveState: _fnSaveState,
		_fnLoadState: _fnLoadState,
		_fnSettingsFromNode: _fnSettingsFromNode,
		_fnLog: _fnLog,
		_fnMap: _fnMap,
		_fnBindAction: _fnBindAction,
		_fnCallbackReg: _fnCallbackReg,
		_fnCallbackFire: _fnCallbackFire,
		_fnLengthOverflow: _fnLengthOverflow,
		_fnRenderer: _fnRenderer,
		_fnDataSource: _fnDataSource,
		_fnRowAttributes: _fnRowAttributes,
		_fnExtend: _fnExtend,
		_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant
		                                // in 1.10, so this dead-end function is
		                                // added to prevent errors
	} );
	

	// jQuery access
	$.fn.dataTable = DataTable;

	// Provide access to the host jQuery object (circular reference)
	DataTable.$ = $;

	// Legacy aliases
	$.fn.dataTableSettings = DataTable.settings;
	$.fn.dataTableExt = DataTable.ext;

	// With a capital `D` we return a DataTables API instance rather than a
	// jQuery object
	$.fn.DataTable = function ( opts ) {
		return $(this).dataTable( opts ).api();
	};

	// All properties that are available to $.fn.dataTable should also be
	// available on $.fn.DataTable
	$.each( DataTable, function ( prop, val ) {
		$.fn.DataTable[ prop ] = val;
	} );


	// Information about events fired by DataTables - for documentation.
	/**
	 * Draw event, fired whenever the table is redrawn on the page, at the same
	 * point as fnDrawCallback. This may be useful for binding events or
	 * performing calculations when the table is altered at all.
	 *  @name DataTable#draw.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Search event, fired when the searching applied to the table (using the
	 * built-in global search, or column filters) is altered.
	 *  @name DataTable#search.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page change event, fired when the paging of the table is altered.
	 *  @name DataTable#page.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Order event, fired when the ordering applied to the table is altered.
	 *  @name DataTable#order.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * DataTables initialisation complete event, fired when the table is fully
	 * drawn, including Ajax data loaded, if Ajax data is required.
	 *  @name DataTable#init.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The JSON object request from the server - only
	 *    present if client-side Ajax sourced data is used</li></ol>
	 */

	/**
	 * State save event, fired when the table has changed state a new state save
	 * is required. This event allows modification of the state saving object
	 * prior to actually doing the save, including addition or other state
	 * properties (for plug-ins) or modification of a DataTables core property.
	 *  @name DataTable#stateSaveParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The state information to be saved
	 */

	/**
	 * State load event, fired when the table is loading state from the stored
	 * data, but prior to the settings object being modified by the saved state
	 * - allowing modification of the saved state is required or loading of
	 * state for a plug-in.
	 *  @name DataTable#stateLoadParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * State loaded event, fired when state has been loaded from stored data and
	 * the settings object has been modified by the loaded data.
	 *  @name DataTable#stateLoaded.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * Processing event, fired when DataTables is doing some kind of processing
	 * (be it, order, searcg or anything else). It can be used to indicate to
	 * the end user that there is something happening, or that something has
	 * finished.
	 *  @name DataTable#processing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {boolean} bShow Flag for if DataTables is doing processing or not
	 */

	/**
	 * Ajax (XHR) event, fired whenever an Ajax request is completed from a
	 * request to made to the server for new data. This event is called before
	 * DataTables processed the returned data, so it can also be used to pre-
	 * process the data returned from the server, if needed.
	 *
	 * Note that this trigger is called in `fnServerData`, if you override
	 * `fnServerData` and which to use this event, you need to trigger it in you
	 * success function.
	 *  @name DataTable#xhr.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {object} json JSON returned from the server
	 *
	 *  @example
	 *     // Use a custom property returned from the server in another DOM element
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       $('#status').html( json.status );
	 *     } );
	 *
	 *  @example
	 *     // Pre-process the data returned from the server
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {
	 *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;
	 *       }
	 *       // Note no return - manipulate the data directly in the JSON object.
	 *     } );
	 */

	/**
	 * Destroy event, fired when the DataTable is destroyed by calling fnDestroy
	 * or passing the bDestroy:true parameter in the initialisation object. This
	 * can be used to remove bound events, added DOM nodes, etc.
	 *  @name DataTable#destroy.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page length change event, fired when number of records to show on each
	 * page (the length) is changed.
	 *  @name DataTable#length.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {integer} len New length
	 */

	/**
	 * Column sizing has changed.
	 *  @name DataTable#column-sizing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Column visibility has changed.
	 *  @name DataTable#column-visibility.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {int} column Column index
	 *  @param {bool} vis `false` if column now hidden, or `true` if visible
	 */

	return $.fn.dataTable;
}));

/*! DataTables Bootstrap 4 integration
 * Â©2011-2017 SpryMedia Ltd - datatables.net/license
 */

/**
 * DataTables integration for Bootstrap 4. This requires Bootstrap 4 and
 * DataTables 1.10 or newer.
 *
 * This file sets the defaults and adds options to DataTables to style its
 * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap
 * for further information.
 */
(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				// Require DataTables, which attaches to jQuery, including
				// jQuery if needed and have a $ property so we can access the
				// jQuery object that is used
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/* Set the defaults for DataTables initialisation */
$.extend( true, DataTable.defaults, {
	dom:
		"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
		"<'row'<'col-sm-12'tr>>" +
		"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
	renderer: 'bootstrap'
} );


/* Default class modification */
$.extend( DataTable.ext.classes, {
	sWrapper:      "dataTables_wrapper dt-bootstrap4",
	sFilterInput:  "form-control form-control-sm",
	sLengthSelect: "custom-select custom-select-sm form-control form-control-sm",
	sProcessing:   "dataTables_processing card",
	sPageButton:   "paginate_button page-item"
} );


/* Bootstrap paging button renderer */
DataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {
	var api     = new DataTable.Api( settings );
	var classes = settings.oClasses;
	var lang    = settings.oLanguage.oPaginate;
	var aria = settings.oLanguage.oAria.paginate || {};
	var btnDisplay, btnClass, counter=0;

	var attach = function( container, buttons ) {
		var i, ien, node, button;
		var clickHandler = function ( e ) {
			e.preventDefault();
			if ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {
				api.page( e.data.action ).draw( 'page' );
			}
		};

		for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
			button = buttons[i];

			if ( $.isArray( button ) ) {
				attach( container, button );
			}
			else {
				btnDisplay = '';
				btnClass = '';

				switch ( button ) {
					case 'ellipsis':
						btnDisplay = '&#x2026;';
						btnClass = 'disabled';
						break;

					case 'first':
						btnDisplay = lang.sFirst;
						btnClass = button + (page > 0 ?
							'' : ' disabled');
						break;

					case 'previous':
						btnDisplay = lang.sPrevious;
						btnClass = button + (page > 0 ?
							'' : ' disabled');
						break;

					case 'next':
						btnDisplay = lang.sNext;
						btnClass = button + (page < pages-1 ?
							'' : ' disabled');
						break;

					case 'last':
						btnDisplay = lang.sLast;
						btnClass = button + (page < pages-1 ?
							'' : ' disabled');
						break;

					default:
						btnDisplay = button + 1;
						btnClass = page === button ?
							'active' : '';
						break;
				}

				if ( btnDisplay ) {
					node = $('<li>', {
							'class': classes.sPageButton+' '+btnClass,
							'id': idx === 0 && typeof button === 'string' ?
								settings.sTableId +'_'+ button :
								null
						} )
						.append( $('<a>', {
								'href': '#',
								'aria-controls': settings.sTableId,
								'aria-label': aria[ button ],
								'data-dt-idx': counter,
								'tabindex': settings.iTabIndex,
								'class': 'page-link'
							} )
							.html( btnDisplay )
						)
						.appendTo( container );

					settings.oApi._fnBindAction(
						node, {action: button}, clickHandler
					);

					counter++;
				}
			}
		}
	};

	// IE9 throws an 'unknown error' if document.activeElement is used
	// inside an iframe or frame. 
	var activeEl;

	try {
		// Because this approach is destroying and recreating the paging
		// elements, focus is lost on the select button which is bad for
		// accessibility. So we want to restore focus once the draw has
		// completed
		activeEl = $(host).find(document.activeElement).data('dt-idx');
	}
	catch (e) {}

	attach(
		$(host).empty().html('<ul class="pagination"/>').children('ul'),
		buttons
	);

	if ( activeEl !== undefined ) {
		$(host).find( '[data-dt-idx='+activeEl+']' ).focus();
	}
};


return DataTable;
}));

"use strict";
var defaults = {
	"language": {
		"paginate": {
			"first": '<i class="la la-angle-double-left"></i>',
			"last": '<i class="la la-angle-double-right"></i>',
			"next": '<i class="la la-angle-right"></i>',
			"previous": '<i class="la la-angle-left"></i>'
		}
	}
};

if (KTUtil.isRTL()) {
	defaults = {
		"language": {
			"paginate": {
				"first": '<i class="la la-angle-double-right"></i>',
				"last": '<i class="la la-angle-double-left"></i>',
				"next": '<i class="la la-angle-left"></i>',
				"previous": '<i class="la la-angle-right"></i>'
			}
		}
	}
}

$.extend(true, $.fn.dataTable.defaults, defaults);

// fix dropdown overflow inside datatable
KTApp.initAbsoluteDropdown('.dataTables_wrapper');
/*!
 AutoFill 2.3.3
 Â©2008-2018 SpryMedia Ltd - datatables.net/license
*/
(function(e){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(h){return e(h,window,document)}):"object"===typeof exports?module.exports=function(h,i){h||(h=window);if(!i||!i.fn.dataTable)i=require("datatables.net")(h,i).$;return e(i,h,h.document)}:e(jQuery,window,document)})(function(e,h,i,r){var l=e.fn.dataTable,s=0,k=function(b,c){if(!l.versionCheck||!l.versionCheck("1.10.8"))throw"Warning: AutoFill requires DataTables 1.10.8 or greater";this.c=e.extend(!0,{},l.defaults.autoFill,
k.defaults,c);this.s={dt:new l.Api(b),namespace:".autoFill"+s++,scroll:{},scrollInterval:null,handle:{height:0,width:0},enabled:!1};this.dom={handle:e('<div class="dt-autofill-handle"/>'),select:{top:e('<div class="dt-autofill-select top"/>'),right:e('<div class="dt-autofill-select right"/>'),bottom:e('<div class="dt-autofill-select bottom"/>'),left:e('<div class="dt-autofill-select left"/>')},background:e('<div class="dt-autofill-background"/>'),list:e('<div class="dt-autofill-list">'+this.s.dt.i18n("autoFill.info",
"")+"<ul/></div>"),dtScroll:null,offsetParent:null};this._constructor()};e.extend(k.prototype,{enabled:function(){return this.s.enabled},enable:function(b){var c=this;if(!1===b)return this.disable();this.s.enabled=!0;this._focusListener();this.dom.handle.on("mousedown",function(a){c._mousedown(a);return!1});return this},disable:function(){this.s.enabled=!1;this._focusListenerRemove();return this},_constructor:function(){var b=this,c=this.s.dt,a=e("div.dataTables_scrollBody",this.s.dt.table().container());
c.settings()[0].autoFill=this;a.length&&(this.dom.dtScroll=a,"static"===a.css("position")&&a.css("position","relative"));!1!==this.c.enable&&this.enable();c.on("destroy.autoFill",function(){b._focusListenerRemove()})},_attach:function(b){var c=this.s.dt,a=c.cell(b).index(),d=this.dom.handle,f=this.s.handle;if(!a||-1===c.columns(this.c.columns).indexes().indexOf(a.column))this._detach();else{this.dom.offsetParent||(this.dom.offsetParent=e(c.table().node()).offsetParent());if(!f.height||!f.width)d.appendTo("body"),
f.height=d.outerHeight(),f.width=d.outerWidth();c=this._getPosition(b,this.dom.offsetParent);this.dom.attachedTo=b;d.css({top:c.top+b.offsetHeight-f.height,left:c.left+b.offsetWidth-f.width}).appendTo(this.dom.offsetParent)}},_actionSelector:function(b){var c=this,a=this.s.dt,d=k.actions,f=[];e.each(d,function(c,d){d.available(a,b)&&f.push(c)});if(1===f.length&&!1===this.c.alwaysAsk){var j=d[f[0]].execute(a,b);this._update(j,b)}else{var g=this.dom.list.children("ul").empty();f.push("cancel");e.each(f,
function(f,j){g.append(e("<li/>").append('<div class="dt-autofill-question">'+d[j].option(a,b)+"<div>").append(e('<div class="dt-autofill-button">').append(e('<button class="'+k.classes.btn+'">'+a.i18n("autoFill.button","&gt;")+"</button>").on("click",function(){var f=d[j].execute(a,b,e(this).closest("li"));c._update(f,b);c.dom.background.remove();c.dom.list.remove()}))))});this.dom.background.appendTo("body");this.dom.list.appendTo("body");this.dom.list.css("margin-top",-1*(this.dom.list.outerHeight()/
2))}},_detach:function(){this.dom.attachedTo=null;this.dom.handle.detach()},_drawSelection:function(b){var c=this.s.dt,a=this.s.start,d=e(this.dom.start),f={row:this.c.vertical?c.rows({page:"current"}).nodes().indexOf(b.parentNode):a.row,column:this.c.horizontal?e(b).index():a.column},b=c.column.index("toData",f.column),j=c.row(":eq("+f.row+")",{page:"current"}),j=e(c.cell(j.index(),b).node());if(c.cell(j).any()&&-1!==c.columns(this.c.columns).indexes().indexOf(b)){this.s.end=f;var g,c=a.row<f.row?
d:j;g=a.row<f.row?j:d;b=a.column<f.column?d:j;d=a.column<f.column?j:d;c=this._getPosition(c.get(0)).top;b=this._getPosition(b.get(0)).left;a=this._getPosition(g.get(0)).top+g.outerHeight()-c;d=this._getPosition(d.get(0)).left+d.outerWidth()-b;f=this.dom.select;f.top.css({top:c,left:b,width:d});f.left.css({top:c,left:b,height:a});f.bottom.css({top:c+a,left:b,width:d});f.right.css({top:c,left:b+d,height:a})}},_editor:function(b){var c=this.s.dt,a=this.c.editor;if(a){for(var d={},f=[],e=a.fields(),g=
0,i=b.length;g<i;g++)for(var q=0,k=b[g].length;q<k;q++){var m=b[g][q],o=c.settings()[0].aoColumns[m.index.column],p=o.editField;if(p===r)for(var o=o.mData,h=0,l=e.length;h<l;h++){var n=a.field(e[h]);if(n.dataSrc()===o){p=n.name();break}}if(!p)throw"Could not automatically determine field data. Please see https://datatables.net/tn/11";d[p]||(d[p]={});o=c.row(m.index.row).id();d[p][o]=m.set;f.push(m.index)}a.bubble(f,!1).multiSet(d).submit()}},_emitEvent:function(b,c){this.s.dt.iterator("table",function(a){e(a.nTable).triggerHandler(b+
".dt",c)})},_focusListener:function(){var b=this,c=this.s.dt,a=this.s.namespace,d=null!==this.c.focus?this.c.focus:c.init().keys||c.settings()[0].keytable?"focus":"hover";if("focus"===d)c.on("key-focus.autoFill",function(a,c,d){b._attach(d.node())}).on("key-blur.autoFill",function(){b._detach()});else if("click"===d)e(c.table().body()).on("click"+a,"td, th",function(){b._attach(this)}),e(i.body).on("click"+a,function(a){e(a.target).parents().filter(c.table().body()).length||b._detach()});else e(c.table().body()).on("mouseenter"+
a,"td, th",function(){b._attach(this)}).on("mouseleave"+a,function(a){e(a.relatedTarget).hasClass("dt-autofill-handle")||b._detach()})},_focusListenerRemove:function(){var b=this.s.dt;b.off(".autoFill");e(b.table().body()).off(this.s.namespace);e(i.body).off(this.s.namespace)},_getPosition:function(b,c){var a=b,d,f=0,j=0;c||(c=e(e(this.s.dt.table().node())[0].offsetParent));do{var g=a.offsetTop,i=a.offsetLeft;d=e(a.offsetParent);f+=g+d.scrollTop();j+=i+d.scrollLeft();f+=1*parseInt(d.css("margin-top"));
f+=1*parseInt(d.css("border-top-width"));if("body"===a.nodeName.toLowerCase())break;a=d.get(0)}while(d.get(0)!==c.get(0));return{top:f,left:j}},_mousedown:function(b){var c=this,a=this.s.dt;this.dom.start=this.dom.attachedTo;this.s.start={row:a.rows({page:"current"}).nodes().indexOf(e(this.dom.start).parent()[0]),column:e(this.dom.start).index()};e(i.body).on("mousemove.autoFill",function(a){c._mousemove(a)}).on("mouseup.autoFill",function(a){c._mouseup(a)});var d=this.dom.select,a=e(a.table().node()).offsetParent();
d.top.appendTo(a);d.left.appendTo(a);d.right.appendTo(a);d.bottom.appendTo(a);this._drawSelection(this.dom.start,b);this.dom.handle.css("display","none");b=this.dom.dtScroll;this.s.scroll={windowHeight:e(h).height(),windowWidth:e(h).width(),dtTop:b?b.offset().top:null,dtLeft:b?b.offset().left:null,dtHeight:b?b.outerHeight():null,dtWidth:b?b.outerWidth():null}},_mousemove:function(b){var c=b.target.nodeName.toLowerCase();"td"!==c&&"th"!==c||(this._drawSelection(b.target,b),this._shiftScroll(b))},_mouseup:function(b){e(i.body).off(".autoFill");
var c=this,a=this.s.dt,d=this.dom.select;d.top.remove();d.left.remove();d.right.remove();d.bottom.remove();this.dom.handle.css("display","block");var d=this.s.start,f=this.s.end;if(!(d.row===f.row&&d.column===f.column)){var j=a.cell(":eq("+d.row+")",d.column+":visible",{page:"current"});if(e("div.DTE",j.node()).length){var g=a.editor();g.on("submitSuccess.dtaf close.dtaf",function(){g.off(".dtaf");setTimeout(function(){c._mouseup(b)},100)}).on("submitComplete.dtaf preSubmitCancelled.dtaf close.dtaf",
function(){g.off(".dtaf")});g.submit()}else{for(var h=this._range(d.row,f.row),d=this._range(d.column,f.column),f=[],k=a.settings()[0],l=k.aoColumns,m=0;m<h.length;m++)f.push(e.map(d,function(b){var c=a.row(":eq("+h[m]+")",{page:"current"}),b=a.cell(c.index(),b+":visible"),c=b.data(),d=b.index(),f=l[d.column].editField;f!==r&&(c=k.oApi._fnGetObjectDataFn(f)(a.row(d.row).data()));return{cell:b,data:c,label:b.data(),index:d}}));this._actionSelector(f);clearInterval(this.s.scrollInterval);this.s.scrollInterval=
null}}},_range:function(b,c){var a=[],d;if(b<=c)for(d=b;d<=c;d++)a.push(d);else for(d=b;d>=c;d--)a.push(d);return a},_shiftScroll:function(b){var c=this,a=this.s.scroll,d=!1,f=b.pageY-i.body.scrollTop,e=b.pageX-i.body.scrollLeft,g,h,k,l;65>f?g=-5:f>a.windowHeight-65&&(g=5);65>e?h=-5:e>a.windowWidth-65&&(h=5);null!==a.dtTop&&b.pageY<a.dtTop+65?k=-5:null!==a.dtTop&&b.pageY>a.dtTop+a.dtHeight-65&&(k=5);null!==a.dtLeft&&b.pageX<a.dtLeft+65?l=-5:null!==a.dtLeft&&b.pageX>a.dtLeft+a.dtWidth-65&&(l=5);g||
h||k||l?(a.windowVert=g,a.windowHoriz=h,a.dtVert=k,a.dtHoriz=l,d=!0):this.s.scrollInterval&&(clearInterval(this.s.scrollInterval),this.s.scrollInterval=null);!this.s.scrollInterval&&d&&(this.s.scrollInterval=setInterval(function(){if(a.windowVert)i.body.scrollTop=i.body.scrollTop+a.windowVert;if(a.windowHoriz)i.body.scrollLeft=i.body.scrollLeft+a.windowHoriz;if(a.dtVert||a.dtHoriz){var b=c.dom.dtScroll[0];if(a.dtVert)b.scrollTop=b.scrollTop+a.dtVert;if(a.dtHoriz)b.scrollLeft=b.scrollLeft+a.dtHoriz}},
20))},_update:function(b,c){if(!1!==b){var a=this.s.dt,d,f=a.columns(this.c.columns).indexes();this._emitEvent("preAutoFill",[a,c]);this._editor(c);if(null!==this.c.update?this.c.update:!this.c.editor){for(var e=0,g=c.length;e<g;e++)for(var h=0,i=c[e].length;h<i;h++)d=c[e][h],-1!==f.indexOf(d.index.column)&&d.cell.data(d.set);a.draw(!1)}this._emitEvent("autoFill",[a,c])}}});k.actions={increment:{available:function(b,c){var a=c[0][0].label;return!isNaN(a-parseFloat(a))},option:function(b){return b.i18n("autoFill.increment",
'Increment / decrement each cell by: <input type="number" value="1">')},execute:function(b,c,a){for(var b=1*c[0][0].data,a=1*e("input",a).val(),d=0,f=c.length;d<f;d++)for(var j=0,g=c[d].length;j<g;j++)c[d][j].set=b,b+=a}},fill:{available:function(){return!0},option:function(b,c){return b.i18n("autoFill.fill","Fill all cells with <i>"+c[0][0].label+"</i>")},execute:function(b,c){for(var a=c[0][0].data,d=0,f=c.length;d<f;d++)for(var e=0,g=c[d].length;e<g;e++)c[d][e].set=a}},fillHorizontal:{available:function(b,
c){return 1<c.length&&1<c[0].length},option:function(b){return b.i18n("autoFill.fillHorizontal","Fill cells horizontally")},execute:function(b,c){for(var a=0,d=c.length;a<d;a++)for(var f=0,e=c[a].length;f<e;f++)c[a][f].set=c[a][0].data}},fillVertical:{available:function(b,c){return 1<c.length&&1<c[0].length},option:function(b){return b.i18n("autoFill.fillVertical","Fill cells vertically")},execute:function(b,c){for(var a=0,d=c.length;a<d;a++)for(var f=0,e=c[a].length;f<e;f++)c[a][f].set=c[0][f].data}},
cancel:{available:function(){return!1},option:function(b){return b.i18n("autoFill.cancel","Cancel")},execute:function(){return!1}}};k.version="2.3.3";k.defaults={alwaysAsk:!1,focus:null,columns:"",enable:!0,update:null,editor:null,vertical:!0,horizontal:!0};k.classes={btn:"btn"};var n=e.fn.dataTable.Api;n.register("autoFill()",function(){return this});n.register("autoFill().enabled()",function(){var b=this.context[0];return b.autoFill?b.autoFill.enabled():!1});n.register("autoFill().enable()",function(b){return this.iterator("table",
function(c){c.autoFill&&c.autoFill.enable(b)})});n.register("autoFill().disable()",function(){return this.iterator("table",function(b){b.autoFill&&b.autoFill.disable()})});e(i).on("preInit.dt.autofill",function(b,c){if("dt"===b.namespace){var a=c.oInit.autoFill,d=l.defaults.autoFill;if(a||d)d=e.extend({},a,d),!1!==a&&new k(c,d)}});l.AutoFill=k;return l.AutoFill=k});

/*!
 Bootstrap integration for DataTables' AutoFill
 Â©2015 SpryMedia Ltd - datatables.net/license
*/
(function(a){"function"===typeof define&&define.amd?define(["jquery","datatables.net-bs4","datatables.net-autofill"],function(b){return a(b,window,document)}):"object"===typeof exports?module.exports=function(b,c){b||(b=window);if(!c||!c.fn.dataTable)c=require("datatables.net-bs4")(b,c).$;c.fn.dataTable.AutoFill||require("datatables.net-autofill")(b,c);return a(c,b,b.document)}:a(jQuery,window,document)})(function(a){a=a.fn.dataTable;a.AutoFill.classes.btn="btn btn-primary";return a});

/*!

JSZip v3.2.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/master/LICENSE
*/
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";var d=a("./utils"),e=a("./support"),f="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";c.encode=function(a){for(var b,c,e,g,h,i,j,k=[],l=0,m=a.length,n=m,o="string"!==d.getTypeOf(a);l<a.length;)n=m-l,o?(b=a[l++],c=l<m?a[l++]:0,e=l<m?a[l++]:0):(b=a.charCodeAt(l++),c=l<m?a.charCodeAt(l++):0,e=l<m?a.charCodeAt(l++):0),g=b>>2,h=(3&b)<<4|c>>4,i=n>1?(15&c)<<2|e>>6:64,j=n>2?63&e:64,k.push(f.charAt(g)+f.charAt(h)+f.charAt(i)+f.charAt(j));return k.join("")},c.decode=function(a){var b,c,d,g,h,i,j,k=0,l=0,m="data:";if(a.substr(0,m.length)===m)throw new Error("Invalid base64 input, it looks like a data url.");a=a.replace(/[^A-Za-z0-9\+\/\=]/g,"");var n=3*a.length/4;if(a.charAt(a.length-1)===f.charAt(64)&&n--,a.charAt(a.length-2)===f.charAt(64)&&n--,n%1!==0)throw new Error("Invalid base64 input, bad content length.");var o;for(o=e.uint8array?new Uint8Array(0|n):new Array(0|n);k<a.length;)g=f.indexOf(a.charAt(k++)),h=f.indexOf(a.charAt(k++)),i=f.indexOf(a.charAt(k++)),j=f.indexOf(a.charAt(k++)),b=g<<2|h>>4,c=(15&h)<<4|i>>2,d=(3&i)<<6|j,o[l++]=b,64!==i&&(o[l++]=c),64!==j&&(o[l++]=d);return o}},{"./support":30,"./utils":32}],2:[function(a,b,c){"use strict";function d(a,b,c,d,e){this.compressedSize=a,this.uncompressedSize=b,this.crc32=c,this.compression=d,this.compressedContent=e}var e=a("./external"),f=a("./stream/DataWorker"),g=a("./stream/DataLengthProbe"),h=a("./stream/Crc32Probe"),g=a("./stream/DataLengthProbe");d.prototype={getContentWorker:function(){var a=new f(e.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new g("data_length")),b=this;return a.on("end",function(){if(this.streamInfo.data_length!==b.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),a},getCompressedWorker:function(){return new f(e.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},d.createWorkerFrom=function(a,b,c){return a.pipe(new h).pipe(new g("uncompressedSize")).pipe(b.compressWorker(c)).pipe(new g("compressedSize")).withStreamInfo("compression",b)},b.exports=d},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(a,b,c){"use strict";var d=a("./stream/GenericWorker");c.STORE={magic:"\0\0",compressWorker:function(a){return new d("STORE compression")},uncompressWorker:function(){return new d("STORE decompression")}},c.DEFLATE=a("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(a,b,c){"use strict";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=h,f=d+c;a^=-1;for(var g=d;g<f;g++)a=a>>>8^e[255&(a^b[g])];return a^-1}function f(a,b,c,d){var e=h,f=d+c;a^=-1;for(var g=d;g<f;g++)a=a>>>8^e[255&(a^b.charCodeAt(g))];return a^-1}var g=a("./utils"),h=d();b.exports=function(a,b){if("undefined"==typeof a||!a.length)return 0;var c="string"!==g.getTypeOf(a);return c?e(0|b,a,a.length,0):f(0|b,a,a.length,0)}},{"./utils":32}],5:[function(a,b,c){"use strict";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!0,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],6:[function(a,b,c){"use strict";var d=null;d="undefined"!=typeof Promise?Promise:a("lie"),b.exports={Promise:d}},{lie:37}],7:[function(a,b,c){"use strict";function d(a,b){h.call(this,"FlateWorker/"+a),this._pako=null,this._pakoAction=a,this._pakoOptions=b,this.meta={}}var e="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,f=a("pako"),g=a("./utils"),h=a("./stream/GenericWorker"),i=e?"uint8array":"array";c.magic="\b\0",g.inherits(d,h),d.prototype.processChunk=function(a){this.meta=a.meta,null===this._pako&&this._createPako(),this._pako.push(g.transformTo(i,a.data),!1)},d.prototype.flush=function(){h.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},d.prototype.cleanUp=function(){h.prototype.cleanUp.call(this),this._pako=null},d.prototype._createPako=function(){this._pako=new f[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var a=this;this._pako.onData=function(b){a.push({data:b,meta:a.meta})}},c.compressWorker=function(a){return new d("Deflate",a)},c.uncompressWorker=function(){return new d("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(a,b,c){"use strict";function d(a,b,c,d){f.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=b,this.zipPlatform=c,this.encodeFileName=d,this.streamFiles=a,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}var e=a("../utils"),f=a("../stream/GenericWorker"),g=a("../utf8"),h=a("../crc32"),i=a("../signature"),j=function(a,b){var c,d="";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},k=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},l=function(a,b){return 63&(a||0)},m=function(a,b,c,d,f,m){var n,o,p=a.file,q=a.compression,r=m!==g.utf8encode,s=e.transformTo("string",m(p.name)),t=e.transformTo("string",g.utf8encode(p.name)),u=p.comment,v=e.transformTo("string",m(u)),w=e.transformTo("string",g.utf8encode(u)),x=t.length!==p.name.length,y=w.length!==u.length,z="",A="",B="",C=p.dir,D=p.date,E={crc32:0,compressedSize:0,uncompressedSize:0};b&&!c||(E.crc32=a.crc32,E.compressedSize=a.compressedSize,E.uncompressedSize=a.uncompressedSize);var F=0;b&&(F|=8),r||!x&&!y||(F|=2048);var G=0,H=0;C&&(G|=16),"UNIX"===f?(H=798,G|=k(p.unixPermissions,C)):(H=20,G|=l(p.dosPermissions,C)),n=D.getUTCHours(),n<<=6,n|=D.getUTCMinutes(),n<<=5,n|=D.getUTCSeconds()/2,o=D.getUTCFullYear()-1980,o<<=4,o|=D.getUTCMonth()+1,o<<=5,o|=D.getUTCDate(),x&&(A=j(1,1)+j(h(s),4)+t,z+="up"+j(A.length,2)+A),y&&(B=j(1,1)+j(h(v),4)+w,z+="uc"+j(B.length,2)+B);var I="";I+="\n\0",I+=j(F,2),I+=q.magic,I+=j(n,2),I+=j(o,2),I+=j(E.crc32,4),I+=j(E.compressedSize,4),I+=j(E.uncompressedSize,4),I+=j(s.length,2),I+=j(z.length,2);var J=i.LOCAL_FILE_HEADER+I+s+z,K=i.CENTRAL_FILE_HEADER+j(H,2)+I+j(v.length,2)+"\0\0\0\0"+j(G,4)+j(d,4)+s+z+v;return{fileRecord:J,dirRecord:K}},n=function(a,b,c,d,f){var g="",h=e.transformTo("string",f(d));return g=i.CENTRAL_DIRECTORY_END+"\0\0\0\0"+j(a,2)+j(a,2)+j(b,4)+j(c,4)+j(h.length,2)+h},o=function(a){var b="";return b=i.DATA_DESCRIPTOR+j(a.crc32,4)+j(a.compressedSize,4)+j(a.uncompressedSize,4)};e.inherits(d,f),d.prototype.push=function(a){var b=a.meta.percent||0,c=this.entriesCount,d=this._sources.length;this.accumulate?this.contentBuffer.push(a):(this.bytesWritten+=a.data.length,f.prototype.push.call(this,{data:a.data,meta:{currentFile:this.currentFile,percent:c?(b+100*(c-d-1))/c:100}}))},d.prototype.openedSource=function(a){this.currentSourceOffset=this.bytesWritten,this.currentFile=a.file.name;var b=this.streamFiles&&!a.file.dir;if(b){var c=m(a,b,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:c.fileRecord,meta:{percent:0}})}else this.accumulate=!0},d.prototype.closedSource=function(a){this.accumulate=!1;var b=this.streamFiles&&!a.file.dir,c=m(a,b,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(c.dirRecord),b)this.push({data:o(a),meta:{percent:100}});else for(this.push({data:c.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},d.prototype.flush=function(){for(var a=this.bytesWritten,b=0;b<this.dirRecords.length;b++)this.push({data:this.dirRecords[b],meta:{percent:100}});var c=this.bytesWritten-a,d=n(this.dirRecords.length,c,a,this.zipComment,this.encodeFileName);this.push({data:d,meta:{percent:100}})},d.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},d.prototype.registerPrevious=function(a){this._sources.push(a);var b=this;return a.on("data",function(a){b.processChunk(a)}),a.on("end",function(){b.closedSource(b.previous.streamInfo),b._sources.length?b.prepareNextSource():b.end()}),a.on("error",function(a){b.error(a)}),this},d.prototype.resume=function(){return!!f.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},d.prototype.error=function(a){var b=this._sources;if(!f.prototype.error.call(this,a))return!1;for(var c=0;c<b.length;c++)try{b[c].error(a)}catch(a){}return!0},d.prototype.lock=function(){f.prototype.lock.call(this);for(var a=this._sources,b=0;b<a.length;b++)a[b].lock()},b.exports=d},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(a,b,c){"use strict";var d=a("../compressions"),e=a("./ZipFileWorker"),f=function(a,b){var c=a||b,e=d[c];if(!e)throw new Error(c+" is not a valid compression method !");return e};c.generateWorker=function(a,b,c){var d=new e(b.streamFiles,c,b.platform,b.encodeFileName),g=0;try{a.forEach(function(a,c){g++;var e=f(c.options.compression,b.compression),h=c.options.compressionOptions||b.compressionOptions||{},i=c.dir,j=c.date;c._compressWorker(e,h).withStreamInfo("file",{name:a,dir:i,date:j,comment:c.comment||"",unixPermissions:c.unixPermissions,dosPermissions:c.dosPermissions}).pipe(d)}),d.entriesCount=g}catch(h){d.error(h)}return d}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(a,b,c){"use strict";function d(){if(!(this instanceof d))return new d;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files={},this.comment=null,this.root="",this.clone=function(){var a=new d;for(var b in this)"function"!=typeof this[b]&&(a[b]=this[b]);return a}}d.prototype=a("./object"),d.prototype.loadAsync=a("./load"),d.support=a("./support"),d.defaults=a("./defaults"),d.version="3.2.0",d.loadAsync=function(a,b){return(new d).loadAsync(a,b)},d.external=a("./external"),b.exports=d},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(a,b,c){"use strict";function d(a){return new f.Promise(function(b,c){var d=a.decompressed.getContentWorker().pipe(new i);d.on("error",function(a){c(a)}).on("end",function(){d.streamInfo.crc32!==a.decompressed.crc32?c(new Error("Corrupted zip : CRC32 mismatch")):b()}).resume()})}var e=a("./utils"),f=a("./external"),g=a("./utf8"),e=a("./utils"),h=a("./zipEntries"),i=a("./stream/Crc32Probe"),j=a("./nodejsUtils");b.exports=function(a,b){var c=this;return b=e.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:g.utf8decode}),j.isNode&&j.isStream(a)?f.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):e.prepareContent("the loaded zip file",a,!0,b.optimizedBinaryString,b.base64).then(function(a){var c=new h(b);return c.load(a),c}).then(function(a){var c=[f.Promise.resolve(a)],e=a.files;if(b.checkCRC32)for(var g=0;g<e.length;g++)c.push(d(e[g]));return f.Promise.all(c)}).then(function(a){for(var d=a.shift(),e=d.files,f=0;f<e.length;f++){var g=e[f];c.file(g.fileNameStr,g.decompressed,{binary:!0,optimizedBinaryString:!0,date:g.date,dir:g.dir,comment:g.fileCommentStr.length?g.fileCommentStr:null,unixPermissions:g.unixPermissions,dosPermissions:g.dosPermissions,createFolders:b.createFolders})}return d.zipComment.length&&(c.comment=d.zipComment),c})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(a,b,c){"use strict";function d(a,b){f.call(this,"Nodejs stream input adapter for "+a),this._upstreamEnded=!1,this._bindStream(b)}var e=a("../utils"),f=a("../stream/GenericWorker");e.inherits(d,f),d.prototype._bindStream=function(a){var b=this;this._stream=a,a.pause(),a.on("data",function(a){b.push({data:a,meta:{percent:0}})}).on("error",function(a){b.isPaused?this.generatedError=a:b.error(a)}).on("end",function(){b.isPaused?b._upstreamEnded=!0:b.end()})},d.prototype.pause=function(){return!!f.prototype.pause.call(this)&&(this._stream.pause(),!0)},d.prototype.resume=function(){return!!f.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},b.exports=d},{"../stream/GenericWorker":28,"../utils":32}],13:[function(a,b,c){"use strict";function d(a,b,c){e.call(this,b),this._helper=a;var d=this;a.on("data",function(a,b){d.push(a)||d._helper.pause(),c&&c(b)}).on("error",function(a){d.emit("error",a)}).on("end",function(){d.push(null)})}var e=a("readable-stream").Readable,f=a("../utils");f.inherits(d,e),d.prototype._read=function(){this._helper.resume()},b.exports=d},{"../utils":32,"readable-stream":16}],14:[function(a,b,c){"use strict";b.exports={isNode:"undefined"!=typeof Buffer,newBufferFrom:function(a,b){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(a,b);if("number"==typeof a)throw new Error('The "data" argument must not be a number');return new Buffer(a,b)},allocBuffer:function(a){if(Buffer.alloc)return Buffer.alloc(a);var b=new Buffer(a);return b.fill(0),b},isBuffer:function(a){return Buffer.isBuffer(a)},isStream:function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pause&&"function"==typeof a.resume}}},{}],15:[function(a,b,c){"use strict";function d(a){return"[object RegExp]"===Object.prototype.toString.call(a)}var e=a("./utf8"),f=a("./utils"),g=a("./stream/GenericWorker"),h=a("./stream/StreamHelper"),i=a("./defaults"),j=a("./compressedObject"),k=a("./zipObject"),l=a("./generate"),m=a("./nodejsUtils"),n=a("./nodejs/NodejsStreamInputAdapter"),o=function(a,b,c){var d,e=f.getTypeOf(b),h=f.extend(c||{},i);h.date=h.date||new Date,null!==h.compression&&(h.compression=h.compression.toUpperCase()),"string"==typeof h.unixPermissions&&(h.unixPermissions=parseInt(h.unixPermissions,8)),h.unixPermissions&&16384&h.unixPermissions&&(h.dir=!0),h.dosPermissions&&16&h.dosPermissions&&(h.dir=!0),h.dir&&(a=q(a)),h.createFolders&&(d=p(a))&&r.call(this,d,!0);var l="string"===e&&h.binary===!1&&h.base64===!1;c&&"undefined"!=typeof c.binary||(h.binary=!l);var o=b instanceof j&&0===b.uncompressedSize;(o||h.dir||!b||0===b.length)&&(h.base64=!1,h.binary=!0,b="",h.compression="STORE",e="string");var s=null;s=b instanceof j||b instanceof g?b:m.isNode&&m.isStream(b)?new n(a,b):f.prepareContent(a,b,h.binary,h.optimizedBinaryString,h.base64);var t=new k(a,s,h);this.files[a]=t},p=function(a){"/"===a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf("/");return b>0?a.substring(0,b):""},q=function(a){return"/"!==a.slice(-1)&&(a+="/"),a},r=function(a,b){return b="undefined"!=typeof b?b:i.createFolders,a=q(a),this.files[a]||o.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},s={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(a){var b,c,d;for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],c=b.slice(this.root.length,b.length),c&&b.slice(0,this.root.length)===this.root&&a(c,d))},filter:function(a){var b=[];return this.forEach(function(c,d){a(c,d)&&b.push(d)}),b},file:function(a,b,c){if(1===arguments.length){if(d(a)){var e=a;return this.filter(function(a,b){return!b.dir&&e.test(a)})}var f=this.files[this.root+a];return f&&!f.dir?f:null}return a=this.root+a,o.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(d(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=r.call(this,b),e=this.clone();return e.root=c.name,e},remove:function(a){a=this.root+a;var b=this.files[a];if(b||("/"!==a.slice(-1)&&(a+="/"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(a){var b,c={};try{if(c=f.extend(a||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:e.utf8encode}),c.type=c.type.toLowerCase(),c.compression=c.compression.toUpperCase(),"binarystring"===c.type&&(c.type="string"),!c.type)throw new Error("No output type specified.");f.checkSupport(c.type),"darwin"!==c.platform&&"freebsd"!==c.platform&&"linux"!==c.platform&&"sunos"!==c.platform||(c.platform="UNIX"),"win32"===c.platform&&(c.platform="DOS");var d=c.comment||this.comment||"";b=l.generateWorker(this,c,d)}catch(i){b=new g("error"),b.error(i)}return new h(b,c.type||"string",c.mimeType)},generateAsync:function(a,b){return this.generateInternalStream(a).accumulate(b)},generateNodeStream:function(a,b){return a=a||{},a.type||(a.type="nodebuffer"),this.generateInternalStream(a).toNodejsStream(b)}};b.exports=s},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(a,b,c){b.exports=a("stream")},{stream:void 0}],17:[function(a,b,c){"use strict";function d(a){e.call(this,a);for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}var e=a("./DataReader"),f=a("../utils");f.inherits(d,e),d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readAndCheckSignature=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.readData(4);return b===f[0]&&c===f[1]&&d===f[2]&&e===f[3]},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":32,"./DataReader":18}],18:[function(a,b,c){"use strict";function d(a){this.data=a,this.length=a.length,this.index=0,this.zero=0}var e=a("../utils");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+a+"). Corrupted zip ?")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo("string",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readAndCheckSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date(Date.UTC((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1))}},b.exports=d},{"../utils":32}],19:[function(a,b,c){"use strict";function d(a){e.call(this,a)}var e=a("./Uint8ArrayReader"),f=a("../utils");f.inherits(d,e),d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(a,b,c){"use strict";function d(a){e.call(this,a)}var e=a("./DataReader"),f=a("../utils");f.inherits(d,e),d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readAndCheckSignature=function(a){var b=this.readData(4);return a===b},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":32,"./DataReader":18}],21:[function(a,b,c){"use strict";function d(a){e.call(this,a)}var e=a("./ArrayReader"),f=a("../utils");f.inherits(d,e),d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":32,"./ArrayReader":17}],22:[function(a,b,c){"use strict";var d=a("../utils"),e=a("../support"),f=a("./ArrayReader"),g=a("./StringReader"),h=a("./NodeBufferReader"),i=a("./Uint8ArrayReader");b.exports=function(a){var b=d.getTypeOf(a);return d.checkSupport(b),"string"!==b||e.uint8array?"nodebuffer"===b?new h(a):e.uint8array?new i(d.transformTo("uint8array",a)):new f(d.transformTo("array",a)):new g(a)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(a,b,c){"use strict";c.LOCAL_FILE_HEADER="PK",c.CENTRAL_FILE_HEADER="PK",c.CENTRAL_DIRECTORY_END="PK",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",c.ZIP64_CENTRAL_DIRECTORY_END="PK",c.DATA_DESCRIPTOR="PK\b"},{}],24:[function(a,b,c){"use strict";function d(a){e.call(this,"ConvertWorker to "+a),this.destType=a}var e=a("./GenericWorker"),f=a("../utils");f.inherits(d,e),d.prototype.processChunk=function(a){this.push({data:f.transformTo(this.destType,a.data),meta:a.meta})},b.exports=d},{"../utils":32,"./GenericWorker":28}],25:[function(a,b,c){"use strict";function d(){e.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}var e=a("./GenericWorker"),f=a("../crc32"),g=a("../utils");g.inherits(d,e),d.prototype.processChunk=function(a){this.streamInfo.crc32=f(a.data,this.streamInfo.crc32||0),this.push(a)},b.exports=d},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(a,b,c){"use strict";function d(a){f.call(this,"DataLengthProbe for "+a),this.propName=a,this.withStreamInfo(a,0)}var e=a("../utils"),f=a("./GenericWorker");e.inherits(d,f),d.prototype.processChunk=function(a){if(a){var b=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=b+a.data.length}f.prototype.processChunk.call(this,a)},b.exports=d},{"../utils":32,"./GenericWorker":28}],27:[function(a,b,c){"use strict";function d(a){f.call(this,"DataWorker");var b=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,a.then(function(a){b.dataIsReady=!0,b.data=a,b.max=a&&a.length||0,b.type=e.getTypeOf(a),b.isPaused||b._tickAndRepeat()},function(a){b.error(a)})}var e=a("../utils"),f=a("./GenericWorker"),g=16384;e.inherits(d,f),d.prototype.cleanUp=function(){f.prototype.cleanUp.call(this),this.data=null},d.prototype.resume=function(){return!!f.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,e.delay(this._tickAndRepeat,[],this)),!0)},d.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(e.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},d.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var a=g,b=null,c=Math.min(this.max,this.index+a);if(this.index>=this.max)return this.end();switch(this.type){case"string":b=this.data.substring(this.index,c);break;case"uint8array":b=this.data.subarray(this.index,c);break;case"array":case"nodebuffer":b=this.data.slice(this.index,c)}return this.index=c,this.push({data:b,meta:{percent:this.max?this.index/this.max*100:0}})},b.exports=d},{"../utils":32,"./GenericWorker":28}],28:[function(a,b,c){"use strict";function d(a){this.name=a||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}d.prototype={push:function(a){this.emit("data",a)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(a){this.emit("error",a)}return!0},error:function(a){return!this.isFinished&&(this.isPaused?this.generatedError=a:(this.isFinished=!0,this.emit("error",a),this.previous&&this.previous.error(a),this.cleanUp()),!0)},on:function(a,b){return this._listeners[a].push(b),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(a,b){if(this._listeners[a])for(var c=0;c<this._listeners[a].length;c++)this._listeners[a][c].call(this,b)},pipe:function(a){return a.registerPrevious(this)},registerPrevious:function(a){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=a.streamInfo,this.mergeStreamInfo(),this.previous=a;var b=this;return a.on("data",function(a){b.processChunk(a)}),a.on("end",function(){b.end()}),a.on("error",function(a){b.error(a)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;this.isPaused=!1;var a=!1;return this.generatedError&&(this.error(this.generatedError),a=!0),this.previous&&this.previous.resume(),!a},flush:function(){},processChunk:function(a){this.push(a)},withStreamInfo:function(a,b){return this.extraStreamInfo[a]=b,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var a in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(a)&&(this.streamInfo[a]=this.extraStreamInfo[a])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var a="Worker "+this.name;return this.previous?this.previous+" -> "+a:a}},b.exports=d},{}],29:[function(a,b,c){"use strict";function d(a,b,c){switch(a){case"blob":return h.newBlob(h.transformTo("arraybuffer",b),c);case"base64":return k.encode(b);default:return h.transformTo(a,b)}}function e(a,b){var c,d=0,e=null,f=0;for(c=0;c<b.length;c++)f+=b[c].length;switch(a){case"string":return b.join("");case"array":return Array.prototype.concat.apply([],b);case"uint8array":for(e=new Uint8Array(f),c=0;c<b.length;c++)e.set(b[c],d),d+=b[c].length;return e;case"nodebuffer":return Buffer.concat(b);default:throw new Error("concat : unsupported type '"+a+"'")}}function f(a,b){return new m.Promise(function(c,f){var g=[],h=a._internalType,i=a._outputType,j=a._mimeType;a.on("data",function(a,c){g.push(a),b&&b(c)}).on("error",function(a){g=[],f(a)}).on("end",function(){try{var a=d(i,e(h,g),j);c(a)}catch(b){f(b)}g=[]}).resume()})}function g(a,b,c){var d=b;switch(b){case"blob":case"arraybuffer":d="uint8array";break;case"base64":d="string"}try{this._internalType=d,this._outputType=b,this._mimeType=c,h.checkSupport(d),this._worker=a.pipe(new i(d)),a.lock()}catch(e){this._worker=new j("error"),this._worker.error(e)}}var h=a("../utils"),i=a("./ConvertWorker"),j=a("./GenericWorker"),k=a("../base64"),l=a("../support"),m=a("../external"),n=null;if(l.nodestream)try{n=a("../nodejs/NodejsStreamOutputAdapter")}catch(o){}g.prototype={accumulate:function(a){return f(this,a)},on:function(a,b){var c=this;return"data"===a?this._worker.on(a,function(a){b.call(c,a.data,a.meta)}):this._worker.on(a,function(){h.delay(b,arguments,c)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(a){if(h.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new n(this,{objectMode:"nodebuffer"!==this._outputType},a)}},b.exports=g},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(a,b,c){"use strict";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,c.nodebuffer="undefined"!=typeof Buffer,c.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)c.blob=!1;else{var d=new ArrayBuffer(0);try{c.blob=0===new Blob([d],{type:"application/zip"}).size}catch(e){try{var f=self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder,g=new f;g.append(d),c.blob=0===g.getBlob("application/zip").size}catch(e){c.blob=!1}}}try{c.nodestream=!!a("readable-stream").Readable}catch(e){c.nodestream=!1}},{"readable-stream":16}],31:[function(a,b,c){"use strict";function d(){i.call(this,"utf-8 decode"),this.leftOver=null}function e(){i.call(this,"utf-8 encode")}for(var f=a("./utils"),g=a("./support"),h=a("./nodejsUtils"),i=a("./stream/GenericWorker"),j=new Array(256),k=0;k<256;k++)j[k]=k>=252?6:k>=248?5:k>=240?4:k>=224?3:k>=192?2:1;j[254]=j[254]=1;var l=function(a){var b,c,d,e,f,h=a.length,i=0;for(e=0;e<h;e++)c=a.charCodeAt(e),55296===(64512&c)&&e+1<h&&(d=a.charCodeAt(e+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),e++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=g.uint8array?new Uint8Array(i):new Array(i),f=0,e=0;f<i;e++)c=a.charCodeAt(e),55296===(64512&c)&&e+1<h&&(d=a.charCodeAt(e+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),e++)),c<128?b[f++]=c:c<2048?(b[f++]=192|c>>>6,b[f++]=128|63&c):c<65536?(b[f++]=224|c>>>12,b[f++]=128|c>>>6&63,b[f++]=128|63&c):(b[f++]=240|c>>>18,b[f++]=128|c>>>12&63,b[f++]=128|c>>>6&63,b[f++]=128|63&c);return b},m=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+j[a[c]]>b?c:b},n=function(a){var b,c,d,e,g=a.length,h=new Array(2*g);for(c=0,b=0;b<g;)if(d=a[b++],d<128)h[c++]=d;else if(e=j[d],e>4)h[c++]=65533,b+=e-1;else{for(d&=2===e?31:3===e?15:7;e>1&&b<g;)d=d<<6|63&a[b++],e--;e>1?h[c++]=65533:d<65536?h[c++]=d:(d-=65536,h[c++]=55296|d>>10&1023,h[c++]=56320|1023&d)}return h.length!==c&&(h.subarray?h=h.subarray(0,c):h.length=c),f.applyFromCharCode(h)};c.utf8encode=function(a){return g.nodebuffer?h.newBufferFrom(a,"utf-8"):l(a)},c.utf8decode=function(a){return g.nodebuffer?f.transformTo("nodebuffer",a).toString("utf-8"):(a=f.transformTo(g.uint8array?"uint8array":"array",a),n(a))},f.inherits(d,i),d.prototype.processChunk=function(a){var b=f.transformTo(g.uint8array?"uint8array":"array",a.data);if(this.leftOver&&this.leftOver.length){if(g.uint8array){var d=b;b=new Uint8Array(d.length+this.leftOver.length),b.set(this.leftOver,0),b.set(d,this.leftOver.length)}else b=this.leftOver.concat(b);this.leftOver=null}var e=m(b),h=b;e!==b.length&&(g.uint8array?(h=b.subarray(0,e),this.leftOver=b.subarray(e,b.length)):(h=b.slice(0,e),this.leftOver=b.slice(e,b.length))),this.push({data:c.utf8decode(h),meta:a.meta})},d.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:c.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},c.Utf8DecodeWorker=d,f.inherits(e,i),e.prototype.processChunk=function(a){this.push({data:c.utf8encode(a.data),meta:a.meta})},c.Utf8EncodeWorker=e},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(a,b,c){"use strict";function d(a){var b=null;return b=i.uint8array?new Uint8Array(a.length):new Array(a.length),f(a,b)}function e(a){return a}function f(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function g(a){var b=65536,d=c.getTypeOf(a),e=!0;if("uint8array"===d?e=n.applyCanBeUsed.uint8array:"nodebuffer"===d&&(e=n.applyCanBeUsed.nodebuffer),
e)for(;b>1;)try{return n.stringifyByChunk(a,d,b)}catch(f){b=Math.floor(b/2)}return n.stringifyByChar(a)}function h(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var i=a("./support"),j=a("./base64"),k=a("./nodejsUtils"),l=a("set-immediate-shim"),m=a("./external");c.newBlob=function(a,b){c.checkSupport("blob");try{return new Blob([a],{type:b})}catch(d){try{var e=self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error("Bug : can't construct the Blob.")}}};var n={stringifyByChunk:function(a,b,c){var d=[],e=0,f=a.length;if(f<=c)return String.fromCharCode.apply(null,a);for(;e<f;)"array"===b||"nodebuffer"===b?d.push(String.fromCharCode.apply(null,a.slice(e,Math.min(e+c,f)))):d.push(String.fromCharCode.apply(null,a.subarray(e,Math.min(e+c,f)))),e+=c;return d.join("")},stringifyByChar:function(a){for(var b="",c=0;c<a.length;c++)b+=String.fromCharCode(a[c]);return b},applyCanBeUsed:{uint8array:function(){try{return i.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(a){return!1}}(),nodebuffer:function(){try{return i.nodebuffer&&1===String.fromCharCode.apply(null,k.allocBuffer(1)).length}catch(a){return!1}}()}};c.applyFromCharCode=g;var o={};o.string={string:e,array:function(a){return f(a,new Array(a.length))},arraybuffer:function(a){return o.string.uint8array(a).buffer},uint8array:function(a){return f(a,new Uint8Array(a.length))},nodebuffer:function(a){return f(a,k.allocBuffer(a.length))}},o.array={string:g,array:e,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return k.newBufferFrom(a)}},o.arraybuffer={string:function(a){return g(new Uint8Array(a))},array:function(a){return h(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:e,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return k.newBufferFrom(new Uint8Array(a))}},o.uint8array={string:g,array:function(a){return h(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:e,nodebuffer:function(a){return k.newBufferFrom(a)}},o.nodebuffer={string:g,array:function(a){return h(a,new Array(a.length))},arraybuffer:function(a){return o.nodebuffer.uint8array(a).buffer},uint8array:function(a){return h(a,new Uint8Array(a.length))},nodebuffer:e},c.transformTo=function(a,b){if(b||(b=""),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=o[d][a](b);return e},c.getTypeOf=function(a){return"string"==typeof a?"string":"[object Array]"===Object.prototype.toString.call(a)?"array":i.nodebuffer&&k.isBuffer(a)?"nodebuffer":i.uint8array&&a instanceof Uint8Array?"uint8array":i.arraybuffer&&a instanceof ArrayBuffer?"arraybuffer":void 0},c.checkSupport=function(a){var b=i[a.toLowerCase()];if(!b)throw new Error(a+" is not supported by this platform")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d="";for(c=0;c<(a||"").length;c++)b=a.charCodeAt(c),d+="\\x"+(b<16?"0":"")+b.toString(16).toUpperCase();return d},c.delay=function(a,b,c){l(function(){a.apply(c||null,b||[])})},c.inherits=function(a,b){var c=function(){};c.prototype=b.prototype,a.prototype=new c},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&"undefined"==typeof c[b]&&(c[b]=arguments[a][b]);return c},c.prepareContent=function(a,b,e,f,g){var h=m.Promise.resolve(b).then(function(a){var b=i.blob&&(a instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(a))!==-1);return b&&"undefined"!=typeof FileReader?new m.Promise(function(b,c){var d=new FileReader;d.onload=function(a){b(a.target.result)},d.onerror=function(a){c(a.target.error)},d.readAsArrayBuffer(a)}):a});return h.then(function(b){var h=c.getTypeOf(b);return h?("arraybuffer"===h?b=c.transformTo("uint8array",b):"string"===h&&(g?b=j.decode(b):e&&f!==!0&&(b=d(b))),b):m.Promise.reject(new Error("Can't read the data of '"+a+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,"set-immediate-shim":54}],33:[function(a,b,c){"use strict";function d(a){this.files=[],this.loadOptions=a}var e=a("./reader/readerFor"),f=a("./utils"),g=a("./signature"),h=a("./zipEntry"),i=(a("./utf8"),a("./support"));d.prototype={checkSignature:function(a){if(!this.reader.readAndCheckSignature(a)){this.reader.index-=4;var b=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+f.pretty(b)+", expected "+f.pretty(a)+")")}},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=i.uint8array?"uint8array":"array",c=f.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readData(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(g.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(g.CENTRAL_FILE_HEADER);)a=new h({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(g.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,g.LOCAL_FILE_HEADER);throw b?new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html"):new Error("Corrupted zip: can't find end of central directory")}this.reader.setIndex(a);var c=a;if(this.checkSignature(g.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===f.MAX_VALUE_16BITS||this.diskWithCentralDirStart===f.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===f.MAX_VALUE_16BITS||this.centralDirRecords===f.MAX_VALUE_16BITS||this.centralDirSize===f.MAX_VALUE_32BITS||this.centralDirOffset===f.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(a),this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,g.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,g.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error("Corrupted zip: missing "+Math.abs(e)+" bytes.")},prepareReader:function(a){this.reader=e(a)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utf8":31,"./utils":32,"./zipEntry":34}],34:[function(a,b,c){"use strict";function d(a,b){this.options=a,this.loadOptions=b}var e=a("./reader/readerFor"),f=a("./utils"),g=a("./compressedObject"),h=a("./crc32"),i=a("./utf8"),j=a("./compressions"),k=a("./support"),l=0,m=3,n=function(a){for(var b in j)if(j.hasOwnProperty(b)&&j[b].magic===a)return j[b];return null};d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(b=n(this.compressionMethod),null===b)throw new Error("Corrupted zip : compression "+f.pretty(this.compressionMethod)+" unknown (inner file : "+f.transformTo("string",this.fileName)+")");this.decompressed=new g(this.compressedSize,this.uncompressedSize,this.crc32,b,a.readData(this.compressedSize))},readCentralPart:function(a){this.versionMadeBy=a.readInt(2),a.skip(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4);var b=a.readInt(2);if(this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");a.skip(b),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===l&&(this.dosPermissions=63&this.externalFileAttributes),a===m&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});a.index<e;)b=a.readInt(2),c=a.readInt(2),d=a.readData(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=k.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=i.utf8decode(this.fileName),this.fileCommentStr=i.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=e(a.value);return 1!==b.readInt(1)?null:h(this.fileName)!==b.readInt(4)?null:i.utf8decode(b.readData(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=e(a.value);return 1!==b.readInt(1)?null:h(this.fileComment)!==b.readInt(4)?null:i.utf8decode(b.readData(a.length-5))}return null}},b.exports=d},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(a,b,c){"use strict";var d=a("./stream/StreamHelper"),e=a("./stream/DataWorker"),f=a("./utf8"),g=a("./compressedObject"),h=a("./stream/GenericWorker"),i=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this._dataBinary=c.binary,this.options={compression:c.compression,compressionOptions:c.compressionOptions}};i.prototype={internalStream:function(a){var b=null,c="string";try{if(!a)throw new Error("No output type specified.");c=a.toLowerCase();var e="string"===c||"text"===c;"binarystring"!==c&&"text"!==c||(c="string"),b=this._decompressWorker();var g=!this._dataBinary;g&&!e&&(b=b.pipe(new f.Utf8EncodeWorker)),!g&&e&&(b=b.pipe(new f.Utf8DecodeWorker))}catch(i){b=new h("error"),b.error(i)}return new d(b,c,"")},async:function(a,b){return this.internalStream(a).accumulate(b)},nodeStream:function(a,b){return this.internalStream(a||"nodebuffer").toNodejsStream(b)},_compressWorker:function(a,b){if(this._data instanceof g&&this._data.compression.magic===a.magic)return this._data.getCompressedWorker();var c=this._decompressWorker();return this._dataBinary||(c=c.pipe(new f.Utf8EncodeWorker)),g.createWorkerFrom(c,a,b)},_decompressWorker:function(){return this._data instanceof g?this._data.getContentWorker():this._data instanceof h?this._data:new e(this._data)}};for(var j=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],k=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},l=0;l<j.length;l++)i.prototype[j[l]]=k;b.exports=i},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(a,b,c){(function(a){"use strict";function c(){k=!0;for(var a,b,c=l.length;c;){for(b=l,l=[],a=-1;++a<c;)b[a]();c=l.length}k=!1}function d(a){1!==l.push(a)||k||e()}var e,f=a.MutationObserver||a.WebKitMutationObserver;if(f){var g=0,h=new f(c),i=a.document.createTextNode("");h.observe(i,{characterData:!0}),e=function(){i.data=g=++g%2}}else if(a.setImmediate||"undefined"==typeof a.MessageChannel)e="document"in a&&"onreadystatechange"in a.document.createElement("script")?function(){var b=a.document.createElement("script");b.onreadystatechange=function(){c(),b.onreadystatechange=null,b.parentNode.removeChild(b),b=null},a.document.documentElement.appendChild(b)}:function(){setTimeout(c,0)};else{var j=new a.MessageChannel;j.port1.onmessage=c,e=function(){j.port2.postMessage(0)}}var k,l=[];b.exports=d}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],37:[function(a,b,c){"use strict";function d(){}function e(a){if("function"!=typeof a)throw new TypeError("resolver must be a function");this.state=s,this.queue=[],this.outcome=void 0,a!==d&&i(this,a)}function f(a,b,c){this.promise=a,"function"==typeof b&&(this.onFulfilled=b,this.callFulfilled=this.otherCallFulfilled),"function"==typeof c&&(this.onRejected=c,this.callRejected=this.otherCallRejected)}function g(a,b,c){o(function(){var d;try{d=b(c)}catch(e){return p.reject(a,e)}d===a?p.reject(a,new TypeError("Cannot resolve promise with itself")):p.resolve(a,d)})}function h(a){var b=a&&a.then;if(a&&("object"==typeof a||"function"==typeof a)&&"function"==typeof b)return function(){b.apply(a,arguments)}}function i(a,b){function c(b){f||(f=!0,p.reject(a,b))}function d(b){f||(f=!0,p.resolve(a,b))}function e(){b(d,c)}var f=!1,g=j(e);"error"===g.status&&c(g.value)}function j(a,b){var c={};try{c.value=a(b),c.status="success"}catch(d){c.status="error",c.value=d}return c}function k(a){return a instanceof this?a:p.resolve(new this(d),a)}function l(a){var b=new this(d);return p.reject(b,a)}function m(a){function b(a,b){function d(a){g[b]=a,++h!==e||f||(f=!0,p.resolve(j,g))}c.resolve(a).then(d,function(a){f||(f=!0,p.reject(j,a))})}var c=this;if("[object Array]"!==Object.prototype.toString.call(a))return this.reject(new TypeError("must be an array"));var e=a.length,f=!1;if(!e)return this.resolve([]);for(var g=new Array(e),h=0,i=-1,j=new this(d);++i<e;)b(a[i],i);return j}function n(a){function b(a){c.resolve(a).then(function(a){f||(f=!0,p.resolve(h,a))},function(a){f||(f=!0,p.reject(h,a))})}var c=this;if("[object Array]"!==Object.prototype.toString.call(a))return this.reject(new TypeError("must be an array"));var e=a.length,f=!1;if(!e)return this.resolve([]);for(var g=-1,h=new this(d);++g<e;)b(a[g]);return h}var o=a("immediate"),p={},q=["REJECTED"],r=["FULFILLED"],s=["PENDING"];b.exports=e,e.prototype["finally"]=function(a){function b(b){function c(){return b}return d.resolve(a()).then(c)}function c(b){function c(){throw b}return d.resolve(a()).then(c)}if("function"!=typeof a)return this;var d=this.constructor;return this.then(b,c)},e.prototype["catch"]=function(a){return this.then(null,a)},e.prototype.then=function(a,b){if("function"!=typeof a&&this.state===r||"function"!=typeof b&&this.state===q)return this;var c=new this.constructor(d);if(this.state!==s){var e=this.state===r?a:b;g(c,e,this.outcome)}else this.queue.push(new f(c,a,b));return c},f.prototype.callFulfilled=function(a){p.resolve(this.promise,a)},f.prototype.otherCallFulfilled=function(a){g(this.promise,this.onFulfilled,a)},f.prototype.callRejected=function(a){p.reject(this.promise,a)},f.prototype.otherCallRejected=function(a){g(this.promise,this.onRejected,a)},p.resolve=function(a,b){var c=j(h,b);if("error"===c.status)return p.reject(a,c.value);var d=c.value;if(d)i(a,d);else{a.state=r,a.outcome=b;for(var e=-1,f=a.queue.length;++e<f;)a.queue[e].callFulfilled(b)}return a},p.reject=function(a,b){a.state=q,a.outcome=b;for(var c=-1,d=a.queue.length;++c<d;)a.queue[c].callRejected(b);return a},e.resolve=k,e.reject=l,e.all=m,e.race=n},{immediate:36}],38:[function(a,b,c){"use strict";var d=a("./lib/utils/common").assign,e=a("./lib/deflate"),f=a("./lib/inflate"),g=a("./lib/zlib/constants"),h={};d(h,e,f,g),b.exports=h},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(a,b,c){"use strict";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:""},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e="string"==typeof b.dictionary?j.string2buf(b.dictionary):"[object ArrayBuffer]"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg||k[c.err];return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a("./zlib/deflate"),i=a("./utils/common"),j=a("./utils/strings"),k=a("./zlib/messages"),l=a("./zlib/zstream"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,"string"==typeof a?e.input=j.string2buf(a):"[object ArrayBuffer]"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||("string"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(a,b,c){"use strict";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:""},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg||k[c.err];return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a("./zlib/inflate"),h=a("./utils/common"),i=a("./utils/strings"),j=a("./zlib/constants"),k=a("./zlib/messages"),l=a("./zlib/zstream"),m=a("./zlib/gzheader"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,"string"==typeof a?m.input=i.binstring2buf(a):"[object ArrayBuffer]"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l="string"==typeof p?i.string2buf(p):"[object ArrayBuffer]"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||("string"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(a,b,c){"use strict";var d="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if("object"!=typeof c)throw new TypeError(c+"must be non-object");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],42:[function(a,b,c){"use strict";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c="",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a("./common"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{"./common":41}],43:[function(a,b,c){"use strict";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],44:[function(a,b,c){"use strict";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(a,b,c){"use strict";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],46:[function(a,b,c){"use strict";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),
a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a("../utils/common"),F=a("./trees"),G=a("./adler32"),H=a("./crc32"),I=a("./messages"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(a,b,c){"use strict";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}b.exports=d},{}],48:[function(a,b,c){"use strict";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg="invalid literal/length code",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg="invalid distance code",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg="invalid distance too far back",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg="invalid distance too far back",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],49:[function(a,b,c){"use strict";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg="",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg="incorrect header check",c.mode=ma;break}if((15&m)!==K){a.msg="unknown compression method",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg="invalid window size",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg="unknown compression method",c.mode=ma;break}if(57344&c.flags){a.msg="unknown header flags set",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg="header crc mismatch",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg="invalid block type",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg="invalid stored block lengths",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg="too many length or distance symbols",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg="invalid code lengths set",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg="invalid bit length repeat",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg="invalid bit length repeat",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg="invalid code -- missing end-of-block",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg="invalid literal/lengths set",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg="invalid distances set",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg="invalid literal/length code",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg="invalid distance code",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg="invalid distance too far back",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg="invalid distance too far back",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg="incorrect data check",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg="incorrect length check",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a("../utils/common"),t=a("./adler32"),u=a("./crc32"),v=a("./inffast"),w=a("./inftrees"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(a,b,c){"use strict";var d=a("../utils/common"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(;;){z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{"../utils/common":41}],51:[function(a,b,c){"use strict";b.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(a,b,c){"use strict";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a("../utils/common"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));
d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{"../utils/common":41}],53:[function(a,b,c){"use strict";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}],54:[function(a,b,c){"use strict";b.exports="function"==typeof setImmediate?setImmediate:function(){var a=[].slice.apply(arguments);a.splice(1,0,0),setTimeout.apply(null,a)}},{}]},{},[10])(10)});
/*! pdfmake v0.1.54, @license MIT, @link http://pdfmake.org */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var r in n)("object"==typeof exports?exports:t)[r]=n[r]}}("undefined"!=typeof self?self:this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=205)}([function(t,e,n){"use strict";function r(t){return"string"==typeof t||t instanceof String}function i(t){return"number"==typeof t||t instanceof Number}function o(t){return"boolean"==typeof t}function a(t){return Array.isArray(t)}function s(t){return"function"==typeof t}function u(t){return null!==t&&"object"==typeof t}function l(t){return null===t}function c(t){return void 0===t}function f(){for(var t={},e=0,n=arguments.length;e<n;e++){var r=arguments[e];if(r)for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i])}return t}function h(t,e,n){switch(t.type){case"ellipse":case"rect":t.x+=e,t.y+=n;break;case"line":t.x1+=e,t.x2+=e,t.y1+=n,t.y2+=n;break;case"polyline":for(var r=0,i=t.points.length;r<i;r++)t.points[r].x+=e,t.points[r].y+=n}}function d(t,e){return"font"===t?"font":e}t.exports={isString:r,isNumber:i,isBoolean:o,isArray:a,isFunction:s,isObject:u,isNull:l,isUndefined:c,pack:f,fontStringify:d,offsetVector:h}},function(t,e,n){!function(n,r){t.exports=e=r()}(0,function(){var t=t||function(t,e){var n=Object.create||function(){function t(){}return function(e){var n;return t.prototype=e,n=new t,t.prototype=null,n}}(),r={},i=r.lib={},o=i.Base=function(){return{extend:function(t){var e=n(this);return t&&e.mixIn(t),e.hasOwnProperty("init")&&this.init!==e.init||(e.init=function(){e.$super.init.apply(this,arguments)}),e.init.prototype=e,e.$super=this,e},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var e in t)t.hasOwnProperty(e)&&(this[e]=t[e]);t.hasOwnProperty("toString")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),a=i.WordArray=o.extend({init:function(t,e){t=this.words=t||[],this.sigBytes=void 0!=e?e:4*t.length},toString:function(t){return(t||u).stringify(this)},concat:function(t){var e=this.words,n=t.words,r=this.sigBytes,i=t.sigBytes;if(this.clamp(),r%4)for(var o=0;o<i;o++){var a=n[o>>>2]>>>24-o%4*8&255;e[r+o>>>2]|=a<<24-(r+o)%4*8}else for(var o=0;o<i;o+=4)e[r+o>>>2]=n[o>>>2];return this.sigBytes+=i,this},clamp:function(){var e=this.words,n=this.sigBytes;e[n>>>2]&=4294967295<<32-n%4*8,e.length=t.ceil(n/4)},clone:function(){var t=o.clone.call(this);return t.words=this.words.slice(0),t},random:function(e){for(var n,r=[],i=0;i<e;i+=4){var o=function(e){var e=e,n=987654321,r=4294967295;return function(){n=36969*(65535&n)+(n>>16)&r,e=18e3*(65535&e)+(e>>16)&r;var i=(n<<16)+e&r;return i/=4294967296,(i+=.5)*(t.random()>.5?1:-1)}}(4294967296*(n||t.random()));n=987654071*o(),r.push(4294967296*o()|0)}return new a.init(r,e)}}),s=r.enc={},u=s.Hex={stringify:function(t){for(var e=t.words,n=t.sigBytes,r=[],i=0;i<n;i++){var o=e[i>>>2]>>>24-i%4*8&255;r.push((o>>>4).toString(16)),r.push((15&o).toString(16))}return r.join("")},parse:function(t){for(var e=t.length,n=[],r=0;r<e;r+=2)n[r>>>3]|=parseInt(t.substr(r,2),16)<<24-r%8*4;return new a.init(n,e/2)}},l=s.Latin1={stringify:function(t){for(var e=t.words,n=t.sigBytes,r=[],i=0;i<n;i++){var o=e[i>>>2]>>>24-i%4*8&255;r.push(String.fromCharCode(o))}return r.join("")},parse:function(t){for(var e=t.length,n=[],r=0;r<e;r++)n[r>>>2]|=(255&t.charCodeAt(r))<<24-r%4*8;return new a.init(n,e)}},c=s.Utf8={stringify:function(t){try{return decodeURIComponent(escape(l.stringify(t)))}catch(t){throw new Error("Malformed UTF-8 data")}},parse:function(t){return l.parse(unescape(encodeURIComponent(t)))}},f=i.BufferedBlockAlgorithm=o.extend({reset:function(){this._data=new a.init,this._nDataBytes=0},_append:function(t){"string"==typeof t&&(t=c.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(e){var n=this._data,r=n.words,i=n.sigBytes,o=this.blockSize,s=4*o,u=i/s;u=e?t.ceil(u):t.max((0|u)-this._minBufferSize,0);var l=u*o,c=t.min(4*l,i);if(l){for(var f=0;f<l;f+=o)this._doProcessBlock(r,f);var h=r.splice(0,l);n.sigBytes-=c}return new a.init(h,c)},clone:function(){var t=o.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),h=(i.Hasher=f.extend({cfg:o.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){f.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){return t&&this._append(t),this._doFinalize()},blockSize:16,_createHelper:function(t){return function(e,n){return new t.init(n).finalize(e)}},_createHmacHelper:function(t){return function(e,n){return new h.HMAC.init(t,n).finalize(e)}}}),r.algo={});return r}(Math);return t})},function(t,e){var n=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},function(t,e,n){"use strict";(function(t){function r(){return o.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(t,e){if(r()<e)throw new RangeError("Invalid typed array length");return o.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e),t.__proto__=o.prototype):(null===t&&(t=new o(e)),t.length=e),t}function o(t,e,n){if(!(o.TYPED_ARRAY_SUPPORT||this instanceof o))return new o(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return l(this,t)}return a(this,t,e,n)}function a(t,e,n,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?h(t,e,n,r):"string"==typeof e?c(t,e,n):d(t,e)}function s(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function u(t,e,n,r){return s(e),e<=0?i(t,e):void 0!==n?"string"==typeof r?i(t,e).fill(n,r):i(t,e).fill(n):i(t,e)}function l(t,e){if(s(e),t=i(t,e<0?0:0|p(e)),!o.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function c(t,e,n){if("string"==typeof n&&""!==n||(n="utf8"),!o.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|v(e,n);t=i(t,r);var a=t.write(e,n);return a!==r&&(t=t.slice(0,a)),t}function f(t,e){var n=e.length<0?0:0|p(e.length);t=i(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function h(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r),o.TYPED_ARRAY_SUPPORT?(t=e,t.__proto__=o.prototype):t=f(t,e),t}function d(t,e){if(o.isBuffer(e)){var n=0|p(e.length);return t=i(t,n),0===t.length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||X(e.length)?i(t,0):f(t,e);if("Buffer"===e.type&&Q(e.data))return f(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function p(t){if(t>=r())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r().toString(16)+" bytes");return 0|t}function g(t){return+t!=t&&(t=0),o.alloc(+t)}function v(t,e){if(o.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return H(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Z(t).length;default:if(r)return H(t).length;e=(""+e).toLowerCase(),r=!0}}function y(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,e>>>=0,n<=e)return"";for(t||(t="utf8");;)switch(t){case"hex":return B(this,e,n);case"utf8":case"utf-8":return E(this,e,n);case"ascii":return T(this,e,n);case"latin1":case"binary":return I(this,e,n);case"base64":return P(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return L(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function b(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function m(t,e,n,r,i){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=i?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(i)return-1;n=t.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof e&&(e=o.from(e,r)),o.isBuffer(e))return 0===e.length?-1:w(t,e,n,r,i);if("number"==typeof e)return e&=255,o.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):w(t,[e],n,r,i);throw new TypeError("val must be string, number or Buffer")}function w(t,e,n,r,i){function o(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}var a=1,s=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;a=2,s/=2,u/=2,n/=2}var l;if(i){var c=-1;for(l=n;l<s;l++)if(o(t,l)===o(e,-1===c?0:l-c)){if(-1===c&&(c=l),l-c+1===u)return c*a}else-1!==c&&(l-=l-c),c=-1}else for(n+u>s&&(n=s-u),l=n;l>=0;l--){for(var f=!0,h=0;h<u;h++)if(o(t,l+h)!==o(e,h)){f=!1;break}if(f)return l}return-1}function x(t,e,n,r){n=Number(n)||0;var i=t.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=e.length;if(o%2!=0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var a=0;a<r;++a){var s=parseInt(e.substr(2*a,2),16);if(isNaN(s))return a;t[n+a]=s}return a}function _(t,e,n,r){return Y(H(e,t.length-n),t,n,r)}function k(t,e,n,r){return Y(V(e),t,n,r)}function S(t,e,n,r){return k(t,e,n,r)}function C(t,e,n,r){return Y(Z(e),t,n,r)}function A(t,e,n,r){return Y(q(e,t.length-n),t,n,r)}function P(t,e,n){return 0===e&&n===t.length?K.fromByteArray(t):K.fromByteArray(t.slice(e,n))}function E(t,e,n){n=Math.min(t.length,n);for(var r=[],i=e;i<n;){var o=t[i],a=null,s=o>239?4:o>223?3:o>191?2:1;if(i+s<=n){var u,l,c,f;switch(s){case 1:o<128&&(a=o);break;case 2:u=t[i+1],128==(192&u)&&(f=(31&o)<<6|63&u)>127&&(a=f);break;case 3:u=t[i+1],l=t[i+2],128==(192&u)&&128==(192&l)&&(f=(15&o)<<12|(63&u)<<6|63&l)>2047&&(f<55296||f>57343)&&(a=f);break;case 4:u=t[i+1],l=t[i+2],c=t[i+3],128==(192&u)&&128==(192&l)&&128==(192&c)&&(f=(15&o)<<18|(63&u)<<12|(63&l)<<6|63&c)>65535&&f<1114112&&(a=f)}}null===a?(a=65533,s=1):a>65535&&(a-=65536,r.push(a>>>10&1023|55296),a=56320|1023&a),r.push(a),i+=s}return O(r)}function O(t){var e=t.length;if(e<=$)return String.fromCharCode.apply(String,t);for(var n="",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=$));return n}function T(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function I(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function B(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i="",o=e;o<n;++o)i+=G(t[o]);return i}function L(t,e,n){for(var r=t.slice(e,n),i="",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function R(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function M(t,e,n,r,i,a){if(!o.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function F(t,e,n,r){e<0&&(e=65535+e+1);for(var i=0,o=Math.min(t.length-n,2);i<o;++i)t[n+i]=(e&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function D(t,e,n,r){e<0&&(e=4294967295+e+1);for(var i=0,o=Math.min(t.length-n,4);i<o;++i)t[n+i]=e>>>8*(r?i:3-i)&255}function z(t,e,n,r,i,o){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function N(t,e,n,r,i){return i||z(t,e,n,4,3.4028234663852886e38,-3.4028234663852886e38),J.write(t,e,n,r,23,4),n+4}function W(t,e,n,r,i){return i||z(t,e,n,8,1.7976931348623157e308,-1.7976931348623157e308),J.write(t,e,n,r,52,8),n+8}function U(t){if(t=j(t).replace(tt,""),t.length<2)return"";for(;t.length%4!=0;)t+="=";return t}function j(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function G(t){return t<16?"0"+t.toString(16):t.toString(16)}function H(t,e){e=e||1/0;for(var n,r=t.length,i=null,o=[],a=0;a<r;++a){if((n=t.charCodeAt(a))>55295&&n<57344){if(!i){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(e-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function V(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function q(t,e){for(var n,r,i,o=[],a=0;a<t.length&&!((e-=2)<0);++a)n=t.charCodeAt(a),r=n>>8,i=n%256,o.push(i),o.push(r);return o}function Z(t){return K.toByteArray(U(t))}function Y(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);++i)e[i+n]=t[i];return i}function X(t){return t!==t}/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var K=n(207),J=n(208),Q=n(136);e.Buffer=o,e.SlowBuffer=g,e.INSPECT_MAX_BYTES=50,o.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=r(),o.poolSize=8192,o._augment=function(t){return t.__proto__=o.prototype,t},o.from=function(t,e,n){return a(null,t,e,n)},o.TYPED_ARRAY_SUPPORT&&(o.prototype.__proto__=Uint8Array.prototype,o.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&o[Symbol.species]===o&&Object.defineProperty(o,Symbol.species,{value:null,configurable:!0})),o.alloc=function(t,e,n){return u(null,t,e,n)},o.allocUnsafe=function(t){return l(null,t)},o.allocUnsafeSlow=function(t){return l(null,t)},o.isBuffer=function(t){return!(null==t||!t._isBuffer)},o.compare=function(t,e){if(!o.isBuffer(t)||!o.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,i=0,a=Math.min(n,r);i<a;++i)if(t[i]!==e[i]){n=t[i],r=e[i];break}return n<r?-1:r<n?1:0},o.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(t,e){if(!Q(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return o.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=o.allocUnsafe(e),i=0;for(n=0;n<t.length;++n){var a=t[n];if(!o.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,i),i+=a.length}return r},o.byteLength=v,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},o.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},o.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},o.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?E(this,0,t):y.apply(this,arguments)},o.prototype.equals=function(t){if(!o.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===o.compare(this,t)},o.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},o.prototype.compare=function(t,e,n,r,i){if(!o.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),e<0||n>t.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&e>=n)return 0;if(r>=i)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,i>>>=0,this===t)return 0;for(var a=i-r,s=n-e,u=Math.min(a,s),l=this.slice(r,i),c=t.slice(e,n),f=0;f<u;++f)if(l[f]!==c[f]){a=l[f],s=c[f];break}return a<s?-1:s<a?1:0},o.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},o.prototype.indexOf=function(t,e,n){return m(this,t,e,n,!0)},o.prototype.lastIndexOf=function(t,e,n){return m(this,t,e,n,!1)},o.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-e;if((void 0===n||n>i)&&(n=i),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return x(this,t,e,n);case"utf8":case"utf-8":return _(this,t,e,n);case"ascii":return k(this,t,e,n);case"latin1":case"binary":return S(this,t,e,n);case"base64":return C(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,t,e,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var $=4096;o.prototype.slice=function(t,e){var n=this.length;t=~~t,e=void 0===e?n:~~e,t<0?(t+=n)<0&&(t=0):t>n&&(t=n),e<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r;if(o.TYPED_ARRAY_SUPPORT)r=this.subarray(t,e),r.__proto__=o.prototype;else{var i=e-t;r=new o(i,void 0);for(var a=0;a<i;++a)r[a]=this[a+t]}return r},o.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||R(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return r},o.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||R(t,e,this.length);for(var r=this[t+--e],i=1;e>0&&(i*=256);)r+=this[t+--e]*i;return r},o.prototype.readUInt8=function(t,e){return e||R(t,1,this.length),this[t]},o.prototype.readUInt16LE=function(t,e){return e||R(t,2,this.length),this[t]|this[t+1]<<8},o.prototype.readUInt16BE=function(t,e){return e||R(t,2,this.length),this[t]<<8|this[t+1]},o.prototype.readUInt32LE=function(t,e){return e||R(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},o.prototype.readUInt32BE=function(t,e){return e||R(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},o.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||R(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*e)),r},o.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||R(t,e,this.length);for(var r=e,i=1,o=this[t+--r];r>0&&(i*=256);)o+=this[t+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},o.prototype.readInt8=function(t,e){return e||R(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},o.prototype.readInt16LE=function(t,e){e||R(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},o.prototype.readInt16BE=function(t,e){e||R(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},o.prototype.readInt32LE=function(t,e){return e||R(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},o.prototype.readInt32BE=function(t,e){return e||R(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},o.prototype.readFloatLE=function(t,e){return e||R(t,4,this.length),J.read(this,t,!0,23,4)},o.prototype.readFloatBE=function(t,e){return e||R(t,4,this.length),J.read(this,t,!1,23,4)},o.prototype.readDoubleLE=function(t,e){return e||R(t,8,this.length),J.read(this,t,!0,52,8)},o.prototype.readDoubleBE=function(t,e){return e||R(t,8,this.length),J.read(this,t,!1,52,8)},o.prototype.writeUIntLE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){M(this,t,e,n,Math.pow(2,8*n)-1,0)}var i=1,o=0;for(this[e]=255&t;++o<n&&(i*=256);)this[e+o]=t/i&255;return e+n},o.prototype.writeUIntBE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){M(this,t,e,n,Math.pow(2,8*n)-1,0)}var i=n-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+n},o.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,1,255,0),o.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},o.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):F(this,t,e,!0),e+2},o.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):F(this,t,e,!1),e+2},o.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):D(this,t,e,!0),e+4},o.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},o.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var i=Math.pow(2,8*n-1);M(this,t,e,n,i-1,-i)}var o=0,a=1,s=0;for(this[e]=255&t;++o<n&&(a*=256);)t<0&&0===s&&0!==this[e+o-1]&&(s=1),this[e+o]=(t/a>>0)-s&255;return e+n},o.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var i=Math.pow(2,8*n-1);M(this,t,e,n,i-1,-i)}var o=n-1,a=1,s=0;for(this[e+o]=255&t;--o>=0&&(a*=256);)t<0&&0===s&&0!==this[e+o+1]&&(s=1),this[e+o]=(t/a>>0)-s&255;return e+n},o.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,1,127,-128),o.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},o.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):F(this,t,e,!0),e+2},o.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):F(this,t,e,!1),e+2},o.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,4,2147483647,-2147483648),o.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):D(this,t,e,!0),e+4},o.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||M(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),o.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},o.prototype.writeFloatLE=function(t,e,n){return N(this,t,e,!0,n)},o.prototype.writeFloatBE=function(t,e,n){return N(this,t,e,!1,n)},o.prototype.writeDoubleLE=function(t,e,n){return W(this,t,e,!0,n)},o.prototype.writeDoubleBE=function(t,e,n){return W(this,t,e,!1,n)},o.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var i,a=r-n;if(this===t&&n<e&&e<r)for(i=a-1;i>=0;--i)t[i+e]=this[i+n];else if(a<1e3||!o.TYPED_ARRAY_SUPPORT)for(i=0;i<a;++i)t[i+e]=this[i+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+a),e);return a},o.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!o.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0);var a;if("number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var s=o.isBuffer(t)?t:H(new o(t,r).toString()),u=s.length;for(a=0;a<n-e;++a)this[a+e]=s[a%u]}return this};var tt=/[^+\/0-9A-Za-z-_]/g}).call(e,n(22))},function(t,e,n){var r=n(61)("wks"),i=n(29),o=n(8).Symbol,a="function"==typeof o;(t.exports=function(t){return r[t]||(r[t]=a&&o[t]||(a?o:i)("Symbol."+t))}).store=r},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(34))}(0,function(t){t.lib.Cipher||function(e){var n=t,r=n.lib,i=r.Base,o=r.WordArray,a=r.BufferedBlockAlgorithm,s=n.enc,u=(s.Utf8,s.Base64),l=n.algo,c=l.EvpKDF,f=r.Cipher=a.extend({cfg:i.extend(),createEncryptor:function(t,e){return this.create(this._ENC_XFORM_MODE,t,e)},createDecryptor:function(t,e){return this.create(this._DEC_XFORM_MODE,t,e)},init:function(t,e,n){this.cfg=this.cfg.extend(n),this._xformMode=t,this._key=e,this.reset()},reset:function(){a.reset.call(this),this._doReset()},process:function(t){return this._append(t),this._process()},finalize:function(t){return t&&this._append(t),this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function t(t){return"string"==typeof t?k:w}return function(e){return{encrypt:function(n,r,i){return t(r).encrypt(e,n,r,i)},decrypt:function(n,r,i){return t(r).decrypt(e,n,r,i)}}}}()}),h=(r.StreamCipher=f.extend({_doFinalize:function(){return this._process(!0)},blockSize:1}),n.mode={}),d=r.BlockCipherMode=i.extend({createEncryptor:function(t,e){return this.Encryptor.create(t,e)},createDecryptor:function(t,e){return this.Decryptor.create(t,e)},init:function(t,e){this._cipher=t,this._iv=e}}),p=h.CBC=function(){function t(t,n,r){var i=this._iv;if(i){var o=i;this._iv=e}else var o=this._prevBlock;for(var a=0;a<r;a++)t[n+a]^=o[a]}var n=d.extend();return n.Encryptor=n.extend({processBlock:function(e,n){var r=this._cipher,i=r.blockSize;t.call(this,e,n,i),r.encryptBlock(e,n),this._prevBlock=e.slice(n,n+i)}}),n.Decryptor=n.extend({processBlock:function(e,n){var r=this._cipher,i=r.blockSize,o=e.slice(n,n+i);r.decryptBlock(e,n),t.call(this,e,n,i),this._prevBlock=o}}),n}(),g=n.pad={},v=g.Pkcs7={pad:function(t,e){for(var n=4*e,r=n-t.sigBytes%n,i=r<<24|r<<16|r<<8|r,a=[],s=0;s<r;s+=4)a.push(i);var u=o.create(a,r);t.concat(u)},unpad:function(t){var e=255&t.words[t.sigBytes-1>>>2];t.sigBytes-=e}},y=(r.BlockCipher=f.extend({cfg:f.cfg.extend({mode:p,padding:v}),reset:function(){f.reset.call(this);var t=this.cfg,e=t.iv,n=t.mode;if(this._xformMode==this._ENC_XFORM_MODE)var r=n.createEncryptor;else{var r=n.createDecryptor;this._minBufferSize=1}this._mode&&this._mode.__creator==r?this._mode.init(this,e&&e.words):(this._mode=r.call(n,this,e&&e.words),this._mode.__creator=r)},_doProcessBlock:function(t,e){this._mode.processBlock(t,e)},_doFinalize:function(){var t=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){t.pad(this._data,this.blockSize);var e=this._process(!0)}else{var e=this._process(!0);t.unpad(e)}return e},blockSize:4}),r.CipherParams=i.extend({init:function(t){this.mixIn(t)},toString:function(t){return(t||this.formatter).stringify(this)}})),b=n.format={},m=b.OpenSSL={stringify:function(t){var e=t.ciphertext,n=t.salt;if(n)var r=o.create([1398893684,1701076831]).concat(n).concat(e);else var r=e;return r.toString(u)},parse:function(t){var e=u.parse(t),n=e.words;if(1398893684==n[0]&&1701076831==n[1]){var r=o.create(n.slice(2,4));n.splice(0,4),e.sigBytes-=16}return y.create({ciphertext:e,salt:r})}},w=r.SerializableCipher=i.extend({cfg:i.extend({format:m}),encrypt:function(t,e,n,r){r=this.cfg.extend(r);var i=t.createEncryptor(n,r),o=i.finalize(e),a=i.cfg;return y.create({ciphertext:o,key:n,iv:a.iv,algorithm:t,mode:a.mode,padding:a.padding,blockSize:t.blockSize,formatter:r.format})},decrypt:function(t,e,n,r){return r=this.cfg.extend(r),e=this._parse(e,r.format),t.createDecryptor(n,r).finalize(e.ciphertext)},_parse:function(t,e){return"string"==typeof t?e.parse(t,this):t}}),x=n.kdf={},_=x.OpenSSL={execute:function(t,e,n,r){r||(r=o.random(8));var i=c.create({keySize:e+n}).compute(t,r),a=o.create(i.words.slice(e),4*n);return i.sigBytes=4*e,y.create({key:i,iv:a,salt:r})}},k=r.PasswordBasedCipher=w.extend({cfg:w.cfg.extend({kdf:_}),encrypt:function(t,e,n,r){r=this.cfg.extend(r);var i=r.kdf.execute(n,t.keySize,t.ivSize);r.iv=i.iv;var o=w.encrypt.call(this,t,e,i.key,r);return o.mixIn(i),o},decrypt:function(t,e,n,r){r=this.cfg.extend(r),e=this._parse(e,r.format);var i=r.kdf.execute(n,t.keySize,t.ivSize,e.salt);return r.iv=i.iv,w.decrypt.call(this,t,e,i.key,r)}})}()})},function(t,e,n){var r=n(20),i=n(2),o=n(38),a=n(27),s=n(36),u=function(t,e,n){var l,c,f,h=t&u.F,d=t&u.G,p=t&u.S,g=t&u.P,v=t&u.B,y=t&u.W,b=d?i:i[e]||(i[e]={}),m=b.prototype,w=d?r:p?r[e]:(r[e]||{}).prototype;d&&(n=e);for(l in n)(c=!h&&w&&void 0!==w[l])&&s(b,l)||(f=c?w[l]:n[l],b[l]=d&&"function"!=typeof w[l]?n[l]:v&&c?o(f,r):y&&w[l]==f?function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(f):g&&"function"==typeof f?o(Function.call,f):f,g&&((b.virtual||(b.virtual={}))[l]=f,t&u.R&&m&&!m[l]&&a(m,l,f)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},function(t,e,n){var r=n(8),i=n(51),o=n(16),a=n(23),s=n(30),u=function(t,e,n){var l,c,f,h,d=t&u.F,p=t&u.G,g=t&u.S,v=t&u.P,y=t&u.B,b=p?r:g?r[e]||(r[e]={}):(r[e]||{}).prototype,m=p?i:i[e]||(i[e]={}),w=m.prototype||(m.prototype={});p&&(n=e);for(l in n)c=!d&&b&&void 0!==b[l],f=(c?b:n)[l],h=y&&c?s(f,r):v&&"function"==typeof f?s(Function.call,f):f,b&&a(b,l,f,t&u.U),m[l]!=f&&o(m,l,h),v&&w[l]!=f&&(w[l]=f)};r.core=i,u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){var r=n(10),i=n(137),o=n(60),a=Object.defineProperty;e.f=n(11)?Object.defineProperty:function(t,e,n){if(r(t),e=o(e,!0),r(n),i)try{return a(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var r=n(13);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){t.exports=!n(14)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(122)("wks"),i=n(77),o=n(20).Symbol,a="function"==typeof o;(t.exports=function(t){return r[t]||(r[t]=a&&o[t]||(a?o:i)("Symbol."+t))}).store=r},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var r=n(31),i=Math.min;t.exports=function(t){return t>0?i(r(t),9007199254740991):0}},function(t,e,n){var r=n(9),i=n(39);t.exports=n(11)?function(t,e,n){return r.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){t.exports=!n(37)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(28),i=n(173),o=n(116),a=Object.defineProperty;e.f=n(17)?Object.defineProperty:function(t,e,n){if(r(t),e=o(e,!0),r(n),i)try{return a(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function i(t){if(c===setTimeout)return setTimeout(t,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(t,0);try{return c(t,0)}catch(e){try{return c.call(null,t,0)}catch(e){return c.call(this,t,0)}}}function o(t){if(f===clearTimeout)return clearTimeout(t);if((f===r||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch(e){try{return f.call(null,t)}catch(e){return f.call(this,t)}}}function a(){g&&d&&(g=!1,d.length?p=d.concat(p):v=-1,p.length&&s())}function s(){if(!g){var t=i(a);g=!0;for(var e=p.length;e;){for(d=p,p=[];++v<e;)d&&d[v].run();v=-1,e=p.length}d=null,g=!1,o(t)}}function u(t,e){this.fun=t,this.array=e}function l(){}var c,f,h=t.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:n}catch(t){c=n}try{f="function"==typeof clearTimeout?clearTimeout:r}catch(t){f=r}}();var d,p=[],g=!1,v=-1;h.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];p.push(new u(t,e)),1!==p.length||g||i(s)},u.prototype.run=function(){this.fun.apply(null,this.array)},h.title="browser",h.browser=!0,h.env={},h.argv=[],h.version="",h.versions={},h.on=l,h.addListener=l,h.once=l,h.off=l,h.removeListener=l,h.removeAllListeners=l,h.emit=l,h.prependListener=l,h.prependOnceListener=l,h.listeners=function(t){return[]},h.binding=function(t){throw new Error("process.binding is not supported")},h.cwd=function(){return"/"},h.chdir=function(t){throw new Error("process.chdir is not supported")},h.umask=function(){return 0}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){var r=n(8),i=n(16),o=n(24),a=n(29)("src"),s=n(214),u=(""+s).split("toString");n(51).inspectSource=function(t){return s.call(t)},(t.exports=function(t,e,n,s){var l="function"==typeof n;l&&(o(n,"name")||i(n,"name",e)),t[e]!==n&&(l&&(o(n,a)||i(n,a,t[e]?""+t[e]:u.join(String(e)))),t===r?t[e]=n:s?t[e]?t[e]=n:i(t,e,n):(delete t[e],i(t,e,n)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[a]||s.call(this)})},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){var r=n(42);t.exports=function(t){return Object(r(t))}},function(t,e,n){(function(){var t,r;t=n(47).Number,e.resolveLength=function(e,n,r){var i;if("number"==typeof e?i=e:"function"==typeof e?i=e.call(r,r):r&&"string"==typeof e?i=r[e]:n&&e instanceof t&&(i=e.decode(n)),isNaN(i))throw new Error("Not a fixed size");return i},r=function(){function t(t){var e,n;null==t&&(t={}),this.enumerable=!0,this.configurable=!0;for(e in t)n=t[e],this[e]=n}return t}(),e.PropertyDescriptor=r}).call(this)},function(t,e,n){var r=n(18),i=n(56);t.exports=n(17)?function(t,e,n){return r.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(19);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+r).toString(36))}},function(t,e,n){var r=n(139);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,i){return t.call(e,n,r,i)}}return function(){return t.apply(e,arguments)}}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e,n){"use strict";function r(t){if(!(this instanceof r))return new r(t);l.call(this,t),c.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",i)}function i(){this.allowHalfOpen||this._writableState.ended||a.nextTick(o,this)}function o(t){t.end()}var a=n(69),s=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};t.exports=r;var u=n(55);u.inherits=n(32);var l=n(158),c=n(104);u.inherits(r,l);for(var f=s(c.prototype),h=0;h<f.length;h++){var d=f[h];r.prototype[d]||(r.prototype[d]=c.prototype[d])}Object.defineProperty(r.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(r.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}}),r.prototype._destroy=function(t,e){this.push(null),this.end(),a.nextTick(e,t)}},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(107),n(108))}(0,function(t){return function(){var e=t,n=e.lib,r=n.Base,i=n.WordArray,o=e.algo,a=o.MD5,s=o.EvpKDF=r.extend({cfg:r.extend({keySize:4,hasher:a,iterations:1}),init:function(t){this.cfg=this.cfg.extend(t)},compute:function(t,e){for(var n=this.cfg,r=n.hasher.create(),o=i.create(),a=o.words,s=n.keySize,u=n.iterations;a.length<s;){l&&r.update(l);var l=r.update(t).finalize(e);r.reset();for(var c=1;c<u;c++)l=r.finalize(l),r.reset();o.concat(l)}return o.sigBytes=4*s,o}});e.EvpKDF=function(t,e,n){return s.create(n).compute(t,e)}}(),t.EvpKDF})},function(t,e,n){var r=n(112),i=n(114);t.exports=function(t){return r(i(t))}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var r=n(175);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,i){return t.call(e,n,r,i)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){t.exports=!1},function(t,e,n){var r=n(81),i=n(42);t.exports=function(t){return r(i(t))}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e){t.exports={}},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){return function(){function e(t,e,n){for(var r=[],o=0,a=0;a<e;a++)if(a%4){var s=n[t.charCodeAt(a-1)]<<a%4*2,u=n[t.charCodeAt(a)]>>>6-a%4*2;r[o>>>2]|=(s|u)<<24-o%4*8,o++}return i.create(r,o)}var n=t,r=n.lib,i=r.WordArray,o=n.enc;o.Base64={stringify:function(t){var e=t.words,n=t.sigBytes,r=this._map;t.clamp();for(var i=[],o=0;o<n;o+=3)for(var a=e[o>>>2]>>>24-o%4*8&255,s=e[o+1>>>2]>>>24-(o+1)%4*8&255,u=e[o+2>>>2]>>>24-(o+2)%4*8&255,l=a<<16|s<<8|u,c=0;c<4&&o+.75*c<n;c++)i.push(r.charAt(l>>>6*(3-c)&63));var f=r.charAt(64);if(f)for(;i.length%4;)i.push(f);return i.join("")},parse:function(t){var n=t.length,r=this._map,i=this._reverseMap;if(!i){i=this._reverseMap=[];for(var o=0;o<r.length;o++)i[r.charCodeAt(o)]=o}var a=r.charAt(64);if(a){var s=t.indexOf(a);-1!==s&&(n=s)}return e(t,n,i)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),t.enc.Base64})},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){return function(e){function n(t,e,n,r,i,o,a){var s=t+(e&n|~e&r)+i+a;return(s<<o|s>>>32-o)+e}function r(t,e,n,r,i,o,a){var s=t+(e&r|n&~r)+i+a;return(s<<o|s>>>32-o)+e}function i(t,e,n,r,i,o,a){var s=t+(e^n^r)+i+a;return(s<<o|s>>>32-o)+e}function o(t,e,n,r,i,o,a){var s=t+(n^(e|~r))+i+a;return(s<<o|s>>>32-o)+e}var a=t,s=a.lib,u=s.WordArray,l=s.Hasher,c=a.algo,f=[];!function(){for(var t=0;t<64;t++)f[t]=4294967296*e.abs(e.sin(t+1))|0}();var h=c.MD5=l.extend({_doReset:function(){this._hash=new u.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(t,e){for(var a=0;a<16;a++){var s=e+a,u=t[s];t[s]=16711935&(u<<8|u>>>24)|4278255360&(u<<24|u>>>8)}var l=this._hash.words,c=t[e+0],h=t[e+1],d=t[e+2],p=t[e+3],g=t[e+4],v=t[e+5],y=t[e+6],b=t[e+7],m=t[e+8],w=t[e+9],x=t[e+10],_=t[e+11],k=t[e+12],S=t[e+13],C=t[e+14],A=t[e+15],P=l[0],E=l[1],O=l[2],T=l[3];P=n(P,E,O,T,c,7,f[0]),T=n(T,P,E,O,h,12,f[1]),O=n(O,T,P,E,d,17,f[2]),E=n(E,O,T,P,p,22,f[3]),P=n(P,E,O,T,g,7,f[4]),T=n(T,P,E,O,v,12,f[5]),O=n(O,T,P,E,y,17,f[6]),E=n(E,O,T,P,b,22,f[7]),P=n(P,E,O,T,m,7,f[8]),T=n(T,P,E,O,w,12,f[9]),O=n(O,T,P,E,x,17,f[10]),E=n(E,O,T,P,_,22,f[11]),P=n(P,E,O,T,k,7,f[12]),T=n(T,P,E,O,S,12,f[13]),O=n(O,T,P,E,C,17,f[14]),E=n(E,O,T,P,A,22,f[15]),P=r(P,E,O,T,h,5,f[16]),T=r(T,P,E,O,y,9,f[17]),O=r(O,T,P,E,_,14,f[18]),E=r(E,O,T,P,c,20,f[19]),P=r(P,E,O,T,v,5,f[20]),T=r(T,P,E,O,x,9,f[21]),O=r(O,T,P,E,A,14,f[22]),E=r(E,O,T,P,g,20,f[23]),P=r(P,E,O,T,w,5,f[24]),T=r(T,P,E,O,C,9,f[25]),O=r(O,T,P,E,p,14,f[26]),E=r(E,O,T,P,m,20,f[27]),P=r(P,E,O,T,S,5,f[28]),T=r(T,P,E,O,d,9,f[29]),O=r(O,T,P,E,b,14,f[30]),E=r(E,O,T,P,k,20,f[31]),P=i(P,E,O,T,v,4,f[32]),T=i(T,P,E,O,m,11,f[33]),O=i(O,T,P,E,_,16,f[34]),E=i(E,O,T,P,C,23,f[35]),P=i(P,E,O,T,h,4,f[36]),T=i(T,P,E,O,g,11,f[37]),O=i(O,T,P,E,b,16,f[38]),E=i(E,O,T,P,x,23,f[39]),P=i(P,E,O,T,S,4,f[40]),T=i(T,P,E,O,c,11,f[41]),O=i(O,T,P,E,p,16,f[42]),E=i(E,O,T,P,y,23,f[43]),P=i(P,E,O,T,w,4,f[44]),T=i(T,P,E,O,k,11,f[45]),O=i(O,T,P,E,A,16,f[46]),E=i(E,O,T,P,d,23,f[47]),P=o(P,E,O,T,c,6,f[48]),T=o(T,P,E,O,b,10,f[49]),O=o(O,T,P,E,C,15,f[50]),E=o(E,O,T,P,v,21,f[51]),P=o(P,E,O,T,k,6,f[52]),T=o(T,P,E,O,p,10,f[53]),O=o(O,T,P,E,x,15,f[54]),E=o(E,O,T,P,h,21,f[55]),P=o(P,E,O,T,m,6,f[56]),T=o(T,P,E,O,A,10,f[57]),O=o(O,T,P,E,y,15,f[58]),E=o(E,O,T,P,S,21,f[59]),P=o(P,E,O,T,g,6,f[60]),T=o(T,P,E,O,_,10,f[61]),O=o(O,T,P,E,d,15,f[62]),E=o(E,O,T,P,w,21,f[63]),l[0]=l[0]+P|0,l[1]=l[1]+E|0,l[2]=l[2]+O|0,l[3]=l[3]+T|0},_doFinalize:function(){var t=this._data,n=t.words,r=8*this._nDataBytes,i=8*t.sigBytes;n[i>>>5]|=128<<24-i%32;var o=e.floor(r/4294967296),a=r;n[15+(i+64>>>9<<4)]=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),n[14+(i+64>>>9<<4)]=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),t.sigBytes=4*(n.length+1),this._process();for(var s=this._hash,u=s.words,l=0;l<4;l++){var c=u[l];u[l]=16711935&(c<<8|c>>>24)|4278255360&(c<<24|c>>>8)}return s},clone:function(){var t=l.clone.call(this);return t._hash=this._hash.clone(),t}});a.MD5=l._createHelper(h),a.HmacMD5=l._createHmacHelper(h)}(Math),t.MD5})},function(t,e,n){"use strict";(function(e){var r,i=n(3),o=i.Buffer,a={};for(r in i)i.hasOwnProperty(r)&&"SlowBuffer"!==r&&"Buffer"!==r&&(a[r]=i[r]);var s=a.Buffer={};for(r in o)o.hasOwnProperty(r)&&"allocUnsafe"!==r&&"allocUnsafeSlow"!==r&&(s[r]=o[r]);if(a.Buffer.prototype=o.prototype,s.from&&s.from!==Uint8Array.from||(s.from=function(t,e,n){if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof t);if(t&&void 0===t.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);return o(t,e,n)}),s.alloc||(s.alloc=function(t,e,n){if("number"!=typeof t)throw new TypeError('The "size" argument must be of type number. Received type '+typeof t);if(t<0||t>=2*(1<<30))throw new RangeError('The value "'+t+'" is invalid for option "size"');var r=o(t);return e&&0!==e.length?"string"==typeof n?r.fill(e,n):r.fill(e):r.fill(0),r}),!a.kStringMaxLength)try{a.kStringMaxLength=e.binding("buffer").kStringMaxLength}catch(t){}a.constants||(a.constants={MAX_LENGTH:a.kMaxLength},a.kStringMaxLength&&(a.constants.MAX_STRING_LENGTH=a.kStringMaxLength)),t.exports=a}).call(e,n(21))},function(t,e,n){(function(){var t,r,i,o={}.hasOwnProperty,a=function(t,e){function n(){this.constructor=t}for(var r in e)o.call(e,r)&&(t[r]=e[r]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t};t=n(109),i=function(){function e(t,e){this.type=t,this.endian=null!=e?e:"BE",this.fn=this.type,"8"!==this.type[this.type.length-1]&&(this.fn+=this.endian)}return e.prototype.size=function(){return t.TYPES[this.type]},e.prototype.decode=function(t){return t["read"+this.fn]()},e.prototype.encode=function(t,e){return t["write"+this.fn](e)},e}(),e.Number=i,e.uint8=new i("UInt8"),e.uint16be=e.uint16=new i("UInt16","BE"),e.uint16le=new i("UInt16","LE"),e.uint24be=e.uint24=new i("UInt24","BE"),e.uint24le=new i("UInt24","LE"),e.uint32be=e.uint32=new i("UInt32","BE"),e.uint32le=new i("UInt32","LE"),e.int8=new i("Int8"),e.int16be=e.int16=new i("Int16","BE"),e.int16le=new i("Int16","LE"),e.int24be=e.int24=new i("Int24","BE"),e.int24le=new i("Int24","LE"),e.int32be=e.int32=new i("Int32","BE"),e.int32le=new i("Int32","LE"),e.floatbe=e.float=new i("Float","BE"),e.floatle=new i("Float","LE"),e.doublebe=e.double=new i("Double","BE"),e.doublele=new i("Double","LE"),r=function(t){function e(t,n,r){null==r&&(r=t>>1),e.__super__.constructor.call(this,"Int"+t,n),this._point=1<<r}return a(e,t),e.prototype.decode=function(t){return e.__super__.decode.call(this,t)/this._point},e.prototype.encode=function(t,n){return e.__super__.encode.call(this,t,n*this._point|0)},e}(i),e.Fixed=r,e.fixed16be=e.fixed16=new r(16,"BE"),e.fixed16le=new r(16,"LE"),e.fixed32be=e.fixed32=new r(32,"BE"),e.fixed32le=new r(32,"LE")}).call(this)},function(t,e){t.exports={}},function(t,e,n){"use strict";var r=n(338)(!0);n(119)(String,"String",function(t){this._t=String(t),this._i=0},function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})})},function(t,e,n){"use strict";(function(e,n){function r(){this.fileSystem={},this.dataSystem={}}function i(t){return 0===t.indexOf(n)&&(t=t.substring(n.length)),0===t.indexOf("/")&&(t=t.substring(1)),t}r.prototype.readFileSync=function(t){t=i(t);var n=this.dataSystem[t];if(n)return new e(n,"string"==typeof n?"base64":void 0);var r=this.fileSystem[t];if(r)return r;throw"File '"+t+"' not found in virtual file system"},r.prototype.writeFileSync=function(t,e){this.fileSystem[i(t)]=e},r.prototype.bindFS=function(t){this.dataSystem=t||{}},t.exports=new r}).call(e,n(3).Buffer,"/")},function(t,e){var n=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},function(t,e,n){var r=n(140),i=n(84);t.exports=Object.keys||function(t){return r(t,i)}},function(t,e,n){var r=n(31),i=Math.max,o=Math.min;t.exports=function(t,e){return t=r(t),t<0?i(t+e,0):o(t,e)}},function(t,e,n){var r=n(9).f,i=n(24),o=n(4)("toStringTag");t.exports=function(t,e,n){t&&!i(t=n?t:t.prototype,o)&&r(t,o,{configurable:!0,value:e})}},function(t,e,n){(function(t){function n(t){return Array.isArray?Array.isArray(t):"[object Array]"===v(t)}function r(t){return"boolean"==typeof t}function i(t){return null===t}function o(t){return null==t}function a(t){return"number"==typeof t}function s(t){return"string"==typeof t}function u(t){return"symbol"==typeof t}function l(t){return void 0===t}function c(t){return"[object RegExp]"===v(t)}function f(t){return"object"==typeof t&&null!==t}function h(t){return"[object Date]"===v(t)}function d(t){return"[object Error]"===v(t)||t instanceof Error}function p(t){return"function"==typeof t}function g(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t}function v(t){return Object.prototype.toString.call(t)}e.isArray=n,e.isBoolean=r,e.isNull=i,e.isNullOrUndefined=o,e.isNumber=a,e.isString=s,e.isSymbol=u,e.isUndefined=l,e.isRegExp=c,e.isObject=f,e.isDate=h,e.isError=d,e.isFunction=p,e.isPrimitive=g,e.isBuffer=t.isBuffer}).call(e,n(3).Buffer)},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){n(332);for(var r=n(20),i=n(27),o=n(48),a=n(12)("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<s.length;u++){var l=s[u],c=r[l],f=c&&c.prototype;f&&!f[a]&&i(f,a,l),o[l]=o.Array}},function(t,e,n){var r=n(179),i=n(123);t.exports=Object.keys||function(t){return r(t,i)}},function(t,e,n){var r=n(114);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(13);t.exports=function(t,e){if(!r(t))return t;var n,i;if(e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;if("function"==typeof(n=t.valueOf)&&!r(i=n.call(t)))return i;if(!e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var r=n(51),i=n(8),o=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(40)?"pure":"global",copyright:"Â© 2019 Denis Pushkarev (zloirock.ru)"})},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,n){var r=n(23);t.exports=function(t,e,n){for(var i in e)r(t,i,e[i],n);return t}},function(t,e){t.exports=function(t,e,n,r){if(!(t instanceof e)||void 0!==r&&r in t)throw TypeError(n+": incorrect invocation!");return t}},function(t,e,n){var r=n(140),i=n(84).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,i)}},function(t,e,n){var r=n(10),i=n(222),o=n(84),a=n(83)("IE_PROTO"),s=function(){},u=function(){var t,e=n(138)("iframe"),r=o.length;for(e.style.display="none",n(223).appendChild(e),e.src="javascript:",t=e.contentWindow.document,t.open(),t.write("<script>document.F=Object<\/script>"),t.close(),u=t.F;r--;)delete u.prototype[o[r]];return u()};t.exports=Object.create||function(t,e){var n;return null!==t?(s.prototype=r(t),n=new s,s.prototype=null,n[a]=t):n=u(),void 0===e?n:i(n,e)}},function(t,e,n){"use strict";function r(t){console&&console.warn&&console.warn(t)}function i(){i.init.call(this)}function o(t){return void 0===t._maxListeners?i.defaultMaxListeners:t._maxListeners}function a(t,e,n,i){var a,s,u;if("function"!=typeof n)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof n);if(s=t._events,void 0===s?(s=t._events=Object.create(null),t._eventsCount=0):(void 0!==s.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),s=t._events),u=s[e]),void 0===u)u=s[e]=n,++t._eventsCount;else if("function"==typeof u?u=s[e]=i?[n,u]:[u,n]:i?u.unshift(n):u.push(n),(a=o(t))>0&&u.length>a&&!u.warned){u.warned=!0;var l=new Error("Possible EventEmitter memory leak detected. "+u.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");l.name="MaxListenersExceededWarning",l.emitter=t,l.type=e,l.count=u.length,r(l)}return t}function s(){for(var t=[],e=0;e<arguments.length;e++)t.push(arguments[e]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,v(this.listener,this.target,t))}function u(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},i=s.bind(r);return i.listener=n,r.wrapFn=i,i}function l(t,e,n){var r=t._events;if(void 0===r)return[];var i=r[e];return void 0===i?[]:"function"==typeof i?n?[i.listener||i]:[i]:n?d(i):f(i,i.length)}function c(t){var e=this._events;if(void 0!==e){var n=e[t];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function f(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t[r];return n}function h(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}function d(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}var p,g="object"==typeof Reflect?Reflect:null,v=g&&"function"==typeof g.apply?g.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};p=g&&"function"==typeof g.ownKeys?g.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var y=Number.isNaN||function(t){return t!==t};t.exports=i,i.EventEmitter=i,i.prototype._events=void 0,i.prototype._eventsCount=0,i.prototype._maxListeners=void 0;var b=10;Object.defineProperty(i,"defaultMaxListeners",{enumerable:!0,get:function(){return b},set:function(t){if("number"!=typeof t||t<0||y(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");b=t}}),i.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},i.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||y(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},i.prototype.getMaxListeners=function(){return o(this)},i.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var r="error"===t,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var s=i[t];if(void 0===s)return!1;if("function"==typeof s)v(s,this,e);else for(var u=s.length,l=f(s,u),n=0;n<u;++n)v(l[n],this,e);return!0},i.prototype.addListener=function(t,e){return a(this,t,e,!1)},i.prototype.on=i.prototype.addListener,i.prototype.prependListener=function(t,e){return a(this,t,e,!0)},i.prototype.once=function(t,e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);return this.on(t,u(this,t,e)),this},i.prototype.prependOnceListener=function(t,e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);return this.prependListener(t,u(this,t,e)),this},i.prototype.removeListener=function(t,e){var n,r,i,o,a;if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);if(void 0===(r=this._events))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===e||n[o].listener===e){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():h(n,i),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",t,a||e)}return this},i.prototype.off=i.prototype.removeListener,i.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)"removeListener"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},i.prototype.listeners=function(t){return l(this,t,!0)},i.prototype.rawListeners=function(t){return l(this,t,!1)},i.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):c.call(t,e)},i.prototype.listenerCount=c,i.prototype.eventNames=function(){return this._eventsCount>0?p(this._events):[]}},function(t,e,n){"use strict";(function(e){function n(t,n,r,i){if("function"!=typeof t)throw new TypeError('"callback" argument must be a function');var o,a,s=arguments.length;switch(s){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick(function(){t.call(null,n)});case 3:return e.nextTick(function(){t.call(null,n,r)});case 4:return e.nextTick(function(){t.call(null,n,r,i)});default:for(o=new Array(s-1),a=0;a<o.length;)o[a++]=arguments[a];return e.nextTick(function(){t.apply(null,o)})}}!e.version||0===e.version.indexOf("v0.")||0===e.version.indexOf("v1.")&&0!==e.version.indexOf("v1.8.")?t.exports={nextTick:n}:t.exports=e}).call(e,n(21))},function(t,e,n){function r(t,e){for(var n in t)e[n]=t[n]}function i(t,e,n){return a(t,e,n)}var o=n(3),a=o.Buffer;a.from&&a.alloc&&a.allocUnsafe&&a.allocUnsafeSlow?t.exports=o:(r(o,e),e.Buffer=i),r(a,i),i.from=function(t,e,n){if("number"==typeof t)throw new TypeError("Argument must not be a number");return a(t,e,n)},i.alloc=function(t,e,n){if("number"!=typeof t)throw new TypeError("Argument must be a number");var r=a(t);return void 0!==e?"string"==typeof n?r.fill(e,n):r.fill(e):r.fill(0),r},i.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return a(t)},i.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return o.SlowBuffer(t)}},function(t,e,n){"use strict";function r(t,e){return Object.prototype.hasOwnProperty.call(t,e)}var i="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;e.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var n=e.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(var i in n)r(n,i)&&(t[i]=n[i])}}return t},e.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var o={arraySet:function(t,e,n,r,i){if(e.subarray&&t.subarray)return void t.set(e.subarray(n,n+r),i);for(var o=0;o<r;o++)t[i+o]=e[n+o]},flattenChunks:function(t){var e,n,r,i,o,a;for(r=0,e=0,n=t.length;e<n;e++)r+=t[e].length;for(a=new Uint8Array(r),i=0,e=0,n=t.length;e<n;e++)o=t[e],a.set(o,i),i+=o.length;return a}},a={arraySet:function(t,e,n,r,i){for(var o=0;o<r;o++)t[i+o]=e[n+o]},flattenChunks:function(t){return[].concat.apply([],t)}};e.setTyped=function(t){t?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,o)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,a))},e.setTyped(i)},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){return function(e){var n=t,r=n.lib,i=r.Base,o=r.WordArray,a=n.x64={};a.Word=i.extend({init:function(t,e){this.high=t,this.low=e}}),a.WordArray=i.extend({init:function(t,e){t=this.words=t||[],this.sigBytes=void 0!=e?e:8*t.length},toX32:function(){for(var t=this.words,e=t.length,n=[],r=0;r<e;r++){var i=t[r];n.push(i.high),n.push(i.low)}return o.create(n,this.sigBytes)},clone:function(){for(var t=i.clone.call(this),e=t.words=this.words.slice(0),n=e.length,r=0;r<n;r++)e[r]=e[r].clone();return t}})}(),t})},function(t,e){e.f={}.propertyIsEnumerable},function(t,e){t.exports=!0},function(t,e,n){var r=n(28),i=n(178),o=n(123),a=n(121)("IE_PROTO"),s=function(){},u=function(){var t,e=n(174)("iframe"),r=o.length;for(e.style.display="none",n(336).appendChild(e),e.src="javascript:",t=e.contentWindow.document,t.open(),t.write("<script>document.F=Object<\/script>"),t.close(),u=t.F;r--;)delete u.prototype[o[r]];return u()};t.exports=Object.create||function(t,e){var n;return null!==t?(s.prototype=r(t),n=new s,s.prototype=null,n[a]=t):n=u(),void 0===e?n:i(n,e)}},function(t,e,n){var r=n(120),i=Math.min;t.exports=function(t){return t>0?i(r(t),9007199254740991):0}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+r).toString(36))}},function(t,e,n){var r=n(18).f,i=n(36),o=n(12)("toStringTag");t.exports=function(t,e,n){t&&!i(t=n?t:t.prototype,o)&&r(t,o,{configurable:!0,value:e})}},function(t,e,n){var r=n(77)("meta"),i=n(19),o=n(36),a=n(18).f,s=0,u=Object.isExtensible||function(){return!0},l=!n(37)(function(){return u(Object.preventExtensions({}))}),c=function(t){a(t,r,{value:{i:"O"+ ++s,w:{}}})},f=function(t,e){if(!i(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!o(t,r)){if(!u(t))return"F";if(!e)return"E";c(t)}return t[r].i},h=function(t,e){if(!o(t,r)){if(!u(t))return!0;if(!e)return!1;c(t)}return t[r].w},d=function(t){return l&&p.NEED&&u(t)&&!o(t,r)&&c(t),t},p=t.exports={KEY:r,NEED:!1,fastKey:f,getWeak:h,onFreeze:d}},function(t,e,n){var r=n(38),i=n(189),o=n(190),a=n(28),s=n(76),u=n(124),l={},c={},e=t.exports=function(t,e,n,f,h){var d,p,g,v,y=h?function(){return t}:u(t),b=r(n,f,e?2:1),m=0;if("function"!=typeof y)throw TypeError(t+" is not iterable!");if(o(y)){for(d=s(t.length);d>m;m++)if((v=e?b(a(p=t[m])[0],p[1]):b(t[m]))===l||v===c)return v}else for(g=y.call(t);!(p=g.next()).done;)if((v=i(g,b,p.value,e))===l||v===c)return v};e.BREAK=l,e.RETURN=c},function(t,e,n){var r=n(62);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},function(t,e,n){var r=n(41),i=n(15),o=n(53);t.exports=function(t){return function(e,n,a){var s,u=r(e),l=i(u.length),c=o(a,l);if(t&&n!=n){for(;l>c;)if((s=u[c++])!=s)return!0}else for(;l>c;c++)if((t||c in u)&&u[c]===n)return t||c||0;return!t&&-1}}},function(t,e,n){var r=n(61)("keys"),i=n(29);t.exports=function(t){return r[t]||(r[t]=i(t))}},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){"use strict";var r=n(25),i=n(53),o=n(15);t.exports=function(t){for(var e=r(this),n=o(e.length),a=arguments.length,s=i(a>1?arguments[1]:void 0,n),u=a>2?arguments[2]:void 0,l=void 0===u?n:i(u,n);l>s;)e[s++]=t;return e}},function(t,e,n){var r=n(4)("unscopables"),i=Array.prototype;void 0==i[r]&&n(16)(i,r,{}),t.exports=function(t){i[r][t]=!0}},function(t,e,n){var r=n(62),i=n(4)("toStringTag"),o="Arguments"==r(function(){return arguments}()),a=function(t,e){try{return t[e]}catch(t){}};t.exports=function(t){var e,n,s;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=a(e=Object(t),i))?n:o?r(e):"Object"==(s=r(e))&&"function"==typeof e.callee?"Arguments":s}},function(t,e,n){var r=n(43),i=n(4)("iterator"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||o[i]===t)}},function(t,e,n){var r=n(88),i=n(4)("iterator"),o=n(43);t.exports=n(51).getIteratorMethod=function(t){if(void 0!=t)return t[i]||t["@@iterator"]||o[r(t)]}},function(t,e,n){"use strict";var r=n(87),i=n(147),o=n(43),a=n(41);t.exports=n(92)(Array,"Array",function(t,e){this._t=a(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,i(1)):"keys"==e?i(0,n):"values"==e?i(0,t[n]):i(0,[n,t[n]])},"values"),o.Arguments=o.Array,r("keys"),r("values"),r("entries")},function(t,e,n){"use strict";var r=n(40),i=n(7),o=n(23),a=n(16),s=n(43),u=n(227),l=n(54),c=n(144),f=n(4)("iterator"),h=!([].keys&&"next"in[].keys()),d=function(){return this};t.exports=function(t,e,n,p,g,v,y){u(n,e,p);var b,m,w,x=function(t){if(!h&&t in C)return C[t];switch(t){case"keys":case"values":return function(){return new n(this,t)}}return function(){return new n(this,t)}},_=e+" Iterator",k="values"==g,S=!1,C=t.prototype,A=C[f]||C["@@iterator"]||g&&C[g],P=A||x(g),E=g?k?x("entries"):P:void 0,O="Array"==e?C.entries||A:A;if(O&&(w=c(O.call(new t)))!==Object.prototype&&w.next&&(l(w,_,!0),r||"function"==typeof w[f]||a(w,f,d)),k&&A&&"values"!==A.name&&(S=!0,P=function(){return A.call(this)}),r&&!y||!h&&!S&&C[f]||a(C,f,P),s[e]=P,s[_]=d,g)if(b={values:k?P:x("values"),keys:v?P:x("keys"),entries:E},y)for(m in b)m in C||o(C,m,b[m]);else i(i.P+i.F*(h||S),e,b);return b}},function(t,e,n){var r=n(4)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,function(){throw 2})}catch(t){}t.exports=function(t,e){if(!e&&!i)return!1;var n=!1;try{var o=[7],a=o[r]();a.next=function(){return{done:n=!0}},o[r]=function(){return a},t(o)}catch(t){}return n}},function(t,e,n){var r=n(63),i=n(39),o=n(41),a=n(60),s=n(24),u=n(137),l=Object.getOwnPropertyDescriptor;e.f=n(11)?l:function(t,e){if(t=o(t),e=a(e,!0),u)try{return l(t,e)}catch(t){}if(s(t,e))return i(!r.f.call(t,e),t[e])}},function(t,e,n){"use strict";var r=n(96)(!0);t.exports=function(t,e,n){return e+(n?r(t,e).length:1)}},function(t,e,n){var r=n(31),i=n(42);t.exports=function(t){return function(e,n){var o,a,s=String(i(e)),u=r(n),l=s.length;return u<0||u>=l?t?"":void 0:(o=s.charCodeAt(u),o<55296||o>56319||u+1===l||(a=s.charCodeAt(u+1))<56320||a>57343?t?s.charAt(u):o:t?s.slice(u,u+2):a-56320+(o-55296<<10)+65536)}}},function(t,e,n){"use strict";var r=n(88),i=RegExp.prototype.exec;t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var o=n.call(t,e);if("object"!=typeof o)throw new TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==r(t))throw new TypeError("RegExp#exec called on incompatible receiver");return i.call(t,e)}},function(t,e,n){"use strict";n(231);var r=n(23),i=n(16),o=n(14),a=n(42),s=n(4),u=n(99),l=s("species"),c=!o(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),f=function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();t.exports=function(t,e,n){var h=s(t),d=!o(function(){var e={};return e[h]=function(){return 7},7!=""[t](e)}),p=d?!o(function(){var e=!1,n=/a/;return n.exec=function(){return e=!0,null},"split"===t&&(n.constructor={},n.constructor[l]=function(){return n}),n[h](""),!e}):void 0;if(!d||!p||"replace"===t&&!c||"split"===t&&!f){var g=/./[h],v=n(a,h,""[t],function(t,e,n,r,i){return e.exec===u?d&&!i?{done:!0,value:g.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}}),y=v[0],b=v[1];r(String.prototype,t,y),i(RegExp.prototype,h,2==e?function(t,e){return b.call(t,this,e)}:function(t){return b.call(t,this)})}}},function(t,e,n){"use strict";var r=n(100),i=RegExp.prototype.exec,o=String.prototype.replace,a=i,s=function(){var t=/a/,e=/b*/g;return i.call(t,"a"),i.call(e,"a"),0!==t.lastIndex||0!==e.lastIndex}(),u=void 0!==/()??/.exec("")[1];(s||u)&&(a=function(t){var e,n,a,l,c=this;return u&&(n=new RegExp("^"+c.source+"$(?!\\s)",r.call(c))),s&&(e=c.lastIndex),a=i.call(c,t),s&&a&&(c.lastIndex=c.global?a.index+a[0].length:e),u&&a&&a.length>1&&o.call(a[0],n,function(){for(l=1;l<arguments.length-2;l++)void 0===arguments[l]&&(a[l]=void 0)}),a}),t.exports=a},function(t,e,n){"use strict";var r=n(10);t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){var r=n(29)("meta"),i=n(13),o=n(24),a=n(9).f,s=0,u=Object.isExtensible||function(){return!0},l=!n(14)(function(){return u(Object.preventExtensions({}))}),c=function(t){a(t,r,{value:{i:"O"+ ++s,w:{}}})},f=function(t,e){if(!i(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!o(t,r)){if(!u(t))return"F";if(!e)return"E";c(t)}return t[r].i},h=function(t,e){if(!o(t,r)){if(!u(t))return!0;if(!e)return!1;c(t)}return t[r].w},d=function(t){return l&&p.NEED&&u(t)&&!o(t,r)&&c(t),t},p=t.exports={KEY:r,NEED:!1,fastKey:f,getWeak:h,onFreeze:d}},function(t,e,n){function r(){i.call(this)}t.exports=r;var i=n(68).EventEmitter;n(32)(r,i),r.Readable=n(103),r.Writable=n(251),r.Duplex=n(252),r.Transform=n(253),r.PassThrough=n(254),r.Stream=r,r.prototype.pipe=function(t,e){function n(e){t.writable&&!1===t.write(e)&&l.pause&&l.pause()}function r(){l.readable&&l.resume&&l.resume()}function o(){c||(c=!0,t.end())}function a(){c||(c=!0,"function"==typeof t.destroy&&t.destroy())}function s(t){if(u(),0===i.listenerCount(this,"error"))throw t}function u(){l.removeListener("data",n),t.removeListener("drain",r),l.removeListener("end",o),l.removeListener("close",a),l.removeListener("error",s),t.removeListener("error",s),l.removeListener("end",u),l.removeListener("close",u),t.removeListener("close",u)}var l=this;l.on("data",n),t.on("drain",r),t._isStdio||e&&!1===e.end||(l.on("end",o),l.on("close",a));var c=!1;return l.on("error",s),t.on("error",s),l.on("end",u),l.on("close",u),t.on("close",u),t.emit("pipe",l),t}},function(t,e,n){e=t.exports=n(158),e.Stream=e,e.Readable=e,e.Writable=n(104),e.Duplex=n(33),e.Transform=n(161),e.PassThrough=n(250)},function(t,e,n){"use strict";(function(e,r){function i(t){var e=this;this.next=null,this.entry=null,this.finish=function(){A(e,t)}}function o(t){return L.from(t)}function a(t){return L.isBuffer(t)||t instanceof R}function s(){}function u(t,e){E=E||n(33),t=t||{};var r=e instanceof E;this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var o=t.highWaterMark,a=t.writableHighWaterMark,s=this.objectMode?16:16384;this.highWaterMark=o||0===o?o:r&&(a||0===a)?a:s,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var u=!1===t.decodeStrings;this.decodeStrings=!u,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){y(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new i(this)}function l(t){if(E=E||n(33),!(F.call(l,this)||this instanceof E))return new l(t);this._writableState=new u(t,this),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),B.call(this)}function c(t,e){var n=new Error("write after end");t.emit("error",n),P.nextTick(e,n)}function f(t,e,n,r){var i=!0,o=!1;return null===n?o=new TypeError("May not write null values to stream"):"string"==typeof n||void 0===n||e.objectMode||(o=new TypeError("Invalid non-string/buffer chunk")),o&&(t.emit("error",o),P.nextTick(r,o),i=!1),i}function h(t,e,n){return t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=L.from(e,n)),e}function d(t,e,n,r,i,o){if(!n){var a=h(e,r,i);r!==a&&(n=!0,i="buffer",r=a)}var s=e.objectMode?1:r.length;e.length+=s;var u=e.length<e.highWaterMark;if(u||(e.needDrain=!0),e.writing||e.corked){var l=e.lastBufferedRequest;e.lastBufferedRequest={chunk:r,encoding:i,isBuf:n,callback:o,next:null},l?l.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else p(t,e,!1,s,r,i,o);return u}function p(t,e,n,r,i,o,a){e.writelen=r,e.writecb=a,e.writing=!0,e.sync=!0,n?t._writev(i,e.onwrite):t._write(i,o,e.onwrite),e.sync=!1}function g(t,e,n,r,i){--e.pendingcb,n?(P.nextTick(i,r),P.nextTick(S,t,e),t._writableState.errorEmitted=!0,t.emit("error",r)):(i(r),t._writableState.errorEmitted=!0,t.emit("error",r),S(t,e))}function v(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}function y(t,e){var n=t._writableState,r=n.sync,i=n.writecb;if(v(n),e)g(t,n,r,e,i);else{var o=x(n);o||n.corked||n.bufferProcessing||!n.bufferedRequest||w(t,n),r?O(b,t,n,o,i):b(t,n,o,i)}}function b(t,e,n,r){n||m(t,e),e.pendingcb--,r(),S(t,e)}function m(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}function w(t,e){e.bufferProcessing=!0;var n=e.bufferedRequest;if(t._writev&&n&&n.next){var r=e.bufferedRequestCount,o=new Array(r),a=e.corkedRequestsFree;a.entry=n;for(var s=0,u=!0;n;)o[s]=n,n.isBuf||(u=!1),n=n.next,s+=1;o.allBuffers=u,p(t,e,!0,e.length,o,"",a.finish),e.pendingcb++,e.lastBufferedRequest=null,a.next?(e.corkedRequestsFree=a.next,a.next=null):e.corkedRequestsFree=new i(e),e.bufferedRequestCount=0}else{for(;n;){var l=n.chunk,c=n.encoding,f=n.callback;if(p(t,e,!1,e.objectMode?1:l.length,l,c,f),n=n.next,e.bufferedRequestCount--,e.writing)break}null===n&&(e.lastBufferedRequest=null)}e.bufferedRequest=n,e.bufferProcessing=!1}function x(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function _(t,e){t._final(function(n){e.pendingcb--,n&&t.emit("error",n),e.prefinished=!0,t.emit("prefinish"),S(t,e)})}function k(t,e){e.prefinished||e.finalCalled||("function"==typeof t._final?(e.pendingcb++,e.finalCalled=!0,P.nextTick(_,t,e)):(e.prefinished=!0,t.emit("prefinish")))}function S(t,e){var n=x(e);return n&&(k(t,e),0===e.pendingcb&&(e.finished=!0,t.emit("finish"))),n}function C(t,e,n){e.ending=!0,S(t,e),n&&(e.finished?P.nextTick(n):t.once("finish",n)),e.ended=!0,t.writable=!1}function A(t,e,n){var r=t.entry;for(t.entry=null;r;){var i=r.callback;e.pendingcb--,i(n),r=r.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}var P=n(69);t.exports=l;var E,O=!e.browser&&["v0.10","v0.9."].indexOf(e.version.slice(0,5))>-1?setImmediate:P.nextTick;l.WritableState=u;var T=n(55);T.inherits=n(32);var I={deprecate:n(249)},B=n(159),L=n(70).Buffer,R=r.Uint8Array||function(){},M=n(160);T.inherits(l,B),u.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(u.prototype,"buffer",{get:I.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(t){}}();var F;"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(F=Function.prototype[Symbol.hasInstance],Object.defineProperty(l,Symbol.hasInstance,{value:function(t){return!!F.call(this,t)||this===l&&(t&&t._writableState instanceof u)}})):F=function(t){return t instanceof this},l.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},l.prototype.write=function(t,e,n){var r=this._writableState,i=!1,u=!r.objectMode&&a(t);return u&&!L.isBuffer(t)&&(t=o(t)),"function"==typeof e&&(n=e,e=null),u?e="buffer":e||(e=r.defaultEncoding),"function"!=typeof n&&(n=s),r.ended?c(this,n):(u||f(this,r,t,n))&&(r.pendingcb++,i=d(this,r,u,t,e,n)),i},l.prototype.cork=function(){this._writableState.corked++},l.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||w(this,t))},l.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(l.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),l.prototype._write=function(t,e,n){n(new Error("_write() is not implemented"))},l.prototype._writev=null,l.prototype.end=function(t,e,n){var r=this._writableState;"function"==typeof t?(n=t,t=null,e=null):"function"==typeof e&&(n=e,e=null),null!==t&&void 0!==t&&this.write(t,e),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||C(this,r,n)},Object.defineProperty(l.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),l.prototype.destroy=M.destroy,l.prototype._undestroy=M.undestroy,l.prototype._destroy=function(t,e){this.end(),e(t)}}).call(e,n(21),n(22))},function(t,e,n){"use strict";function r(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}function i(t){var e=r(t);if("string"!=typeof e&&(b.isEncoding===m||!m(t)))throw new Error("Unknown encoding: "+t);return e||t}function o(t){this.encoding=i(t);var e;switch(this.encoding){case"utf16le":this.text=h,this.end=d,e=4;break;case"utf8":this.fillLast=l,e=4;break;case"base64":this.text=p,this.end=g,e=3;break;default:return this.write=v,void(this.end=y)}this.lastNeed=0,this.lastTotal=0,this.lastChar=b.allocUnsafe(e)}function a(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function s(t,e,n){var r=e.length-1;if(r<n)return 0;var i=a(e[r]);return i>=0?(i>0&&(t.lastNeed=i-1),i):--r<n||-2===i?0:(i=a(e[r]))>=0?(i>0&&(t.lastNeed=i-2),i):--r<n||-2===i?0:(i=a(e[r]),i>=0?(i>0&&(2===i?i=0:t.lastNeed=i-3),i):0)}function u(t,e,n){if(128!=(192&e[0]))return t.lastNeed=0,"ï¿½";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"ï¿½";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"ï¿½"}}function l(t){var e=this.lastTotal-this.lastNeed,n=u(this,t,e);return void 0!==n?n:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function c(t,e){var n=s(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=n;var r=t.length-(n-this.lastNeed);return t.copy(this.lastChar,0,r),t.toString("utf8",e,r)}function f(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"ï¿½":e}function h(t,e){if((t.length-e)%2==0){var n=t.toString("utf16le",e);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function d(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,n)}return e}function p(t,e){var n=(t.length-e)%3;return 0===n?t.toString("base64",e):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-n))}function g(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function v(t){return t.toString(this.encoding)}function y(t){return t&&t.length?this.write(t):""}var b=n(70).Buffer,m=b.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};e.StringDecoder=o,o.prototype.write=function(t){if(0===t.length)return"";var e,n;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<t.length?e?e+this.text(t,n):this.text(t,n):e||""},o.prototype.end=f,o.prototype.text=c,o.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},function(t,e,n){(function(t){function r(t,n){var r={seen:[],stylize:o};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),p(n)?r.showHidden=n:n&&e._extend(r,n),w(r.showHidden)&&(r.showHidden=!1),w(r.depth)&&(r.depth=2),w(r.colors)&&(r.colors=!1),w(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=i),s(r,t,r.depth)}function i(t,e){var n=r.styles[e];return n?"["+r.colors[n][0]+"m"+t+"["+r.colors[n][1]+"m":t}function o(t,e){return t}function a(t){var e={};return t.forEach(function(t,n){e[t]=!0}),e}function s(t,n,r){if(t.customInspect&&n&&C(n.inspect)&&n.inspect!==e.inspect&&(!n.constructor||n.constructor.prototype!==n)){var i=n.inspect(r,t);return b(i)||(i=s(t,i,r)),i}var o=u(t,n);if(o)return o;var p=Object.keys(n),g=a(p);if(t.showHidden&&(p=Object.getOwnPropertyNames(n)),S(n)&&(p.indexOf("message")>=0||p.indexOf("description")>=0))return l(n);if(0===p.length){if(C(n)){var v=n.name?": "+n.name:"";return t.stylize("[Function"+v+"]","special")}if(x(n))return t.stylize(RegExp.prototype.toString.call(n),"regexp");if(k(n))return t.stylize(Date.prototype.toString.call(n),"date");if(S(n))return l(n)}var y="",m=!1,w=["{","}"];if(d(n)&&(m=!0,w=["[","]"]),C(n)){y=" [Function"+(n.name?": "+n.name:"")+"]"}if(x(n)&&(y=" "+RegExp.prototype.toString.call(n)),k(n)&&(y=" "+Date.prototype.toUTCString.call(n)),S(n)&&(y=" "+l(n)),0===p.length&&(!m||0==n.length))return w[0]+y+w[1];if(r<0)return x(n)?t.stylize(RegExp.prototype.toString.call(n),"regexp"):t.stylize("[Object]","special");t.seen.push(n);var _;return _=m?c(t,n,r,g,p):p.map(function(e){return f(t,n,r,g,e,m)}),t.seen.pop(),h(_,y,w)}function u(t,e){if(w(e))return t.stylize("undefined","undefined");if(b(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}return y(e)?t.stylize(""+e,"number"):p(e)?t.stylize(""+e,"boolean"):g(e)?t.stylize("null","null"):void 0}function l(t){return"["+Error.prototype.toString.call(t)+"]"}function c(t,e,n,r,i){for(var o=[],a=0,s=e.length;a<s;++a)T(e,String(a))?o.push(f(t,e,n,r,String(a),!0)):o.push("");return i.forEach(function(i){i.match(/^\d+$/)||o.push(f(t,e,n,r,i,!0))}),o}function f(t,e,n,r,i,o){var a,u,l;if(l=Object.getOwnPropertyDescriptor(e,i)||{value:e[i]},l.get?u=l.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):l.set&&(u=t.stylize("[Setter]","special")),T(r,i)||(a="["+i+"]"),u||(t.seen.indexOf(l.value)<0?(u=g(n)?s(t,l.value,null):s(t,l.value,n-1),u.indexOf("\n")>-1&&(u=o?u.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+u.split("\n").map(function(t){return"   "+t}).join("\n"))):u=t.stylize("[Circular]","special")),w(a)){if(o&&i.match(/^\d+$/))return u;a=JSON.stringify(""+i),a.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=t.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=t.stylize(a,"string"))}return a+": "+u}function h(t,e,n){var r=0;return t.reduce(function(t,e){return r++,e.indexOf("\n")>=0&&r++,t+e.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1]:n[0]+e+" "+t.join(", ")+" "+n[1]}function d(t){return Array.isArray(t)}function p(t){return"boolean"==typeof t}function g(t){return null===t}function v(t){return null==t}function y(t){return"number"==typeof t}function b(t){return"string"==typeof t}function m(t){return"symbol"==typeof t}function w(t){return void 0===t}function x(t){return _(t)&&"[object RegExp]"===P(t)}function _(t){return"object"==typeof t&&null!==t}function k(t){return _(t)&&"[object Date]"===P(t)}function S(t){return _(t)&&("[object Error]"===P(t)||t instanceof Error)}function C(t){return"function"==typeof t}function A(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t}function P(t){return Object.prototype.toString.call(t)}function E(t){return t<10?"0"+t.toString(10):t.toString(10)}function O(){var t=new Date,e=[E(t.getHours()),E(t.getMinutes()),E(t.getSeconds())].join(":");return[t.getDate(),D[t.getMonth()],e].join(" ")}function T(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function I(t,e){if(!t){var n=new Error("Promise was rejected with a falsy value");n.reason=t,t=n}return e(t)}function B(e){function n(){for(var n=[],r=0;r<arguments.length;r++)n.push(arguments[r]);var i=n.pop();if("function"!=typeof i)throw new TypeError("The last argument must be of type Function");var o=this,a=function(){return i.apply(o,arguments)};e.apply(this,n).then(function(e){t.nextTick(a,null,e)},function(e){t.nextTick(I,e,a)})}if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');return Object.setPrototypeOf(n,Object.getPrototypeOf(e)),Object.defineProperties(n,L(e)),n}var L=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),n={},r=0;r<e.length;r++)n[e[r]]=Object.getOwnPropertyDescriptor(t,e[r]);return n},R=/%[sdj%]/g;e.format=function(t){if(!b(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(r(arguments[n]));return e.join(" ")}for(var n=1,i=arguments,o=i.length,a=String(t).replace(R,function(t){if("%%"===t)return"%";if(n>=o)return t;switch(t){case"%s":return String(i[n++]);case"%d":return Number(i[n++]);case"%j":try{return JSON.stringify(i[n++])}catch(t){return"[Circular]"}default:return t}}),s=i[n];n<o;s=i[++n])g(s)||!_(s)?a+=" "+s:a+=" "+r(s);return a},e.deprecate=function(n,r){function i(){if(!o){if(t.throwDeprecation)throw new Error(r);t.traceDeprecation?console.trace(r):console.error(r),o=!0}return n.apply(this,arguments)}if(void 0!==t&&!0===t.noDeprecation)return n;if(void 0===t)return function(){return e.deprecate(n,r).apply(this,arguments)};var o=!1;return i};var M,F={};e.debuglog=function(n){if(w(M)&&(M=t.env.NODE_DEBUG||""),n=n.toUpperCase(),!F[n])if(new RegExp("\\b"+n+"\\b","i").test(M)){var r=t.pid;F[n]=function(){var t=e.format.apply(e,arguments);console.error("%s %d: %s",n,r,t)}}else F[n]=function(){};return F[n]},e.inspect=r,r.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},r.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=d,e.isBoolean=p,e.isNull=g,e.isNullOrUndefined=v,e.isNumber=y,e.isString=b,e.isSymbol=m,e.isUndefined=w,e.isRegExp=x,e.isObject=_,e.isDate=k,e.isError=S,e.isFunction=C,e.isPrimitive=A,e.isBuffer=n(256);var D=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];e.log=function(){console.log("%s - %s",O(),e.format.apply(e,arguments))},e.inherits=n(32),e._extend=function(t,e){if(!e||!_(e))return t;for(var n=Object.keys(e),r=n.length;r--;)t[n[r]]=e[n[r]];return t};var z="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;e.promisify=function(t){function e(){for(var e,n,r=new Promise(function(t,r){e=t,n=r}),i=[],o=0;o<arguments.length;o++)i.push(arguments[o]);i.push(function(t,r){t?n(t):e(r)});try{t.apply(this,i)}catch(t){n(t)}return r}if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(z&&t[z]){var e=t[z];if("function"!=typeof e)throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,z,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),z&&Object.defineProperty(e,z,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,L(t))},e.promisify.custom=z,e.callbackify=B}).call(e,n(21))},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){return function(){var e=t,n=e.lib,r=n.WordArray,i=n.Hasher,o=e.algo,a=[],s=o.SHA1=i.extend({_doReset:function(){this._hash=new r.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,e){for(var n=this._hash.words,r=n[0],i=n[1],o=n[2],s=n[3],u=n[4],l=0;l<80;l++){if(l<16)a[l]=0|t[e+l];else{var c=a[l-3]^a[l-8]^a[l-14]^a[l-16];a[l]=c<<1|c>>>31}var f=(r<<5|r>>>27)+u+a[l];f+=l<20?1518500249+(i&o|~i&s):l<40?1859775393+(i^o^s):l<60?(i&o|i&s|o&s)-1894007588:(i^o^s)-899497514,u=s,s=o,o=i<<30|i>>>2,i=r,r=f}n[0]=n[0]+r|0,n[1]=n[1]+i|0,n[2]=n[2]+o|0,n[3]=n[3]+s|0,n[4]=n[4]+u|0},_doFinalize:function(){var t=this._data,e=t.words,n=8*this._nDataBytes,r=8*t.sigBytes;return e[r>>>5]|=128<<24-r%32,e[14+(r+64>>>9<<4)]=Math.floor(n/4294967296),e[15+(r+64>>>9<<4)]=n,t.sigBytes=4*e.length,this._process(),this._hash},clone:function(){var t=i.clone.call(this);return t._hash=this._hash.clone(),t}});e.SHA1=i._createHelper(s),e.HmacSHA1=i._createHmacHelper(s)}(),t.SHA1})},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){!function(){var e=t,n=e.lib,r=n.Base,i=e.enc,o=i.Utf8,a=e.algo;a.HMAC=r.extend({init:function(t,e){t=this._hasher=new t.init,"string"==typeof e&&(e=o.parse(e));var n=t.blockSize,r=4*n;e.sigBytes>r&&(e=t.finalize(e)),e.clamp();for(var i=this._oKey=e.clone(),a=this._iKey=e.clone(),s=i.words,u=a.words,l=0;l<n;l++)s[l]^=1549556828,u[l]^=909522486;i.sigBytes=a.sigBytes=r,this.reset()},reset:function(){var t=this._hasher;t.reset(),t.update(this._iKey)},update:function(t){return this._hasher.update(t),this},finalize:function(t){var e=this._hasher,n=e.finalize(t);return e.reset(),e.finalize(this._oKey.clone().concat(n))}})}()})},function(t,e,n){(function(e){(function(){var r,i;try{i=n(110)}catch(t){}r=function(){function t(t){this.buffer=t,this.pos=0,this.length=this.buffer.length}var n;t.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8};for(n in e.prototype)"read"===n.slice(0,4)&&function(e){var n;n=t.TYPES[e.replace(/read|[BL]E/g,"")],t.prototype[e]=function(){var t;return t=this.buffer[e](this.pos),this.pos+=n,t}}(n);return t.prototype.readString=function(t,n){var r,o,a,s,u;switch(null==n&&(n="ascii"),n){case"utf16le":case"ucs2":case"utf8":case"ascii":return this.buffer.toString(n,this.pos,this.pos+=t);case"utf16be":for(r=new e(this.readBuffer(t)),a=s=0,u=r.length-1;s<u;a=s+=2)o=r[a],r[a]=r[a+1],r[a+1]=o;return r.toString("utf16le");default:if(r=this.readBuffer(t),i)try{return i.decode(r,n)}catch(t){}return r}},t.prototype.readBuffer=function(t){return this.buffer.slice(this.pos,this.pos+=t)},t.prototype.readUInt24BE=function(){return(this.readUInt16BE()<<8)+this.readUInt8()},t.prototype.readUInt24LE=function(){return this.readUInt16LE()+(this.readUInt8()<<16)},t.prototype.readInt24BE=function(){return(this.readInt16BE()<<8)+this.readUInt8()},t.prototype.readInt24LE=function(){return this.readUInt16LE()+(this.readInt8()<<16)},t}(),t.exports=r}).call(this)}).call(e,n(3).Buffer)},function(t,e,n){"use strict";(function(e){var r=n(46).Buffer,i=n(301),o=t.exports;o.encodings=null,o.defaultCharUnicode="ï¿½",o.defaultCharSingleByte="?",o.encode=function(t,e,n){t=""+(t||"");var i=o.getEncoder(e,n),a=i.write(t),s=i.end();return s&&s.length>0?r.concat([a,s]):a},o.decode=function(t,e,n){"string"==typeof t&&(o.skipDecodeWarning||(console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"),o.skipDecodeWarning=!0),t=r.from(""+(t||""),"binary"));var i=o.getDecoder(e,n),a=i.write(t),s=i.end();return s?a+s:a},o.encodingExists=function(t){try{return o.getCodec(t),!0}catch(t){return!1}},o.toEncoding=o.encode,o.fromEncoding=o.decode,o._codecDataCache={},o.getCodec=function(t){o.encodings||(o.encodings=n(302));for(var e=o._canonicalizeEncoding(t),r={};;){var i=o._codecDataCache[e];if(i)return i;var a=o.encodings[e];switch(typeof a){case"string":e=a;break;case"object":for(var s in a)r[s]=a[s];r.encodingName||(r.encodingName=e),e=a.type;break;case"function":return r.encodingName||(r.encodingName=e),i=new a(r,o),o._codecDataCache[r.encodingName]=i,i;default:throw new Error("Encoding not recognized: '"+t+"' (searched as: '"+e+"')")}}},o._canonicalizeEncoding=function(t){return(""+t).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g,"")},o.getEncoder=function(t,e){var n=o.getCodec(t),r=new n.encoder(e,n);return n.bomAware&&e&&e.addBOM&&(r=new i.PrependBOM(r,e)),r},o.getDecoder=function(t,e){var n=o.getCodec(t),r=new n.decoder(e,n);return!n.bomAware||e&&!1===e.stripBOM||(r=new i.StripBOM(r,e)),r};var a=void 0!==e&&e.versions&&e.versions.node;if(a){var s=a.split(".").map(Number);(s[0]>0||s[1]>=10)&&n(316)(o),n(317)(o)}}).call(e,n(21))},function(t,e){t.exports=[["0","\0",127,"â¬"],["8140","ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ ä¸¡ä¸£ä¸¦ä¸©ä¸®ä¸¯ä¸±ä¸³ä¸µä¸·ä¸¼ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹¢ä¹£ä¹¤ä¹¥ä¹§ä¹¨ä¹ª",5,"ä¹²ä¹´",9,"ä¹¿",6,"äºäº"],["8180","äºäºäºäºäºäºäºäº£äºªäº¯äº°äº±äº´äº¶äº·äº¸äº¹äº¼äº½äº¾ä»ä»ä»ä»ä»ä»ä»ä»ä» ä»¢ä»¦ä»§ä»©ä»­ä»®ä»¯ä»±ä»´ä»¸ä»¹ä»ºä»¼ä»¾ä¼ä¼",6,"ä¼ä¼ä¼",4,"ä¼ä¼ä¼¡ä¼£ä¼¨ä¼©ä¼¬ä¼­ä¼®ä¼±ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾",4,"ä½ä½ä½",5,"ä½ä½ä½ä½¡ä½¢ä½¦ä½¨ä½ªä½«ä½­ä½®ä½±ä½²ä½µä½·ä½¸ä½¹ä½ºä½½ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾¡ä¾¢"],["8240","ä¾¤ä¾«ä¾­ä¾°",4,"ä¾¶",8,"ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿",4,"ä¿ä¿ä¿ ä¿¢ä¿¤ä¿¥ä¿§ä¿«ä¿¬ä¿°ä¿²ä¿´ä¿µä¿¶ä¿·ä¿¹ä¿»ä¿¼ä¿½ä¿¿",11],["8280","åååååååååååå å¢å£å¤å§å«å¯",10,"å»å½å¿ååååååååååå",4,"åååååå",7,"å¦",5,"å­",8,"å¸å¹åºå¼å½ååååååååååå",20,"å¤å¦åªå«å­",4,"å³",6,"å¼"],["8340","å½",17,"å",5,"åååå",10,"å¨å©åªå«å¯å°å±å²å´å¶",4,"å¼",9,"å"],["8380","ååå",5,"å",13,"å¢",28,"åååååååååååååå",4,"å£å¤å¦å§å©åªå¯å²åºå¾å¿åååååååååååååååååå¡å£å¦",4,"å­å®å´å¸å¹åºå¾å¿åååååååååå",5],["8440","ååååååå¢å£å¥",5,"å¬å®å±å²å´å·å¾åååååååååååååå¡å¢å£å¥å¦å§åªå¬å¯å±å²å´åµå¼å¾å",5,"åååååååå"],["8480","åååååå å¢å£å¤å¦å¨å«å¬å­å®å°å±å³",9,"å¾åå",4,"å",6,"ååå",6,"åå¤å¥å¦å§å®å¯å°å´",9,"åååååååååååååååååå",5,"å å¡å¢å£å¥",10,"å±",7,"å»å¼å½åååååååååå"],["8540","åååååååååå¢å¤å¥å§å¨å©å«å¬å­å¯",9,"å¼å½åååååååååååååå¥å¨åªå¬å­å²å¶å¹å»å¼å½å¾åååååååå"],["8580","å",4,"ååååååå å¡å¤å§åªå«å¬å­å¯",6,"å·å¸å¹åºå¼å½å¾åå",4,"ååååååååååå¡å¢å§å´åºå¾å¿ååååååååååå¢å¤å¥åªå°å³å¶å·åºå½å¿ååååååååååååå",4,"å£å¥å§å©",7,"å´å¹åºå¾å¿åååååååååååååååå å¡"],["8640","å¢å¥å®å°å²åµå¶å·å¹åºå¼å¾åååååååå ",4,"å«å¬å¯å°å±å´",5,"å»å¾ååååååå",4,"ååå",5,"ååååå¡å¥å¦"],["8680","å¨å©å«å­å²å´åµå¶å¸å¹åºå»å½åååååå",4,"ååååå",4,"åååå å¢å£å¨å©å«å¯",5,"å¹åºå½å¿ååååååååååååååå ",6,"å¨",8,"å²å´å¶å¸åºå¼å¿",4,"åååååååååå",4,"åå å¢å§å©å­å®å°å±å´å¶å¸",4,"å¿åååå"],["8740","åååååå",7,"ååååå å¡å¢å¥å¦å¨å©åªå«å®å¯å°å³åµå·å¸åºå¼å½å¾å",11,"å",4,"ååååå",4],["8780","å£å¥å¦å§å­å®å¯å°å²å³å´åµå·å¸å¹åºå½",7,"å",6,"åååå",14,"å¤",10,"å°",6,"å¸å¹åºå»å½",12,"å",8,"åååååå£å¥",5,"å¬å®å¯å²å³å¶å·å¸å»å¼åååååå",6],["8840","å",9,"ååå å¡å¢å¤å¥å¦å§å«å±å²å´",4,"å¼å½å¿ååååååååå",4,"ååå¢å£å¥å§å¬å®å°å±å²å´åµå¸å¹åºå½å¾å¿å"],["8880","åååååå",4,"å",6,"ååååå¥å¨åªå¬å¯å°å±å³åµå¶å·å¹",8,"å",6,"ååååååååååå¡å¢å£å¥",7,"å®å°å±å²å³åµå¶å·å»å¼å¾å¿å å å å å å å å å å å å å å å å å å å å å å å ¢å £å ¥",4,"å «",4,"å ±å ²å ³å ´å ¶",7],["8940","å ¾",5,"å¡",6,"å¡å¡å¡å¡å¡å¡å¡å¡å¡",4,"å¡",5,"å¡¦",4,"å¡­",16,"å¡¿å¢å¢å¢å¢å¢å¢å¢å¢"],["8980","å¢",4,"å¢",4,"å¢å¢å¢å¢ ",7,"å¢ª",17,"å¢½å¢¾å¢¿å£å£å£å£å£",10,"å£å£å£å£",13,"å£¥",5,"å£­å£¯å£±å£²å£´å£µå£·å£¸å£º",7,"å¤å¤å¤å¤",4,"å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤ å¤¡å¤¢å¤£å¤¦å¤¨å¤¬å¤°å¤²å¤³å¤µå¤¶å¤»"],["8a40","å¤½å¤¾å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥",4,"å¥¡å¥£å¥¤å¥¦",12,"å¥µå¥·å¥ºå¥»å¥¼å¥¾å¥¿å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦ å¦¡å¦¢å¦¦"],["8a80","å¦§å¦¬å¦­å¦°å¦±å¦³",5,"å¦ºå¦¼å¦½å¦¿",6,"å§å§å§å§å§å§å§å§å§å§å§å§",4,"å§¤å§¦å§§å§©å§ªå§«å§­",11,"å§ºå§¼å§½å§¾å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨¡å¨¢å¨¤å¨¦å¨§å¨¨å¨ª",6,"å¨³å¨µå¨·",4,"å¨½å¨¾å¨¿å©",4,"å©å©å©",9,"å©å©å©å©å©",5],["8b40","å©¡å©£å©¤å©¥å©¦å©¨å©©å©«",8,"å©¸å©¹å©»å©¼å©½å©¾åª",17,"åª",6,"åª",13,"åª«åª¬"],["8b80","åª­",4,"åª´åª¶åª·åª¹",4,"åª¿å«å«",5,"å«å«å«",4,"å«å«å«å«å«å«å«å«å«å«¢å«¤å«¥å«§å«¨å«ªå«¬",4,"å«²",22,"å¬",11,"å¬",25,"å¬³å¬µå¬¶å¬¸",7,"å­",6],["8c40","å­",7,"å­å­å­å­ å­¡å­§å­¨å­«å­­å­®å­¯å­²å­´å­¶å­·å­¸å­¹å­»å­¼å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®å®§å®¨å®©å®¬å®­å®®å®¯å®±å®²å®·å®ºå®»å®¼å¯å¯å¯å¯å¯å¯å¯å¯å¯å¯"],["8c80","å¯å¯",8,"å¯ å¯¢å¯£å¯¦å¯§å¯©",4,"å¯¯å¯±",6,"å¯½å¯¾å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å° å°¡å°£å°¦å°¨å°©å°ªå°«å°­å°®å°¯å°°å°²å°³å°µå°¶å°·å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±¢å±¤å±§",6,"å±°å±²",6,"å±»å±¼å±½å±¾å²å²",4,"å²å²å²å²å²å²å²å²å²",4,"å²¤",4],["8d40","å²ªå²®å²¯å²°å²²å²´å²¶å²¹å²ºå²»å²¼å²¾å³å³å³å³",5,"å³",5,"å³",5,"å³",6,"å³¢å³£å³§å³©å³«å³¬å³®å³¯å³±",9,"å³¼",4],["8d80","å´å´å´å´",5,"å´",4,"å´å´å´å´å´å´å´å´",4,"å´¥å´¨å´ªå´«å´¬å´¯",4,"å´µ",7,"å´¿",7,"åµåµåµ",10,"åµåµåµåµ",10,"åµªåµ­åµ®åµ°åµ±åµ²åµ³åµµ",12,"å¶",21,"å¶å¶å¶å¶å¶å¶ "],["8e40","å¶¡",21,"å¶¸",12,"å·",6,"å·",12,"å·å·å· å·£å·¤å·ªå·¬å·­"],["8e80","å·°å·µå·¶å·¸",4,"å·¿å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸",7,"å¸¨",4,"å¸¯å¸°å¸²",4,"å¸¹å¸ºå¸¾å¸¿å¹å¹å¹å¹",5,"å¹",6,"å¹",4,"å¹å¹å¹å¹ å¹£",14,"å¹µå¹·å¹¹å¹¾åºåºåºåºåºåºåºåºåºåºåºåºåºåº¡åº¢åº£åº¤åº¨",4,"åº®",4,"åº´åººåº»åº¼åº½åº¿",6],["8f40","å»å»å»å»",5,"å»å»å»å»å»å»å»",11,"å»©å»«",8,"å»µå»¸å»¹å»»å»¼å»½å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤"],["8f80","å¼¨å¼«å¼¬å¼®å¼°å¼²",6,"å¼»å¼½å¼¾å¼¿å½",14,"å½å½å½å½å½å½å½å½å½ å½£å½¥å½§å½¨å½«å½®å½¯å½²å½´å½µå½¶å½¸å½ºå½½å½¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾ å¾¢",5,"å¾©å¾«å¾¬å¾¯",5,"å¾¶å¾¸å¾¹å¾ºå¾»å¾¾",4,"å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿¢å¿£å¿¥å¿¦å¿¨å¿©å¿¬å¿¯å¿°å¿²å¿³å¿´å¿¶å¿·å¿¹å¿ºå¿¼æ"],["9040","æææææææææææææ¢æ£æ¤æ¬æ­æ®æ°",4,"æ¶",4,"æ½æ¾ææ",6,"ææææææææææææææ æ¡æ¥æ¦æ®æ±æ²æ´æµæ·æ¾æ"],["9080","ææææææææææææææææææææ¡æ¢æ¤æ¥æ§æ©æªæ®æ°æ³æµæ¶æ·æ¹æºæ½",7,"ææææ",4,"æææææææææ¡",4,"æªæ±æ²æµæ·æ¸æ»",4,"æææææææææ",4,"æææææææææ¡æ¢æ¥æ¨æ©æªæ¬",18,"æ",6],["9140","ææææææææææ",6,"æææ æ¡æ£æ¤æ¥æ¦æ©",6,"æ±æ²æ³æ´æ¶æ¸",18,"æææ",4,"æ"],["9180","æ",6,"æ",8,"æªæ«æ­",9,"æ¸",5,"æ¿æææ",4,"ææ",4,"ææ",16,"æ§",13,"æ¶",8,"æ",5,"æææææææææ æ£æ¦æ§æ¨æ©æ«æ­æ¯æ°æ±æ²æµæ¶æ¸",4,"æææææ"],["9240","ææææææææ",6,"æ¤æ¥æ¨æ±æ²æ´æµæ·æ¸æºæ»æ½ææææææææ",5,"ææææææ£æ¦æ§æ©æªæ­æ®æ¯æ°æ²æ³æ´æ¶æ·æ¸æºæ¾ææ"],["9280","ææææææææ æ¡æ¤æªæ«æ°æ²æµæ¸æ¹æºæ»ææææææææææææææææææææ¦æ§æ©æ¬æ­æ®æ°æ±æ³",5,"æ»æ¼æ¾æ¿æææææææææææ",7,"æ æ¤æ¥æ¦æ¨æªæ«æ¬æ¯æ°æ²æ³æ´æµæ¸æ¹æ¼æ½æ¾æ¿æææææææææææææ",6,"æ¡æ¤æ¦æ«æ¯æ±æ²æµæ¶æ¹æ»æ½æ¿æ"],["9340","ææææææææææææææ",6,"ææ¢æ¤",4,"æ«æ¬æ®æ¯æ°æ±æ³æµæ·æ¹æºæ»æ¼æ¾æææ",4,"æææææ",5,"æææ¢æ£æ¤"],["9380","æ¥æ§æ¨æ©æ«æ®",5,"æµ",4,"æ»æ¼æ¾æææææ",6,"æææææ",4,"æ",7,"æ¨æªæ«æ¬æ®",9,"æ»",6,"æææ",8,"æææææææææ",4,"æ¥æ¦æ§æ¨æªæ«æ¯æ±æ²æ³æ´æ¶æ¹æ»æ½æ¾æ¿ææææ",6,"ææææææææ"],["9440","æææææ æ¡æ£æ¥æ§",24,"æ",7,"æ",7,"æ",4,"æ",8],["9480","æ¢æ£æ¤æ¦",4,"æ¬æ­æ°æ±æ²æ³æ·æºæ¼æ½æ",4,"ææææææææææææææææ æ¡æ¤æ¥æ§æ¨æ©æªæ­æ®æ¯æ±æ³æµæ¶æ¸",14,"æææææææææææææææ æ¢æ£æ¦æ¨æªæ¬æ®æ±",7,"æºæ»æ¾æ¿æææææææææææææ",7,"æ¡æ£æ¤æªæ«"],["9540","æ²æ³æ´æµæ¸æ¹æ»",4,"æææææææææææææææææææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ²æ³æ·",4,"æ½æ¿æææ",6,"æææææ"],["9580","ææææææ æ¢æ£æ¥æ§æ©",4,"æ±æ²æ³æµæ¸æ¹æ»æ¼æ½æ¿ææææææææææææææææææ",4,"æ",8,"æ©",4,"æ¯",4,"æµæ¶æ·æ¸æºæ»æ¼æ½æ¿",25,"ææ",7,"æ§æ¨æª",5,"æ±æµæ¶æ¸æºæ»æ½æææ"],["9640","æææææææææææææææææ ",5,"æ§æ©æ®æ°æ²æ³æ¶æ·æ¸æ¹æ»æ¼æ¾æ¿æææææææææææ",4,"ææ¢æ£æ¤æ¦æ§æ«æ¬æ®æ±æ´æ¶"],["9680","æ¸æ¹æºæ»æ½ææææææææææææææææææææ æ¡æ¤æ¦æ©æ¬æ®æ±æ²æ´æ¹",7,"ææ",9,"ææææææ¡æ£æ¤æ¦æ§æ¨æªæ«æ­æ®æ²æµ",7,"æ¾æ æ æ æ æ æ æ æ æ æ æ ",4,"æ æ æ  æ ¢",6,"æ «",6,"æ ´æ µæ ¶æ ºæ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡",5],["9740","æ¡æ¡æ¡æ¡æ¡ªæ¡¬",7,"æ¡µæ¡¸",8,"æ¢æ¢æ¢",7,"æ¢æ¢æ¢æ¢æ¢æ¢æ¢",9,"æ¢£æ¢¤æ¢¥æ¢©æ¢ªæ¢«æ¢¬æ¢®æ¢±æ¢²æ¢´æ¢¶æ¢·æ¢¸"],["9780","æ¢¹",6,"æ£æ£",5,"æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£",4,"æ£¡æ£¢æ£¤",9,"æ£¯æ£²æ£³æ£´æ£¶æ£·æ£¸æ£»æ£½æ£¾æ£¿æ¤æ¤æ¤æ¤æ¤",4,"æ¤æ¤æ¤æ¤",11,"æ¤¡æ¤¢æ¤£æ¤¥",7,"æ¤®æ¤¯æ¤±æ¤²æ¤³æ¤µæ¤¶æ¤·æ¤¸æ¤ºæ¤»æ¤¼æ¤¾æ¥æ¥æ¥",16,"æ¥æ¥æ¥æ¥æ¥æ¥æ¥"],["9840","æ¥¡æ¥¢æ¥¤æ¥¥æ¥§æ¥¨æ¥©æ¥ªæ¥¬æ¥­æ¥¯æ¥°æ¥²",4,"æ¥ºæ¥»æ¥½æ¥¾æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦æ¦",5,"æ¦æ¦æ¦æ¦æ¦",9,"æ¦©æ¦ªæ¦¬æ¦®æ¦¯æ¦°æ¦²æ¦³æ¦µæ¦¶æ¦¸æ¦¹æ¦ºæ¦¼æ¦½"],["9880","æ¦¾æ¦¿æ§æ§",7,"æ§æ§æ§æ§æ§æ§æ§",5,"æ§æ§æ§æ§¡",11,"æ§®æ§¯æ§°æ§±æ§³",9,"æ§¾æ¨",9,"æ¨",11,"æ¨",5,"æ¨ æ¨¢",5,"æ¨©æ¨«æ¨¬æ¨­æ¨®æ¨°æ¨²æ¨³æ¨´æ¨¶",6,"æ¨¿",4,"æ©æ©æ©",7,"æ©",6,"æ©"],["9940","æ©",4,"æ©¢æ©£æ©¤æ©¦",10,"æ©²",6,"æ©ºæ©»æ©½æ©¾æ©¿æªæªæªæª",8,"æªæª",4,"æª",7,"æª¡",5],["9980","æª§æª¨æªªæª­",114,"æ¬¥æ¬¦æ¬¨",6],["9a40","æ¬¯æ¬°æ¬±æ¬³æ¬´æ¬µæ¬¶æ¬¸æ¬»æ¬¼æ¬½æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­æ­",11,"æ­",7,"æ­¨æ­©æ­«",13,"æ­ºæ­½æ­¾æ­¿æ®æ®æ®"],["9a80","æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®",4,"æ®¢",7,"æ®«",7,"æ®¶æ®¸",6,"æ¯æ¯æ¯æ¯",4,"æ¯æ¯æ¯æ¯æ¯æ¯æ¯",4,"æ¯¢",7,"æ¯¬æ¯­æ¯®æ¯°æ¯±æ¯²æ¯´æ¯¶æ¯·æ¯¸æ¯ºæ¯»æ¯¼æ¯¾",6,"æ°",4,"æ°æ°æ°æ°æ°æ°æ° æ°£æ°¥æ°«æ°¬æ°­æ°±æ°³æ°¶æ°·æ°¹æ°ºæ°»æ°¼æ°¾æ°¿æ±æ±æ±æ±æ±",4,"æ±æ±æ±æ±æ±"],["9b40","æ±æ±æ±¢æ±£æ±¥æ±¦æ±§æ±«",4,"æ±±æ±³æ±µæ±·æ±¸æ±ºæ±»æ±¼æ±¿æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ² æ²¢æ²¨æ²¬æ²¯æ²°æ²´æ²µæ²¶æ²·æ²ºæ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["9b80","æ³æ³æ³æ³æ³æ³¤æ³¦æ³§æ³©æ³¬æ³­æ³²æ³´æ³¹æ³¿æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´",5,"æ´¦æ´¨æ´©æ´¬æ´­æ´¯æ´°æ´´æ´¶æ´·æ´¸æ´ºæ´¿æµæµæµæµæµæµæµæµæµæµæµæµæµæµ¡æµ¢æµ¤æµ¥æµ§æµ¨æµ«æµ¬æµ­æµ°æµ±æµ²æµ³æµµæµ¶æµ¹æµºæµ»æµ½",4,"æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶",4,"æ¶æ¶¢æ¶¥æ¶¬æ¶­æ¶°æ¶±æ¶³æ¶´æ¶¶æ¶·æ¶¹",5,"æ·æ·æ·æ·æ·æ·"],["9c40","æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·¢æ·£æ·¥æ·§æ·¨æ·©æ·ªæ·­æ·¯æ·°æ·²æ·´æ·µæ·¶æ·¸æ·ºæ·½",7,"æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸¢æ¸¦æ¸§æ¸¨æ¸ªæ¸¬æ¸®æ¸°æ¸±æ¸³æ¸µ"],["9c80","æ¸¶æ¸·æ¸¹æ¸»",7,"æ¹",7,"æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹ ",10,"æ¹¬æ¹­æ¹¯",14,"æºæºæºæºæºæºæº",4,"æº",6,"æºæºæºæºæºæº æº¡æº£æº¤æº¦æº¨æº©æº«æº¬æº­æº®æº°æº³æºµæº¸æº¹æº¼æº¾æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»£æ»§æ»ª",5],["9d40","æ»°æ»±æ»²æ»³æ»µæ»¶æ»·æ»¸æ»º",7,"æ¼æ¼æ¼æ¼æ¼æ¼",4,"æ¼æ¼æ¼æ¼",9,"æ¼¡æ¼¢æ¼£æ¼¥æ¼¦æ¼§æ¼¨æ¼¬æ¼®æ¼°æ¼²æ¼´æ¼µæ¼·",6,"æ¼¿æ½æ½æ½"],["9d80","æ½æ½æ½æ½æ½æ½æ½æ½",9,"æ½æ½æ½æ½æ½æ½ æ½¡æ½£æ½¤æ½¥æ½§",5,"æ½¯æ½°æ½±æ½³æ½µæ½¶æ½·æ½¹æ½»æ½½",6,"æ¾æ¾æ¾æ¾æ¾æ¾",12,"æ¾æ¾æ¾æ¾ æ¾¢",4,"æ¾¨",10,"æ¾´æ¾µæ¾·æ¾¸æ¾º",5,"æ¿æ¿",5,"æ¿",6,"æ¿",10,"æ¿æ¿¢æ¿£æ¿¤æ¿¥"],["9e40","æ¿¦",7,"æ¿°",32,"ç",7,"ç",6,"ç¤",6],["9e80","ç«",9,"ç¶ç·ç¸çº",17,"ççç",13,"ç",11,"ç®ç±ç²ç³ç´ç·ç¹çºç»ç½ççççççççççççççççççç",12,"ç°ç²ç´çµç¶çºç¾ç¿çççççç",12,"ç"],["9f40","çççç ç¡ç¢ç£ç¥çªç®ç°",6,"ç¸çºç»ç¼ç¾",10,"ç",4,"ççççç",10,"ç§",7,"ç²ç³ç´"],["9f80","çµç·",13,"ççççççç",12,"çç",4,"ç¥ç©",4,"ç¯ç°ç±ç´çµç¶ç·ç¹ç»ç¼ç¾",5,"ç",4,"çççççççççççç",4,"ç¡",6,"ç©çªç«ç­",5,"ç´ç¶ç·ç¸çº",8,"ç",9,"ç",4],["a040","ç",9,"ç¡ç¢ç£ç¤ç¦ç¨",5,"ç¯",9,"çº",11,"ç",19],["a080","ççç",9,"ç©ç«ç­ç®ç¯ç²ç³ç´çºç¼ç¾ç",6,"çççççççççççççççç ç£ç¤ç¥ç¨çªç«ç¬ç­ç°ç±ç³ç´ç¶ç·ç¸ç»ç¼ç½ççç",4,"ççççç",11,"ç ",11,"ç®ç±ç²ç³çµçº",6,"çççççççççççççççç"],["a1a1","ãããÂ·ËËÂ¨ããâï½ââ¦ââââããã",7,"ããããÂ±ÃÃ·â¶â§â¨âââªâ©ââ·ââ¥â¥â âââ«â®â¡âââ½ââ â®â¯â¤â¥ââµâ´ââÂ°â²â³âï¼Â¤ï¿ ï¿¡â°Â§âââââââââ¡â â³â²â»ââââã"],["a2a1","â°",9],["a2b1","â",19,"â´",19,"â ",9],["a2e5","ã ",9],["a2f1","â ",11],["a3a1","ï¼ï¼ï¼ï¿¥ï¼",88,"ï¿£"],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a6e0","ï¸µï¸¶ï¸¹ï¸ºï¸¿ï¹ï¸½ï¸¾ï¹ï¹ï¹ï¹"],["a6ee","ï¸»ï¸¼ï¸·ï¸¸ï¸±"],["a6f4","ï¸³ï¸´"],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a840","ËËËâââ¥âµâââââââââ£ââ¦â§â¿â",35,"â",6],["a880","â",7,"ââââ¼â½â¢â£â¤â¥ââããã"],["a8a1","ÄÃ¡ÇÃ ÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇÇÃ¼ÃªÉ"],["a8bd","ÅÅ"],["a8c0","É¡"],["a8c5","ã",36],["a940","ã¡",8,"ã£ãããããã¡ãããããï¸°ï¿¢ï¿¤"],["a959","â¡ã±"],["a95c","â"],["a960","ã¼ããã½ã¾ãããï¹",9,"ï¹ï¹ï¹ï¹ï¹",8],["a980","ï¹¢",4,"ï¹¨ï¹©ï¹ªï¹«"],["a996","ã"],["a9a4","â",75],["aa40","çççç¢",5,"çªç«çµç¶ç¹ç½ç¾ç¿ççç",5,"ççççççççççççç ç£ç¤ç¦ç§ç¨ç­ç¯ç°ç²ç³çµç¶çºç»ç¼ç½ç",8],["aa80","çççççççççççç",7,"ç¡",10,"ç®ç°ç±"],["ab40","ç²",11,"ç¿",4,"çççççççççççççççççççç ç¡ç£",5,"çªç¬ç­ç±ç´çµç¶ç¸ç¹ç¼ç½ç¾ç¿çç",4],["ab80","çççç",6,"çççççç¡ç¢ç£ç¤ç¦ç¨çªç«ç¬ç®ç¯ç°ç±ç³",4],["ac40","ç¸",10,"çççççççç",8,"ç",5,"ç£ç¤ç§ç©ç«ç­ç¯ç±ç²ç·",4,"ç½ç¾ç¿çç",11],["ac80","ç",6,"çççç ",12,"ç®ç¯ç±",4,"ç¸ç¹çº"],["ad40","ç»ç¼ç½ç¿ççççççççççç",10,"çç",7,"çª",15,"ç»",12],["ad80","ç",9,"ç",8,"ççç¡ç¥ç§",6,"ç°ç±ç²"],["ae40","ç³çµç¸",6,"ççççç",7,"ççççççççççç ",4,"ç¦ç§çªç®ç´ç¶ç¹ç¼ç½ç¿ççççççççççççççççç"],["ae80","ç",7,"ç§ç¨ç©ç«",6,"ç³çµç¶ç·çº",4,"çççççç"],["af40","çççççççççççççç¢ç¦",4,"ç­ç¶ç·çºç»ç¿ççççççççççççççççç ç¡ç¥ç©ç¬ç­ç®ç¯ç²ç³çµç¶ç·ç¸çºç»ç½ç¾çççç"],["af80","çççççççççççççççç¡ç£ç§ç¨ç¬ç®ç¯ç±ç²ç¶ç·ç¹çºç»ç½ççç"],["b040","ç",6,"ç",5,"çç",4,"ççç ç¡ç¢ç¤",6,"ç¬ç­ç®ç°",7,"ç¹çºç¼ç¿ççççççççççççççççç"],["b080","ç",7,"ç¥",8,"ç¯ç°ç³çµ",9,"çççåé¿åæ¨åååççè¼ç®è¾ç¢ç±ééæ°¨å®ä¿ºææå²¸èºæ¡è®æçå¹æç¬ç¿±è¢å²å¥¥ææ¾³è­ææå­å§ç¬å«ç¤å·´æè·é¶æèåé¸ç½¢ç¸ç½æç¾æä½°è´¥æç¨æç­æ¬æ³è¬é¢æ¿çæ®æä¼´ç£ååç»é¦å¸®æ¢æ¦èç»æ£ç£èéåè°¤èèåè¤å¥"],["b140","ççççççççççççç ",4,"ç¦",7,"ç°ç³çµç¶ç·çºç»ç½ç¿çççççççç",10,"ççççç¡ç£ç¤ç¥ç§çªç«"],["b180","ç¬ç®ç°",4,"ç¹ç»ç½ç¾ç¿ççççç",7,"ç",7,"çèé¹ä¿å ¡é¥±å®æ±æ¥æ´è±¹é²çæ¯ç¢æ²ååè¾èè´é¡åçå¤æ«çè¢«å¥è¯æ¬ç¬¨å´©ç»·ç­æ³µè¹¦è¿¸é¼é¼»æ¯éç¬å½¼ç¢§èè½æ¯æ¯æ¯å¸åºç¹é­æå¼å¿è¾å£èé¿éé­è¾¹ç¼è´¬æä¾¿ååè¾¨è¾©è¾«éæ å½ªèè¡¨é³æå«çªå½¬ææ¿æ»¨å®¾æåµå°æä¸ç§é¥¼ç³"],["b240","çççç ç¤ç§ç©çªç­",11,"çºç»ç¼çççç",5,"ççç",11,"ç¡ç£ç¤ç¦ç¨ç«ç­ç®ç¯ç±ç²ç´ç¶",4],["b280","ç¼ç¾ç",12,"ç",8,"çççç",4,"ç¤çå¹¶ç»è æ­æ¨éµæ³¢ååæéç®ä¼¯å¸è¶èèæ¸¤æ³é©³æååºè¡¥å ä¸å¸æ­¥ç°¿é¨ææ¦çè£ææè´¢ç¬è¸©éå½©èè¡é¤åèæ®æ­æ¨ç¿èè±ä»æ²§èæç³æ§½æ¹èåç­ä¾§åæµå±è¹­æåè¬è¶æ¥ç¢´æ½å¯å²å·®è¯§ææ´è±ºææºèé¦è°ç¼ é²äº§éé¢¤æç"],["b340","ç¦ç¨çªç¯ç°ç±ç²ç´çµç·ç¹çºç»ç¼ç ",5,"ç ç ç ç ç ç ç ç ç ç ç  ç ¡ç ¢ç ¤ç ¨ç ªç «ç ®ç ¯ç ±ç ²ç ³ç µç ¶ç ½ç ¿ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡"],["b380","ç¡ç¡ç¡",11,"ç¡¯",7,"ç¡¸ç¡¹ç¡ºç¡»ç¡½",6,"åºå°å¸¸é¿å¿è åæçå±å¡è¶æéæå²æ½®å·¢åµçè½¦æ¯æ¤æ£å½»æ¾é´è£è¾°å°æ¨å¿±æ²éè¶è¡¬æç§°åæ©æåä¹ç¨æ©æ¾è¯æ¿ééªç§¤åç´æåæ± è¿å¼é©°è»é½¿ä¾å°ºèµ¤ç¿æ¥ç½åå²è«å´å® æ½é¬ç´è¸ç¨ æç­¹ä»ç»¸çä¸è­ååºæ©±å¨èºééæ»é¤æ¥"],["b440","ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ ç¢¢ç¢¤ç¢¦ç¢¨",7,"ç¢µç¢¶ç¢·ç¢¸ç¢ºç¢»ç¢¼ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£",9],["b480","ç£¤ç£¥ç£¦ç£§ç£©ç£ªç£«ç£­",4,"ç£³ç£µç£¶ç£¸ç£¹ç£»",5,"ç¤ç¤ç¤ç¤",6,"ç¡å¨çæè§¦å¤æ£å·ç©¿æ¤½ä¼ è¹åä¸²ç®çªå¹¢åºé¯åå¹çæ¶é¤åæ¥æ¤¿éåæ·³çº¯è ¢æ³ç»°çµè¨ç£éè¾æç·è¯æ­¤åºèµæ¬¡èªè±å±åä»ä¸åç²éç°ä¿è¹¿ç¯¡çªæ§å´å¬èçç²¹æ·¬ç¿ æå­å¯¸ç£æ®ææªæ«éæ­è¾¾ç­ç©æå¤§åæ­¹å£æ´å¸¦æ®ä»£è´·è¢å¾é®"],["b540","ç¤",5,"ç¤",9,"ç¤",4,"ç¤¥",14,"ç¤µ",4,"ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥",8,"ç¥ç¥ç¥ç¥ç¥¡ç¥£"],["b580","ç¥¤ç¥¦ç¥©ç¥ªç¥«ç¥¬ç¥®ç¥°",6,"ç¥¹ç¥»",4,"ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦æ è½æä¸¹åé¸æ¸èæ¦æ°®ä½æ®æ·¡è¯å¼¹èå½æ¡åè¡æ¡£åæ£è¹åå²ç¥·å¯¼å°ç¨»æ¼éçå¾·å¾çè¹¬ç¯ç»ç­çªå³éå ¤ä½æ»´è¿ªæç¬çæ¶¤ç¿å«¡æµåºå°èç¬¬å¸å¼éç¼é¢ ææ»ç¢ç¹å¸éå«çµä½ç¸åºæ¦å¥ æ·æ®¿ç¢å¼éååæåéè°è·ç¹ç¢è¶è¿­è°å "],["b640","ç¦",6,"ç¦",11,"ç¦¨",10,"ç¦´",4,"ç¦¼ç¦¿ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§",5,"ç§ ç§¡ç§¢ç§¥ç§¨ç§ª"],["b680","ç§¬ç§®ç§±",6,"ç§¹ç§ºç§¼ç§¾ç§¿ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨",4,"ç¨ç¨ç¨ç¨ç¨ç¨ä¸ç¯å®éé¡¶é¼é­å®è®¢ä¸¢ä¸å¬è£æå¨æ ä¾æ«å»æ´åææé¡è±éçé½ç£æ¯çç¬è¯»å µç¹èµæéèåº¦æ¸¡å¦ç«¯ç­é»æ®µæ­ç¼å åéå¯¹å¢©å¨è¹²æ¦é¡¿å¤éç¾éæåå¤å¤ºåèº²æµè·ºèµåæ°å è¾å³¨é¹ä¿é¢è®¹å¨¥æ¶åæ¼ééé¥¿æ©èå¿è³å°é¥µæ´±äº"],["b740","ç¨ç¨ç¨¡ç¨¢ç¨¤",14,"ç¨´ç¨µç¨¶ç¨¸ç¨ºç¨¾ç©",5,"ç©",9,"ç©",4,"ç©",16],["b780","ç©©",6,"ç©±ç©²ç©³ç©µç©»ç©¼ç©½ç©¾çªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçª¡çª¢è´°åç½ç­ä¼ä¹éæ³çè©å¸çªç¿»æ¨ç¾éç¹å¡ç¦åè¿èè´©ç¯é¥­æ³åè³æ¹èªæ¿é²å¦¨ä»¿è®¿çººæ¾è²éå¡é£è¥åªè¯½å èºåºæ²¸è´¹è¬éå©æ°åçº·åçæ±¾ç²å¥ä»½å¿¿æ¤ç²ªä¸°å°æ«èå³°éé£ç¯ç½é¢å¯ç¼è®½å¥å¤ä½å¦å¤«æ·è¤å­µæ¶æè¾å¹æ°ç¬¦ä¼ä¿æ"],["b840","çª£çª¤çª§çª©çªªçª«çª®",4,"çª´",10,"ç«",10,"ç«",9,"ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¤ç«§",5,"ç«®ç«°ç«±ç«²ç«³"],["b880","ç«´",4,"ç«»ç«¼ç«¾ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬¡ç¬¢ç¬£ç¬§ç¬©ç¬­æµ®æ¶ªç¦è¢±å¼ç«æè¾ä¿¯éæ§è¯èåºèèµ´å¯è¦èµå¤åä»éç¶è¹è´å¯è®£éå¦ç¼åå¶åè¯¥æ¹æ¦éçæºå¹²çææç«¿èèµ¶æç§æ¢èµ£ååé¢ç¼¸èçº²å²æ¸¯æ ç¯çé«èç¾ç³æéç¨¿åå¥æ­ææé¸½è³çå²é©èæ ¼è¤ééé¬ä¸ªåç»æ ¹è·èæ´åºç¾¹"],["b940","ç¬¯ç¬°ç¬²ç¬´ç¬µç¬¶ç¬·ç¬¹ç¬»ç¬½ç¬¿",5,"ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­¡ç­£",10,"ç­¯ç­°ç­³ç­´ç­¶ç­¸ç­ºç­¼ç­½ç­¿ç®ç®ç®ç®ç®",6,"ç®ç®"],["b980","ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®£ç®¤ç®¥ç®®ç®¯ç®°ç®²ç®³ç®µç®¶ç®·ç®¹",7,"ç¯ç¯ç¯åè¿æ¢å·¥æ»åæ­é¾ä¾èº¬å¬å®«å¼å·©æ±æ±è´¡å±é©å¾æ²èçå¢æè´­å¤è¾èåç®ä¼°æ²½å­¤å§é¼å¤èéª¨è°·è¡æé¡¾åºéå®çåå¯¡æè¤ä¹ææªæ£ºå³å®å è§ç®¡é¦ç½æ¯çè´¯åå¹¿éç°è§å­ç¡å½é¾éºè½¨é¬¼è¯¡ç¸æ¡æè·ªè´µå½è¾æ»æ£éé­å½æè£¹è¿å"],["ba40","ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯",4,"ç¯ç¯ç¯ç¯ç¯ ç¯¢ç¯£ç¯¤ç¯§ç¯¨ç¯©ç¯«ç¯¬ç¯­ç¯¯ç¯°ç¯²",4,"ç¯¸ç¯¹ç¯ºç¯»ç¯½ç¯¿",7,"ç°ç°ç°ç°ç°ç°",5,"ç°ç°ç°"],["ba80","ç°",4,"ç° ",5,"ç°¨ç°©ç°«",12,"ç°¹",5,"ç±éª¸å­©æµ·æ°¦äº¥å®³éªé£æ¨é¯é©å«æ¶µå¯å½åç½ç¿°æ¼ææ±æ¾æçæ±æ±å¤¯æ­èªå£åè±ªæ¯«éå¥½èå·æµ©åµåè·èæ ¸ç¦¾åä½åçè²éæ²³æ¶¸èµ«è¤é¹¤è´ºå¿é»çå¾ç æ¨å¼äº¨æ¨ªè¡¡æè½°åçè¹é¸¿æ´ªå®å¼çº¢åä¾¯ç´å¼åååå¼ä¹å¿½çå£¶è«è¡è´çç³æ¹"],["bb40","ç±",9,"ç±",36,"ç±µ",5,"ç±¾",9],["bb80","ç²ç²",6,"ç²ç²ç²ç²ç²ç²ç² ç²¡ç²£ç²¦ç²§ç²¨ç²©ç²«ç²¬ç²­ç²¯ç²°ç²´",4,"ç²ºç²»å¼§èå¬æ¤äºæ²ªæ·è±ååç¾æ»ç»ååè¯æ§å¾ææ·®åæ¬¢ç¯æ¡è¿ç¼æ¢æ£å¤çªè±¢çæ¶£å®¦å¹»èæé»ç£ºèç°§çå°æ¶çæå¹æè°ç°æ¥è¾å¾½æ¢èåæ¯ææ§åæ æ¦è´¿ç§½ä¼ç©æ±è®³è¯²ç»è¤æå©é­æµæ··è±æ´»ä¼ç«è·ææéè´§ç¥¸å»å¾åºæºç¸ç¨½ç§¯ç®"],["bc40","ç²¿ç³ç³ç³ç³ç³ç³ç³ç³",6,"ç³ç³ç³ç³ç³ç³¡",6,"ç³©",5,"ç³°",7,"ç³¹ç³ºç³¼",13,"ç´",5],["bc80","ç´",14,"ç´¡ç´£ç´¤ç´¥ç´¦ç´¨ç´©ç´ªç´¬ç´­ç´®ç´°",6,"èé¥¥è¿¹æ¿è®¥é¸¡å§¬ç»©ç¼åææ£è¾ç±éåæ¥ç¾æ±²å³å«çº§æ¤å èå·±èæåå­£ä¼ç¥­åæ¸æµå¯å¯è®¡è®°æ¢å¿éå¦ç»§çºªåæ·å¤¹ä½³å®¶å èé¢è´¾ç²é¾åç¨¼ä»·æ¶é©¾å«æ­¼çåå°ç¬ºé´çå¼è©è°å¥¸ç¼è§æ£æ¬ç¢±ç¡·æ£æ¡ç®ä¿­åªåèæ§é´è·µè´±è§é®ç®­ä»¶"],["bd40","ç´·",54,"çµ¯",7],["bd80","çµ¸",32,"å¥è°åé¥¯æ¸æºæ¶§å»ºåµå§å°æµæ±çèæ¡¨å¥è®²å é±éèæ¤ç¤ç¦è¶äº¤éæµéªå¨å¼æé°ç«ä¾¥èç¡è§é¥ºç¼´ç»å¿æéµè½¿è¾å«çªæ­æ¥çç§¸è¡é¶æªå«èæ¡æ°æ·ç«ç«­æ´ç»è§£å§æèè¥çåä»ç¥è¯«å±å·¾ç­æ¤éä»æ´¥è¥ç´§é¦ä»è°¨è¿é³æç¦è¿ç¬æµ¸"],["be40","ç¶",12,"ç¶§",6,"ç¶¯",42],["be80","ç·",32,"å°½å²èå¢èçæ¶é²¸äº¬æç²¾ç²³ç»äºè­¦æ¯é¢éå¢æ¬éå¾çéç«ç«åç¯çªæªç©¶çº çé­ä¹ç¸ä¹éå©ææ§è¼èåå°±çé æçç½å±é©¹èå±åç©ä¸¾æ²®èææ®å·¨å·è·è¸é¯ä¿±å¥æ§ç¬å§æé¹å¨å¦ç·å·ç»¢ææ«ææåçµè§å³è¯ç»åèé§ååå³»"],["bf40","ç·»",62],["bf80","ç¸ºç¸¼",4,"ç¹",4,"ç¹",21,"ä¿ç«£æµé¡éªååå¡å¯å¼æ©æ¥·å¯æ¨åå ªååç çåº·æ·ç³ ææäº¢çèæ·ç¤é å·èæ¯æ£µç£é¢ç§å£³å³å¯æ¸´åå»å®¢è¯¾è¯åå¦æ³åå­ç©ºæå­æ§æ å£æ£å¯æ¯å­çªè¦é·åºè£¤å¤¸å®æè·¨è¯åç­·ä¾©å¿«å®½æ¬¾å¡ç­çæ¡ç¿ç¶æ·åµäºçå²¿çª¥èµå¥é­å"],["c040","ç¹",35,"çº",23,"çºçºçº"],["c080","çº®çº´çº»çº¼ç»ç»¤ç»¬ç»¹ç¼ç¼ç¼ç¼·ç¼¹ç¼»",6,"ç½ç½",9,"ç½ç½é¦æ§æºå¤ææå°æ¬æ©å»éåæåè¡èè¾£å¦è±æ¥èµèå©ªæ æ¦ç¯®éå°æ¾è°°æ½è§æç¼çæ»¥çæ¦ç¼å»éææµªæå³ç¢èä½¬å§¥éªçæ¶åä¹é·é­è¾ç£ç´¯å¡åæèç±»æ³ªæ£±æ¥å·åæ¢¨çé»ç¯±ç¸ç¦»æ¼çæéé²¤ç¤¼èèåæ ä¸½åå±ç ¾åå©åä¾ä¿"],["c140","ç½ç½ç½ç½ç½ç½ç½ ç½£",4,"ç½«ç½¬ç½­ç½¯ç½°ç½³ç½µç½¶ç½·ç½¸ç½ºç½»ç½¼ç½½ç½¿ç¾ç¾",7,"ç¾ç¾ç¾",4,"ç¾",4,"ç¾ç¾ç¾ ç¾¢ç¾£ç¾¥ç¾¦ç¾¨",6,"ç¾±"],["c180","ç¾³",4,"ç¾ºç¾»ç¾¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿",4,"ç¿ç¿ç¿",5,"ç¿¢ç¿£ç¢ç«ç²æ²¥é¶åçå©ä¿©èè²è¿é°å»ææ¶å¸æè¸é¾æç¼ç»ç²®åæ¢ç²±è¯ä¸¤è¾éæ¾äº®è°æ©èåççå¯¥è¾½æ½¦äºæé£å»æåè£çå£çç³æç£·éä¸´é»é³æ·åèµåæç²è±é¶é¾éä¼¶ç¾åçµéµå²­é¢å¦ä»¤æºçæ¦´ç¡«é¦çåç¤æµæ³å­é¾èåç¬¼çª¿"],["c240","ç¿¤ç¿§ç¿¨ç¿ªç¿«ç¿¬ç¿­ç¿¯ç¿²ç¿´",6,"ç¿½ç¿¾ç¿¿èèèèèèèèèèèèèèè¡è£è¤è«",5,"è²è´è¹èºè¼è¾èèèèèèèèèèèèèèè"],["c280","èè",13,"è«",5,"è²",11,"éåæ¢éæ¥¼å¨æç¯æ¼éè¦å¢é¢åºçæ³å¤èé²éºç¢é²è·¯èµé¹¿æ½ç¦å½éæ®é©´åéä¾£æå±¥å±¡ç¼èæ°¯å¾çæ»¤ç»¿å³¦æå­ªæ»¦åµä¹±æ ç¥æ¡è½®ä¼¦ä»æ²¦çº¶è®ºèèºç½é»é£ç®©éª¡è£¸è½æ´éªç»å¦éº»çç èé©¬éªåååä¹°éº¦åè¿èçé¦è®æ»¡èæ¼æ¢æ¼«"],["c340","è¾èèèèèè",5,"èèèèèè£è¦è§è¨è¬è°è³èµè¶è¸è¹è»èè",4,"è",6,"èèè è¢è£è¦è®èµè·è¹è»è¾è¿èèèèèèèè"],["c380","èèèèèèèè",12,"è­è®è°è³è´èµè·è¹",4,"è¿è°©èè«ç²æ°å¿è½ç«èéæ¯çéå¯èåå¸½è²è´¸ä¹ç«ææ¢é¶éç¤æ²¡çåªéæ¯ç¾æ§å¯å¦¹åªé¨é·ä»¬èèæª¬çé°çæ¢¦å­ç¯éé¡ç³è¿·è°å¼¥ç±³ç§è§æ³èå¯å¹æ£ç ç»µåååå¨©ç¼é¢èæçèç§æ¸ºåºå¦èç­æ°æ¿ç¿ææ¯é½æèé¸£é­åå½è°¬æ¸"],["c440","è",5,"èèèèèèèèèè",4,"è¡è¢è£è¤è¦è¨èªè«è¬è¯è²è³èµè¶è·è¸èè",4,"èèèèèèè",5,"èèè",4,"è¤è¥"],["c480","è§è©è«",7,"è´",5,"è¼è½è¾è¿èèèèèèè",6,"æ¹èæ¨¡èç£¨æ©é­æ¹æ«è«å¢¨é»æ²«æ¼ å¯éè°çææç¡äº©å§æ¯å¢æ®å¹åææ¨ç®ç¦ç§ç©æ¿åªåé é£å¨çº³æ°ä¹å¥¶èå¥åç·é¾åæ èæ¼é¹æ·å¢é¦åå«©è½å¦®éåªæ³¥å°¼æä½ å¿è»éæººè«æå¹´ç¢¾æµæ»å¿µå¨é¿é¸å°¿æèå­½å®ééæ¶æ¨æ çåå®"],["c540","è",14,"è¤è¥è¦è¨è©è«è®",4,"èµ",5,"è½è¿èè",4,"èèèèè",5,"èè è¤è¥è¦è§è©è®è²èºè¼è½è¿"],["c580","èèèèèèèèèèèè",7,"èèèèèè ",7,"è©æ§æ³çæ­é®çº½èæµåå¼å¥´åªæå¥³æèçæªæ¦ç³¯è¯ºå¦æ¬§é¸¥æ®´èåå¶æ²¤åªè¶´ç¬å¸æç¶ææçå¾æ¹æ´¾ææ½çç£ç¼çå¤åä¹åºæèªèæåå¨ç®è¢è·æ³¡å¸èå¹è£´èµéªéä½©æ²å·çç °æ¨ç¹æ¾å½­è¬æ£ç¡¼ç¯·è¨æé¹æ§ç¢°å¯ç é¹æ¹æ«åçµæ¯"],["c640","èªè«è¬è­è±èµè¶è·è¸è»è¼èèèèèèèèèèèèèèèèè è¢è£è§è²èµè¶èºè»è¼è¿èèèèèèèèèèèè¢è§è¨è©èªè¬è­è®è°è²è³èµè¶è¸"],["c680","èºè¼",4,"èèèèèèèèèè",9,"è©èªè®è°è²è·è»è½å¤è¾ç²ç®å¹çå»å±è­¬ç¯åçéªé£æ¼ç¢ç¥¨æç¥æ¼é¢è´«åèä¹åªè¹èå¹³å­ç¶è¯å±å¡æ³¼é¢å©ç ´é­è¿«ç²åæéºä»èè¡è©è²åæ´åæ®æµ¦è°±æçææ¬ºæ æå¦»ä¸åæ¼ææ²å¶æ£å¥æ­§ç¦å´èé½æç¥ç¥éªèµ·å²ä¹ä¼å¯å¥ç å¨æ°è¿å¼æ±½æ³£è®«æ"],["c740","è¾è¿èèèèèè",4,"èè",4,"èè¢è°",6,"è¹èºè¾",6,"èèèèèèèèèèèèèèèèèè¡",6,"è¬è­è®"],["c780","è¯èµè»è¾è¿èèèèèèèèèèèèèèèèèèèè¢è£è¤è¦è§è¨è«è¬è­æ°æ´½çµæ¦ééåè¿ç­¾ä»è°¦ä¹¾é»é±é³åæ½é£æµè°´å åµæ¬ æ­æªåèç¾å¢è·å¼ºæ¢æ©é¹æ²ææ¡¥ç§ä¹ä¾¨å·§éæ¬ç¿å³­ä¿çªåèä¸æ¯çªé¦ä¾µäº²ç§¦ç´å¤è¹æç¦½å¯æ²éè½»æ°¢å¾å¿æ¸ææ´æ°°æé¡·è¯·åºç¼ç©·ç§ä¸é±çæ±åéæ³è¶åºèæ²èº¯å±é©±æ¸ "],["c840","è®è¯è³",4,"èºè»è¼è¾è¿èèèèèèèèè",5,"èèèè",5,"è©",7,"è²",5,"è¹èºè»è¾",7,"èèè"],["c880","è",6,"è",4,"èèèèè è¢è¤",4,"èªè®è¯è°è²è´è·è¹è»è¼åå¨¶é¾è¶£å»åé¢§æéæ³å¨çæ³ç¬å¸åç¼ºçç¸å´é¹æ¦·ç¡®éè£ç¾¤ç¶çåæç¤å£¤æå·è®©é¥¶æ°ç»æ¹ç­å£¬ä»äººå¿é§ä»»è®¤åå¦çº«æä»æ¥æè¸èè£èçæº¶å®¹ç»åææèè¹è åå­ºå¦è¾±ä¹³æ±å¥è¤¥è½¯é®èçéé°æ¶¦è¥å¼±ææ´è¨è®é³å¡èµä¸å"],["c940","è½",4,"èèèèèèè",7,"èèèèèèè è¢",12,"è°è±è³èµè¶è·è»è¼è¾èèèèèèèèèèèèèèè"],["c980","è",4,"èè¡è¢è¤è§",4,"è­è®è¯è±",10,"è½è¾èèèä¼æ£æ¡åä¸§æéªæ«å«çè²æ¶©æ£®å§èç æå¹æ²çº±å»å¥çç­æçè«æå±±å ç½è¡«éªéæèµ¡è³åæ±æç¼®å¢ä¼¤åèµæä¸å°è£³æ¢¢æç¨ç§èåºé¶å°å¨éµç»å¥¢èµèèèèµ¦æå°ææ¶ç¤¾è®¾ç ·ç³å»ä¼¸èº«æ·±å¨ ç»ç¥æ²å®¡å©¶çè¾ææ¸å£°çç¥ç²åç»³"],["ca40","è",8,"èèèèèèèèèèèèèèè è¢",8,"è­",9,"è¾",4,"èèèèè",10],["ca80","èèèèèèè",4,"è¥è¦è§è©",8,"è³èµè¶è·è¸è¼è½è¿èèççå©èå£å¸å¤±ç®æ½æ¹¿è¯å°¸è±åç³æ¾æ¶ä»é£èå®è¯å²ç¢ä½¿å±é©¶å§å¼ç¤ºå£«ä¸æ¿äºæ­èªéå¿æ¯åå¬éä»ä¾éé¥°æ°å¸æå®¤è§è¯æ¶æé¦å®å¯¿æå®åç¦å½è¬æ¢æ¢³æ®æè¾åèæ·çä¹¦èµå­°çè¯ææç½²èé»é¼ å±æ¯è¿°æ ææç«å¢åº¶æ°æ¼±"],["cb40","èèèè",6,"è",10,"è",6,"è¥è¦è§è©è«è¬è­è±",5,"è¸èº",6,"è",6,"è",4,"èè"],["cb80","èè",5,"è",6,"è¥è¦è§è¨èª",14,"æå·èæè¡°ç©å¸æ æ´éåç½è°æ°´ç¡ç¨å®ç¬é¡ºèè¯´ç¡æçæ¯æå¶æç§å¸ä¸æ­»èå¯ºå£åä¼ºä¼¼é¥²å·³æ¾è¸æé¢éå®è®¼è¯µæèæå½èé¥ä¿ç´ éç²å³å¡æº¯å®¿è¯èé¸èç®è½ééç»¥é«ç¢å²ç©éé§ç¥å­æç¬èæ¢­åç¼©çç´¢éæå¡ä»å®å¥¹å¡"],["cc40","è¹èºè¼è½è¾è",4,"è",10,"èèèèè",15,"è¨èª",13,"è¹èºè»è½è¾è¿è"],["cc80","è",11,"èèè",4,"èèèèè è¡è£",7,"ç­æè¹è¸èèæ¬å°æ³°éå¤ªææ±°åæè´ªç«æ»©åæªç°æ½­è°­è°å¦æ¯¯è¢ç¢³æ¢å¹ç­æ±¤å¡æªå æ£ èåç³åèººæ·è¶ç«ææ¶æ»ç»¦èæ¡éæ·é¶è®¨å¥ç¹è¤è¾ç¼èªæ¢¯åè¸¢éæé¢è¹å¼ä½æ¿åææ¶åå±å¤©æ·»å¡«ç°çæ¬èèææ¡è¿¢çºè·³è´´éå¸åå¬ç"],["cd40","è­è¯è°è²",6,"è",6,"è",4,"èè",5,"è",4,"è¥è¦è«è­è®è²è³è·è¸è¹è»",4,"èèèèèèèèèèèèèè"],["cd80","èè è¡è¢è£è¥è¦è§è¨èªè«è¬è¯èµè¶è·èºè»è¼è½è¿èèèèèèèèèèèèæ±å»·åäº­åº­æºèéæ¡é®ç³åéå½¤ç«¥æ¡¶æç­ç»çå·æå¤´éå¸ç§çªå¾å¾éæ¶å± åååæ¹å¢æ¨é¢è¿èè¤ªéåå±¯èææè±é¸µéé©®é©¼æ¤­å¦¥æå¾æåèæ´¼å¨ç¦è¢æ­ªå¤è±å¼¯æ¹¾ç©é¡½ä¸¸ç·å®ç¢æ½æçæå®å©ä¸èæ±ªçäº¡æç½å¾æºæå¿å¦å¨"],["ce40","èèèèè è¤è¦è§è¨èªè«è¬è­è¯è°è²è³èµè¶è¸è¹èºè¼è½è",6,"èèèèèèèèèèèè",5,"è¡è¢è¦",7,"è¯è±è²è³èµ"],["ce80","è·è¸è¹èºè¿èèèèèèèèè",4,"èèèè",6,"è ",4,"å·å¾®å±é¦è¿æ¡å´å¯æä¸ºæ½ç»´èèå§ä¼ä¼ªå°¾çº¬æªèå³çèåé­ä½æ¸­è°å°æ°å«çæ¸©èæé»çº¹å»ç¨³ç´é®å¡ç¿ç®æèæ¶¡çªææ¡å§æ¡æ²å·«åé¨ä¹æ±¡è¯¬å±æ èæ¢§å¾å´æ¯æ­¦äºæåèä¼ä¾®åæé¾æ¤ç©å¿å¡æè¯¯æçæè¥¿ç¡ç½æ°å»å¸é¡çº"],["cf40","è¥è¦è§è©èªè®è°è±è²è´è¶è·è¸è¹è»è¼è¾è¿è",4,"èèèè",4,"è",6,"èèèèè¡è¢è£è¤è¦è§è¨è©è«è¬è­è¯",9],["cf80","èºè»è¼è½è¿è è è è ",5,"è ",7,"è è è è è è ",4,"è £ç¨æ¯å¸æèå¤æçç¯æºªæ±çæªè¢­å¸­ä¹ åª³åé£æ´ç³»éæç»çè¾å£éè¾æå³¡ä¾ ç­ä¸å¦å¤åæé¨åä»é²çº¤å¸è´¤è¡è·é²æ¶å¼¦å«æ¾é©ç°ç®å¿èºé¦ç¾¡å®ªé·éçº¿ç¸å¢é¶é¦ç®±è¥æ¹ä¹¡ç¿ç¥¥è¯¦æ³åäº«é¡¹å··æ©¡ååè±¡è§ç¡éåå®å£éæ¶å®µæ·æ"],["d040","è ¤",13,"è ³",5,"è ºè »è ½è ¾è ¿è¡è¡è¡è¡",5,"è¡",5,"è¡è¡è¡è¡",6,"è¡¦è¡§è¡ªè¡­è¡¯è¡±è¡³è¡´è¡µè¡¶è¡¸è¡¹è¡º"],["d080","è¡»è¡¼è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢",4,"è¢",4,"è¢£è¢¥",5,"å°å­æ ¡èå¸ç¬ææ¥äºæ­èéåææºéªæèè°åæ¢°å¸è¹ææ³æ³»è°¢å±èªè¯éæ¬£è¾æ°å¿»å¿ä¿¡è¡æè¥ç©æºå´ååå½¢é¢è¡éå¹¸ææ§å§åå¶è¸åæ±¹éçä¼ä¿®ç¾æ½åéç§è¢ç»£å¢æéèåé¡»å¾è®¸èéåæ­åºçæ¤çµ®å©¿ç»ªç»­è½©å§å®£æ¬æç"],["d140","è¢¬è¢®è¢¯è¢°è¢²",4,"è¢¸è¢¹è¢ºè¢»è¢½è¢¾è¢¿è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£",4,"è£ è£¡è£¦è£§è£©",6,"è£²è£µè£¶è£·è£ºè£»è£½è£¿è¤è¤è¤",5],["d180","è¤è¤",4,"è¤è¤",4,"è¤",4,"è¤¢è¤£è¤¤è¤¦è¤§è¤¨è¤©è¤¬è¤­è¤®è¤¯è¤±è¤²è¤³è¤µè¤·éç£ç©ç»é´èå­¦ç©´éªè¡åçå¾ªæ¬è¯¢å¯»é©¯å·¡æ®æ±è®­è®¯éè¿åæ¼é¸¦é¸­åä¸«è½çèå´è¡æ¶¯éåäºè®¶çå½éçæ·¹çä¸¥ç èå²©å»¶è¨é¢éçæ²¿å¥æ©ç¼è¡æ¼è³å °çåç éåå½¦ç°å®´è°éªæ®å¤®é¸¯ç§§æ¨æ¬ä½¯ç¡ç¾æ´é³æ°§ä»°çå»æ ·æ¼¾éè°å¦ç¶"],["d240","è¤¸",8,"è¥è¥è¥",24,"è¥ ",5,"è¥§",19,"è¥¼"],["d280","è¥½è¥¾è¦è¦è¦è¦è¦",26,"æå°§é¥çªè°£å§å¬èè¯è¦èæ¤°åè¶ç·éå¶ä¹é¡µæä¸å¶æ³èå¤æ¶²ä¸å£¹å»æé±ä¾ä¼è¡£é¢å¤·éç§»ä»ªè°çæ²å®å§¨å½æ¤èåå·²ä¹ç£ä»¥èºææéå±¹äº¿å½¹èé¸èç«äº¦è£ææ¯å¿ä¹çæº¢è¯£è®®è°è¯å¼ç¿¼ç¿ç»èµè«å æ®·é³é´å§»åé¶æ·«å¯é¥®å°¹å¼é"],["d340","è¦¢",30,"è§è§è§è§è§è§è§è§è§è§è§è§ è§¡è§¢è§¤è§§è§¨è§©è§ªè§¬è§­è§®è§°è§±è§²è§´",6],["d380","è§»",4,"è¨",5,"è¨",21,"å°è±æ¨±å©´é¹°åºç¼¨è¹è¤è¥è§èè¿èµ¢çå½±é¢ç¡¬æ åæ¥ä½£èçåº¸éè¸è¹åæ³³æ¶æ°¸æ¿åç¨å¹½ä¼æ å¿§å°¤ç±é®éç¹æ²¹æ¸¸éæåå³ä½éè¯±åå¹¼è¿æ·¤äºçæ¦èæèä½ä¿é¾é±¼ææ¸æ¸éäºå¨±é¨ä¸å±¿ç¦¹å®è¯­ç¾½çåèéåéå»å³ªå¾¡ææ¬²ç±è²èª"],["d440","è¨",31,"è¨¿",8,"è©",21],["d480","è©",25,"è©º",6,"æµ´å¯è£é¢è±«é©­é¸³æ¸å¤åå£è¢åæ´è¾å­ååç¿æºç¼è¿èæ¿æ¨é¢æ°çº¦è¶è·é¥å²³ç²¤ææ¦éèäºé§åé¨åè¿è´éæéµå­åç ¸ææ ½åç¾å®°è½½åå¨å±ææèµèµèè¬é­ç³å¿è»æ£æ©æ¾¡è¤èºåªé çç¶ç¥è´£æ©åæ³½è´¼æå¢ææ¾èµ æå³æ¸£æ­è½§"],["d540","èª",7,"èª",7,"èª",46],["d580","è«",32,"é¡é¸ç¨æ æ¦¨åä¹ç¸è¯ææå®çªåºå¯¨ç»æ¯¡è©¹ç²æ²¾çæ©è¾å´­å±è¸æ å æç«æ¹ç»½æ¨ç« å½°æ¼³å¼ ææ¶¨æä¸å¸è´¦ä»èç´éææ­æ¾æ²¼èµµç§ç½©åèå¬é®æå²è°è¾èéèè¿æµçæççç §è»è´éä¾¦æç¹è¯éæ¯ééµè¸æ£çå¾ç°äºææ´æ¯æ­£æ¿"],["d640","è«¤",34,"è¬",27],["d680","è¬¤è¬¥è¬§",30,"å¸§çéè¯èææ¯å±èç¥è¢èæ±ä¹ç»èç´æ¤æ®æ§å¼ä¾åææ­¢è¶¾åªæ¨çº¸å¿ææ·è³è´ç½®å¸å³å¶æºç§©ç¨è´¨ççæ»æ²»çªä¸­çå¿ éè¡·ç»ç§è¿éä»²ä¼èå¨å·æ´²è¯ç²¥è½´èå¸åç±å®æ¼éª¤ç æ ªèæ±çªè¯¸è¯éç«¹çç®æç©å±ä¸»èæ±å©èè´®é¸ç­"],["d740","è­",31,"è­§",4,"è­­",25],["d780","è®",24,"è®¬è®±è®»è¯è¯è¯ªè°è°ä½æ³¨ç¥é©»æçªæ½ä¸ç è½¬æ°èµç¯æ¡©åºè£å¦æå£®ç¶æ¤é¥è¿½èµå ç¼è°åææåæ¡ç¢èéåçç¼æµå¹å¨èµå§¿æ»æ·å­ç´«ä»ç±½æ»å­èªæ¸å­é¬æ£è¸ªå®ç»¼æ»çºµé¹èµ°å¥æç§è¶³åæç¥è¯é»ç»é»çºå´éæç½ªå°éµæ¨å·¦ä½æåä½ååº§"],["d840","è°¸",8,"è±è±è±è±è±è±è±è±",7,"è±è±è±è±è±",5,"è±£",6,"è±¬",6,"è±´è±µè±¶è±·è±»",6,"è²è²è²è²"],["d880","è²è²è²",6,"è²è²è²è²",20,"äºä¸åä¸å»¿åä¸äºä¸é¬²å­¬å©ä¸¨ç¦ºä¸¿åä¹å¤­ç»å®æ°åè¤é¦æ¯ç¾é¼ä¸¶äºé¼ä¹ä¹©äºèå­å¬åä»ååå£å¥å®é¥èµååµå¦å®å¾èµå¦å£åååå­å³å¿åååå¡åè¯å½åååååç½äº»ä»ä»ä»ä»¨ä»¡ä»«ä»ä¼ä»³ä¼¢ä½¤ä»µä¼¥ä¼§ä¼ä¼«ä½ä½§æ¸ä½ä½"],["d940","è²®",62],["d980","è³­",32,"ä½ä½ä¼²ä¼½ä½¶ä½´ä¾ä¾ä¾ä¾ä½¾ä½»ä¾ªä½¼ä¾¬ä¾ä¿¦ä¿¨ä¿ªä¿ä¿ä¿£ä¿ä¿ä¿ä¿¸å©åä¿³å¬åå®å­ä¿¾ååå¥å¨å¾ååååå¬å»å¥å§å©åºååå­å¬å¦å®ååä»æ°½ä½ä½¥ä¿é¾ æ±ç±´å®å·½é»é¦åå¤å¹åè¨åå«å¤åäº åäº³è¡®è¢¤äºµèè£ç¦å¬´è ç¾¸å«å±å½å¼"],["da40","è´",14,"è´ èµèµèµèµèµ¥èµ¨èµ©èµªèµ¬èµ®èµ¯èµ±èµ²èµ¸",8,"è¶è¶è¶è¶è¶è¶è¶",4,"è¶è¶è¶",9,"è¶ è¶¡"],["da80","è¶¢è¶¤",12,"è¶²è¶¶è¶·è¶¹è¶»è¶½è·è·è·è·è·è·è·è·è·è·è·è·è·ååå¢å¥è® è®¦è®§è®ªè®´è®µè®·è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯ è¯¤è¯¨è¯©è¯®è¯°è¯³è¯¶è¯¹è¯¼è¯¿è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è° è°¡è°¥è°§è°ªè°«è°®è°¯è°²è°³è°µè°¶å©åºéé¢é¡é±éªé½é¼ééééé§é¬é²é´éééé°ééééé¬é¡é´é³é¶éº"],["db40","è·è·è·è·è· è·¡è·¢è·¥è·¦è·§è·©è·­è·®è·°è·±è·²è·´è·¶è·¼è·¾",6,"è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸",7,"è¸ è¸¡è¸¤",4,"è¸«è¸­è¸°è¸²è¸³è¸´è¸¶è¸·è¸¸è¸»è¸¼è¸¾"],["db80","è¸¿è¹è¹è¹è¹",4,"è¹",5,"è¹",11,"è¹§è¹¨è¹ªè¹«è¹®è¹±é¸é°ééé¾ééééé¦é¢éééé«é¯é¾éé¢éé£é±é¯é¹ééåå¥å¢å¬å­å¾å¿ååå°åç®çå»´åµå¼é¬¯å¶å¼çå·¯åå©å¡å¡¾å¢¼å£å£å©å¬åªå³å¹å®å¯åå»åå©åå«åå¼å»å¨å­å¶å³å­å¤åå²åå§å´åå åååååå¸å´å¯å¸å¤å"],["dc40","è¹³è¹µè¹·",4,"è¹½è¹¾èºèºèºèºèºèº",6,"èºèºèºèº",6,"èºèº",11,"èº­èº®èº°èº±èº³",6,"èº»",7],["dc80","è»",10,"è»",21,"å å å½å­å å å å¡å  å¡¥å¡¬å¢å¢å¢å¢é¦¨é¼æ¿è¹è½è¿èèè¨èèèèèè«è¸è¾è°èèè£èè·è®èèèè©è´è¡èªèèèè¤è¡èè·è¤èèèè´èèèè»èèèèèèè èèèèèèèè¼è´è±èèè¯èèèèèèè è­èºè³è¦è¥"],["dd40","è»¥",62],["dd80","è¼¤",32,"è¨èè©è¬èªè­è®è°è¸è³è´è èªèèèè¼è¶è©è½è¸è»èèè¨èºè¼èèè¥èå èèèè½èèè¸èèèèèèè¸è¹èªèèè¦è°è¡èèèèè³èèèºèè¸è¼èè©è¶èèè±è­èèèè¦è½èèè¿èºè è¡è¹è´èè¥è£èçè¸è°è¹èèº"],["de40","è½",32,"è½ªè¾è¾è¾è¾è¾ è¾¡è¾¢è¾¤è¾¥è¾¦è¾§è¾ªè¾¬è¾­è¾®è¾¯è¾²è¾³è¾´è¾µè¾·è¾¸è¾ºè¾»è¾¼è¾¿è¿è¿è¿"],["de80","è¿",4,"è¿è¿è¿è¿è¿è¿ è¿¡è¿£è¿§è¿¬è¿¯è¿±è¿²è¿´è¿µè¿¶è¿ºè¿»è¿¼è¿¾è¿¿éééééééèè»è¿è¼èèè¨è¤èèºç¢èè²è»è¤è¨èèè¹è®èèè¹è·è°èèèè¿è§èè©èè¼å»¾å¼å¤¼å¥è·å¥å¥å¥åå°¢å°¥å°¬å°´ææªææ»ææææ®æ¢æ¶æ¹æææ­æ¶æ±æºææ´æ­æ¬ææ©æ®æ¼æ²æ¸æ æ¿ææææææ¾æææææ ææ¦æ¡æææ­æ"],["df40","ééé£é¤é¥é§",5,"é°",4,"é·é¹éºé½é¿ééééé",4,"ééééééé",5,"é¤é¦é§é©éªé«é¬é¯",4,"é¶",6,"é¾é"],["df80","ééééééé",4,"ééééééééé é¤é¥é§é¨é©é«é­é²é·é¼é½é¿éæºæ·æ¸ææºææææ¤æ¢ææ¥æ®å¼å¿çå¼åå±å½å©å¨å»åååååååååå¡ååå£å²ååå·å±å¤åååå¶å¦ååå­åå´åå§å¦ååå²å£åå»å¿ååååå©åªå¤ååååå§å å½åå³å¢å£ååå§åªå§ååµåå­ååå¿åå¼"],["e040","éééééééééééééééééé é£é¤é¥é©éªé¬é®é°é±é²é³éµé¶é·é¹éºé»é¼é¿éééé",19,"ééé"],["e080","ééé é¡é¤",10,"é°é²",6,"éº",8,"éå·ååµå¶å·å³å°ååååå±å¹åååå¾ååå»åå½å¾åååªå·åååå«å¬åå¦ååå¯å¥å²å³ååå¨åµå¤è¾ååååå¤å£å¾åå§å­åå¹åå¬åå¢åååååå¤å±å«å»å¼ååå¯åååå¡åµå«å¹å¿ååååå¸å¸å¸å¸å¸±å¸»å¸¼"],["e140","éééééééééééééé é¦é§é¨é«é­é³éºé»é¼é",4,"éééééé",6,"é",5,"é¤",5,"é«é¬é°é±é²é³é¶é·é¸é¹é»"],["e180","é¼",10,"éééé",9,"é",8,"å¸·å¹å¹å¹å¹å¹¡å²å±ºå²å²å²å²å²å²å²å²å²å²µå²¢å²½å²¬å²«å²±å²£å³å²·å³å³å³¤å³å³¥å´å´å´§å´¦å´®å´¤å´å´å´åµå´¾å´´å´½åµ¬åµåµ¯åµåµ«åµåµåµ©åµ´å¶å¶å¶è±³å¶·å·å½³å½·å¾å¾å¾å¾å¾å¾å¾å¾¨å¾­å¾µå¾¼è¡¢å½¡ç­ç°ç´ç·ç¸çççççç¨ç¯ç©ç²ç´ç·çç³ççº"],["e240","é¦",62],["e280","é¥",32,"ç»ççç¡ççççç¢ç¹ç¥ç¬ç¸ç±çççç ç¬ç¯ç¾èå¤¥é£§å¤¤å¤é¥£é¥§",5,"é¥´é¥·é¥½é¦é¦é¦é¦é¦é¦é¦é¦é¦é¦åºåºåºåºåº¥åº åº¹åºµåº¾åº³èµå»å»å»å»¨å»ªèºå¿å¿å¿å¿æå¿®æå¿¡å¿¤å¿¾ææå¿ªå¿­å¿¸ææµæ¦ææææ©æ«ææ¿æ¡æ¸æ¹æ»æºæ"],["e340","é",45,"éµ",16],["e380","é",7,"é",24,"æªæ½æææ­ææææææ¬æ»æ±æææææ´æ æ¦ææ£æ´æææ«ææµæ¬ææ§æ·ææµå¿é³é©é«é±é³éµé¶é¼é¾éééééééééééééééä¸¬ç¿ææ°µæ±æ±æ±æ²£æ²æ²æ²æ²æ±¨æ±©æ±´æ±¶æ²æ²©æ³æ³æ²­æ³·æ³¸æ³±æ³æ²²æ³ æ³æ³ºæ³«æ³®æ²±æ³æ³¯æ³¾"],["e440","é¨",5,"é¯",24,"é",31],["e480","é©",32,"æ´¹æ´§æ´æµæµæ´æ´æ´æ´æ´«æµæ´®æ´µæ´æµæµæµæ´³æ¶æµ¯æ¶æ¶ æµæ¶æ¶æµæµ æµ¼æµ£æ¸æ·æ·æ·æ¸æ¶¿æ· æ¸æ·¦æ·æ·æ¸æ¶«æ¸æ¶®æ¸«æ¹®æ¹æ¹«æº²æ¹æºæ¹æ¹æ¸²æ¸¥æ¹æ»æº±æºæ» æ¼­æ»¢æº¥æº§æº½æº»æº·æ»æº´æ»æºæ»æºæ½¢æ½æ½æ¼¤æ¼æ»¹æ¼¯æ¼¶æ½æ½´æ¼ªæ¼æ¼©æ¾æ¾æ¾æ½¸æ½²æ½¼æ½ºæ¿"],["e540","é",51,"é¿",10],["e580","é",31,"é«æ¿æ¾§æ¾¹æ¾¶æ¿æ¿¡æ¿®æ¿æ¿ æ¿¯çç£çç¹çµççå®å®å®å®å®¥å®¸ç¯éªæ´å¯¤å¯®è¤°å¯°è¹è¬è¾¶è¿è¿è¿¥è¿®è¿¤è¿©è¿¦è¿³è¿¨éééé¦éééé¡éµé¶é­é¯ééééé¨éé¢éæ¹é´é½ééééå½å½å½å½å°»å«å±å±å­±å±£å±¦ç¾¼å¼ªå¼©å¼­è´å¼¼é¬»å±®å¦å¦å¦å¦©å¦ªå¦£"],["e640","é¬",34,"é",27],["e680","é¬",29,"éééå¦å§å¦«å¦å¦¤å§å¦²å¦¯å§å¦¾å¨å¨å§å¨å§£å§å§¹å¨å¨å¨²å¨´å¨å¨£å¨å©å©§å©å©å¨¼å©¢å©µè¬åªªåªå©·å©ºåª¾å««åª²å«å«åª¸å« å«£å«±å«å«¦å«å«å¬å¬å¬å¬²å¬·å­å°å°å­å­¥å­³å­å­å­¢é©µé©·é©¸é©ºé©¿é©½éªéªéªéªéªéªéªéªéªéªéªéªéªéªéª éª¢éª£éª¥éª§çºçº¡çº£çº¥çº¨çº©"],["e740","é",7,"é",54],["e780","é",32,"çº­çº°çº¾ç»ç»ç»ç»ç»ç»ç»ç»ç»ç»ç» ç»¡ç»¨ç»«ç»®ç»¯ç»±ç»²ç¼ç»¶ç»ºç»»ç»¾ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼¡",6,"ç¼ªç¼«ç¼¬ç¼­ç¼¯",4,"ç¼µå¹ºç¿å·ç¾éççç®ç¢ççççç·ç³çççç¥çé¡¼çç©ç§ççºç²ççªçç¦ç¥ç¨ç°ç®ç¬"],["e840","é¯",14,"é¿",43,"é¬é­é®é¯"],["e880","é°",20,"ééééééééé¦é»éé çççççççç·ç­ç¾çççççççç¨ç©çç§ççºéªé«é¬æææææ©æ¥ææªæ³ææ§æµæ¨ææ­ææ·æ¼æ°æ ææ æ©æ°æ ææµææ³ææ ææ¸æ¢æ ææ½æ ²æ ³æ¡ æ¡¡æ¡æ¡¢æ¡æ¡¤æ¢æ æ¡æ¡¦æ¡æ¡§æ¡æ ¾æ¡æ¡æ ©æ¢µæ¢æ¡´æ¡·æ¢æ¡«æ£æ¥®æ£¼æ¤æ¤ æ£¹"],["e940","é§é³é½éééééé é®é´éµé·",7,"é",42],["e980","é«",32,"æ¤¤æ£°æ¤æ¤æ¥æ££æ¤æ¥±æ¤¹æ¥ æ¥æ¥æ¦æ¥«æ¦æ¦æ¥¸æ¤´æ§æ¦æ¦æ§æ¦æ¥¦æ¥£æ¥¹æ¦æ¦§æ¦»æ¦«æ¦­æ§æ¦±æ§æ§æ§æ¦æ§ æ¦æ§¿æ¨¯æ§­æ¨æ¨æ©¥æ§²æ©æ¨¾æª æ©æ©æ¨µæªæ©¹æ¨½æ¨¨æ©æ©¼æªæªæª©æªæª«ç·çæ®æ®æ®æ®æ®æ®æ®æ®æ®æ®¡æ®ªè½«è½­è½±è½²è½³è½µè½¶è½¸è½·è½¹è½ºè½¼è½¾è¾è¾è¾è¾è¾"],["ea40","é",27,"é¬é¿éééééé é£",6,"é«é¬é­é¯é°é·é¸é¹éºé¾éééééééééé"],["ea80","ééééééé é£é¥é¦é«é­",4,"é³é¸",12,"éééè¾è¾è¾è¾è¾è»æææææ¢æ¡æ¥æ¤æ¬è§ç¯ç´ç¿çççæ´æ®æ¯æ°æææ²æææçæ·ææ´æ±æ¶æµèææææææ¡ææ·æææ§ææ¾æææ¦æ©è´²è´³è´¶è´»è´½èµèµèµèµèµèµèµèµèµè§è§è§è§è§è§è§è§ç®ççç¦ç¯ç¾ç¿çççççææ²æ°"],["eb40","éééééééééé",9,"é¨",7,"é±é²é´éµé·é¸éºé»é¿éééééééééé",9,"é¡",6,"é«"],["eb80","é¬é­é®é°é±é²é´éµé¸éºé»é¼é½é¿éééééééééééé",4,"ééé æ¿æèæ¯ªæ¯³æ¯½æ¯µæ¯¹æ°æ°æ°æ°æ°æ°æ°æ°æ°¡æ°©æ°¤æ°ªæ°²æµææ«çççç°è¢åèèèè¼æè½è±è«è­è´è·è§è¨è©èªèèèèèèæèè«è±è´è­èèè²è¼æèè±è¶èè¬èè²èèèè´èèè±è è©è¼è½è­è§å¡åªµèèèæ»è£èªèæ¦èè»"],["ec40","é¡",8,"é«é¬é®é¯é±é³",4,"éºé»é¼é½é¿",18,"ééééééééé£é¤é¦é§é¨éª",7],["ec80","é²éµé·",4,"é½",7,"é",4,"ééééééééé",4,"èè¦æ¬¤æ¬·æ¬¹æ­æ­æ­é£é£é£é£é£é£æ®³å½æ¯è§³æé½ææ¼æææææææççççç»çç·ç«ç±ç¨ççççç¯ç±ç³çç¨çç²çç¸çºçç³çµç¨ç ç çç§ç¹çç¨ç¬çç¦ç¹æ¾æ½æææç¤»ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥¢ç¥ç¥ ç¥¯ç¥§ç¥ºç¦ç¦ç¦ç¦§ç¦³å¿å¿"],["ed40","ééé¡é¢é¤",6,"é¬é®é°é±é³éµ",46],["ed80","é¤é¥é¨é®",4,"é´é·",23,"æ¼æææ§æææ£æ«ææææ©ææææèè¿æ²æ³¶æ·¼ç¶ç¸ç ç ç ç ç æ«ç ­ç ç ç ¹ç ºç »ç ç ¼ç ¥ç ¬ç £ç ©ç¡ç¡­ç¡ç¡ç ¦ç¡ç¡ç¡ç¡ªç¢ç¢ç¢ç¢ç¢ç¢¡ç¢£ç¢²ç¢¹ç¢¥ç£ç£ç£ç£¬ç£²ç¤ç£´ç¤ç¤¤ç¤ç¤´é¾é»¹é»»é»¼ç±ççç¹çççç¢çç­ç¦çµç¸çççççç¨"],["ee40","é ",62],["ee80","é¡",32,"ç¢ç¥ç¿çç½ççççç ç°çµç½çºçççççç²ç¹çç½ç½¡ç½è©ç½¨ç½´ç½±ç½¹ç¾ç½¾çç¥è ²éééééééééééééééé£é¤é«éªé­é¬é¯é°é²é´é¶",4,"é¼é½é¿éé",6,"éééééééééééé é¢é¤é¥é§é¨éª"],["ef40","é¡¯",5,"é¢é¢é¢é¢é¢é¢£é¢¨",37,"é£é£é£é£é£é£é£é£é£ ",4],["ef80","é£¥é£¦é£©",30,"é©é«é®é¯é³é´éµé·é¹é¼é½é¿éééééééééé",4,"éééééé¢éªé«é©é¬é±é²é´é¶é·é¸é¼é¾é¿ééµééééééééééééééééééé¡é¢é¤",8,"é¯é±é²é³éºç§ç¬éç§ç§­ç§£ç§«ç¨åµç¨ç¨ç¨ç¨"],["f040","é¤",4,"é¤é¤é¤",28,"é¤¯",26],["f080","é¥",9,"é¥",12,"é¥¤é¥¦é¥³é¥¸é¥¹é¥»é¥¾é¦é¦é¦ç¨¹ç¨·ç©é»é¦¥ç©°ççççç¤çç ç¬é¸ é¸¢é¸¨",4,"é¸²é¸±é¸¶é¸¸é¸·é¸¹é¸ºé¸¾é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹£é¹¦",6,"é¹±é¹­é¹³çççç çç¬ç£ç³ç´ç¸çç±ç°ççççç£ç¨ç¦ç¤ç«ç§çç±ç¼ç¿ççççççç¥ççç"],["f140","é¦é¦é¦",10,"é¦¦é¦§é¦©",47],["f180","é§",32,"çç¼ç¢ç çç­ç°ç¿çµçç¾ç³çççççç«ç¯ç¿ç«¦ç©¸ç©¹çªçªçªçªçª¦çª çª¬çª¨çª­çª³è¡¤è¡©è¡²è¡½è¡¿è¢è¢¢è£è¢·è¢¼è£è£¢è£è££è£¥è£±è¤è£¼è£¨è£¾è£°è¤¡è¤è¤è¤è¤è¤´è¤«è¤¶è¥è¥¦è¥»çè¥ç²ç´çèèèèè è¢è¥è¦è§è©è¨è±èèµèèèèè©è±è¦é¡¸é¢é¢"],["f240","é§º",62],["f280","é¨¹",32,"é¢é¢é¢é¢é¢é¢é¢é¢é¢é¢¡é¢¢é¢¥é¢¦èèè¬è®è¿èºè¼è»è¨èèè¬èè§è£èªèè©è¶èèµèè°èºè±è¯èèè´è©è±è²è­è³èèèè´èèèèèè¸èèèèè£è»èè¥è®èè¾èè´è±è©è·è¿èè¢è½è¾è»è è°èè®èèè£è¼è¤èè¥èè¯è¨è"],["f340","é©",17,"é©²éªéªéªéªéªéªéªéª¦éª©",6,"éª²éª³éª´éªµéª¹éª»éª½éª¾éª¿é«é«é«",4,"é«é«é«é«é«é«é«é«é«é«é«é«é«"],["f380","é«é«é« é«¢é«£é«¤é«¥é«§é«¨é«©é«ªé«¬é«®é«°",8,"é«ºé«¼",6,"é¬é¬é¬èèèè­èèè«è¥è¬èµè³èèè½èèèèèªè è®è è è¾è è è ¡è ¹è ¼ç¼¶ç½ç½ç½èç«ºç«½ç¬ç¬ç¬ç¬ç¬ç¬«ç¬ç­ç¬¸ç¬ªç¬ç¬®ç¬±ç¬ ç¬¥ç¬¤ç¬³ç¬¾ç¬ç­ç­ç­ç­µç­ç­ç­ ç­®ç­»ç­¢ç­²ç­±ç®ç®¦ç®§ç®¸ç®¬ç®ç®¨ç®ç®ªç®ç®¢ç®«ç®´ç¯ç¯ç¯ç¯ç¯ç¯¥ç¯¦ç¯ªç°ç¯¾ç¯¼ç°ç°ç°"],["f440","é¬é¬",5,"é¬é¬é¬é¬",10,"é¬ é¬¡é¬¢é¬¤",10,"é¬°é¬±é¬³",7,"é¬½é¬¾é¬¿é­é­é­é­é­é­é­é­é­é­",5],["f480","é­",32,"ç°ç°ªç°¦ç°¸ç±ç±è¾èèèè¬è¡è¡è¢è£è­è¯è¨è«è¸è»è³è´è¾èèèèèèè¨è¡¾è¢è¢è£è£è¥ç¾ç¾ç¾§ç¾¯ç¾°ç¾²ç±¼æç²ç²ç²ç²ç²¢ç²²ç²¼ç²½ç³ç³ç³ç³ç³ç³ç³ç³¨è®æ¨ç¾¿ç¿ç¿ç¿¥ç¿¡ç¿¦ç¿©ç¿®ç¿³ç³¸çµ·ç¶¦ç¶®ç¹çºéº¸éº´èµ³è¶è¶è¶è¶±èµ§èµ­è±è±ééééé¤"],["f540","é­¼",62],["f580","é®»",32,"é¢é¡é°é©é¯é½é¾é²é´é¹éééééé¢é£éªé­é®é¯éµé´éºè±é¹¾è¶¸è·«è¸è¹è¹©è¶µè¶¿è¶¼è¶ºè·è·è·è·è·è·è·è·è·è·¬è··è·¸è·£è·¹è·»è·¤è¸è·½è¸è¸è¸è¸¬è¸®è¸£è¸¯è¸ºè¹è¸¹è¸µè¸½è¸±è¹è¹è¹è¹è¹è¹è¹°è¹¶è¹¼è¹¯è¹´èºèºèºèºèºèºè±¸è²è²è²è²è²æè§è§è§è§"],["f640","é¯",62],["f680","é°",32,"è§¥è§«è§¯è¨¾è¬¦éé©é³é¯ééééééªé­é°é¾é¾é¾é¾",5,"é¾é»¾é¼é¼é¹é¼é½ééç¿é éé®éé¾éªééé¾é«é±¿é²é²é²é²é²ç¨£é²é²é²é²é²é²é²é²é²é²",5,"é²¥",4,"é²«é²­é²®é²°",7,"é²ºé²»é²¼é²½é³é³é³é³é³é³"],["f740","é°¼",62],["f780","é±»é±½é±¾é²é²é²é²é²é²é²é²é²é²é²é²é²é²ªé²¬é²¯é²¹é²¾",4,"é³é³é³é³é³é³é³ é³¡é³",4,"é³é³é³é³é³é³é³é³é³é³¢é¼ééééé¯é«é£é²é´éª±éª°éª·é¹éª¶éªºéª¼é«é«é«é«é«é«é«é­é­é­é­é­é­é­é£¨é¤é¤®é¥é¥é«é«¡é«¦é«¯é««é«»é«­é«¹é¬é¬é¬é¬é¬£éº½éº¾ç¸»éºéºéºéºéºééºéºé»é»é»é» é»é»¢é»©é»§é»¥é»ªé»¯é¼¢é¼¬é¼¯é¼¹é¼·é¼½é¼¾é½"],["f840","é³£",62],["f880","é´¢",32],["f940","éµ",62],["f980","é¶",32],["fa40","é¶£",62],["fa80","é·¢",32],["fb40","é¸",27,"é¸¤é¸§é¸®é¸°é¸´é¸»é¸¼é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹ é¹¡é¹¢é¹¥é¹®é¹¯é¹²é¹´",9,"éº"],["fb80","éºéºéºéºéºéºéºéº",5,"éº",8,"éºéº ",5,"éº§éº¨éº©éºª"],["fc40","éº«",8,"éºµéº¶éº·éº¹éººéº¼éº¿",4,"é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»¡é»£é»¤é»¦é»¨é»«é»¬é»­é»®é»°",8,"é»ºé»½é»¿",6],["fc80","é¼",4,"é¼é¼é¼é¼é¼é¼é¼é¼é¼",5,"é¼¡é¼£",8,"é¼­é¼®é¼°é¼±"],["fd40","é¼²",4,"é¼¸é¼ºé¼¼é¼¿",4,"é½",10,"é½",38],["fd80","é½¹",5,"é¾é¾é¾",11,"é¾é¾é¾é¾¡",4,"ï¤¬ï¥¹ï¦ï§§ï§±"],["fe40","ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ ï¨¡ï¨£ï¨¤ï¨§ï¨¨ï¨©"]]},function(t,e,n){var r=n(113);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e,n){var r=n(73),i=n(56),o=n(35),a=n(116),s=n(36),u=n(173),l=Object.getOwnPropertyDescriptor;e.f=n(17)?l:function(t,e){if(t=o(t),e=a(e,!0),u)try{return l(t,e)}catch(t){}if(s(t,e))return i(!r.f.call(t,e),t[e])}},function(t,e,n){var r=n(19);t.exports=function(t,e){if(!r(t))return t;var n,i;if(e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;if("function"==typeof(n=t.valueOf)&&!r(i=n.call(t)))return i;if(!e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var r=n(6),i=n(2),o=n(37);t.exports=function(t,e){var n=(i.Object||{})[t]||Object[t],a={};a[t]=e(n),r(r.S+r.F*o(function(){n(1)}),"Object",a)}},function(t,e,n){t.exports={default:n(331),__esModule:!0}},function(t,e,n){"use strict";var r=n(74),i=n(6),o=n(177),a=n(27),s=n(48),u=n(334),l=n(78),c=n(337),f=n(12)("iterator"),h=!([].keys&&"next"in[].keys()),d=function(){return this};t.exports=function(t,e,n,p,g,v,y){u(n,e,p);var b,m,w,x=function(t){if(!h&&t in C)return C[t];switch(t){case"keys":case"values":return function(){return new n(this,t)}}return function(){return new n(this,t)}},_=e+" Iterator",k="values"==g,S=!1,C=t.prototype,A=C[f]||C["@@iterator"]||g&&C[g],P=A||x(g),E=g?k?x("entries"):P:void 0,O="Array"==e?C.entries||A:A;if(O&&(w=c(O.call(new t)))!==Object.prototype&&w.next&&(l(w,_,!0),r||"function"==typeof w[f]||a(w,f,d)),k&&A&&"values"!==A.name&&(S=!0,P=function(){return A.call(this)}),r&&!y||!h&&!S&&C[f]||a(C,f,P),s[e]=P,s[_]=d,g)if(b={values:k?P:x("values"),keys:v?P:x("keys"),entries:E},y)for(m in b)m in C||o(C,m,b[m]);else i(i.P+i.F*(h||S),e,b);return b}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e,n){var r=n(122)("keys"),i=n(77);t.exports=function(t){return r[t]||(r[t]=i(t))}},function(t,e,n){var r=n(2),i=n(20),o=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(74)?"pure":"global",copyright:"Â© 2019 Denis Pushkarev (zloirock.ru)"})},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,n){var r=n(125),i=n(12)("iterator"),o=n(48);t.exports=n(2).getIteratorMethod=function(t){if(void 0!=t)return t[i]||t["@@iterator"]||o[r(t)]}},function(t,e,n){var r=n(113),i=n(12)("toStringTag"),o="Arguments"==r(function(){return arguments}()),a=function(t,e){try{return t[e]}catch(t){}};t.exports=function(t){var e,n,s;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=a(e=Object(t),i))?n:o?r(e):"Object"==(s=r(e))&&"function"==typeof e.callee?"Arguments":s}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var i=n(181),o=r(i),a=n(344),s=r(a),u="function"==typeof s.default&&"symbol"==typeof o.default?function(t){return typeof t}:function(t){return t&&"function"==typeof s.default&&t.constructor===s.default&&t!==s.default.prototype?"symbol":typeof t};e.default="function"==typeof s.default&&"symbol"===u(o.default)?function(t){return void 0===t?"undefined":u(t)}:function(t){return t&&"function"==typeof s.default&&t.constructor===s.default&&t!==s.default.prototype?"symbol":void 0===t?"undefined":u(t)}},function(t,e,n){e.f=n(12)},function(t,e,n){var r=n(20),i=n(2),o=n(74),a=n(127),s=n(18).f;t.exports=function(t){var e=i.Symbol||(i.Symbol=o?{}:r.Symbol||{});"_"==t.charAt(0)||t in e||s(e,t,{value:a.f(t)})}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e){},function(t,e,n){t.exports={default:n(354),__esModule:!0}},function(t,e,n){var r=n(19);t.exports=function(t,e){if(!r(t)||t._t!==e)throw TypeError("Incompatible receiver, "+e+" required!");return t}},function(t,e,n){var r,i;i=n(195),r=function(){function t(t){var e,n,r;e="function"==typeof t.readUInt32BE&&"function"==typeof t.slice,e||t instanceof Uint8Array?(e?(this.highStart=t.readUInt32BE(0),this.errorValue=t.readUInt32BE(4),n=t.readUInt32BE(8),t=t.slice(12)):(r=new DataView(t.buffer),this.highStart=r.getUint32(0),this.errorValue=r.getUint32(4),n=r.getUint32(8),t=t.subarray(12)),t=i(t,new Uint8Array(n)),t=i(t,new Uint8Array(n)),this.data=new Uint32Array(t.buffer)):(this.data=t.data,this.highStart=t.highStart,this.errorValue=t.errorValue)}var e,n,r,o,a,s,u,l,c,f,h,d,p,g,v,y;return d=11,g=5,p=d-g,h=65536>>d,a=1<<p,u=a-1,l=2,e=1<<g,r=e-1,f=65536>>g,c=1024>>g,s=f+c,y=s,v=32,o=y+v,n=1<<l,t.prototype.get=function(t){var e;return t<0||t>1114111?this.errorValue:t<55296||t>56319&&t<=65535?(e=(this.data[t>>g]<<l)+(t&r),this.data[e]):t<=65535?(e=(this.data[f+(t-55296>>g)]<<l)+(t&r),this.data[e]):t<this.highStart?(e=this.data[o-h+(t>>d)],e=this.data[e+(t>>g&u)],e=(e<<l)+(t&r),this.data[e]):this.data[this.data.length-n]},t}(),t.exports=r},function(t,e,n){"use strict";function r(t){this.fontProvider=t}function i(t,e){var n=[];if(t=t.replace(/\t/g,"    "),e)return n.push({text:t}),n;for(var r,i=new v(t),o=0;r=i.nextBreak();){var a=t.slice(o,r.position);r.required||a.match(/\r?\n$|\r$/)?(a=a.replace(/\r?\n$|\r$/,""),n.push({text:a,lineEnd:!0})):n.push({text:a}),o=r.position}return n}function o(t,e){e=e||{},t=t||{};for(var n in t)"text"!=n&&t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function a(t,e){function n(t){return t.reduce(function(t,e){var r=p(e.text)?n(e.text):e,i=[].concat(r).some(Array.isArray);return t.concat(i?n(r):r)},[])}function r(t,e,n){if(g(e[t]))return null;if(e[t].lineEnd)return null;var r=e[t].text;if(n){var o=i(s(r),!1);if(g(o[o.length-1]))return null;r=o[o.length-1].text}return r}var a=[];p(t)||(t=[t]),t=n(t);for(var l=null,c=0,f=t.length;c<f;c++){var h,v=t[c],y=null,b=u(v||{},e,"noWrap",!1);if(d(v)?(v._textRef&&v._textRef._textNodeRef.text&&(v.text=v._textRef._textNodeRef.text),h=i(s(v.text),b),y=o(v)):h=i(s(v),b),l&&h.length){1===i(s(l+r(0,h,b)),!1).length&&(a[a.length-1].noNewLine=!0)}for(var m=0,w=h.length;m<w;m++){var x={text:h[m].text};h[m].lineEnd&&(x.lineEnd=!0),o(y,x),a.push(x)}l=null,c+1<f&&(l=r(h.length-1,h,b))}return a}function s(t){return void 0===t||null===t?"":h(t)?t.toString():f(t)?t:t.toString()}function u(t,e,n,r){var i;return void 0!==t[n]&&null!==t[n]?t[n]:e?(e.auto(t,function(){i=e.getProperty(n)}),null!==i&&void 0!==i?i:r):r}function l(t,e,n){var r=a(e,n);if(r.length){var i=u(r[0],n,"leadingIndent",0);i&&(r[0].leadingCut=-i,r[0].leadingIndent=i)}return r.forEach(function(e){var r=u(e,n,"font","Roboto"),i=u(e,n,"fontSize",12),o=u(e,n,"fontFeatures",null),a=u(e,n,"bold",!1),s=u(e,n,"italics",!1),l=u(e,n,"color","black"),f=u(e,n,"decoration",null),h=u(e,n,"decorationColor",null),d=u(e,n,"decorationStyle",null),p=u(e,n,"background",null),g=u(e,n,"lineHeight",1),v=u(e,n,"characterSpacing",0),m=u(e,n,"link",null),w=u(e,n,"linkToPage",null),x=u(e,n,"noWrap",null),_=u(e,n,"preserveLeadingSpaces",!1),k=u(e,n,"preserveTrailingSpaces",!1),S=u(e,n,"opacity",1),C=t.provideFont(r,a,s);e.width=c(e.text,C,i,v,o),e.height=C.lineHeight(i)*g,e.leadingCut||(e.leadingCut=0);var A;!_&&(A=e.text.match(y))&&(e.leadingCut+=c(A[0],C,i,v,o));var P;!k&&(P=e.text.match(b))?e.trailingCut=c(P[0],C,i,v,o):e.trailingCut=0,e.alignment=u(e,n,"alignment","left"),e.font=C,e.fontSize=i,e.fontFeatures=o,e.characterSpacing=v,e.color=l,e.decoration=f,e.decorationColor=h,e.decorationStyle=d,e.background=p,e.link=m,e.linkToPage=w,e.noWrap=x,e.opacity=S}),r}function c(t,e,n,r,i){return e.widthOfString(t,n,i)+(r||0)*(t.length-1)}var f=n(0).isString,h=n(0).isNumber,d=n(0).isObject,p=n(0).isArray,g=n(0).isUndefined,v=n(200),y=/^(\s)+/g,b=/(\s)+$/g;r.prototype.buildInlines=function(t,e){function n(t){return Math.max(0,t.width-t.leadingCut-t.trailingCut)}var r,i=l(this.fontProvider,t,e),o=0,a=0;return i.forEach(function(t){o=Math.max(o,t.width-t.leadingCut-t.trailingCut),r||(r={width:0,leadingCut:t.leadingCut,trailingCut:0}),r.width+=t.width,r.trailingCut=t.trailingCut,a=Math.max(a,n(r)),t.lineEnd&&(r=null)}),u({},e,"noWrap",!1)&&(o=a),{items:i,minWidth:o,maxWidth:a}},r.prototype.sizeOfString=function(t,e){t=t?t.toString().replace(/\t/g,"    "):"";var n=u({},e,"font","Roboto"),r=u({},e,"fontSize",12),i=u({},e,"fontFeatures",null),o=u({},e,"bold",!1),a=u({},e,"italics",!1),s=u({},e,"lineHeight",1),l=u({},e,"characterSpacing",0),f=this.fontProvider.provideFont(n,o,a);return{width:c(t,f,r,l,i),height:f.lineHeight(r)*s,fontSize:r,lineHeight:s,ascender:f.ascender/1e3*r,descender:f.descender/1e3*r}},r.prototype.widthOfString=function(t,e,n,r,i){return c(t,e,n,r,i)},t.exports=r},function(t,e,n){"use strict";function r(t,e){var n=[],r=0,a=0,u=[],l=0,c=0,f=[],h=e;t.forEach(function(t){i(t)?(n.push(t),r+=t._minWidth,a+=t._maxWidth):o(t)?(u.push(t),l=Math.max(l,t._minWidth),c=Math.max(c,t._maxWidth)):f.push(t)}),f.forEach(function(t){s(t.width)&&/\d+%/.test(t.width)&&(t.width=parseFloat(t.width)*h/100),t.width<t._minWidth&&t.elasticWidth?t._calcWidth=t._minWidth:t._calcWidth=t.width,e-=t._calcWidth});var d=r+l*u.length,p=a+c*u.length;if(d>=e)n.forEach(function(t){t._calcWidth=t._minWidth}),u.forEach(function(t){t._calcWidth=l});else{if(p<e)n.forEach(function(t){t._calcWidth=t._maxWidth,e-=t._calcWidth});else{var g=e-d,v=p-d;n.forEach(function(t){var n=t._maxWidth-t._minWidth;t._calcWidth=t._minWidth+n*g/v,e-=t._calcWidth})}if(u.length>0){var y=e/u.length;u.forEach(function(t){t._calcWidth=y})}}}function i(t){return"auto"===t.width}function o(t){return null===t.width||void 0===t.width||"*"===t.width||"star"===t.width}function a(t){for(var e={min:0,max:0},n={min:0,max:0},r=0,a=0,s=t.length;a<s;a++){var u=t[a];o(u)?(n.min=Math.max(n.min,u._minWidth),n.max=Math.max(n.max,u._maxWidth),r++):i(u)?(e.min+=u._minWidth,e.max+=u._maxWidth):(e.min+=void 0!==u.width&&u.width||u._minWidth,e.max+=void 0!==u.width&&u.width||u._maxWidth)}return r&&(e.min+=r*n.min,e.max+=r*n.max),e}var s=n(0).isString;t.exports={buildColumnWidths:r,measureMinMax:a,isAutoColumn:i,isStarColumn:o}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){t.exports=!n(11)&&!n(14)(function(){return 7!=Object.defineProperty(n(138)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(13),i=n(8).document,o=r(i)&&r(i.createElement);t.exports=function(t){return o?i.createElement(t):{}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e,n){var r=n(24),i=n(41),o=n(82)(!1),a=n(83)("IE_PROTO");t.exports=function(t,e){var n,s=i(t),u=0,l=[];for(n in s)n!=a&&r(s,n)&&l.push(n);for(;e.length>u;)r(s,n=e[u++])&&(~o(l,n)||l.push(n));return l}},function(t,e,n){var r=n(7),i=n(14),o=n(42),a=/"/g,s=function(t,e,n,r){var i=String(o(t)),s="<"+e;return""!==n&&(s+=" "+n+'="'+String(r).replace(a,"&quot;")+'"'),s+">"+i+"</"+e+">"};t.exports=function(t,e){var n={};n[t]=e(s),r(r.P+r.F*i(function(){var e=""[t]('"');return e!==e.toLowerCase()||e.split('"').length>3}),"String",n)}},function(t,e,n){for(var r,i=n(8),o=n(16),a=n(29),s=a("typed_array"),u=a("view"),l=!(!i.ArrayBuffer||!i.DataView),c=l,f=0,h="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");f<9;)(r=i[h[f++]])?(o(r.prototype,s,!0),o(r.prototype,u,!0)):c=!1;t.exports={ABV:l,CONSTR:c,TYPED:s,VIEW:u}},function(t,e,n){var r=n(31),i=n(15);t.exports=function(t){if(void 0===t)return 0;var e=r(t),n=i(e);if(e!==n)throw RangeError("Wrong length!");return n}},function(t,e,n){var r=n(24),i=n(25),o=n(83)("IE_PROTO"),a=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=i(t),r(t,o)?t[o]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},function(t,e,n){var r=n(62);t.exports=Array.isArray||function(t){return"Array"==r(t)}},function(t,e,n){var r=n(10),i=n(139),o=n(4)("species");t.exports=function(t,e){var n,a=r(t).constructor;return void 0===a||void 0==(n=r(a)[o])?e:i(n)}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){"use strict";var r=n(8),i=n(9),o=n(11),a=n(4)("species");t.exports=function(t){var e=r[t];o&&e&&!e[a]&&i.f(e,a,{configurable:!0,get:function(){return this}})}},function(t,e,n){"use strict";var r=n(150),i=n(10),o=n(146),a=n(95),s=n(15),u=n(97),l=n(99),c=n(14),f=Math.min,h=[].push,d="length",p=!c(function(){RegExp(4294967295,"y")});n(98)("split",2,function(t,e,n,c){var g;return g="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[d]||2!="ab".split(/(?:ab)*/)[d]||4!=".".split(/(.?)(.?)/)[d]||".".split(/()()/)[d]>1||"".split(/.?/)[d]?function(t,e){var i=String(this);if(void 0===t&&0===e)return[];if(!r(t))return n.call(i,t,e);for(var o,a,s,u=[],c=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),f=0,p=void 0===e?4294967295:e>>>0,g=new RegExp(t.source,c+"g");(o=l.call(g,i))&&!((a=g.lastIndex)>f&&(u.push(i.slice(f,o.index)),o[d]>1&&o.index<i[d]&&h.apply(u,o.slice(1)),s=o[0][d],f=a,u[d]>=p));)g.lastIndex===o.index&&g.lastIndex++;return f===i[d]?!s&&g.test("")||u.push(""):u.push(i.slice(f)),u[d]>p?u.slice(0,p):u}:"0".split(void 0,0)[d]?function(t,e){return void 0===t&&0===e?[]:n.call(this,t,e)}:n,[function(n,r){var i=t(this),o=void 0==n?void 0:n[e];return void 0!==o?o.call(n,i,r):g.call(String(i),n,r)},function(t,e){var r=c(g,t,this,e,g!==n);if(r.done)return r.value;var l=i(t),h=String(this),d=o(l,RegExp),v=l.unicode,y=(l.ignoreCase?"i":"")+(l.multiline?"m":"")+(l.unicode?"u":"")+(p?"y":"g"),b=new d(p?l:"^(?:"+l.source+")",y),m=void 0===e?4294967295:e>>>0;if(0===m)return[];if(0===h.length)return null===u(b,h)?[h]:[];for(var w=0,x=0,_=[];x<h.length;){b.lastIndex=p?x:0;var k,S=u(b,p?h:h.slice(x));if(null===S||(k=f(s(b.lastIndex+(p?0:x)),h.length))===w)x=a(h,x,v);else{if(_.push(h.slice(w,x)),_.length===m)return _;for(var C=1;C<=S.length-1;C++)if(_.push(S[C]),_.length===m)return _;x=w=k}}return _.push(h.slice(w)),_}]})},function(t,e,n){var r=n(13),i=n(62),o=n(4)("match");t.exports=function(t){var e;return r(t)&&(void 0!==(e=t[o])?!!e:"RegExp"==i(t))}},function(t,e,n){"use strict";var r=n(96)(!0);n(92)(String,"String",function(t){this._t=String(t),this._i=0},function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})})},function(t,e,n){var r=n(10);t.exports=function(t,e,n,i){try{return i?e(r(n)[0],n[1]):e(n)}catch(e){var o=t.return;throw void 0!==o&&r(o.call(t)),e}}},function(t,e,n){for(var r=n(91),i=n(52),o=n(23),a=n(8),s=n(16),u=n(43),l=n(4),c=l("iterator"),f=l("toStringTag"),h=u.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},p=i(d),g=0;g<p.length;g++){var v,y=p[g],b=d[y],m=a[y],w=m&&m.prototype;if(w&&(w[c]||s(w,c,h),w[f]||s(w,f,y),u[y]=h,b))for(v in r)w[v]||o(w,v,r[v],!0)}},function(t,e,n){var r=n(13),i=n(10),o=function(t,e){if(i(t),!r(e)&&null!==e)throw TypeError(e+": can't set as prototype!")};t.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(t,e,r){try{r=n(30)(Function.call,n(94).f(Object.prototype,"__proto__").set,2),r(t,[]),e=!(t instanceof Array)}catch(t){e=!0}return function(t,n){return o(t,n),e?t.__proto__=n:r(t,n),t}}({},!1):void 0),check:o}},function(t,e,n){var r=n(8),i=n(51),o=n(40),a=n(156),s=n(9).f;t.exports=function(t){var e=i.Symbol||(i.Symbol=o?{}:r.Symbol||{});"_"==t.charAt(0)||t in e||s(e,t,{value:a.f(t)})}},function(t,e,n){e.f=n(4)},function(t,e,n){"use strict";(function(t){function r(t,e,n){function r(){for(var e;null!==(e=t.read());)a.push(e),s+=e.length;t.once("readable",r)}function i(e){t.removeListener("end",o),t.removeListener("readable",r),n(e)}function o(){var e,r=null;s>=x?r=new RangeError(_):e=v.concat(a,s),a=[],t.close(),n(r,e)}var a=[],s=0;t.on("error",i),t.on("end",o),t.end(e),r()}function i(t,e){if("string"==typeof e&&(e=v.from(e)),!v.isBuffer(e))throw new TypeError("Not a string or buffer");var n=t._finishFlushFlag;return t._processChunk(e,n)}function o(t){if(!(this instanceof o))return new o(t);d.call(this,t,b.DEFLATE)}function a(t){if(!(this instanceof a))return new a(t);d.call(this,t,b.INFLATE)}function s(t){if(!(this instanceof s))return new s(t);d.call(this,t,b.GZIP)}function u(t){if(!(this instanceof u))return new u(t);d.call(this,t,b.GUNZIP)}function l(t){if(!(this instanceof l))return new l(t);d.call(this,t,b.DEFLATERAW)}function c(t){if(!(this instanceof c))return new c(t);d.call(this,t,b.INFLATERAW)}function f(t){if(!(this instanceof f))return new f(t);d.call(this,t,b.UNZIP)}function h(t){return t===b.Z_NO_FLUSH||t===b.Z_PARTIAL_FLUSH||t===b.Z_SYNC_FLUSH||t===b.Z_FULL_FLUSH||t===b.Z_FINISH||t===b.Z_BLOCK}function d(t,n){var r=this;if(this._opts=t=t||{},this._chunkSize=t.chunkSize||e.Z_DEFAULT_CHUNK,y.call(this,t),t.flush&&!h(t.flush))throw new Error("Invalid flush flag: "+t.flush);if(t.finishFlush&&!h(t.finishFlush))throw new Error("Invalid flush flag: "+t.finishFlush);if(this._flushFlag=t.flush||b.Z_NO_FLUSH,this._finishFlushFlag=void 0!==t.finishFlush?t.finishFlush:b.Z_FINISH,t.chunkSize&&(t.chunkSize<e.Z_MIN_CHUNK||t.chunkSize>e.Z_MAX_CHUNK))throw new Error("Invalid chunk size: "+t.chunkSize);if(t.windowBits&&(t.windowBits<e.Z_MIN_WINDOWBITS||t.windowBits>e.Z_MAX_WINDOWBITS))throw new Error("Invalid windowBits: "+t.windowBits);if(t.level&&(t.level<e.Z_MIN_LEVEL||t.level>e.Z_MAX_LEVEL))throw new Error("Invalid compression level: "+t.level);if(t.memLevel&&(t.memLevel<e.Z_MIN_MEMLEVEL||t.memLevel>e.Z_MAX_MEMLEVEL))throw new Error("Invalid memLevel: "+t.memLevel);if(t.strategy&&t.strategy!=e.Z_FILTERED&&t.strategy!=e.Z_HUFFMAN_ONLY&&t.strategy!=e.Z_RLE&&t.strategy!=e.Z_FIXED&&t.strategy!=e.Z_DEFAULT_STRATEGY)throw new Error("Invalid strategy: "+t.strategy);if(t.dictionary&&!v.isBuffer(t.dictionary))throw new Error("Invalid dictionary: it should be a Buffer instance");this._handle=new b.Zlib(n);var i=this;this._hadError=!1,this._handle.onerror=function(t,n){p(i),i._hadError=!0;var r=new Error(t);r.errno=n,r.code=e.codes[n],i.emit("error",r)};var o=e.Z_DEFAULT_COMPRESSION;"number"==typeof t.level&&(o=t.level);var a=e.Z_DEFAULT_STRATEGY;"number"==typeof t.strategy&&(a=t.strategy),this._handle.init(t.windowBits||e.Z_DEFAULT_WINDOWBITS,o,t.memLevel||e.Z_DEFAULT_MEMLEVEL,a,t.dictionary),this._buffer=v.allocUnsafe(this._chunkSize),this._offset=0,this._level=o,this._strategy=a,this.once("end",this.close),Object.defineProperty(this,"_closed",{get:function(){return!r._handle},configurable:!0,enumerable:!0})}function p(e,n){n&&t.nextTick(n),e._handle&&(e._handle.close(),e._handle=null)}function g(t){t.emit("close")}var v=n(3).Buffer,y=n(102).Transform,b=n(255),m=n(106),w=n(162).ok,x=n(3).kMaxLength,_="Cannot create final Buffer. It would be larger than 0x"+x.toString(16)+" bytes";b.Z_MIN_WINDOWBITS=8,b.Z_MAX_WINDOWBITS=15,b.Z_DEFAULT_WINDOWBITS=15,b.Z_MIN_CHUNK=64,b.Z_MAX_CHUNK=1/0,b.Z_DEFAULT_CHUNK=16384,b.Z_MIN_MEMLEVEL=1,b.Z_MAX_MEMLEVEL=9,b.Z_DEFAULT_MEMLEVEL=8,b.Z_MIN_LEVEL=-1,b.Z_MAX_LEVEL=9,b.Z_DEFAULT_LEVEL=b.Z_DEFAULT_COMPRESSION;for(var k=Object.keys(b),S=0;S<k.length;S++){var C=k[S];C.match(/^Z/)&&Object.defineProperty(e,C,{enumerable:!0,value:b[C],writable:!1})}for(var A={Z_OK:b.Z_OK,Z_STREAM_END:b.Z_STREAM_END,Z_NEED_DICT:b.Z_NEED_DICT,Z_ERRNO:b.Z_ERRNO,Z_STREAM_ERROR:b.Z_STREAM_ERROR,Z_DATA_ERROR:b.Z_DATA_ERROR,Z_MEM_ERROR:b.Z_MEM_ERROR,Z_BUF_ERROR:b.Z_BUF_ERROR,Z_VERSION_ERROR:b.Z_VERSION_ERROR},P=Object.keys(A),E=0;E<P.length;E++){var O=P[E];A[A[O]]=O}Object.defineProperty(e,"codes",{enumerable:!0,value:Object.freeze(A),writable:!1}),e.Deflate=o,e.Inflate=a,e.Gzip=s,e.Gunzip=u,e.DeflateRaw=l,e.InflateRaw=c,e.Unzip=f,e.createDeflate=function(t){return new o(t)},e.createInflate=function(t){return new a(t)},e.createDeflateRaw=function(t){return new l(t)},e.createInflateRaw=function(t){return new c(t)},e.createGzip=function(t){return new s(t)},e.createGunzip=function(t){return new u(t)},e.createUnzip=function(t){return new f(t)},e.deflate=function(t,e,n){return"function"==typeof e&&(n=e,e={}),r(new o(e),t,n)},e.deflateSync=function(t,e){return i(new o(e),t)},e.gzip=function(t,e,n){return"function"==typeof e&&(n=e,e={}),r(new s(e),t,n)},e.gzipSync=function(t,e){return i(new s(e),t)},e.deflateRaw=function(t,e,n){return"function"==typeof e&&(n=e,e={}),r(new l(e),t,n)},e.deflateRawSync=function(t,e){return i(new l(e),t)},e.unzip=function(t,e,n){return"function"==typeof e&&(n=e,e={}),r(new f(e),t,n)},e.unzipSync=function(t,e){return i(new f(e),t)},e.inflate=function(t,e,n){return"function"==typeof e&&(n=e,e={}),r(new a(e),t,n)},e.inflateSync=function(t,e){return i(new a(e),t)},e.gunzip=function(t,e,n){return"function"==typeof e&&(n=e,e={}),r(new u(e),t,n)},e.gunzipSync=function(t,e){return i(new u(e),t)},e.inflateRaw=function(t,e,n){return"function"==typeof e&&(n=e,e={}),r(new c(e),t,n)},e.inflateRawSync=function(t,e){return i(new c(e),t)},m.inherits(d,y),d.prototype.params=function(n,r,i){if(n<e.Z_MIN_LEVEL||n>e.Z_MAX_LEVEL)throw new RangeError("Invalid compression level: "+n);if(r!=e.Z_FILTERED&&r!=e.Z_HUFFMAN_ONLY&&r!=e.Z_RLE&&r!=e.Z_FIXED&&r!=e.Z_DEFAULT_STRATEGY)throw new TypeError("Invalid strategy: "+r);if(this._level!==n||this._strategy!==r){var o=this;this.flush(b.Z_SYNC_FLUSH,function(){w(o._handle,"zlib binding closed"),o._handle.params(n,r),o._hadError||(o._level=n,o._strategy=r,i&&i())})}else t.nextTick(i)},d.prototype.reset=function(){return w(this._handle,"zlib binding closed"),this._handle.reset()},d.prototype._flush=function(t){this._transform(v.alloc(0),"",t)},d.prototype.flush=function(e,n){var r=this,i=this._writableState;("function"==typeof e||void 0===e&&!n)&&(n=e,e=b.Z_FULL_FLUSH),i.ended?n&&t.nextTick(n):i.ending?n&&this.once("end",n):i.needDrain?n&&this.once("drain",function(){return r.flush(e,n)}):(this._flushFlag=e,this.write(v.alloc(0),"",n))},d.prototype.close=function(e){p(this,e),t.nextTick(g,this)},d.prototype._transform=function(t,e,n){var r,i=this._writableState,o=i.ending||i.ended,a=o&&(!t||i.length===t.length);return null===t||v.isBuffer(t)?this._handle?(a?r=this._finishFlushFlag:(r=this._flushFlag,t.length>=i.length&&(this._flushFlag=this._opts.flush||b.Z_NO_FLUSH)),void this._processChunk(t,r,n)):n(new Error("zlib binding closed")):n(new Error("invalid input"))},d.prototype._processChunk=function(t,e,n){function r(l,h){if(this&&(this.buffer=null,this.callback=null),!s._hadError){var d=o-h;if(w(d>=0,"have should not go down"),d>0){var p=s._buffer.slice(s._offset,s._offset+d);s._offset+=d,u?s.push(p):(c.push(p),f+=p.length)}if((0===h||s._offset>=s._chunkSize)&&(o=s._chunkSize,s._offset=0,s._buffer=v.allocUnsafe(s._chunkSize)),0===h){if(a+=i-l,i=l,!u)return!0;var g=s._handle.write(e,t,a,i,s._buffer,s._offset,s._chunkSize);return g.callback=r,void(g.buffer=t)}if(!u)return!1;n()}}var i=t&&t.length,o=this._chunkSize-this._offset,a=0,s=this,u="function"==typeof n;if(!u){var l,c=[],f=0;this.on("error",function(t){l=t}),w(this._handle,"zlib binding closed");do{var h=this._handle.writeSync(e,t,a,i,this._buffer,this._offset,o)}while(!this._hadError&&r(h[0],h[1]));if(this._hadError)throw l;if(f>=x)throw p(this),new RangeError(_);var d=v.concat(c,f);return p(this),d}w(this._handle,"zlib binding closed");var g=this._handle.write(e,t,a,i,this._buffer,this._offset,o);g.buffer=t,g.callback=r},m.inherits(o,d),m.inherits(a,d),m.inherits(s,d),m.inherits(u,d),m.inherits(l,d),m.inherits(c,d),m.inherits(f,d)}).call(e,n(21))},function(t,e,n){"use strict";(function(e,r){function i(t){return D.from(t)}function o(t){return D.isBuffer(t)||t instanceof z}function a(t,e,n){if("function"==typeof t.prependListener)return t.prependListener(e,n);t._events&&t._events[e]?R(t._events[e])?t._events[e].unshift(n):t._events[e]=[n,t._events[e]]:t.on(e,n)}function s(t,e){L=L||n(33),t=t||{};var r=e instanceof L;this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var i=t.highWaterMark,o=t.readableHighWaterMark,a=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r&&(o||0===o)?o:a,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new G,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(j||(j=n(105).StringDecoder),this.decoder=new j(t.encoding),this.encoding=t.encoding)}function u(t){if(L=L||n(33),!(this instanceof u))return new u(t);this._readableState=new s(t,this),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),F.call(this)}function l(t,e,n,r,o){var a=t._readableState;if(null===e)a.reading=!1,g(t,a);else{var s;o||(s=f(a,e)),s?t.emit("error",s):a.objectMode||e&&e.length>0?("string"==typeof e||a.objectMode||Object.getPrototypeOf(e)===D.prototype||(e=i(e)),r?a.endEmitted?t.emit("error",new Error("stream.unshift() after end event")):c(t,a,e,!0):a.ended?t.emit("error",new Error("stream.push() after EOF")):(a.reading=!1,a.decoder&&!n?(e=a.decoder.write(e),a.objectMode||0!==e.length?c(t,a,e,!1):b(t,a)):c(t,a,e,!1))):r||(a.reading=!1)}return h(a)}function c(t,e,n,r){e.flowing&&0===e.length&&!e.sync?(t.emit("data",n),t.read(0)):(e.length+=e.objectMode?1:n.length,r?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&v(t)),b(t,e)}function f(t,e){var n;return o(e)||"string"==typeof e||void 0===e||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk")),n}function h(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}function d(t){return t>=q?t=q:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}function p(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!==t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=d(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function g(t,e){if(!e.ended){if(e.decoder){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,v(t)}}function v(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(U("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?B.nextTick(y,t):y(t))}function y(t){U("emit readable"),t.emit("readable"),S(t)}function b(t,e){e.readingMore||(e.readingMore=!0,B.nextTick(m,t,e))}function m(t,e){for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(U("maybeReadMore read 0"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1}function w(t){return function(){var e=t._readableState;U("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&M(t,"data")&&(e.flowing=!0,S(t))}}function x(t){U("readable nexttick read 0"),t.read(0)}function _(t,e){e.resumeScheduled||(e.resumeScheduled=!0,B.nextTick(k,t,e))}function k(t,e){e.reading||(U("resume read 0"),t.read(0)),e.resumeScheduled=!1,e.awaitDrain=0,t.emit("resume"),S(t),e.flowing&&!e.reading&&t.read(0)}function S(t){var e=t._readableState;for(U("flow",e.flowing);e.flowing&&null!==t.read(););}function C(t,e){if(0===e.length)return null;var n;return e.objectMode?n=e.buffer.shift():!t||t>=e.length?(n=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.head.data:e.buffer.concat(e.length),e.buffer.clear()):n=A(t,e.buffer,e.decoder),n}function A(t,e,n){var r;return t<e.head.data.length?(r=e.head.data.slice(0,t),e.head.data=e.head.data.slice(t)):r=t===e.head.data.length?e.shift():n?P(t,e):E(t,e),r}function P(t,e){var n=e.head,r=1,i=n.data;for(t-=i.length;n=n.next;){var o=n.data,a=t>o.length?o.length:t;if(a===o.length?i+=o:i+=o.slice(0,t),0===(t-=a)){a===o.length?(++r,n.next?e.head=n.next:e.head=e.tail=null):(e.head=n,n.data=o.slice(a));break}++r}return e.length-=r,i}function E(t,e){var n=D.allocUnsafe(t),r=e.head,i=1;for(r.data.copy(n),t-=r.data.length;r=r.next;){var o=r.data,a=t>o.length?o.length:t;if(o.copy(n,n.length-t,0,a),0===(t-=a)){a===o.length?(++i,r.next?e.head=r.next:e.head=e.tail=null):(e.head=r,r.data=o.slice(a));break}++i}return e.length-=i,n}function O(t){var e=t._readableState;if(e.length>0)throw new Error('"endReadable()" called on non-empty stream');e.endEmitted||(e.ended=!0,B.nextTick(T,e,t))}function T(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit("end"))}function I(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1}var B=n(69);t.exports=u;var L,R=n(136);u.ReadableState=s;var M=(n(68).EventEmitter,function(t,e){return t.listeners(e).length}),F=n(159),D=n(70).Buffer,z=e.Uint8Array||function(){},N=n(55);N.inherits=n(32);var W=n(246),U=void 0;U=W&&W.debuglog?W.debuglog("stream"):function(){};var j,G=n(247),H=n(160);N.inherits(u,F);var V=["error","close","destroy","pause","resume"];Object.defineProperty(u.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),u.prototype.destroy=H.destroy,u.prototype._undestroy=H.undestroy,u.prototype._destroy=function(t,e){this.push(null),e(t)},u.prototype.push=function(t,e){var n,r=this._readableState;return r.objectMode?n=!0:"string"==typeof t&&(e=e||r.defaultEncoding,e!==r.encoding&&(t=D.from(t,e),e=""),n=!0),l(this,t,e,!1,n)},u.prototype.unshift=function(t){return l(this,t,null,!0,!1)},u.prototype.isPaused=function(){return!1===this._readableState.flowing},u.prototype.setEncoding=function(t){return j||(j=n(105).StringDecoder),this._readableState.decoder=new j(t),this._readableState.encoding=t,this};var q=8388608;u.prototype.read=function(t){U("read",t),t=parseInt(t,10);var e=this._readableState,n=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return U("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?O(this):v(this),null;if(0===(t=p(t,e))&&e.ended)return 0===e.length&&O(this),null;var r=e.needReadable;U("need readable",r),(0===e.length||e.length-t<e.highWaterMark)&&(r=!0,U("length less than watermark",r)),e.ended||e.reading?(r=!1,U("reading or ended",r)):r&&(U("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=p(n,e)));var i;return i=t>0?C(t,e):null,null===i?(e.needReadable=!0,t=0):e.length-=t,0===e.length&&(e.ended||(e.needReadable=!0),n!==t&&e.ended&&O(this)),null!==i&&this.emit("data",i),i},u.prototype._read=function(t){this.emit("error",new Error("_read() is not implemented"))},u.prototype.pipe=function(t,e){function n(t,e){U("onunpipe"),t===h&&e&&!1===e.hasUnpiped&&(e.hasUnpiped=!0,o())}function i(){U("onend"),t.end()}function o(){U("cleanup"),t.removeListener("close",l),t.removeListener("finish",c),t.removeListener("drain",v),t.removeListener("error",u),t.removeListener("unpipe",n),h.removeListener("end",i),h.removeListener("end",f),h.removeListener("data",s),y=!0,!d.awaitDrain||t._writableState&&!t._writableState.needDrain||v()}function s(e){U("ondata"),b=!1,!1!==t.write(e)||b||((1===d.pipesCount&&d.pipes===t||d.pipesCount>1&&-1!==I(d.pipes,t))&&!y&&(U("false write response, pause",h._readableState.awaitDrain),h._readableState.awaitDrain++,b=!0),h.pause())}function u(e){U("onerror",e),f(),t.removeListener("error",u),0===M(t,"error")&&t.emit("error",e)}function l(){t.removeListener("finish",c),f()}function c(){U("onfinish"),t.removeListener("close",l),f()}function f(){U("unpipe"),h.unpipe(t)}var h=this,d=this._readableState;switch(d.pipesCount){case 0:d.pipes=t;break;case 1:d.pipes=[d.pipes,t];break;default:d.pipes.push(t)}d.pipesCount+=1,U("pipe count=%d opts=%j",d.pipesCount,e);var p=(!e||!1!==e.end)&&t!==r.stdout&&t!==r.stderr,g=p?i:f;d.endEmitted?B.nextTick(g):h.once("end",g),t.on("unpipe",n);var v=w(h);t.on("drain",v);var y=!1,b=!1;return h.on("data",s),a(t,"error",u),t.once("close",l),t.once("finish",c),t.emit("pipe",h),d.flowing||(U("pipe resume"),h.resume()),t},u.prototype.unpipe=function(t){var e=this._readableState,n={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this,n),this);if(!t){var r=e.pipes,i=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var o=0;o<i;o++)r[o].emit("unpipe",this,n);return this}var a=I(e.pipes,t);return-1===a?this:(e.pipes.splice(a,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this,n),this)},u.prototype.on=function(t,e){var n=F.prototype.on.call(this,t,e);if("data"===t)!1!==this._readableState.flowing&&this.resume();else if("readable"===t){var r=this._readableState;r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.emittedReadable=!1,r.reading?r.length&&v(this):B.nextTick(x,this))}return n},u.prototype.addListener=u.prototype.on,u.prototype.resume=function(){var t=this._readableState;return t.flowing||(U("resume"),t.flowing=!0,_(this,t)),this},u.prototype.pause=function(){return U("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(U("pause"),this._readableState.flowing=!1,this.emit("pause")),this},u.prototype.wrap=function(t){var e=this,n=this._readableState,r=!1;t.on("end",function(){if(U("wrapped end"),n.decoder&&!n.ended){var t=n.decoder.end();t&&t.length&&e.push(t)}e.push(null)}),t.on("data",function(i){if(U("wrapped data"),n.decoder&&(i=n.decoder.write(i)),(!n.objectMode||null!==i&&void 0!==i)&&(n.objectMode||i&&i.length)){e.push(i)||(r=!0,t.pause())}});for(var i in t)void 0===this[i]&&"function"==typeof t[i]&&(this[i]=function(e){return function(){return t[e].apply(t,arguments)}}(i));for(var o=0;o<V.length;o++)t.on(V[o],this.emit.bind(this,V[o]));return this._read=function(e){U("wrapped _read",e),r&&(r=!1,t.resume())},this},Object.defineProperty(u.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),u._fromList=C}).call(e,n(22),n(21))},function(t,e,n){t.exports=n(68).EventEmitter},function(t,e,n){"use strict";function r(t,e){var n=this,r=this._readableState&&this._readableState.destroyed,i=this._writableState&&this._writableState.destroyed;return r||i?(e?e(t):!t||this._writableState&&this._writableState.errorEmitted||a.nextTick(o,this,t),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,function(t){!e&&t?(a.nextTick(o,n,t),n._writableState&&(n._writableState.errorEmitted=!0)):e&&e(t)}),this)}function i(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}function o(t,e){t.emit("error",e)}var a=n(69);t.exports={destroy:r,undestroy:i}},function(t,e,n){"use strict";function r(t,e){var n=this._transformState;n.transforming=!1;var r=n.writecb;if(!r)return this.emit("error",new Error("write callback called multiple times"));n.writechunk=null,n.writecb=null,null!=e&&this.push(e),r(t);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function i(t){if(!(this instanceof i))return new i(t);s.call(this,t),this._transformState={afterTransform:r.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.on("prefinish",o)}function o(){var t=this;"function"==typeof this._flush?this._flush(function(e,n){a(t,e,n)}):a(this,null,null)}function a(t,e,n){if(e)return t.emit("error",e);if(null!=n&&t.push(n),t._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(t._transformState.transforming)throw new Error("Calling transform done when still transforming");return t.push(null)}t.exports=i;var s=n(33),u=n(55);u.inherits=n(32),u.inherits(i,s),i.prototype.push=function(t,e){return this._transformState.needTransform=!1,s.prototype.push.call(this,t,e)},i.prototype._transform=function(t,e,n){throw new Error("_transform() is not implemented")},i.prototype._write=function(t,e,n){var r=this._transformState;if(r.writecb=n,r.writechunk=t,r.writeencoding=e,!r.transforming){var i=this._readableState;(r.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},i.prototype._read=function(t){var e=this._transformState;null!==e.writechunk&&e.writecb&&!e.transforming?(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform)):e.needTransform=!0},i.prototype._destroy=function(t,e){var n=this;s.prototype._destroy.call(this,t,function(t){e(t),n.emit("close")})}},function(t,e,n){"use strict";(function(e){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function r(t,e){if(t===e)return 0;for(var n=t.length,r=e.length,i=0,o=Math.min(n,r);i<o;++i)if(t[i]!==e[i]){n=t[i],r=e[i];break}return n<r?-1:r<n?1:0}function i(t){return e.Buffer&&"function"==typeof e.Buffer.isBuffer?e.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}function o(t){return Object.prototype.toString.call(t)}function a(t){return!i(t)&&("function"==typeof e.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer))))}function s(t){if(w.isFunction(t)){if(k)return t.name;var e=t.toString(),n=e.match(C);return n&&n[1]}}function u(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function l(t){if(k||!w.isFunction(t))return w.inspect(t);var e=s(t);return"[Function"+(e?": "+e:"")+"]"}function c(t){return u(l(t.actual),128)+" "+t.operator+" "+u(l(t.expected),128)}function f(t,e,n,r,i){throw new S.AssertionError({message:n,actual:t,expected:e,operator:r,stackStartFunction:i})}function h(t,e){t||f(t,!0,e,"==",S.ok)}function d(t,e,n,s){if(t===e)return!0;if(i(t)&&i(e))return 0===r(t,e);if(w.isDate(t)&&w.isDate(e))return t.getTime()===e.getTime();if(w.isRegExp(t)&&w.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(a(t)&&a(e)&&o(t)===o(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===r(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(i(t)!==i(e))return!1;s=s||{actual:[],expected:[]};var u=s.actual.indexOf(t);return-1!==u&&u===s.expected.indexOf(e)||(s.actual.push(t),s.expected.push(e),g(t,e,n,s))}return n?t===e:t==e}function p(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function g(t,e,n,r){if(null===t||void 0===t||null===e||void 0===e)return!1;if(w.isPrimitive(t)||w.isPrimitive(e))return t===e;if(n&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var i=p(t),o=p(e);if(i&&!o||!i&&o)return!1;if(i)return t=_.call(t),e=_.call(e),d(t,e,n);var a,s,u=A(t),l=A(e);if(u.length!==l.length)return!1;for(u.sort(),l.sort(),s=u.length-1;s>=0;s--)if(u[s]!==l[s])return!1;for(s=u.length-1;s>=0;s--)if(a=u[s],!d(t[a],e[a],n,r))return!1;return!0}function v(t,e,n){d(t,e,!0)&&f(t,e,n,"notDeepStrictEqual",v)}function y(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function b(t){var e;try{t()}catch(t){e=t}return e}function m(t,e,n,r){var i;if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof n&&(r=n,n=null),i=b(e),r=(n&&n.name?" ("+n.name+").":".")+(r?" "+r:"."),t&&!i&&f(i,n,"Missing expected exception"+r);var o="string"==typeof r,a=!t&&w.isError(i),s=!t&&i&&!n;if((a&&o&&y(i,n)||s)&&f(i,n,"Got unwanted exception"+r),t&&i&&n&&!y(i,n)||!t&&i)throw i}var w=n(106),x=Object.prototype.hasOwnProperty,_=Array.prototype.slice,k=function(){return"foo"===function(){}.name}(),S=t.exports=h,C=/\s*function\s+([^\(\s]*)\s*/;S.AssertionError=function(t){this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=c(this),this.generatedMessage=!0);var e=t.stackStartFunction||f;if(Error.captureStackTrace)Error.captureStackTrace(this,e);else{var n=new Error;if(n.stack){var r=n.stack,i=s(e),o=r.indexOf("\n"+i);if(o>=0){var a=r.indexOf("\n",o+1);r=r.substring(a+1)}this.stack=r}}},w.inherits(S.AssertionError,Error),S.fail=f,S.ok=h,S.equal=function(t,e,n){t!=e&&f(t,e,n,"==",S.equal)},S.notEqual=function(t,e,n){t==e&&f(t,e,n,"!=",S.notEqual)},S.deepEqual=function(t,e,n){d(t,e,!1)||f(t,e,n,"deepEqual",S.deepEqual)},S.deepStrictEqual=function(t,e,n){d(t,e,!0)||f(t,e,n,"deepStrictEqual",S.deepStrictEqual)},S.notDeepEqual=function(t,e,n){d(t,e,!1)&&f(t,e,n,"notDeepEqual",S.notDeepEqual)},S.notDeepStrictEqual=v,S.strictEqual=function(t,e,n){t!==e&&f(t,e,n,"===",S.strictEqual)},S.notStrictEqual=function(t,e,n){t===e&&f(t,e,n,"!==",S.notStrictEqual)},S.throws=function(t,e,n){m(!0,t,e,n)},S.doesNotThrow=function(t,e,n){m(!1,t,e,n)},S.ifError=function(t){if(t)throw t};var A=Object.keys||function(t){var e=[];for(var n in t)x.call(t,n)&&e.push(n);return e}}).call(e,n(22))},function(t,e,n){"use strict";function r(t,e,n,r){for(var i=65535&t|0,o=t>>>16&65535|0,a=0;0!==n;){a=n>2e3?2e3:n,n-=a;do{i=i+e[r++]|0,o=o+i|0}while(--a);i%=65521,o%=65521}return i|o<<16|0}t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){var o=i,a=r+n;t^=-1;for(var s=r;s<a;s++)t=t>>>8^o[255&(t^e[s])];return-1^t}var i=function(){for(var t,e=[],n=0;n<256;n++){t=n;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[n]=t}return e}();t.exports=r},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){return function(e){var n=t,r=n.lib,i=r.WordArray,o=r.Hasher,a=n.algo,s=[],u=[];!function(){function t(t){return 4294967296*(t-(0|t))|0}for(var n=2,r=0;r<64;)(function(t){for(var n=e.sqrt(t),r=2;r<=n;r++)if(!(t%r))return!1;return!0})(n)&&(r<8&&(s[r]=t(e.pow(n,.5))),u[r]=t(e.pow(n,1/3)),r++),n++}();var l=[],c=a.SHA256=o.extend({_doReset:function(){this._hash=new i.init(s.slice(0))},_doProcessBlock:function(t,e){for(var n=this._hash.words,r=n[0],i=n[1],o=n[2],a=n[3],s=n[4],c=n[5],f=n[6],h=n[7],d=0;d<64;d++){if(d<16)l[d]=0|t[e+d];else{var p=l[d-15],g=(p<<25|p>>>7)^(p<<14|p>>>18)^p>>>3,v=l[d-2],y=(v<<15|v>>>17)^(v<<13|v>>>19)^v>>>10;l[d]=g+l[d-7]+y+l[d-16]}var b=s&c^~s&f,m=r&i^r&o^i&o,w=(r<<30|r>>>2)^(r<<19|r>>>13)^(r<<10|r>>>22),x=(s<<26|s>>>6)^(s<<21|s>>>11)^(s<<7|s>>>25),_=h+x+b+u[d]+l[d],k=w+m;h=f,f=c,c=s,s=a+_|0,a=o,o=i,i=r,r=_+k|0}n[0]=n[0]+r|0,n[1]=n[1]+i|0,n[2]=n[2]+o|0,n[3]=n[3]+a|0,n[4]=n[4]+s|0,n[5]=n[5]+c|0,n[6]=n[6]+f|0,n[7]=n[7]+h|0},_doFinalize:function(){var t=this._data,n=t.words,r=8*this._nDataBytes,i=8*t.sigBytes;return n[i>>>5]|=128<<24-i%32,n[14+(i+64>>>9<<4)]=e.floor(r/4294967296),n[15+(i+64>>>9<<4)]=r,t.sigBytes=4*n.length,this._process(),this._hash},clone:function(){var t=o.clone.call(this);return t._hash=this._hash.clone(),t}});n.SHA256=o._createHelper(c),n.HmacSHA256=o._createHmacHelper(c)}(Math),t.SHA256})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(72))}(0,function(t){return function(){function e(){return a.create.apply(a,arguments)}var n=t,r=n.lib,i=r.Hasher,o=n.x64,a=o.Word,s=o.WordArray,u=n.algo,l=[e(1116352408,3609767458),e(1899447441,602891725),e(3049323471,3964484399),e(3921009573,2173295548),e(961987163,4081628472),e(1508970993,3053834265),e(2453635748,2937671579),e(2870763221,3664609560),e(3624381080,2734883394),e(310598401,1164996542),e(607225278,1323610764),e(1426881987,3590304994),e(1925078388,4068182383),e(2162078206,991336113),e(2614888103,633803317),e(3248222580,3479774868),e(3835390401,2666613458),e(4022224774,944711139),e(264347078,2341262773),e(604807628,2007800933),e(770255983,1495990901),e(1249150122,1856431235),e(1555081692,3175218132),e(1996064986,2198950837),e(2554220882,3999719339),e(2821834349,766784016),e(2952996808,2566594879),e(3210313671,3203337956),e(3336571891,1034457026),e(3584528711,2466948901),e(113926993,3758326383),e(338241895,168717936),e(666307205,1188179964),e(773529912,1546045734),e(1294757372,1522805485),e(1396182291,2643833823),e(1695183700,2343527390),e(1986661051,1014477480),e(2177026350,1206759142),e(2456956037,344077627),e(2730485921,1290863460),e(2820302411,3158454273),e(3259730800,3505952657),e(3345764771,106217008),e(3516065817,3606008344),e(3600352804,1432725776),e(4094571909,1467031594),e(275423344,851169720),e(430227734,3100823752),e(506948616,1363258195),e(659060556,3750685593),e(883997877,3785050280),e(958139571,3318307427),e(1322822218,3812723403),e(1537002063,2003034995),e(1747873779,3602036899),e(1955562222,1575990012),e(2024104815,1125592928),e(2227730452,2716904306),e(2361852424,442776044),e(2428436474,593698344),e(2756734187,3733110249),e(3204031479,2999351573),e(3329325298,3815920427),e(3391569614,3928383900),e(3515267271,566280711),e(3940187606,3454069534),e(4118630271,4000239992),e(116418474,1914138554),e(174292421,2731055270),e(289380356,3203993006),e(460393269,320620315),e(685471733,587496836),e(852142971,1086792851),e(1017036298,365543100),e(1126000580,2618297676),e(1288033470,3409855158),e(1501505948,4234509866),e(1607167915,987167468),e(1816402316,1246189591)],c=[];!function(){for(var t=0;t<80;t++)c[t]=e()}();var f=u.SHA512=i.extend({_doReset:function(){this._hash=new s.init([new a.init(1779033703,4089235720),new a.init(3144134277,2227873595),new a.init(1013904242,4271175723),new a.init(2773480762,1595750129),new a.init(1359893119,2917565137),new a.init(2600822924,725511199),new a.init(528734635,4215389547),new a.init(1541459225,327033209)])},_doProcessBlock:function(t,e){for(var n=this._hash.words,r=n[0],i=n[1],o=n[2],a=n[3],s=n[4],u=n[5],f=n[6],h=n[7],d=r.high,p=r.low,g=i.high,v=i.low,y=o.high,b=o.low,m=a.high,w=a.low,x=s.high,_=s.low,k=u.high,S=u.low,C=f.high,A=f.low,P=h.high,E=h.low,O=d,T=p,I=g,B=v,L=y,R=b,M=m,F=w,D=x,z=_,N=k,W=S,U=C,j=A,G=P,H=E,V=0;V<80;V++){var q=c[V];if(V<16)var Z=q.high=0|t[e+2*V],Y=q.low=0|t[e+2*V+1];else{var X=c[V-15],K=X.high,J=X.low,Q=(K>>>1|J<<31)^(K>>>8|J<<24)^K>>>7,$=(J>>>1|K<<31)^(J>>>8|K<<24)^(J>>>7|K<<25),tt=c[V-2],et=tt.high,nt=tt.low,rt=(et>>>19|nt<<13)^(et<<3|nt>>>29)^et>>>6,it=(nt>>>19|et<<13)^(nt<<3|et>>>29)^(nt>>>6|et<<26),ot=c[V-7],at=ot.high,st=ot.low,ut=c[V-16],lt=ut.high,ct=ut.low,Y=$+st,Z=Q+at+(Y>>>0<$>>>0?1:0),Y=Y+it,Z=Z+rt+(Y>>>0<it>>>0?1:0),Y=Y+ct,Z=Z+lt+(Y>>>0<ct>>>0?1:0);q.high=Z,q.low=Y}var ft=D&N^~D&U,ht=z&W^~z&j,dt=O&I^O&L^I&L,pt=T&B^T&R^B&R,gt=(O>>>28|T<<4)^(O<<30|T>>>2)^(O<<25|T>>>7),vt=(T>>>28|O<<4)^(T<<30|O>>>2)^(T<<25|O>>>7),yt=(D>>>14|z<<18)^(D>>>18|z<<14)^(D<<23|z>>>9),bt=(z>>>14|D<<18)^(z>>>18|D<<14)^(z<<23|D>>>9),mt=l[V],wt=mt.high,xt=mt.low,_t=H+bt,kt=G+yt+(_t>>>0<H>>>0?1:0),_t=_t+ht,kt=kt+ft+(_t>>>0<ht>>>0?1:0),_t=_t+xt,kt=kt+wt+(_t>>>0<xt>>>0?1:0),_t=_t+Y,kt=kt+Z+(_t>>>0<Y>>>0?1:0),St=vt+pt,Ct=gt+dt+(St>>>0<vt>>>0?1:0);G=U,H=j,U=N,j=W,N=D,W=z,z=F+_t|0,D=M+kt+(z>>>0<F>>>0?1:0)|0,M=L,F=R,L=I,R=B,I=O,B=T,T=_t+St|0,O=kt+Ct+(T>>>0<_t>>>0?1:0)|0}p=r.low=p+T,r.high=d+O+(p>>>0<T>>>0?1:0),v=i.low=v+B,i.high=g+I+(v>>>0<B>>>0?1:0),b=o.low=b+R,o.high=y+L+(b>>>0<R>>>0?1:0),w=a.low=w+F,a.high=m+M+(w>>>0<F>>>0?1:0),_=s.low=_+z,s.high=x+D+(_>>>0<z>>>0?1:0),S=u.low=S+W,u.high=k+N+(S>>>0<W>>>0?1:0),A=f.low=A+j,f.high=C+U+(A>>>0<j>>>0?1:0),E=h.low=E+H,h.high=P+G+(E>>>0<H>>>0?1:0)},_doFinalize:function(){var t=this._data,e=t.words,n=8*this._nDataBytes,r=8*t.sigBytes;return e[r>>>5]|=128<<24-r%32,e[30+(r+128>>>10<<5)]=Math.floor(n/4294967296),e[31+(r+128>>>10<<5)]=n,t.sigBytes=4*e.length,this._process(),this._hash.toX32()},clone:function(){var t=i.clone.call(this);return t._hash=this._hash.clone(),t},blockSize:32});n.SHA512=i._createHelper(f),n.HmacSHA512=i._createHmacHelper(f)}(),t.SHA512})},function(t,e,n){var r=n(30),i=n(152),o=n(89),a=n(10),s=n(15),u=n(90),l={},c={},e=t.exports=function(t,e,n,f,h){var d,p,g,v,y=h?function(){return t}:u(t),b=r(n,f,e?2:1),m=0;if("function"!=typeof y)throw TypeError(t+" is not iterable!");if(o(y)){for(d=s(t.length);d>m;m++)if((v=e?b(a(p=t[m])[0],p[1]):b(t[m]))===l||v===c)return v}else for(g=y.call(t);!(p=g.next()).done;)if((v=i(g,b,p.value,e))===l||v===c)return v};e.BREAK=l,e.RETURN=c},function(t,e,n){var r=n(13);t.exports=function(t,e){if(!r(t)||t._t!==e)throw TypeError("Incompatible receiver, "+e+" required!");return t}},function(t,e){t.exports=[["a140","î",62],["a180","î",32],["a240","î¦",62],["a280","î¥",32],["a2ab","î¦",5],["a2e3","â¬î­"],["a2ef","î®î¯"],["a2fd","î°î±"],["a340","î",62],["a380","î",31,"ã"],["a440","î¦",62],["a480","î¥",32],["a4f4","î²",10],["a540","î",62],["a580","î",32],["a5f7","î½",7],["a640","î¦",62],["a680","î¥",32],["a6b9","î",7],["a6d9","î",6],["a6ec","îî"],["a6f3","î"],["a6f6","î",8],["a740","î",62],["a780","î",32],["a7c2","î ",14],["a7f2","î¯",12],["a896","î¼",10],["a8bc","î"],["a8bf","Ç¹"],["a8c1","îîîî"],["a8ea","î",20],["a958","î¢"],["a95b","î£"],["a95d","î¤î¥î¦"],["a989","ã¾â¿°",11],["a997","î´",12],["a9f0","î ",14],["aaa1","î",93],["aba1","î",93],["aca1","î¼",93],["ada1","î",93],["aea1","î¸",93],["afa1","î",93],["d7fa","î ",4],["f8a1","î´",93],["f9a1","î",93],["faa1","î°",93],["fba1","î",93],["fca1","î¬",93],["fda1","î",93],["fe50","âºî î î âºã³ãâºâºî ãããâºâºã¥®ã¤î ¦ã§ã§ã©³ã§î «î ¬ã­ã±®ã³ âº§î ±î ²âºªääâº®ä·âº³âº¶âº·î »ä±ä¬âº»äää¡äî¡"],["fe80","ä£ä©ä¼äâ»ä¥ä¥ºä¥½ä¦ä¦ä¦ä¦ä¦ä¦ä¦·ä¦¶î¡î¡ä²£ä²ä² ä²¡ä±·ä²¢ä´",6,"ä¶®î¡¤î¨",93]]},function(t,e){t.exports=[["0","\0",127],["a140","ãï¼ããï¼â§ï¼ï¼ï¼ï¼ï¸°â¦â¥ï¹ï¹ï¹Â·ï¹ï¹ï¹ï¹ï½âï¸±âï¸³â´ï¸´ï¹ï¼ï¼ï¸µï¸¶ï½ï½ï¸·ï¸¸ããï¸¹ï¸ºããï¸»ï¸¼ããï¸½ï¸¾ããï¸¿ï¹ããï¹ï¹ããï¹ï¹ï¹ï¹"],["a1a1","ï¹ï¹ï¹ï¹ââââããâµâ²ï¼ï¼ï¼â»Â§ãâââ³â²ââââââ¡â â½â¼ã£âÂ¯ï¿£ï¼¿Ëï¹ï¹ï¹ï¹ï¹ï¹ï¹ï¹ ï¹¡ï¼ï¼ÃÃ·Â±âï¼ï¼ï¼â¦â§â âââ¡ï¹¢",4,"ï½â©âªâ¥â ââ¿ããâ«â®âµâ´âââââââââââââ¥â£ï¼"],["a240","ï¼¼âï¹¨ï¼ï¿¥ãï¿ ï¿¡ï¼ï¼ ââï¹©ï¹ªï¹«ãããããã¡ãããÂ°ååååå¡å£å§ç©ç³â",7,"ââââââââ¼â´â¬â¤ââââââââââ­"],["a2a1","â®â°â¯âââªâ¡â¢â£â¥â¤â±â²â³ï¼",9,"â ",9,"ã¡",8,"åååï¼¡",25,"ï½",21],["a340","ï½ï½ï½ï½Î",16,"Î£",6,"Î±",16,"Ï",6,"ã",10],["a3a1","ã",25,"ËËËËË"],["a3e1","â¬"],["a440","ä¸ä¹ä¸ä¸ä¹ä¹äºäºäººå¿å¥å«å åååååååä¸ä¸ä¸ä¸ä¸«ä¸¸å¡ä¹ä¹ä¹ä¹äºäº¡åååºååå£åå£«å¤å¤§å¥³å­å­å­å¯¸å°å°¢å°¸å±±å·å·¥å·±å·²å·³å·¾å¹²å»¾å¼å¼æ"],["a4a1","ä¸ä¸ä¸ä¸­ä¸°ä¸¹ä¹å°¹äºäºäºäºäºäº¢ä»ä»ä»ä»ä»ä»ä»ä»ä»ååå§å­å®å¬åå¶åååå»å¾å¿åå¹ååååååååå£¬å¤©å¤«å¤ªå¤­å­å°å°¤å°ºå±¯å·´å¹»å»¿å¼å¼å¿ææ¶æææ¯æææ¤æ¹æ¥æ°ææ¨æ¬ æ­¢æ­¹æ¯æ¯æ¯æ°æ°´ç«çªç¶ç»çççç¬çä¸"],["a540","ä¸ä¸ä¸ä¸ä¸»ä¹ä¹ä¹ä»¥ä»ä»ä»ä»ä»ä»£ä»¤ä»ä»ååååå¬å¹åºå¸åå åååååä»ååå¡å å¯å®å»å¯å¤å³å¬å®å©å¨å¼å¸åµå«å¦åªå²å±å°å¥å­å»ååå¤"],["a5a1","å¤®å¤±å¥´å¥¶å­å®å°¼å·¨å·§å·¦å¸å¸å¹³å¹¼å¼å¼å¼å¿ææææææ¥æ¦æ®æ¬æªæ«æ­æ­£æ¯æ°æ°æ°¸æ±æ±æ°¾ç¯çççç¦ççç¨ç©ç°ç±ç²ç³çç½ç®ç¿ç®çç¢ç³ç¤ºç¦¾ç©´ç«ä¸ä¸ä¹ä¹ä¹©äºäº¤äº¦äº¥ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä»²ä»¶ä»»ä»°ä»³ä»½ä¼ä¼ååååå¨"],["a640","å±åå°åååååå£åå¡å å°å±åååååååååååååååå ååå³å°å¨å­å¬å¯å©å¤å¤å¤·å¤¸å¦å¥¸å¦å¥½å¥¹å¦å¦å­å­å®å®å®å®å¯ºå°å±¹å·å¸å¹¶å¹´"],["a6a1","å¼å¼å¿å¿æææææ£æææ¶æ©æ¨æ¬æ­æ²æ³ææ½æ´æ±æµæ¬¡æ­¤æ­»æ°æ±æ±æ±æ±æ± æ±æ±æ±¡æ±æ±æ±ç°ççç¾ç«¹ç±³ç³¸ç¼¶ç¾ç¾½èèèèè³è¿èèèè£èªè³è¼èèèè®è²è¾è«è¡è¡è¡£è¥¿é¡ä¸²äº¨ä½ä½ä½ä½ä½ä¼´ä½ä½ä¼°ä½ä½ä¼½ä¼ºä¼¸ä½ä½ä¼¼ä½ä½£"],["a740","ä½ä½ ä¼¯ä½ä¼¶ä½ä½ä½ä½ååååµå¶å·å¥å¤å©åªå¨å«å©åªå¬å£å³åµåå­åå¾å¦åå§ååå³åååå©åå¹å»å¸å®åµå¶å å¼åå±å«åå¬åªå°å¤å«åååå"],["a7a1","ååå¾ååå»å£¯å¤¾å¦å¦å¦¨å¦å¦£å¦å¦å¦å¦¤å¦å¦å¦¥å­å­å­å­å®å®å®å°¬å±å±å°¿å°¾å²å²å²å²å·«å¸åºåºåºå»·å¼å¼å½¤å½¢å½·å½¹å¿å¿å¿å¿å¿±å¿«å¿¸å¿ªæææææææ¶ææ­ææ¼æ¾æ¹æ³ææ¯ææ®æææææ¹æ»æ¸æ±æ´æææææææææææ "],["a840","æææ­¥æ¯æ±æ±æ²æ²æ²æ²æ²æ²æ±ªæ±ºæ²æ±°æ²æ±¨æ²æ²æ±½æ²æ±²æ±¾æ±´æ²æ±¶æ²æ²æ²æ²ç¶ç¼ç½ç¸ç¢ç¡ç çççç¬ç«ç·ç¸çç¯ç£ç§ç§ç¦¿ç©¶ç³»ç½èèèèèèè²è¯è"],["a8a1","èèè¦è§è¨è°·è±è±è²èµ¤èµ°è¶³èº«è»è¾è¾°è¿è¿è¿è¿å·¡éé¢éªé¦é£éééé²é®é±éªé¬ä¸¦ä¹ä¹³äºäºäºäº«äº¬ä½¯ä¾ä¾ä½³ä½¿ä½¬ä¾ä¾ä¾ä¾ä½°ä½µä¾ä½©ä½»ä¾ä½¾ä¾ä¾ä½ºåååå©å·å¶å¸å½å½å»å¸å·åºå°å®å¶åå¾å»ååååå¦å·å¸å¹åååå³åµ"],["a940","åå¸ååå»å·åååå¼åå±å¶ååå¢å¨åå½ååºåå·åªå©å¡å¦å¤å¼å¤å¥å¥å¥å¥å¥å¦¾å¦»å§å¦¹å¦®å§å§å§å§å§å§å§å¦¯å¦³å§å§å­å­¤å­£å®å®å®å®å®å®å°å±å±"],["a9a1","å±å²·å²¡å²¸å²©å²«å²±å²³å¸å¸å¸å¸å¸å¸å¹¸åºåºåºåºåºå»¶å¼¦å¼§å¼©å¾å¾å½¿å½¼å¿å¿ å¿½å¿µå¿¿æææ¯æµææªææ¡æ§æ©æ«ææææ¿æ¾ææ¿ææææ¿ææ¹æææ«æææææ¨æ½æ¼æææææµææ±æææææ¬ææ¾æ§æ¼æºææææææææææ"],["aa40","ææææ­æææ±ææ³æ·ææææ¯æ°æ¿ææ¾ææµæææ¼æªæ²æ¬£æ­¦æ­§æ­¿æ°æ°æ³£æ³¨æ³³æ²±æ³æ³¥æ²³æ²½æ²¾æ²¼æ³¢æ²«æ³æ³æ²¸æ³æ²¹æ³æ²®æ³æ³æ³±æ²¿æ²»æ³¡æ³æ³æ²¬æ³¯æ³æ³æ³ "],["aaa1","çççççç¬ç­ç¸çç§ç©çççççç©ç¨çç«ç¥ç½çççççç²ç´ç¥ç½ç¤¾ç¥ç¥ç§ç§ç©ºç©¹ç«ºç³¾ç½ç¾ç¾èèºè¥è¢è±è¡è«è©è´èªè¯è¥è¾èè³èèè­è½èè¹è±è¬è¥è¯è¸è£è°è¾è·èè±åè¡¨è»è¿è¿è¿éµé¸é±é¶ééé·éééé¿é»é"],["ab40","éé¹é¨ééäºäº­äº®ä¿¡ä¾µä¾¯ä¾¿ä¿ ä¿ä¿ä¿ä¿ä¾¶ä¿ä¿ä¿ä¿ä¾®ä¿ä¿ä¿ä¿ä¿ä¿ä¾·åååå åååååååååååååå»ååå¬åå¨ååå¸å¦å³ååå½åªå"],["aba1","ååå¯å«å±å»å©å§å¿å¿ååå å£å¢åå®åå¥å¥å¥å¥å¥å§å§å§¿å§£å§¨å¨å§¥å§ªå§å§¦å¨å§»å­©å®£å®¦å®¤å®¢å®¥å°å±å±å±å±å³å³å··å¸å¸¥å¸å¹½åº åº¦å»ºå¼å¼­å½¥å¾å¾å¾å¾å¾å¾å¾æææ æ¥ææ¨ææ°æ¨æ¢æææ¬æ«æªæ¤æææææ¼æ­ææ®æ½ææ±æ·"],["ac40","æ¯æ¬æ¾æ´æææ¿ææ«æ½æ¢æ¥æ­æ æ§æ¯ææ¨æ±æ¤æ·æ¿ææ±æææ¬æ¶æ¯æµæ©æ¯æææ´ææ¥æ¸æææ³æ°ææ¢æææ­ªæ®æ®æ®µæ¯æ¯æ°æ³æ´æ´²æ´ªæµæ´¥æ´æ´±æ´æ´"],["aca1","æ´»æ´½æ´¾æ´¶æ´æ³µæ´¹æ´§æ´¸æ´©æ´®æ´µæ´æ´«ç«çºç³ç¬ç¯ç­ç¸ç®ç¤ç°ç²ç¯ç´ç©ç ç¡ç·çç»ç²ççç³çç­ççççç«ç¤ç¥ç¢ç£ç¸ççççççççç¹ç¸ççç¾ç¼ççç ç ç ç ç¥ç¥ç¥ç¥ç¦¹ç¦ºç§ç§ç§ç©¿çªç«¿ç«½ç±½ç´ç´ç´ç´ç´ç´ç´ç¼¸ç¾ç¾¿è"],["ad40","èèèè¶èè¥èèèèè¡èèèè¤èè´è¢è§èèè£èè¦èè¥èèèèè±èèèèèèèè¯èèè¹è»èºè¡è¡«è¦è§è¨è¨è¨è²è² èµ´èµ³è¶´è»è»è¿°è¿¦è¿¢è¿ªè¿¥"],["ada1","è¿­è¿«è¿¤è¿¨ééééééééééééé¢é©éé­é³é é¢¨é£é£é¦é¦ä¹äº³ååå£ä¿¯å¦å¥ä¿¸å©ååå¼ååååä¿ºååå¨ä¿±å¡åååä¿³ä¿®å­åªä¿¾å«åå¼å¤å¥å¢ååååååååååªå¿åååå¨ååå·å¼å¥å²ååºåå©å­å¡åå®åª"],["ae40","å¦å§åå½åååååååå å¤å¥å¥å¥å¨å¨å¨å¨å¨å¨å§¬å¨ å¨£å¨©å¨¥å¨å¨å­«å±å®°å®³å®¶å®´å®®å®µå®¹å®¸å°å±å±å±å³­å³½å³»å³ªå³¨å³°å³¶å´å³´å·®å¸­å¸«åº«åº­åº§å¼±å¾å¾å¾æ"],["aea1","æ£æ¥æææ­æ©æ¯ææææææææææ³ææ¿ææ¾æ¯ææææææºææ½æªæ«æ¨ææææææææææææææææ¸ææææ ¡æ ¸æ¡æ¡æ¡æ ¹æ¡æ¡æ ©æ¢³æ æ¡æ¡æ ½æ´æ¡æ¡æ ¼æ¡æ ªæ¡æ æ æ¡æ®æ®æ®·æ°£æ°§æ°¨æ°¦æ°¤æ³°æµªæ¶æ¶æ¶æµ¦æµ¸æµ·æµæ¶"],["af40","æµ¬æ¶æµ®æµæµ´æµ©æ¶æ¶æµ¹æ¶æµ¥æ¶ççç¤çççç¹ç¹ç¼ç¹ç½ç¸ç·çç­çç®ç çªççççççç¾ççç²ç³ç½ç¼ç¹çç¸çç°çççç©çç ç¨ç©ç °ç §ç ¸ç ç ´ç ·"],["afa1","ç ¥ç ­ç  ç ç ²ç¥ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ç§¤ç§£ç§§ç§ç§¦ç§©ç§çªçªç«ç¬ç¬ç²ç´¡ç´ç´ç´ç´ ç´¢ç´ç´ç´ç´ç´ç´ç´ç´ç¼ºç½ç¾ç¿ç¿èèèèèè½è¿è±èè°èè­è´èè¸è³èè½èè¼è¯è­è¬èèèªè«è¨è¬è»è«èèèè¸èèèµè´èè²è¹è¶èèè±è¨è"],["b040","èèèªèè¤è©èè£èè¡°è¡·è¢è¢è¡½è¡¹è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è±è±ºè±¹è²¡è²¢èµ·èº¬è»è»è»è¾±ééè¿·éè¿ºè¿´éè¿½éè¿¸éé¡éé¢éééééééééé¢é£é¡"],["b0a1","ééé¤ééé»é£¢é¦¬éª¨é«é¬¥é¬²é¬¼ä¹¾åºå½ååååååå¥å¶åååµå´å·ååå¯å­ååå°åªå¯åååååååå¿åå¾åæ¼ååªå¦ååå¡ååå±åååå¯å¤å¸å®åå¬å£å³ååååååå å å å å¤åºå å µå·å¹å¤ å¥¢å¨¶å©å©å©¦å©ªå©"],["b140","å¨¼å©¢å©å©å©å­°å¯å¯å¯å¯å®¿å¯å°å°å°å± å±å±å´å´å´å´å´å´¢å´å´©å´å´å´¤å´§å´å·¢å¸¸å¸¶å¸³å¸·åº·åº¸åº¶åºµåº¾å¼µå¼·å½å½¬å½©å½«å¾å¾å¾å¾å¾¡å¾ å¾æ¿æ£ææ æ¨ææ´æ¦æ½"],["b1a1","ææ»æµææ¼æææææ¸ææææææ æ§æ²ææ¢æ¥æ·æ§ææªæ±æ©ææææ«æ¨ææææ¡æ¬ææææ»æ©æ¨æºæææææåæææææææ¬æææææææ¤æ¨æ¦ææ¹åææ¢æ¢¯æ¢¢æ¢æ¢µæ¡¿æ¡¶æ¢±æ¢§æ¢æ¢°æ¢æ£æ¢­æ¢æ¢æ¢æ¢æ¢¨æ¢æ¢¡æ¢æ¬²æ®º"],["b240","æ¯«æ¯¬æ°«æ¶æ¶¼æ·³æ·æ¶²æ·¡æ·æ·¤æ·»æ·ºæ¸æ·æ·æ¶¯æ·æ¶®æ·æ·¹æ¶¸æ··æ·µæ·æ·æ¸æ¶µæ·æ·«æ·æ·ªæ·±æ·®æ·¨æ·æ·æ¶ªæ·¬æ¶¿æ·¦ç¹ççç½ç¯ç½ç½çççççççççççç¾çç ç¶"],["b2a1","ç·çç¢ç¥ç¦ç¢ç°ççççµççççççç·ç¾ç¼ç¶ç¸çºç¡«ç¡ç¡ç¥¥ç¥¨ç¥­ç§»çªçªç¬ ç¬¨ç¬ç¬¬ç¬¦ç¬ç¬ç¬®ç²ç²ç²çµçµçµ±ç´®ç´¹ç´¼çµç´°ç´³çµç´¯çµç´²ç´±ç¼½ç¾ç¾ç¿ç¿ç¿èèèè¯èè£è«è©è°è¤èèµè·è¶è¹èèèè¸è¢èè½è«èèèèè è·è»è¼"],["b340","èè§èå½ªèèè¶èèµèèè±è¯èè¡è¢è¢è¢«è¢è¢è¢è¢è¦è¦è¨ªè¨è¨£è¨¥è¨±è¨­è¨è¨è¨¢è±è±è²©è²¬è²«è²¨è²ªè²§èµ§èµ¦è¶¾è¶ºè»è»ééééé£éééééé éé¢ééé"],["b3a1","é¨é­é½éééµé¦é£é§é­é©ééªéµé³é¸é°é´é¶é·é¬ééªé©ç« ç«é é é­é³¥é¹µé¹¿éº¥éº»å¢ååååååååæå±å²å´åµå©ååååå¥å»åå§å¼ååååååªååååå³å®åå¾å²åå»å¬å±å¾åå«ååå ¯å ªå ´å ¤å °å ±å ¡å å  å£¹å£ºå¥ "],["b440","å©·åªå©¿åªåªåª§å­³å­±å¯å¯å¯å¯å°å°å°±åµåµå´´åµå·½å¹å¸½å¹å¹å¹¾å»å»å»å»å¼¼å½­å¾©å¾ªå¾¨ææ¡æ²æ¶æ ææ£æºææ°æ»æ´æ¨æ±ææ¶ææææææ£ææææ©æææ"],["b4a1","ææ£ææ¡ææ­æ®æ¶æ´æªææææ¹ææ¦æ¢æ£æææ¯æ®æ°æ´æ¶æ¯ææºæ¾æ·æ¾æ¿æææ£ºæ£æ£ æ£æ£æ¤æ£æ£µæ£®æ£§æ£¹æ£æ£²æ££æ£æ£æ¤æ¤æ¤æ£æ£æ¥®æ£»æ¬¾æ¬ºæ¬½æ®æ®æ®¼æ¯¯æ°®æ°¯æ°¬æ¸¯æ¸¸æ¹æ¸¡æ¸²æ¹§æ¹æ¸ æ¸¥æ¸£æ¸æ¹æ¹æ¸¤æ¹æ¹®æ¸­æ¸¦æ¹¯æ¸´æ¹æ¸ºæ¸¬æ¹æ¸æ¸¾æ»"],["b540","æºæ¸æ¹æ¹£æ¹æ¹²æ¹©æ¹ççç¦ç°ç¡ç¶ç®ççççç¶ç¥ç´ç©çºçªç³ç¢ç¥çµç¶ç´ç¯çç¦ç¨ç¥ç¦ç«çªç¢çç£çççç ç»ç¼ççç´ççç­ç¡ç¡¬ç¡¯ç¨ç¨ç¨ç¨ç¨çª"],["b5a1","çªçªç«¥ç«£ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç²ç²¥çµçµçµ¨çµç´«çµ®çµ²çµ¡çµ¦çµ¢çµ°çµ³åç¿ç¿èèèèèèèèè¹èè¾èèè´èèè©èè¸èè èèèè¯è±è´èèè°èèè½è²èè¸èèèèèèèèèè­èèè¤èèè¡è£è£è¢±è¦è¦è¨»è© è©è©è¨¼è©"],["b640","è©è©è©è©è¨´è¨ºè¨¶è©è±¡è²è²¯è²¼è²³è²½è³è²»è³è²´è²·è²¶è²¿è²¸è¶è¶è¶è·è·è·è·è·è·è·è·è»»è»¸è»¼è¾é®éµé±é¸é²é¶ééµéé¾é£é¥éééé£éééééééééé"],["b6a1","ééééééé½éééé²ééééééé¯é²éé é é é£§é£ªé£¯é£©é£²é£­é¦®é¦­é»é»é»äºå­åµå²å³åå¾å¬å·å»å¯åå¿å·å½åå¦å¤å¢å£å¯åå¨åå¦ååååå£å¤å¯åå¡ååå¥åååå¡å¡å¡å¡å¡å¡å¡«å¡å¡­å¡å¡¢å¡å¡å¥§å«å«å«åª¾åª½åª¼"],["b740","åª³å«åª²åµ©åµ¯å¹å¹¹å»å»å¼å½å¾¬å¾®æææææ³ææ¹æææææææ¾æ´æ§æææ·æ¡æ¢ææ¾ææªæ­æ½æ¬æææææ¶ææææ¬ææ°ææææææææææ¦æ¥­"],["b7a1","æ¥æ¥·æ¥ æ¥æ¥µæ¤°æ¦æ¥æ¥¨æ¥«æ¥æ¥æ¥¹æ¦æ¥æ¥£æ¥æ­æ­²æ¯æ®¿æ¯æ¯½æº¢æº¯æ»æº¶æ»æºæºæ»æ»æº¥æºæº¼æººæº«æ»æºæºæ»æ»æºªæº§æº´ççç©ç¤çç§çç¬ç¦çç¥ççç¨ççºçç·çç¿ç¾ç¯çççççç¿çççç¶ç¸çç°çç²ç±çºç¿ç´ç³çççç«ç¦çç£"],["b840","ç¹çªç¬çç¥ç¨ç¢ç®ç¢ç¢°ç¢ç¢ç¢ç¢ç¡¼ç¢ç¢ç¡¿ç¥ºç¥¿ç¦è¬ç¦½ç¨ç¨ç¨ ç¨ç¨ç¨çªçª ç­·ç¯ç­ ç­®ç­§ç²±ç²³ç²µç¶çµ¹ç¶ç¶ç¶çµç½®ç½©ç½ªç½²ç¾©ç¾¨ç¾¤èèèèè±è°è¸è¥è®è³è«"],["b8a1","è¹èºè¦èèèè·è½è±èµè¦è«èè¬èè¼èµè¡è£è©è­èèèèè¹èèèèè¾è»èèèèè¡è£è£è£è£è£è£è£¡è£è£è£è¦è§£è©«è©²è©³è©¦è©©è©°èªè©¼è©£èª è©±èªè©­è©¢è©®è©¬è©¹è©»è¨¾è©¨è±¢è²è²è³è³è³è³è²²è³è³è³è·¡è·è·¨è·¯è·³è·ºè·ªè·¤è·¦èº²è¼è¼è»¾è¼"],["b940","è¾è¾²éééééé¼éééééééé¾éééé¬éªé©éé·éé¸é½éé¾ééé¤éé´éééé¹é¿éééééééééé·é»é¹é¶éé´é¶é é é é é é é£¼é£´"],["b9a1","é£½é£¾é¦³é¦±é¦´é«¡é³©éºé¼é¼é¼ å§å®å¥åå­ååååå±åå©å¢å³ååå±å­å¾åååå½åååååå·ååååå¶ååå¡µå¡¾å¢å¢å¢å¡¹å¢å¡½å£½å¤¥å¤¢å¤¤å¥ªå¥©å«¡å«¦å«©å«å«å«å«£å­µå¯å¯§å¯¡å¯¥å¯¦å¯¨å¯¢å¯¤å¯å°å±¢å¶å¶å¹å¹£å¹å¹å¹å»å»å¼å½å½°å¾¹æ"],["ba40","æ¿ææ·æ¢æ£ææææµæªææææ¤æ¸ææºææ§æ´æ­æ»æ²æ¡æææ¢æ¨ææ¦æ¦¨æ¦æ§æ¦®æ§æ§æ¦æ¦·æ¦»æ¦«æ¦´æ§æ§æ¦­æ§æ¦¦æ§æ¦£æ­æ­æ°³æ¼³æ¼æ»¾æ¼æ»´æ¼©æ¼¾æ¼ æ¼¬æ¼æ¼æ¼¢"],["baa1","æ»¿æ»¯æ¼æ¼±æ¼¸æ¼²æ¼£æ¼æ¼«æ¼¯æ¾æ¼ªæ»¬æ¼æ»²æ»æ»·ççç½çççç¾ççççç¤ç£çªç°ç­ççç§ççççç¡ç£çç½ç¿ç¡ç£ç¢ç¢§ç¢³ç¢©ç¢£ç¦ç¦ç¦ç¨®ç¨±çªªçª©ç«­ç«¯ç®¡ç®ç®ç­µç®ç®ç®ç®ç®¸ç®ç®ç²¹ç²½ç²¾ç¶»ç¶°ç¶ç¶½ç¶¾ç¶ ç·ç¶´ç¶²ç¶±ç¶ºç¶¢ç¶¿ç¶µç¶¸ç¶­ç·ç·ç¶¬"],["bb40","ç½°ç¿ ç¿¡ç¿èèèèèèèèè¿èè§èºèèèèèè¿èèèèè²èèè¸èèèè¼èèè¿èè»è¢è¥è´èèè·è©è£³è¤è£´è£¹è£¸è£½è£¨è¤è£¯èª¦èªèªèª£èªèª¡èªèª¤"],["bba1","èªªèª¥èª¨èªèªèªèª§è±ªè²è²è³è³è³èµ«è¶è¶è·¼è¼è¼è¼è¼è¾£é ééé£ééé¢ééééééµé¸é·é´é¸ééééé»ééé¨é¼éé¡é¨é©é£é¥é¤ééééééé¼éé¶é é é¢¯é¢±é¤é¤é¤é¤é§éª¯éª°é«¦é­é­é³´é³¶é³³éº¼é¼»é½ååå»åµå¹ååååå"],["bc40","åååååå°å²å®å»å¹å²å¿å´å©åååå´å¶å¯å°å¢å¢å¢å¢³å¢å¢®å¢©å¢¦å¥­å¬å«»å¬å«µå¬å¬å¯®å¯¬å¯©å¯«å±¤å±¥å¶å¶å¹¢å¹å¹¡å»¢å»å»å»å»£å» å½å½±å¾·å¾µæ¶æ§æ®æææ"],["bca1","æ¼æ°æ«æ¾æ§ææ«ææ¬ææ¤ææ®æ®æ©æ¯æ¹ææ²æææ°æ¥æææ©ææ®æ­æ«ææ¬ææ¢æ³æµæ·æ¸æ®æ«æ´æ±æ¨£æ¨æ§¨æ¨æ¨æ¨æ§½æ¨¡æ¨æ¨æ§³æ¨æ¨æ§­æ¨æ­æ­æ®¤æ¯æ¯æ¼¿æ½¼æ¾æ½æ½¦æ½æ¾æ½­æ½æ½¸æ½®æ¾æ½ºæ½°æ½¤æ¾æ½æ»æ½¯æ½ æ½çç¬ç±ç¨ççççç©çç"],["bd40","ç¾çç¿ç ç©çç¤ç¦ç¡ç¢ççºç¤çççççç£ç£ç¢ºç£ç¢¾ç£ç¢¼ç£ç¨¿ç¨¼ç©ç¨½ç¨·ç¨»çª¯çª®ç®­ç®±ç¯ç®´ç¯ç¯ç¯ç® ç¯ç³ç· ç·´ç·¯ç·»ç·ç·¬ç·ç·¨ç·£ç·ç·ç·©ç¶ç·ç·²ç·¹ç½µç½·ç¾¯"],["bda1","ç¿©è¦èèèè èèèè½èè®è¬è­èèè£è¡èè¬è¥è¿èèè´è¶è è¦è¸è¨èèèèè¡è¡è¤è¤è¤è¤è¤è¤èª¼è«è«è«èªè«è«¸èª²è«è«èª¿èª°è«è«èª¶èª¹è«è±è±è±¬è³ è³è³¦è³¤è³¬è³­è³¢è³£è³è³ªè³¡èµ­è¶è¶£è¸«è¸è¸è¸¢è¸è¸©è¸è¸¡è¸èººè¼è¼è¼è¼©è¼¦è¼ªè¼è¼"],["be40","è¼¥é©é®é¨é­é·é°é­é§é±éééééé»é·éªé¬é¤éé³é¼ééé°é²é­é±ééééé éééé ¡é «é é¢³é¤é¤é¤é¤é§é§é§é§é§é§é§é§éª·é«®é«¯é¬§é­é­é­·é­¯é´é´"],["bea1","é´éº©éº¾é»å¢¨é½åååååååªåååå³åå«å¹å©å¤å¸åªå¨å¥å±å¯å¬å¢å¶å£å¢¾å£å£å¥®å¬å¬´å­¸å¯°å°å½æ²ææ©æææ¶æ¾æææ°ææææ»æ¼ææææææ¿æææ¾æ´æææ¹æææ¸æ¨½æ¨¸æ¨ºæ©æ©«æ©æ¨¹æ©æ©¢æ©¡æ©æ©æ¨µæ©æ©æ­æ­·æ°æ¿æ¾±æ¾¡"],["bf40","æ¿æ¾¤æ¿æ¾§æ¾³æ¿æ¾¹æ¾¶æ¾¦æ¾ æ¾´ç¾çççççç¹çççççç¨çç£çççç¢ççç´ç¸çºç§ç¥ç ççç¥ç£¨ç£ç£¬ç£§ç¦¦ç©ç©ç©ç©ç©çªºç¯ç°ç¯ç¯¤ç¯ç¯¡ç¯©ç¯¦ç³ç³ç¸"],["bfa1","ç¸ç¸ç¸ç¸£ç¸ç¸ç¸ç¸ç½¹ç¾²ç¿°ç¿±ç¿®è¨è³è©è¨è»èèèèèèè¨è©èèè­èªèèèèè¢èè¡¡è¤ªè¤²è¤¥è¤«è¤¡è¦ªè¦¦è«¦è«ºè««è«±è¬è«è«§è«®è«¾è¬è¬è«·è«­è«³è«¶è«¼è±«è±­è²è³´è¹è¸±è¸´è¹è¸¹è¸µè¼»è¼¯è¼¸è¼³è¾¨è¾¦éµé´é¸é²é¼éºé´éé é¶é¸é³é¯é¢é¼é«éé"],["c040","éé¦é¡éé®éé»é§é¨éªéééééééééé¦éé °é ¸é »é ·é ­é ¹é ¤é¤é¤¨é¤é¤é¤¡é¤é§­é§¢é§±éª¸éª¼é«»é«­é¬¨é®é´é´£é´¦é´¨é´é´é»é»é¾é¾åªåå¡å²åµååååå"],["c0a1","åå£å£å£å£å¬°å¬ªå¬¤å­ºå°·å±¨å¶¼å¶ºå¶½å¶¸å¹«å½å¾½ææææ¦ææ²æ´ææææ æ°æ¦æ¬æ±æ¢æ­æææææªæªæªæª¢æªæ«æª£æ©¾æªæªæª æ­æ®®æ¯æ°æ¿æ¿±æ¿æ¿ æ¿æ¿¤æ¿«æ¿¯æ¾æ¿¬æ¿¡æ¿©æ¿æ¿®æ¿°ç§çç®ç¦ç¥ç­ç¬ç´ç çµçç°ç²ç©ç°ç¦ç¨ççççªç³çªç°ç¬"],["c140","ç§ç­ç¯ç£·ç£ºç£´ç£¯ç¤ç¦§ç¦ªç©çª¿ç°ç°ç¯¾ç¯·ç°ç¯ ç³ ç³ç³ç³¢ç³ç³ç³ç¸®ç¸¾ç¹ç¸·ç¸²ç¹ç¸«ç¸½ç¸±ç¹ç¹ç¸´ç¸¹ç¹ç¸µç¸¿ç¸¯ç½ç¿³ç¿¼è±è²è°è¯è³èèèºèèè¿è½èè¾è¨èè±èª"],["c1a1","èè¾èèèè¯èèè¨èè§èèè³èèè«è»èºèèè¤»è¤¶è¥è¤¸è¤½è¦¬è¬è¬è¬è¬è¬è¬ è¬è¬è¬è±è°¿è±³è³ºè³½è³¼è³¸è³»è¶¨è¹è¹è¹è¹è½è¼¾è½è½è¼¿é¿é½ééééé¹é£ééééé¨éµéé¥ééé¾é¬éé°éééééééé±é¸éééé éé¡é¢¶é¤µé¨"],["c240","é§¿é®®é®«é®ªé®­é´»é´¿éºé»é»é»é»é»é¼¾é½å¢åå®å£å£å¬¸å½æ£æ³æ´æ²æ¾ææºæ»æ·æ·ææ¦æª³æª¬æ«æª»æª¸æ«æª®æª¯æ­æ­¸æ®¯ççæ¿¾çæ¿ºççç»ç¼ç¾ç¸ç·çµç§ç¿ççç"],["c2a1","çç½ç¿ç»ç¼ç¤ç¦®ç©¡ç©¢ç© ç«ç«ç°«ç°§ç°ªç°ç°£ç°¡ç³§ç¹ç¹ç¹ç¹ç¹¡ç¹ç¹ç½ç¿¹ç¿»è·è¶èèèèè©èèèè°èºè¹è¦è¯è¬è²è è¦è¦²è§´è¬¨è¬¹è¬¬è¬«è±è´è¹è¹£è¹¦è¹¤è¹è¹è»è½è½éééé«é¬ééééé¢é³é®é¬é°éééééééé¢ééééé¤é£é¦"],["c340","é­é¹é¡é¡é¡é¡é¡é¢ºé¤¾é¤¿é¤½é¤®é¦¥é¨é«é¬é¬é­é­é­é¯é¯é¯½é¯é¯éµéµéµ é» é¼é¼¬å³å¥å£å£å£¢å¯µé¾å»¬æ²æ·æ¶æµæææ ææ«¥æ«æ«æ«ççç¨çççççççç¢ç¸"],["c3a1","çºç½çç£çççç¡çç¤ç¦±ç©«ç©©ç°¾ç°¿ç°¸ç°½ç°·ç±ç¹«ç¹­ç¹¹ç¹©ç¹ªç¾ç¹³ç¾¶ç¾¹ç¾¸èè©èèªèè¤è¥è·è»è è è¹è¾è¥ è¥è¥è¥è­è­è­è­è­è­è­è­è­è´è´è¹¼è¹²èºè¹¶è¹¬è¹ºè¹´è½è½è¾­ééé±é®é¡éééééééé¢ééé¤éé¨éé´é£éªé§é¡éé»é¡"],["c440","é¡é¡é¢¼é¥é¥é¨é¨é¬é¯¨é¯§é¯é¯é¶éµ¡éµ²éµªéµ¬éºéºéºéº´å¸å¨å·å¶å´å¼å£¤å­å­å­½å¯¶å·æ¸æºææææ¦æ§æ«¬ç¾ç°ç²çç»çç¢ç¥ç¤¦ç¤ªç¤¬ç¤«ç«ç«¶ç±ç±ç±ç³¯ç³°è¾®ç¹½ç¹¼"],["c4a1","çºç½èèè¦è»è¹èèºèèèèè è è¥¤è¦ºè§¸è­°è­¬è­¦è­¯è­è­«è´è´èºèºèºèºé´éééé½é¡é°é£é¥é¥é¦¨é¨«é¨°é¨·é¨µé°é°é¹¹éºµé»¨é¼¯é½é½£é½¡å·å¸åååå¤å±¬å·æ¼æ¾ææææ©æ«»æ¬æ«ºæ®²ççç§ççç©çç±çºçºç¾¼èè­èè £è ¢è ¡è è¥ªè¥¬è¦½è­´"],["c540","è­·è­½è´èºèºèºè½è¾¯éºé®é³éµéºé¸é²é«é¢é¸é¹é²é¿é¡§é¡¥é¥é©é©é©é¨¾é«é­é­é°­é°¥é¶¯é¶´é·é¶¸éºé»¯é¼é½é½¦é½§å¼å»åååå­¿å·å·å½æ¿æ¤æ¬æ­¡çççç¤çç®ç¬"],["c5a1","ç¦³ç± ç±è¾è½èè¥²è¥¯è§¼è®è´è´èºèºè½¡ééééé½é¾ééé¡«é¥é©é©é«é¬é±é°±é°¾é°»é·é·é¼´é½¬é½ªé¾åå·ææ£æ«æªæ¬æ¬çç«ç±¤ç±£ç±¥çºçºçºè¢è¸è¿è ±è®ééé£é é¤é¨é¡¯é¥é©é©é©é«é«é«é±é±é±é·¥éºé»´åå£©æ¬çç±ç²çç½ç¾è ¶è ¹è¡¢è®è®"],["c640","è®è·è´ééªééééé¡°é©é¬¢é­é±é·¹é·ºé¹¼é¹½é¼é½·é½²å»³æ¬ç£ç±¬ç±®è »è§èº¡éé²é°é¡±é¥é«é¬£é»ç¤çè®é·éé©¢é©¥çºè®èºªéé½é¾é¼é±·é±¸é»·è±é¿é¸ç¨é©ªé¬±é¸é¸ç±²"],["c940","ä¹ä¹åµååä¸ä¸ä¹äºåï¨å±®å½³ä¸åä¸ä¸®äºä»ä»ä»åå¼å¬å¹å å¤å¤¬å°å·¿æ¡æ®³æ¯æ°ç¿ä¸±ä¸¼ä»¨ä»ä»©ä»¡ä»ä»åååå¢å£å¤å¤¯å®å®å°å°»å±´å±³å¸åºåºå¿æææ°"],["c9a1","æ°¶æ±æ°¿æ°»ç®ç°çç¦¸èéä¼ä¼ä¼¬ä»µä¼ä»±ä¼ä»·ä¼ä¼ä¼ä¼ä¼¢ä¼ä¼ä»´ä¼å±åååå¦å¢ååååå¡åå®åªå´å¤¼å¦å¥¼å¦å¥»å¥¾å¥·å¥¿å­å°å°¥å±¼å±ºå±»å±¾å·å¹µåºå¼å¼å½´å¿å¿å¿æææ¤æ¡æ¦æ¢ææ ææ¥æ¯æ®æ¾æ¹æ¸æ»æºæ¿æ¼æ³æ°æ±æ±æ±æ±æ±æ±æ±"],["ca40","æ±ç±çç´çµççªç¿ç©µç½è¸è¼èè½è¿èè¥¾éééééé¢é¤é é£ä½ä¼»ä½¢ä½ä½ä½¤ä¼¾ä½§ä½ä½ä½ä½ä¼­ä¼³ä¼¿ä½¡åå¹ååå¡å­å®åå£å²ååå°å·åªååååå¥å"],["caa1","å½ååå¨å¤åå®å§å¥ååååååå¤å¥å¦¦å¦å¦ å¦å¦å¦¢å¦å¦å¦§å¦¡å®å®å°¨å°ªå²å²å²å²å²å²å²å²å²å²å· å¸å¸åºåºåºåºåºå¼å¼å½¸å½¶å¿å¿å¿å¿­å¿¨å¿®å¿³å¿¡å¿¤å¿£å¿ºå¿¯å¿·å¿»æå¿´æºæææææææ±æ»æºæ°æææ·æ½æ²æ´æ·æ°æ´æ³æ²æµææ"],["cb40","æææææææææ¯æ°æ°æ±¸æ±§æ±«æ²æ²æ²æ±±æ±¯æ±©æ²æ±­æ²æ²æ²æ±¦æ±³æ±¥æ±»æ²ç´çºç£ç¿ç½ççççºçççççççºç¹çççç¤½è´èèèèèèèèèèè"],["cba1","èèèè±¸è¿è¾¿éé¡é¥éé§é é°é¨é¯é­ä¸³ä¾ä½¼ä¾ä½½ä¾ä¾ä½¶ä½´ä¾ä¾ä½·ä½ä¾ä½ªä¾ä½¹ä¾ä½¸ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä½«ä½®åå¼å¾åµå²å³åå±å¼ååå¼åååå¿ååååå«åºå¾å¥å¬å´å¦åå¯å¡å åå£å§å¤å·å¹å¯å²å­å«å±å°å¶ååµå»å³å´å¢"],["cc40","å¨å½å¤å¥å¦µå¦ºå§å§å¦²å§å§å¦¶å¦¼å§å§å¦±å¦½å§å§å¦´å§å­¢å­¥å®å®å±å±å²®å²¤å² å²µå²¯å²¨å²¬å²å²£å²­å²¢å²ªå²§å²å²¥å²¶å²°å²¦å¸å¸å¸å¼¨å¼¢å¼£å¼¤å½å¾å½¾å½½å¿å¿¥æ­æ¦ææ²æ"],["cca1","æ´æææ³æææ¬æ¢æææ®æææææææ½æ­æ´ææ¾æªæ¶ææ®æ³æ¯æ»æ©æ°æ¸æ½æ¨æ»ææ¼ææææ»æææææ½æææ¶æææ¬æææ¶æ»ææææ´æææºæææææ½ææ¸æ¹ææ¬¥æ®æ­¾æ¯æ°æ²æ³¬æ³«æ³®æ³æ²¶æ³æ²­æ³§æ²·æ³æ³æ²ºæ³æ³æ³­æ³²"],["cd40","æ³æ³æ²´æ²æ²æ²æ³æ³æ´°æ³æ³æ²°æ³¹æ³æ³©æ³ççççççççççççªççççççççççç¤ç¡ç­ç¦ç¢ç ç¬ççç¨ç¿çç¾ççç¯ç³ç±ç°çµç¸ç¼ç¹ç»çº"],["cda1","ç·ç¥ç¤¿ç§ç©¸ç©»ç«»ç±µç³½èµèè®è£è¸èµè­è è èè«èèèèµè§è®è¼èèºè´è¨è¡è©èè¤èè¶è¢è°è¯è­è®è±è¿è¿è¿è¿è¿è¿è¿é²é´é¯é³é°é¹é½é¼éºéä¿ä¿ä¿ä¾²ä¿ä¿ä¿ä¿ä¿ä¿ä¾»ä¾³ä¿ä¿ä¿ä¾ºä¿ä¾¹ä¿¬ååååå½å¼åååååºå¡å­å¥å"],["ce40","åèå·å®åå¶ååå å°å¼å¢å¾å²åå°åµååå¤ååååååååå¥ååå£´å¤å¥å§¡å§å§®å¨å§±å§å§ºå§½å§¼å§¶å§¤å§²å§·å§å§©å§³å§µå§ å§¾å§´å§­å®¨å±å³å³å³å³å³å³"],["cea1","å³å³å³å³å³å³å³å³å³å³å³å³å³å³¸å·¹å¸¡å¸¢å¸£å¸ å¸¤åº°åº¤åº¢åºåº£åº¥å¼å¼®å½å¾æ·æ¹ææ²æææææææææææ¤æææ¦æ®ææææææµæææ«æ¹æææ¸æ¶ææææºææ»æ°æææªæ¿æ¶æ¡æ²æµææ¦æ¢æ³æ«æºææ´æ¹æ®ææææ²ææº"],["cf40","ææ»æ¸æææ·ææ«æ¤ææµææ³æ·æ¶æ®æ£ææ¹ææ§æ°æ²æ¼ææ­ææ®æ¦ææºææææªææ¬¨æ®æ®æ®¶æ¯æ¯æ¯ æ° æ°¡æ´¨æ´´æ´­æ´æ´¼æ´¿æ´æ´æ³æ´³æ´æ´æ´ºæ´æ´æ´æ´æµ"],["cfa1","æ´æ´æ´·æ´æ´æµæ´æ´ æ´¬æ´æ´¢æ´æ´ç·çç¾ç±ç°ç¡ç´çµç©çççç¬ç°ç³ç®çç¤ç¨ç«ççªç¦ç£çççççç¹ç¶çµç´ç«ç¿çç¾ççç¸çç¬ç®ç®ççç§çªç¹ççççççç·ç»çºç§ç¨ç ç ç ç ç ç ç ç ç ç ç¥ç¥ç¥ç¥ç¥ç§ç§ç§ç§ç§çª"],["d040","ç©¾ç«ç¬ç¬ç±ºç±¸ç±¹ç±¿ç²ç²ç´ç´ç´ç½ç¾ç¾ç¾¾èèèèè·èèè èèèèèè£èèèèèèèè¦èè¿è¡èèè¾è¹èè¨èèèºè«èè´è¬è¡è²èµèè»è¶è°èª"],["d0a1","è¤è èºè³è­è·è´è¼è³è¡è¡è¡§è¡ªè¡©è§è¨è¨èµ²è¿£è¿¡è¿®è¿ é±é½é¿ééé¾éééééééééééååååå¢å°åä¿µä¿´å³å·å¬ä¿¶ä¿·ååå å§åµå¯å±åååååååååå¡åååååå¢åååå¦å¢ååå§å³å¤åå¿ååå«ååå±"],["d140","åå»å·å¸å ååååååå ²åååºåå½å¼å¸å¶å¿ååå¹åå¤å¥å¨å¨å¨­å¨®å¨å¨å¨å¨å¨å¨³å­¬å®§å®­å®¬å°å±å±å³¬å³¿å³®å³±å³·å´å³¹å¸©å¸¨åº¨åº®åºªåº¬å¼³å¼°å½§æææ§"],["d1a1","ææ¢æææææææææææææææ²æææ¬æææ¶ææ¤æ¹æææ¼æ©ææ´ææææ­ææ³æææ¸ææææææææææææææææ æ æ¡æ ²æ ³æ »æ¡æ¡æ æ ±æ æ µæ «æ ­æ ¯æ¡æ¡æ ´æ æ æ æ ¦æ ¨æ ®æ¡æ ºæ ¥æ  æ¬¬æ¬¯æ¬­æ¬±æ¬´æ­­èæ®æ¯¦æ¯¤"],["d240","æ¯¨æ¯£æ¯¢æ¯§æ°¥æµºæµ£æµ¤æµ¶æ´æµ¡æ¶æµæµ¢æµ­æµ¯æ¶æ¶æ·¯æµ¿æ¶æµæµ§æµ æ¶æµ°æµ¼æµæ¶æ¶æ´¯æµ¨æ¶æµ¾æ¶æ¶æ´æ¶æµ»æµ½æµµæ¶çççççç¼¹ç¢çççç çççççççç¡çç¸"],["d2a1","ç·ç¶ççºç´ç¾ç¶ç³ç»çççç¥çç¼ç§ç£ç©ççççççççç¨ççç´çµç¡ççç°çç»ççç¿ç¶çºçççççççç£ççççç¢ç§ç £ç ¬ç ¢ç µç ¯ç ¨ç ®ç «ç ¡ç ©ç ³ç ªç ±ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç§«ç§¬ç§ ç§®ç§­ç§ªç§ç§ç§çªçªçªçªçªçªçªç«ç¬"],["d340","ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç²ç²ç²ç²ç²ç²ç²ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç½ç½¡ç½ç½ ç½ç½ç¾ç¾ç¿ç¿ç¿èè¾è¹èºè²è¹èµèè»èèè¯è¥è³è­èèèè¥èè¿èè¦èè¢"],["d3a1","èèèèªèè¼èèè¤è è·è¯è©èèèèèè¬èè§èèèè¢è¨èèèèèèèèèèè¥èè¡è§èèèèèèè¡è¡è¡­è¡µè¡¶è¡²è¢è¡±è¡¿è¡¯è¢è¡¾è¡´è¡¼è¨è±è±è±»è²¤è²£èµ¶èµ¸è¶µè¶·è¶¶è»è»è¿¾è¿µéè¿¿è¿»éè¿¼è¿¶éé ééé£éé¥ééééé¤é"],["d440","éééé¢éééé¼é££é«é¬¯ä¹¿å°åªå¡åå åååå²åååååå¢åååå©å«å£å¤ååå®å³åååå«å­å¬å®ååå­ååµå¶å¼ååå´åªåå¢å¶åµå°åå"],["d4a1","åå²å¥åå¹åå­å»ååååå»å å¢å¶åå´å å­å½å å¸å å³åå å®å£å²å¥å¬å¡å å¼å å§å å å±å©å°å å å¥å© å©å©å©§å©å¨¸å¨µå©­å©å©å©¥å©¬å©å©¤å©å©å©å©å©å©å©åªå¨¾å©å¨¹å©å©°å©©å©å©å©å©å©å­²å­®å¯å¯å±å´å´å´å´å´ å´å´¨å´å´¦å´¥å´"],["d540","å´°å´å´£å´å´®å¸¾å¸´åº±åº´åº¹åº²åº³å¼¶å¼¸å¾å¾å¾ææææ¾æ°æºææææ¤ææææ±ææ·ææ¿ææææ²æ¥æææ½æ½ææ­æææ«ææ¯æææ®æ¯æµææ­æ®æ¼æ¤æ»æ"],["d5a1","æ¸æææææ°æææ¥æ¡ææææ¢ææ¡¹æ¢æ¢æ¢æ¡­æ¡®æ¢®æ¢«æ¥æ¡¯æ¢£æ¢¬æ¢©æ¡µæ¡´æ¢²æ¢æ¡·æ¢æ¡¼æ¡«æ¡²æ¢ªæ¢æ¡±æ¡¾æ¢æ¢æ¢æ¢ æ¢æ¢¤æ¡¸æ¡»æ¢æ¢æ¢æ¡½æ¬¶æ¬³æ¬·æ¬¸æ®æ®æ®æ®æ®æ°ªæ·æ¶«æ¶´æ¶³æ¹´æ¶¬æ·©æ·¢æ¶·æ·¶æ·æ¸æ·æ· æ·æ·æ¶¾æ·¥æ·æ·æ·æ·´æ·æ¶½æ·­æ·°æ¶ºæ·æ·æ·æ·"],["d640","æ·æ·²æ·æ·½æ·æ·æ·£æ¶»çºçç·çç´çç°çç³çç¼ç¿çççç¸ç¶çççç¾ç»ç¼ç¿çççççççç¿çççç¶ç¸çµççç½çççºç¼ç¿ççç´çç¤ç£ççç"],["d6a1","çççççççç¹ç¯ç­ç±ç²ç´ç³ç½ç¥ç»çµç¡ç¡ç¡ç¡ç¡ç¡ç ¦ç¡ç¡ç¥¤ç¥§ç¥©ç¥ªç¥£ç¥«ç¥¡ç¦»ç§ºç§¸ç§¶ç§·çªçªçªç¬µç­ç¬´ç¬¥ç¬°ç¬¢ç¬¤ç¬³ç¬ç¬ªç¬ç¬±ç¬«ç¬­ç¬¯ç¬²ç¬¸ç¬ç¬£ç²ç²ç²ç²£ç´µç´½ç´¸ç´¶ç´ºçµç´¬ç´©çµçµç´¾ç´¿çµç´»ç´¨ç½£ç¾ç¾ç¾ç¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿è"],["d740","èèèèèèè¥èèè­èè¬èè¡èè§èè¢èè¸è³èºè´è²è´èè£è¨èèºè³è¤è´èèèèèµèè©è½èèèèèªèè¾è¥è¯èèè°è¿è¦èè®è¶èèèè¿è·"],["d7a1","èèèèºè°èè¹è³è¸èè´è»è¼èè½è¾è¡è¢è¢è¢¨è¢¢è¢ªè¢è¢è¢¡è¢è¢è¢§è¢è¢è¢è¢¤è¢¬è¢è¢è¢è¦è§è§è§è¨°è¨§è¨¬è¨è°¹è°»è±è±è±½è²¥èµ½èµ»èµ¹è¶¼è·è¶¹è¶¿è·è»è»è»è»è»è» è»¡é¤ééééé¡é¯éªé°é´é²é³éé«é¬é©éééééé¬é´é±é³é¸é¤é¹éª"],["d840","é«é·é¨é®éºééé¼é­é«é±é¯é¿éªé é£¥é¦åååååå£ååååå¨ååååååååå¤å§åå¨å¥å­å·åå¢ååååµåå£åå¤å½åå¦å¿åå¡ååå ©å ·"],["d8a1","å å å §å £å ¨åµå¡å ¥å å å ³å ¿å ¶å ®å ¹å ¸å ­å ¬å »å¥¡åª¯åªåªå©ºåª¢åªå©¸åª¦å©¼åª¥åª¬åªåª®å¨·åªåªåªåªåªåª©å©»å©½åªåªåªåªåªå¯ªå¯å¯å¯å¯å¯å¯å°å°°å´·åµåµ«åµåµå´¿å´µåµåµåµå´³å´ºåµå´½å´±åµåµå´¹åµå´¸å´¼å´²å´¶åµåµå¹å¹å½å¾¦å¾¥å¾«ææ¹ææ¢æææ"],["d940","æ²ææææµææ¸æ¼æ¾ææææææ¿æææææ±æ°ææ¥æ¨æ¯æææ³ææ æ¶ææ²æµæ¡ææ¾æææææææææææ°æææ²æ§æªæ¤ææ¨æ¥ææææ®ææ"],["d9a1","æ¼æ¬æ»ææ±æ¹æªæ²ææ¤æ£æ¤æ£æ¤ªæ£¬æ£ªæ£±æ¤æ£æ£·æ£«æ£¤æ£¶æ¤æ¤æ£³æ£¡æ¤æ£æ¤æ¥°æ¢´æ¤æ£¯æ£æ¤æ£¸æ£æ£½æ£¼æ£¨æ¤æ¤æ¤æ£æ£æ£æ£æ£¦æ£´æ£æ¤æ£æ£©æ¤æ¤¥æ£æ¬¹æ¬»æ¬¿æ¬¼æ®æ®æ®æ®æ®½æ¯°æ¯²æ¯³æ°°æ·¼æ¹æ¹æ¸æ¹æºæ¸¼æ¸½æ¹æ¹¢æ¸«æ¸¿æ¹æ¹æ¹³æ¸æ¸³æ¹æ¹æ¹æ¸»æ¸æ¸®æ¹"],["da40","æ¹¨æ¹æ¹¡æ¸±æ¸¨æ¹ æ¹±æ¹«æ¸¹æ¸¢æ¸°æ¹æ¹¥æ¸§æ¹¸æ¹¤æ¹·æ¹æ¹¹æ¹æ¹¦æ¸µæ¸¶æ¹ç çç¯ç»ç®ç±ç£ç¥ç¢ç²çç¨çºççççççççççç°ç¢ç±ç³ç§ç²ç­ç¦ç£çµçç®ç¬ç°ç«ç"],["daa1","çç¡ç­ç±ç¤ç£çç©ç ç²ç»ç¯ç¯ç¬ç§çç¡ç¦ççç¤ççççççççççççççç¬ç¡ ç¡¤ç¡¥ç¡ç¡­ç¡±ç¡ªç¡®ç¡°ç¡©ç¡¨ç¡ç¡¢ç¥´ç¥³ç¥²ç¥°ç¨ç¨ç¨ç¨ç¨çªç«¦ç«¤ç­ç¬»ç­ç­ç­ç­ç­ç­ç­ç²¢ç²ç²¨ç²¡çµçµ¯çµ£çµçµçµ§çµªçµçµ­çµçµ«çµçµçµ©çµçµçµç¼¾ç¼¿ç½¥"],["db40","ç½¦ç¾¢ç¾ ç¾¡ç¿èèèè¾èèèèèèè½èèºè¦è®è·è¸è¹èè¼è½è¿èµè»èè¹è£èè¨èè§è¤è¼è¶èèèè«è£è¿èèè¥èè¿è¡èèèèµèèèèèèèè³"],["dba1","èèºèèèªèèè¬è®èè»èè¢èèè¾èè¢è¦èè£èèªèè«èè¬è©èè¨èè¡è¡è¡è¢ºè£è¢¹è¢¸è£è¢¾è¢¶è¢¼è¢·è¢½è¢²è¤è£è¦è¦è¦è§è§è§è©è©è¨¹è©è©è©è©è©è©è©è©è©è©è©è©è±è²è²è²ºè²¾è²°è²¹è²µè¶è¶è¶è·è·è·è·è·è·è·è·è·è·è·è·è»¯è»·è»º"],["dc40","è»¹è»¦è»®è»¥è»µè»§è»¨è»¶è»«è»±è»¬è»´è»©é­é´é¯éé¬éé¿é¼éé¹é»éééééé¡é¤éé¢é ééé¥ééé¦ééééé¿é½ééé§ééé¤ééééé»ééééé¾é"],["dca1","ééééééé±é°é¬é°é®é é¢©é£«é³¦é»¹äºäºäº¶å½å¿åå®ååå´ååå°ååºå±ååå¶å¸ååºå¸å»å¼ååååååååååå©å¿ååååå¢ååå²ååååå¡å¡¨å¡¤å¡å¡å¡å¡¯å¡å¡å¡å¡å¡¥å¡å ½å¡£å¡±å£¼å«å«å«åªºåª¸åª±åªµåª°åª¿å«åª»å«"],["dd40","åª·å«å«åª´åª¶å«åª¹åªå¯å¯å¯å°å°³åµ±åµ£åµåµ¥åµ²åµ¬åµåµ¨åµ§åµ¢å·°å¹å¹å¹å¹å¹å»å»å»å»å»å½å¾¯å¾­æ·æææ«ææ¶æ²æ®ææ¯ææ©ææ é¨æ£æ¥æ¤ææ±æ«ææææ æ¤"],["dda1","æ³æææææ¹æ·æ¢æ£ææ¦æ°æ¨ææµæ¯ææææ¥æ§ææ§ææ®æ¡ææ¯æææææææææææ¸æ æ¥¦æ¥æ¤¸æ¥æ¥¢æ¥±æ¤¿æ¥æ¥ªæ¤¹æ¥æ¥æ¥æ¥ºæ¥æ¥æ¤µæ¥¬æ¤³æ¤½æ¥¥æ£°æ¥¸æ¤´æ¥©æ¥æ¥¯æ¥æ¥¶æ¥æ¥æ¥´æ¥æ¤»æ¥æ¤·æ¥æ¥æ¥æ¤²æ¥æ¤¯æ¥»æ¤¼æ­æ­æ­æ­æ­æ­æ®ï¨æ¯»æ¯¼"],["de40","æ¯¹æ¯·æ¯¸æºæ»æ»æºæ»æºæºæºæº æº±æº¹æ»æ»æº½æ»æºæ»æº·æº°æ»æº¦æ»æº²æº¾æ»æ»æ»æºæºæºæºæº¤æº¡æº¿æº³æ»æ»æºæº®æº£çççç£ç ççç¢ç²ç¸çªç¡ççççç°ççç"],["dea1","çççççççççç¼çç»çºçççççççççççççççççç¡ç¿ç¾ç½çç¹ç·æ¦ç¯ççç·ç¾ç¼ç¹ç¸çç»ç¶ç­çµç½ççµçççç çççç©ç§ççç­ç ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢¡ç¢ç¡¹ç¢ç¢ç¢ç¡»ç¥¼ç¦ç¥½ç¥¹ç¨ç¨ç¨ç¨ç¨ç¨ç¨¢ç¨"],["df40","ç¨ç¨çª£çª¢çªç««ç­¦ç­¤ç­­ç­´ç­©ç­²ç­¥ç­³ç­±ç­°ç­¡ç­¸ç­¶ç­£ç²²ç²´ç²¯ç¶ç¶ç¶ç¶çµ¿ç¶çµºç¶çµ»ç¶çµ¼ç¶ç¶ç¶çµ½ç¶ç½­ç½«ç½§ç½¨ç½¬ç¾¦ç¾¥ç¾§ç¿ç¿è¡è¤è è·èè©èè¢è²æ¡èè¶è§è¯"],["dfa1","èè¡èèèèèèè±è¿èè¶è¹èèè¥èèèè§è°èè½èèè´è³èèèè·èºè´èºèè¸è²èè©èèè¯èè­èè°è¹èèèè¯èèè»èè¶è³è¨è¾èè«è èè®èèèè·èèºèèµèè¸èèèè¶èèè£è£è£è£è£è£è£è£è£è¦è¦è§è§¥è§¤"],["e040","è§¡è§ è§¢è§è§¦è©¶èªè©¿è©¡è¨¿è©·èªèªè©µèªèªè©´è©ºè°¼è±è±è±¥è±¤è±¦è²è²è²è³èµ¨èµ©è¶è¶è¶è¶è¶è¶è¶è¶è¶è·°è· è·¬è·±è·®è·è·©è·£è·¢è·§è·²è·«è·´è¼è»¿è¼è¼è¼è¼è¼è¼è¼éé¿"],["e0a1","ééé½ééééééééé®é¯ééé°éºé¦é³é¥ééé®ééé­é¬éé é§é¯é¶é¡é°é±éé£éé²ééééé²ééééééééééºé½é¸éµé³é·é¸é²é é é é¢¬é£¶é£¹é¦¯é¦²é¦°é¦µéª­éª«é­é³ªé³­é³§éºé»½å¦ååå¨å³ååªåå¤åå¬å°å¯å£å "],["e140","åååå©å«å°å¬å§åååå¼ååååååºååå¿å¹å¢å¡¼å¢å¢å¢å¢å¡¿å¡´å¢å¡ºå¢å¢å¢å¡¶å¢å¢å¡»å¢å¢å£¾å¥«å«å«®å«¥å«å«ªå«å«­å««å«³å«¢å« å«å«¬å«å«å«å«¨å«å­·å¯ "],["e1a1","å¯£å±£å¶å¶åµ½å¶åµºå¶åµ·å¶å¶å¶åµ¾åµ¼å¶åµ¹åµ¿å¹å¹å¹å»å»å»å»å»å»å»å»å»å½å½å½¯å¾¶æ¬æ¨æææ±æ³æææ²æ¬ææ´ææºææ¥æ»æªæ¡ææ©æ§æ«æ«ææææ´æ¶æ²æ³æ½æµæ¦æ¦æææææææ ææ¿æ¿æ¬æ«ææ¥æ·æ³æ æ¡æ ææææ¢æ¦±æ¦¶æ§"],["e240","æ¦ æ§æ¦æ¦°æ¦¬æ¦¼æ¦æ¦æ¦æ¦§æ¦æ¦©æ¦¾æ¦¯æ¦¿æ§æ¦½æ¦¤æ§æ¦¹æ§æ¦æ§æ¦³æ¦æ¦ªæ¦¡æ¦æ§æ¦æ¦æ§æ¦µæ¦¥æ§æ­æ­æ­æ®æ®æ® æ¯æ¯æ¯¾æ»æ»µæ»±æ¼æ¼¥æ»¸æ¼·æ»»æ¼®æ¼æ½æ¼æ¼æ¼§æ¼æ¼»æ¼æ»­æ¼"],["e2a1","æ¼¶æ½³æ»¹æ»®æ¼­æ½æ¼°æ¼¼æ¼µæ»«æ¼æ¼æ½æ¼æ»½æ»¶æ¼¹æ¼æ»¼æ¼ºæ¼æ¼æ¼æ¼æ¼¡çççççççç»ççççççççççççç¢ç³ç±çµç²ç§ç®çççç½ççççççççç¸çç¼ççç®çç¯ç¾çç¢²ç¢ªç¢´ç¢­ç¢¨ç¡¾ç¢«ç¢ç¢¥ç¢ ç¢¬ç¢¢ç¢¤ç¦ç¦ç¦ç¦ç¦ç¦ç¦"],["e340","ç¦ç¦ç¦ç¦ç¨«ç©ç¨°ç¨¯ç¨¨ç¨¦çª¨çª«çª¬ç«®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®åç®ç®¤ç®ç²»ç²¿ç²¼ç²ºç¶§ç¶·ç·ç¶£ç¶ªç·ç·ç·ç¶ç·ç·ç·ç·ç·ç¶¯ç¶¹ç¶ç¶¼ç¶ç¶¦ç¶®ç¶©ç¶¡ç·ç½³ç¿¢ç¿£ç¿¥ç¿"],["e3a1","è¤èèèèèèèèèèèè¤è¡èèºèèè¬è®è«è¹è´èèèªèè±èèè§è»è¢èèèèè©è¯è¨èèè¶èè èèèèè°èè¡è³è£è¨è«èè®èè¡èèèè¬èè¾èè è²èªè­è¼èèºè±èµèè¦è§è¸è¤èè°èè£·è£§è£±è£²è£ºè£¾è£®è£¼è£¶è£»"],["e440","è£°è£¬è£«è¦è¦¡è¦è¦è§©è§«è§¨èª«èªèªèªèªèªè°½è±¨è±©è³è³è³è¶è¸è¸è·¿è¸è·½è¸è¸è¸è¸è¸è·¾è¸è¸è¼è¼è¼è¼é£éé é¢éééé¤é¡ééºé²é¹é³é¥é¤é¶ééºé ééªé"],["e4a1","é¦éé«é¹éé¿é£é®éééé¢é½éé¡ééééé§é¾éé©ééé­éé¡é¿éé½éºé¾éééé»ééé¿ééé é¢­é¢®é¤é¤é¤é¦é¦é§é¦¹é¦»é¦ºé§é¦½é§éª±é«£é«§é¬¾é¬¿é­ é­¡é­é³±é³²é³µéº§å¿åå°å¸ååå¶å¾ååå½åååå±å¯ååååµååååå"],["e540","ååå³å½å¬å¾å¸åªåºåå¢«å¢å¢±å¢ å¢£å¢¯å¢¬å¢¥å¢¡å£¿å«¿å«´å«½å«·å«¶å¬å«¸å¬å«¹å¬å¬å¬å¬å±§å¶å¶å¶å¶å¶¢å¶å¶å¶ å¶å¶¡å¶å¶å¹©å¹å¹ å¹ç·³å»å»å»¡å½å¾²æææ¹æ±æ°æ¢æ"],["e5a1","æææ¯æ­æææªæ¡ææ¦æ³æ­æ®æ°ææ ææææææææ£ææ¨æ±ææ¶æºæ¹æ»æ²æ³æµæ°æ©æ²æ·æªæ¯æ¨æ¨æ¨æ§¥æ§¸æ¨æ§±æ§¤æ¨ æ§¿æ§¬æ§¢æ¨æ¨æ§¾æ¨§æ§²æ§®æ¨æ§·æ§§æ©æ¨æ§¦æ§»æ¨æ§¼æ§«æ¨æ¨æ¨æ¨¥æ¨æ§¶æ¨¦æ¨æ§´æ¨æ­æ®¥æ®£æ®¢æ®¦æ°æ°æ¯¿æ°æ½æ¼¦æ½¾æ¾æ¿æ¾"],["e640","æ¾æ¾æ¾æ½¢æ½æ¾æ½æ¾æ½¶æ½¬æ¾æ½æ½²æ½æ½æ½æ¾æ¾æ½æ¼æ½¡æ½«æ½½æ½§æ¾æ½æ¾æ½©æ½¿æ¾æ½£æ½·æ½ªæ½»ç²ç¯çç°ç çç©çµçç¥çç¤ç¡çªçç§ç³ççççççç ççç¡çç"],["e6a1","ç¢çççççç½ççç¼ç¹ççç¾ç¥ççççç£çç¨çççççççççç£ç¢»ç£ç£ç£ç£ç£ç£ç£ç£ç£ç¦ç¦¡ç¦ ç¦ç¦¢ç¦æ­¶ç¨¹çª²çª´çª³ç®·ç¯ç®¾ç®¬ç¯ç®¯ç®¹ç¯ç®µç³ç³ç³ç³ç··ç·ç·ªç·§ç·ç·¡ç¸ç·ºç·¦ç·¶ç·±ç·°ç·®ç·ç½¶ç¾¬ç¾°ç¾­ç¿­ç¿«ç¿ªç¿¬ç¿¦ç¿¨è¤è§è£è"],["e740","èèè¢èèèèèèèèèè¤è»èèè©èèèèèè§èè»è«èºèèè´èªè²èè·è«è³è¼èèªè©èè¾è¨èè®èè½èè¶è±è¦è§è¨è°è¯è¹èè è°èèè¯è¢"],["e7a1","èè£è¤è·è¡è³èèèèè¡èèèè­èªèèèèè¯è¬èºè®èè¥èè»èµè¢è§è©è¡è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¦¢è¦¤è¦£è§­è§°è§¬è«è«èª¸è«è«è«è«èª»è«èª¾è«è«è«è«èªºèª½è«è°¾è±è²è³¥è³è³è³¨è³è³è³§è¶ è¶è¶¡è¶è¸ è¸£è¸¥è¸¤è¸®è¸è¸è¸è¸è¸è¸¦è¸§"],["e840","è¸è¸è¸è¸è¸è¸è¸è¼¬è¼¤è¼è¼è¼ è¼£è¼è¼é³é°é¯é§é«é¯é«é©éªé²é¦é®ééééééééééééé¶éé±ééé©éééé¯éé¨éééé¦éééé éé§éé"],["e8a1","éµé¡éé´é¼é¬é«é®é°é¤é¢ééééééééééé é é ¦é ©é ¨é  é é §é¢²é¤é£ºé¤é¤é¤é¤é¤é§é§é§é§é§é§é§é§é§é§é§é§éª³é«¬é««é«³é«²é«±é­é­é­§é­´é­±é­¦é­¶é­µé­°é­¨é­¤é­¬é³¼é³ºé³½é³¿é³·é´é´é³¹é³»é´é´é´éºé»é¼é¼ååååååå´å¡å°å å®"],["e940","å³å¦å£å­å²åå·ååå£å¢½å£å¢¿å¢ºå£å¢¼å£å¬å¬å¬å¬¡å¬å¬å¬å¬å¬¨å¬å¬ å¬å¯¯å¶¬å¶±å¶©å¶§å¶µå¶°å¶®å¶ªå¶¨å¶²å¶­å¶¯å¶´å¹§å¹¨å¹¦å¹¯å»©å»§å»¦å»¨å»¥å½å¾¼ææ¨æææ´ææææº"],["e9a1","æ¿æ¸æææææææ½ææææ³ææ³æ¿æ¼æ¢ææ¾æææææ½æ»æºææ£æ¨´æ©¦æ©æ©§æ¨²æ©¨æ¨¾æ©æ©­æ©¶æ©æ©æ¨¨æ©æ¨»æ¨¿æ©æ©ªæ©¤æ©æ©æ©æ©¯æ©©æ© æ¨¼æ©æ©æ©æ©æ©æ©æ­æ­æ­æ®§æ®ªæ®«æ¯æ¯æ°æ°æ°æ¾­æ¿æ¾£æ¿æ¾¼æ¿æ¿æ½æ¿æ¾½æ¾æ¿æ¾¨çæ¾¥æ¾®æ¾ºæ¾¬æ¾ªæ¿æ¾¿æ¾¸"],["ea40","æ¾¢æ¿æ¾«æ¿æ¾¯æ¾²æ¾°ççç¿ç¸ççççççççç½çç¼çççççç©ç¦ç§ç¬ç¥ç«çªç¿çç çççç¡ççç¯ç­ç±ç½ç³ç¼çµç²ç°ç»ç¦ççç¡ççç¢ç£çç"],["eaa1","çç£ç£©ç£¥ç£ªç£ç££ç£ç£¡ç£¢ç£­ç£ç£ ç¦¤ç©ç©ç©çª¶çª¸çªµçª±çª·ç¯ç¯£ç¯§ç¯ç¯ç¯¥ç¯ç¯¨ç¯¹ç¯ç¯ªç¯¢ç¯ç¯«ç¯ç¯ç³ç³ç³ç³ç³ç¸ç¸¡ç¸ç¸ç¸ç¸ ç¸ç¸ç¸ç¸ç¸ç¸¢ç¸ç¸ç¸ç¸ç¸ç¸¥ç¸¤ç½ç½»ç½¼ç½ºç¾±ç¿¯èªè©è¬è±è¦è®è¹èµè«è°è¬è´è²è·è§è²èèèèèè«èèè¡è"],["eb40","èèè¤èè¢èèèè£è¾èè±èè®èµèè§è èè¦èèè¥è¬è£è¥è¤èèèèèèèèèè¹èè£èèèèèèèèèè¤è¤¦è¤°è¤­è¤®è¤§è¤±è¤¢è¤©è¤£è¤¯è¤¬è¤è§±è« "],["eba1","è«¢è«²è«´è«µè«è¬è«¤è«è«°è«è«è«¡è«¨è«¿è«¯è«»è²è²è²è³µè³®è³±è³°è³³èµ¬èµ®è¶¥è¶§è¸³è¸¾è¸¸è¹è¹è¸¶è¸¼è¸½è¹è¸°è¸¿èº½è¼¶è¼®è¼µè¼²è¼¹è¼·è¼´é¶é¹é»ééºé³éµé¶éééééé§ééééééºé¸é¼éé£éééé­éééééºé¥éé¹é·é´éé¤é¿é©é¹éµéªéé"],["ec40","éé¾ééé»éé¼éé¾é¹éºé¶é¿éµé½é©éééééééé°é¸é µé ¯é ²é¤¤é¤é¤§é¤©é¦é§®é§¬é§¥é§¤é§°é§£é§ªé§©é§§éª¹éª¿éª´éª»é«¶é«ºé«¹é«·é¬³é®é®é®é­¼é­¾é­»é®é®é®é®é­ºé®"],["eca1","é­½é®é´¥é´é´ é´é´é´©é´é´é´¢é´é´é´éºéºéºéº®éº­é»é»é»ºé¼é¼½å¦å¥å¢å¤å å©å´ååååååå¾åå¿åå£å£å£å£å¬­å¬¥å¬²å¬£å¬¬å¬§å¬¦å¬¯å¬®å­»å¯±å¯²å¶·å¹¬å¹ªå¾¾å¾»ææµæ¼æ§æ æ¥æ¤æ¨ææ¯æ©æ£æ«æ¤æ¨æææ¶æææªæªæªæª¥æªæªæªæª¡æªæªæªæª"],["ed40","æªæªæª¨æª¤æªæ©¿æª¦æªæªæªæªæ­æ®­æ°æ¿æ¾©æ¿´æ¿æ¿£æ¿æ¿­æ¿§æ¿¦æ¿æ¿²æ¿æ¿¢æ¿¨ç¡ç±ç¨ç²ç¤ç°ç¢ç³ç®ç¯çç²ç«ççªç­ç±ç¥ç¯çççççççççç¤ç©çµç«ç²ç·ç¶"],["eda1","ç´ç±ç¨ç°ç£³ç£½ç¤ç£»ç£¼ç£²ç¤ç£¹ç£¾ç¤ç¦«ç¦¨ç©ç©ç©ç©ç©ç©çª¾ç«ç«ç°ç°ç¯²ç°ç¯¿ç¯»ç°ç¯´ç°ç¯³ç°ç°ç°ç°ç¯¸ç¯½ç°ç¯°ç¯±ç°ç°ç³¨ç¸­ç¸¼ç¹ç¸³é¡ç¸¸ç¸ªç¹ç¹ç¹ç¸©ç¹ç¸°ç¸»ç¸¶ç¹ç¸ºç½ç½¿ç½¾ç½½ç¿´ç¿²è¬è»èèèèèè¼è©èèèèèèè§èè èè£è»è¤èè"],["ee40","è·è¼èè¡èºè¸èèèèèèèèè¢èèèè¹è¶èèèè¨è¾èªè­èè°è¬è¹èµè¼è®èèèèè·è¯èèè´è¶è¿è¸è½èè²è¤µè¤³è¤¼è¤¾è¥è¥è¤·è¥è¦­è¦¯è¦®è§²è§³è¬"],["eea1","è¬è¬è¬è¬è¬è¬¢è¬è¬è¬è¬è¬è¬è¬è¬è¬è¬è±è±°è±²è±±è±¯è²è²è³¹èµ¯è¹è¹è¹è¹è¹è¹è½è½éé¾é¸éé¢éééé¡éé é¡éé¯é¤ééé¼ééé¶éééé é­éééªé¹ééééé±é·é»é¡éé£é§ééééééééé·é®é°é¬é éééééé¡é"],["ef40","ééééé±é¡é¡é¡é¡é¡é¡é¤¥é¤«é¤¬é¤ªé¤³é¤²é¤¯é¤­é¤±é¤°é¦é¦£é¦¡é¨é§ºé§´é§·é§¹é§¸é§¶é§»é§½é§¾é§¼é¨éª¾é«¾é«½é¬é«¼é­é®é®¨é®é®é®¦é®¡é®¥é®¤é®é®¢é® é®¯é´³éµéµ§é´¶é´®é´¯é´±é´¸é´°"],["efa1","éµéµéµé´¾é´·éµé´½ç¿µé´­éºéºéºéº°é»é»é»»é»¿é¼¤é¼£é¼¢é½é¾ å±å­å®ååååååå¥°å¬¼å±©å±ªå·å¹­å¹®æææ­æ®æ±æªæ°æ«ææ©æ¿ææ½æ¸æææ¼ææææææ«æª¹æª½æ«¡æ«æªºæª¶æª·æ«æª´æª­æ­æ¯æ°çççççççæ¿¿çæ¿»ç¦æ¿¼æ¿·ççç¿ç¹çç½ç¶"],["f040","ç¸ççµçç¾ç¶ç»ççççç¤çççççç¦ç½ç¬ççºç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¦­ç¦¬ç©ç°ç°©ç°ç° ç°ç°­ç°ç°¦ç°¨ç°¢ç°¥ç°°ç¹ç¹ç¹ç¹£ç¹ç¹¢ç¹ç¹ç¹ ç¹ç¹ç¾µç¾³ç¿·ç¿¸èµèè"],["f0a1","èèèè´èèèèè³èµè½èèè¿èèèèè±è¶èè¤è¸è·è¾è©è§è¦è¢èè«èªè¥èè³è¤èèèè­èè£è¤èèè è´è¨èè¥è¥è¥è¥è¥è¥è¥è¥è¬ªè¬§è¬£è¬³è¬°è¬µè­è¬¯è¬¼è¬¾è¬±è¬¥è¬·è¬¦è¬¶è¬®è¬¤è¬»è¬½è¬ºè±è±µè²è²è²è³¾è´è´è´è¹è¹¢è¹ è¹è¹è¹è¹¥è¹§"],["f140","è¹è¹è¹¡è¹è¹©è¹è½è½è½è½é¨éºé»é¾é¨é¥é§é¯éªéµééé·éééé§ééªéé¦éééééé±éé²é¤é¨é´é£é¥éééé³ééå·éééé£é¢é¥é¬é®é¨é«é¤éª"],["f1a1","é¢é¥éééééºé¡é¡é¡é¢¸é¥é¤¼é¤ºé¨é¨é¨é¨é¨é¨é¨é¨é¨é¨é«é«é¬é¬é¬é¬©é¬µé­é­é­é¯é¯é¯é®¿é¯é®µé®¸é¯é®¶é¯é®¹é®½éµéµéµéµéµéµéµéµéµéµéµéµéµéµéµéºéºé»é¼é¼é¼é¼¥é¼«é¼ªé¼©é¼¨é½é½å´åµåå·å´å«å­å¦å§åªå¬å£å£å£å¤å¬½å¬¾å¬¿å·å¹°"],["f240","å¾¿æ»æææææææææææ«§æ« æ«æ«æ«æ«æ«æ«æ«æ««æ«æ«æ«æ­ æ®°æ°çç§ç çç«ç¡ç¢ç£ç©çç¤ççªçççççç¥ç¦ç¤ç£ç¡ççç·ççç çççç±ç¤ç¤"],["f2a1","ç¤¡ç¤ç¤ç¤ç¦°ç©§ç©¨ç°³ç°¼ç°¹ç°¬ç°»ç³¬ç³ªç¹¶ç¹µç¹¸ç¹°ç¹·ç¹¯ç¹ºç¹²ç¹´ç¹¨ç½ç½ç¾ç¾ç¾·ç¿½ç¿¾è¸èèè¤è¡è£è«è±è­èè¡è¨èèè¬è²è¸èèè£èèè°è¦è¯èè¢è èºè è¶è·è è è è è¼è è¿è è è¥¢è¥è¥è¥è¥¡è¥è¥è¥è¥è¦è¦·è¦¶è§¶è­è­è­è­è­è­è­è­è­"],["f340","è­è­è­è­è±è±·è±¶è²è´è´è´è¶¬è¶ªè¶­è¶«è¹­è¹¸è¹³è¹ªè¹¯è¹»è»è½è½è½è½è½è¾´éé¿é°é­ééééééé¹é¬ééé©é¦ééé®é£éééééé§é½ééé¡é©é«é¬é¨é¦"],["f3a1","é³é·é¶éééé¡é¡é¡é¡é¢¿é¢½é¢»é¢¾é¥é¥é¥é¦¦é¦§é¨é¨é¨¥é¨é¨¤é¨é¨¢é¨ é¨§é¨£é¨é¨é¨é«é¬é¬é¬é¬é¬·é¯ªé¯«é¯ é¯é¯¤é¯¦é¯¢é¯°é¯é¯é¯¬é¯é¯é¯¥é¯é¯¡é¯éµ·é¶é¶é¶é¶éµ±é¶éµ¸é¶é¶é¶éµ½éµ«éµ´éµµéµ°éµ©é¶éµ³éµ»é¶éµ¯éµ¹éµ¿é¶éµ¨éºéºé»é»¼é¼­é½é½é½é½é½é½å·å²"],["f440","åµå³å££å­å·å·å»®å»¯å¿å¿æ¹ææææææ¨æ£æ¤æ«³æ«°æ«ªæ«¨æ«¹æ«±æ«®æ«¯ç¼çµç¯ç·ç´ç±çç¸ç¿çºç¹çç»ç³çççç¨ç½ç¼çºç«çªç¾ç­ççççç²ç¤¥ç¤£ç¤§ç¤¨ç¤¤ç¤©"],["f4a1","ç¦²ç©®ç©¬ç©­ç«·ç±ç±ç±ç±ç±ç³®ç¹»ç¹¾çºçºç¾ºç¿¿è¹èèèè¨è©è¢è¿èè¾èèè¶èèèèè½è è è è è è è¥£è¥¦è¦¹è§·è­ è­ªè­è­¨è­£è­¥è­§è­­è¶®èºèºèºè½è½è½è½è½è½éééé·éµé²é³ééé»é ééé¾ééé¨éééµéé·éééééºéé¸éé¿"],["f540","é¼éé¶éééé éé®é¯é¹é»é½é¾é¡ é¡¢é¡£é¡é£é£é¥é¥é¥é¥é¥é¥é¨²é¨´é¨±é¨¬é¨ªé¨¶é¨©é¨®é¨¸é¨­é«é«é«é¬é¬é¬é°é°é¯·é°é°é¯¸é±é°é°é°é°é°é°é¶é¶é¶¤é¶é¶é¶é¶é¶"],["f5a1","é¶ é¶é¶é¶ªé¶é¶¡é¶é¶¢é¶¨é¶é¶£é¶¿é¶©é¶é¶¦é¶§éºéºéºé»¥é»¤é»§é»¦é¼°é¼®é½é½ é½é½é½é¾åºå¹åååå½å¾å­å­å·å·å»±æ½ææ¬æ«¼æ¬æ«¸æ¬ççççççççççç¾ççªçç¤­ç¤±ç¤¯ç±ç±ç³²çºçºçºçºçºçºç½ç¾»è°èèèªè¦èè£èèè§è®è¡è è©èè¥"],["f640","è ©è è è  è ¤è è «è¡è¥­è¥©è¥®è¥«è§ºè­¹è­¸è­è­ºè­»è´è´è¶¯èºèºè½è½è½éééé¹é¿é»é¶é©é½é¼é°é¹éªé·é¬éé±é¥é¤é£éµéºé¿é¡é¡¤é£é£é£é¥é¥é¨¹é¨½é©é©é©é©é¨º"],["f6a1","é¨¿é«é¬é¬é¬é¬é¬ºé­é°«é°é°é°¬é°£é°¨é°©é°¤é°¡é¶·é¶¶é¶¼é·é·é·é·é¶¾é·é·é¶»é¶µé·é¶¹é¶ºé¶¬é·é¶±é¶­é·é¶³é·é¶²é¹ºéºé»«é»®é»­é¼é¼é¼é¼±é½é½¥é½¤é¾äº¹åååå¥±å­å­å·å·å»²æ¡æ æ¦æ¢æ¬æ¬æ¬æ°ççççççç©ç¿ççççç­ç­ç¤µç¦´ç©°ç©±ç±ç±ç±ç±ç±"],["f740","ç³´ç³±çºç½ç¾èè«è´èµè³è¬è²è¶è ¬è ¨è ¦è ªè ¥è¥±è¦¿è¦¾è§»è­¾è®è®è®è®è­¿è´èºèºèºèºèºèºèºè½ è½¢éééééééééééé¿é£é¡ªé¡©é£é¥é¥é©é©é©é©é©é©é©"],["f7a1","é©é©é©é«é¬é¬«é¬»é­é­é±é±é°¿é±é°¹é°³é±é°¼é°·é°´é°²é°½é°¶é·é·é·é·é·é·é·é·é·é·©é·é·é·é·µé·é·éº¶é»°é¼µé¼³é¼²é½é½«é¾é¾¢å½åå£¨å£§å¥²å­å·è ¯å½ææææ©æ¥ææ«æ¬æ¬æ¬æ¯ççç¢çççç°çç±§ç±¦çºè¬èºèè¹è¼è±è»è¾è °è ²è ®è ³è¥¶è¥´è¥³è§¾"],["f840","è®è®è®è®è±è´èºè½¤è½£é¼é¢ééééééé é©é©é¬é¬é¬ é±é±é±é±é±é±é±é±é±é±é·»é··é·¯é·£é·«é·¸é·¤é·¶é·¡é·®é·¦é·²é·°é·¢é·¬é·´é·³é·¨é·­é»é»é»²é»³é¼é¼é¼¸é¼·é¼¶é½é½"],["f8a1","é½±é½°é½®é½¯ååå­å±­æ­æ­æ®æ¬çç¡çç ç£çç¥çç¤¸ç¦·ç¦¶ç±ªçºç¾è­èè ¸è ·è µè¡è®è®èºèºèº èºé¾é½éé«é¨é©é¥ééééé¥é©é«é­é±£é±§é±¦é±¢é±é± é¸é·¾é¸é¸é¸é¸é¸é¸é¸é·¿é·½é¸éº é¼é½é½´é½µé½¶åæ®æ¸æ¬æ¬æ¬æ¬ç¢ç¦çªççç¤¹ç±©ç±«ç³¶çº"],["f940","çºçºçºè è¡èèèè¥¹è¥ºè¥¼è¥»è§¿è®è®èº¥èº¤èº£é®é­é¯é±é³éé¡²é¥é±¨é±®é±­é¸é¸é¸é¸é¸é¸éº¡é»µé¼é½é½¸é½»é½ºé½¹åç¦ç±¯è ¼è¶²èº¦éé´é¸é¶éµé© é±´é±³é±±é±µé¸é¸é»¶é¼"],["f9a1","é¾¤ç¨ç¥ç³·èªè ¾è ½è ¿è®è²èº©è»éé¡³é¡´é£é¥¡é¦«é©¤é©¦é©§é¬¤é¸é¸é½ææ¬ç§èèº¨éééé©©é©¨é¬®é¸ç©èè®éé±¹éº·çµé©«é±ºé¸ç©çªéº¤é½¾é½é¾ç¢é¹è£å¢»æç²§å«ºââ¦ââ â¬â£ââ©âââ¤âââªâ¡ââ§âââ¥âââ«â¢ââ¨ââââ­â®â°â¯â"]]},function(t,e,n){(function(){var e,r,i;r=n(47).Number,i=n(26),e=function(){function t(t,e,n){this.type=t,this.length=e,this.lengthType=null!=n?n:"count"}return t.prototype.decode=function(t,e){var n,o,a,s,u,l;if(a=t.pos,s=[],n=e,null!=this.length&&(o=i.resolveLength(this.length,t,e)),this.length instanceof r&&(Object.defineProperties(s,{parent:{value:e},_startOffset:{value:a},_currentOffset:{value:0,writable:!0},_length:{value:o}}),n=s),null==o||"bytes"===this.lengthType)for(u=null!=o?t.pos+o:(null!=e?e._length:void 0)?e._startOffset+e._length:t.length;t.pos<u;)s.push(this.type.decode(t,n));else for(l=0;l<o;l+=1)s.push(this.type.decode(t,n));return s},t.prototype.size=function(t,e){var n,o,a,s;if(!t)return this.type.size(null,e)*i.resolveLength(this.length,null,e);for(o=0,this.length instanceof r&&(o+=this.length.size(),e={parent:e}),a=0,s=t.length;a<s;a++)n=t[a],o+=this.type.size(n,e);return o},t.prototype.encode=function(t,e,n){var i,o,a,s,u,l;for(i=n,this.length instanceof r&&(i={pointers:[],startOffset:t.pos,parent:n},i.pointerOffset=t.pos+this.size(e,i),this.length.encode(t,e.length)),u=0,l=e.length;u<l;u++)a=e[u],this.type.encode(t,a,i);if(this.length instanceof r)for(o=0;o<i.pointers.length;)s=i.pointers[o++],s.type.encode(t,s.val)},t}(),t.exports=e}).call(this)},function(t,e,n){(function(){var e,r;r=n(26),e=function(){function t(t){this.fields=null!=t?t:{}}return t.prototype.decode=function(t,e,n){var r,i;return null==n&&(n=0),r=this._setup(t,e,n),this._parseFields(t,r,this.fields),null!=(i=this.process)&&i.call(r,t),r},t.prototype._setup=function(t,e,n){var r;return r={},Object.defineProperties(r,{parent:{value:e},_startOffset:{value:t.pos},_currentOffset:{value:0,writable:!0},_length:{value:n}}),r},t.prototype._parseFields=function(t,e,n){var i,o,a;for(i in n)o=n[i],a="function"==typeof o?o.call(e,e):o.decode(t,e),void 0!==a&&(a instanceof r.PropertyDescriptor?Object.defineProperty(e,i,a):e[i]=a),e._currentOffset=t.pos-e._startOffset},t.prototype.size=function(t,e,n){var r,i,o,a,s;null==t&&(t={}),null==n&&(n=!0),r={parent:e,val:t,pointerSize:0},o=0,s=this.fields;for(i in s)a=s[i],null!=a.size&&(o+=a.size(t[i],r));return n&&(o+=r.pointerSize),o},t.prototype.encode=function(t,e,n){var r,i,o,a,s,u,l;null!=(u=this.preEncode)&&u.call(e,t),r={pointers:[],startOffset:t.pos,parent:n,val:e,pointerSize:0},r.pointerOffset=t.pos+this.size(e,r,!1),l=this.fields;for(o in l)s=l[o],null!=s.encode&&s.encode(t,e[o],r);for(i=0;i<r.pointers.length;)a=r.pointers[i++],a.type.encode(t,a.val,a.parent)},t}(),t.exports=e}).call(this)},function(t,e,n){t.exports=!n(17)&&!n(37)(function(){return 7!=Object.defineProperty(n(174)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(19),i=n(20).document,o=r(i)&&r(i.createElement);t.exports=function(t){return o?i.createElement(t):{}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){t.exports=n(27)},function(t,e,n){var r=n(18),i=n(28),o=n(58);t.exports=n(17)?Object.defineProperties:function(t,e){i(t);for(var n,a=o(e),s=a.length,u=0;s>u;)r.f(t,n=a[u++],e[n]);return t}},function(t,e,n){var r=n(36),i=n(35),o=n(335)(!1),a=n(121)("IE_PROTO");t.exports=function(t,e){var n,s=i(t),u=0,l=[];for(n in s)n!=a&&r(s,n)&&l.push(n);for(;e.length>u;)r(s,n=e[u++])&&(~o(l,n)||l.push(n));return l}},function(t,e,n){var r=n(120),i=Math.max,o=Math.min;t.exports=function(t,e){return t=r(t),t<0?i(t+e,0):o(t,e)}},function(t,e,n){t.exports={default:n(343),__esModule:!0}},function(t,e,n){var r=n(113);t.exports=Array.isArray||function(t){return"Array"==r(t)}},function(t,e,n){var r=n(179),i=n(123).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,i)}},function(t,e,n){"use strict";e.__esModule=!0,e.default=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}},function(t,e,n){"use strict";e.__esModule=!0;var r=n(131),i=function(t){return t&&t.__esModule?t:{default:t}}(r);e.default=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,i.default)(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}()},function(t,e,n){"use strict";var r=n(18).f,i=n(75),o=n(187),a=n(38),s=n(188),u=n(80),l=n(119),c=n(176),f=n(359),h=n(17),d=n(79).fastKey,p=n(132),g=h?"_s":"size",v=function(t,e){var n,r=d(e);if("F"!==r)return t._i[r];for(n=t._f;n;n=n.n)if(n.k==e)return n};t.exports={getConstructor:function(t,e,n,l){var c=t(function(t,r){s(t,c,e,"_i"),t._t=e,t._i=i(null),t._f=void 0,t._l=void 0,t[g]=0,void 0!=r&&u(r,n,t[l],t)});return o(c.prototype,{clear:function(){for(var t=p(this,e),n=t._i,r=t._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];t._f=t._l=void 0,t[g]=0},delete:function(t){var n=p(this,e),r=v(n,t);if(r){var i=r.n,o=r.p;delete n._i[r.i],r.r=!0,o&&(o.n=i),i&&(i.p=o),n._f==r&&(n._f=i),n._l==r&&(n._l=o),n[g]--}return!!r},forEach:function(t){p(this,e);for(var n,r=a(t,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(t){return!!v(p(this,e),t)}}),h&&r(c.prototype,"size",{get:function(){return p(this,e)[g]}}),c},def:function(t,e,n){var r,i,o=v(t,e);return o?o.v=n:(t._l=o={i:i=d(e,!0),k:e,v:n,p:r=t._l,n:void 0,r:!1},t._f||(t._f=o),r&&(r.n=o),t[g]++,"F"!==i&&(t._i[i]=o)),t},getEntry:v,setStrong:function(t,e,n){l(t,e,function(t,n){this._t=p(t,e),this._k=n,this._l=void 0},function(){for(var t=this,e=t._k,n=t._l;n&&n.r;)n=n.p;return t._t&&(t._l=n=n?n.n:t._t._f)?"keys"==e?c(0,n.k):"values"==e?c(0,n.v):c(0,[n.k,n.v]):(t._t=void 0,c(1))},n?"entries":"values",!n,!0),f(e)}}},function(t,e,n){var r=n(27);t.exports=function(t,e,n){for(var i in e)n&&t[i]?t[i]=e[i]:r(t,i,e[i]);return t}},function(t,e){t.exports=function(t,e,n,r){if(!(t instanceof e)||void 0!==r&&r in t)throw TypeError(n+": incorrect invocation!");return t}},function(t,e,n){var r=n(28);t.exports=function(t,e,n,i){try{return i?e(r(n)[0],n[1]):e(n)}catch(e){var o=t.return;throw void 0!==o&&r(o.call(t)),e}}},function(t,e,n){var r=n(48),i=n(12)("iterator"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||o[i]===t)}},function(t,e,n){"use strict";var r=n(20),i=n(6),o=n(79),a=n(37),s=n(27),u=n(187),l=n(80),c=n(188),f=n(19),h=n(78),d=n(18).f,p=n(360)(0),g=n(17);t.exports=function(t,e,n,v,y,b){var m=r[t],w=m,x=y?"set":"add",_=w&&w.prototype,k={};return g&&"function"==typeof w&&(b||_.forEach&&!a(function(){(new w).entries().next()}))?(w=e(function(e,n){c(e,w,t,"_c"),e._c=new m,void 0!=n&&l(n,y,e[x],e)}),p("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","),function(t){var e="add"==t||"set"==t;t in _&&(!b||"clear"!=t)&&s(w.prototype,t,function(n,r){if(c(this,w,t),!e&&b&&!f(n))return"get"==t&&void 0;var i=this._c[t](0===n?0:n,r);return e?this:i})}),b||d(w.prototype,"size",{get:function(){return this._c.size}})):(w=v.getConstructor(e,t,y,x),u(w.prototype,n),o.NEED=!0),h(w,t),k[t]=w,i(i.G+i.W+i.F,k),b||v.setStrong(w,t,y),w}},function(t,e,n){var r=n(125),i=n(364);t.exports=function(t){return function(){if(r(this)!=t)throw TypeError(t+"#toJSON isn't generic");return i(this)}}},function(t,e,n){"use strict";var r=n(6);t.exports=function(t){r(r.S,t,{of:function(){for(var t=arguments.length,e=new Array(t);t--;)e[t]=arguments[t];return new this(e)}})}},function(t,e,n){"use strict";var r=n(6),i=n(175),o=n(38),a=n(80);t.exports=function(t){r(r.S,t,{from:function(t){var e,n,r,s,u=arguments[1];return i(this),e=void 0!==u,e&&i(u),void 0==t?new this:(n=[],e?(r=0,s=o(u,arguments[2],2),a(t,!1,function(t){n.push(s(t,r++))})):a(t,!1,n.push,n),new this(n))}})}},function(t,e){function n(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function r(t,e){this.source=t,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=e,this.destLen=0,this.ltree=new n,this.dtree=new n}function i(t,e,n,r){var i,o;for(i=0;i<n;++i)t[i]=0;for(i=0;i<30-n;++i)t[i+n]=i/n|0;for(o=r,i=0;i<30;++i)e[i]=o,o+=1<<t[i]}function o(t,e,n,r){var i,o;for(i=0;i<16;++i)t.table[i]=0;for(i=0;i<r;++i)t.table[e[n+i]]++;for(t.table[0]=0,o=0,i=0;i<16;++i)S[i]=o,o+=t.table[i];for(i=0;i<r;++i)e[n+i]&&(t.trans[S[e[n+i]]++]=i)}function a(t){t.bitcount--||(t.tag=t.source[t.sourceIndex++],t.bitcount=7);var e=1&t.tag;return t.tag>>>=1,e}function s(t,e,n){if(!e)return n;for(;t.bitcount<24;)t.tag|=t.source[t.sourceIndex++]<<t.bitcount,t.bitcount+=8;var r=t.tag&65535>>>16-e;return t.tag>>>=e,t.bitcount-=e,r+n}function u(t,e){for(;t.bitcount<24;)t.tag|=t.source[t.sourceIndex++]<<t.bitcount,t.bitcount+=8;var n=0,r=0,i=0,o=t.tag;do{r=2*r+(1&o),o>>>=1,++i,n+=e.table[i],r-=e.table[i]}while(r>=0);return t.tag=o,t.bitcount-=i,e.trans[n+r]}function l(t,e,n){var r,i,a,l,c,f;for(r=s(t,5,257),i=s(t,5,1),a=s(t,4,4),l=0;l<19;++l)k[l]=0;for(l=0;l<a;++l){var h=s(t,3,0);k[x[l]]=h}for(o(_,k,0,19),c=0;c<r+i;){var d=u(t,_);switch(d){case 16:var p=k[c-1];for(f=s(t,2,3);f;--f)k[c++]=p;break;case 17:for(f=s(t,3,3);f;--f)k[c++]=0;break;case 18:for(f=s(t,7,11);f;--f)k[c++]=0;break;default:k[c++]=d}}o(e,k,0,r),o(n,k,r,i)}function c(t,e,n){for(;;){var r=u(t,e);if(256===r)return d;if(r<256)t.dest[t.destLen++]=r;else{var i,o,a,l;for(r-=257,i=s(t,y[r],b[r]),o=u(t,n),a=t.destLen-s(t,m[o],w[o]),l=a;l<a+i;++l)t.dest[t.destLen++]=t.dest[l]}}}function f(t){for(var e,n,r;t.bitcount>8;)t.sourceIndex--,t.bitcount-=8;if(e=t.source[t.sourceIndex+1],e=256*e+t.source[t.sourceIndex],n=t.source[t.sourceIndex+3],n=256*n+t.source[t.sourceIndex+2],e!==(65535&~n))return p;for(t.sourceIndex+=4,r=e;r;--r)t.dest[t.destLen++]=t.source[t.sourceIndex++];return t.bitcount=0,d}function h(t,e){var n,i,o=new r(t,e);do{switch(n=a(o),s(o,2,0)){case 0:i=f(o);break;case 1:i=c(o,g,v);break;case 2:l(o,o.ltree,o.dtree),i=c(o,o.ltree,o.dtree);break;default:i=p}if(i!==d)throw new Error("Data error")}while(!n);return o.destLen<o.dest.length?"function"==typeof o.dest.slice?o.dest.slice(0,o.destLen):o.dest.subarray(0,o.destLen):o.dest}var d=0,p=-3,g=new n,v=new n,y=new Uint8Array(30),b=new Uint16Array(30),m=new Uint8Array(30),w=new Uint16Array(30),x=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),_=new n,k=new Uint8Array(320),S=new Uint16Array(16);!function(t,e){var n;for(n=0;n<7;++n)t.table[n]=0;for(t.table[7]=24,t.table[8]=152,t.table[9]=112,n=0;n<24;++n)t.trans[n]=256+n;for(n=0;n<144;++n)t.trans[24+n]=n;for(n=0;n<8;++n)t.trans[168+n]=280+n;for(n=0;n<112;++n)t.trans[176+n]=144+n;for(n=0;n<5;++n)e.table[n]=0;for(e.table[5]=32,n=0;n<32;++n)e.trans[n]=n}(g,v),i(y,b,4,3),i(m,w,2,1),y[28]=0,b[28]=258,t.exports=h},function(t,e,n){function r(t){var e;return 0===t.readBits(1)?16:(e=t.readBits(3))>0?17+e:(e=t.readBits(3),e>0?8+e:17)}function i(t){if(t.readBits(1)){var e=t.readBits(3);return 0===e?1:t.readBits(e)+(1<<e)}return 0}function o(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function a(t){var e,n,r,i=new o;if(i.input_end=t.readBits(1),i.input_end&&t.readBits(1))return i;if(7===(e=t.readBits(2)+4)){if(i.is_metadata=!0,0!==t.readBits(1))throw new Error("Invalid reserved bit");if(0===(n=t.readBits(2)))return i;for(r=0;r<n;r++){var a=t.readBits(8);if(r+1===n&&n>1&&0===a)throw new Error("Invalid size byte");i.meta_block_length|=a<<8*r}}else for(r=0;r<e;++r){var s=t.readBits(4);if(r+1===e&&e>4&&0===s)throw new Error("Invalid size nibble");i.meta_block_length|=s<<4*r}return++i.meta_block_length,i.input_end||i.is_metadata||(i.is_uncompressed=t.readBits(1)),i}function s(t,e,n){var r;return n.fillBitWindow(),e+=n.val_>>>n.bit_pos_&N,r=t[e].bits-z,r>0&&(n.bit_pos_+=z,e+=t[e].value,e+=n.val_>>>n.bit_pos_&(1<<r)-1),n.bit_pos_+=t[e].bits,t[e].value}function u(t,e,n,r){for(var i=0,o=I,a=0,s=0,u=32768,l=[],c=0;c<32;c++)l.push(new A(0,0));for(P(l,0,5,t,U);i<e&&u>0;){var f,h=0;if(r.readMoreInput(),r.fillBitWindow(),h+=r.val_>>>r.bit_pos_&31,r.bit_pos_+=l[h].bits,(f=255&l[h].value)<B)a=0,n[i++]=f,0!==f&&(o=f,u-=32768>>f);else{var d,p,g=f-14,v=0;if(f===B&&(v=o),s!==v&&(a=0,s=v),d=a,a>0&&(a-=2,a<<=g),a+=r.readBits(g)+3,p=a-d,i+p>e)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var y=0;y<p;y++)n[i+y]=s;i+=p,0!==s&&(u-=p<<15-s)}}if(0!==u)throw new Error("[ReadHuffmanCodeLengths] space = "+u);for(;i<e;i++)n[i]=0}function l(t,e,n,r){var i,o=0,a=new Uint8Array(t);if(r.readMoreInput(),1===(i=r.readBits(2))){for(var s,l=t-1,c=0,f=new Int32Array(4),h=r.readBits(2)+1;l;)l>>=1,++c;for(s=0;s<h;++s)f[s]=r.readBits(c)%t,a[f[s]]=2;switch(a[f[0]]=1,h){case 1:break;case 3:if(f[0]===f[1]||f[0]===f[2]||f[1]===f[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(f[0]===f[1])throw new Error("[ReadHuffmanCode] invalid symbols");a[f[1]]=1;break;case 4:if(f[0]===f[1]||f[0]===f[2]||f[0]===f[3]||f[1]===f[2]||f[1]===f[3]||f[2]===f[3])throw new Error("[ReadHuffmanCode] invalid symbols");r.readBits(1)?(a[f[2]]=3,a[f[3]]=3):a[f[0]]=2}}else{var s,d=new Uint8Array(U),p=32,g=0,v=[new A(2,0),new A(2,4),new A(2,3),new A(3,2),new A(2,0),new A(2,4),new A(2,3),new A(4,1),new A(2,0),new A(2,4),new A(2,3),new A(3,2),new A(2,0),new A(2,4),new A(2,3),new A(4,5)];for(s=i;s<U&&p>0;++s){var y,b=j[s],m=0;r.fillBitWindow(),m+=r.val_>>>r.bit_pos_&15,r.bit_pos_+=v[m].bits,y=v[m].value,d[b]=y,0!==y&&(p-=32>>y,++g)}if(1!==g&&0!==p)throw new Error("[ReadHuffmanCode] invalid num_codes or space");u(d,t,a,r)}if(0===(o=P(e,n,z,a,t)))throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return o}function c(t,e,n){var r,i;return r=s(t,e,n),i=O.kBlockLengthPrefixCode[r].nbits,O.kBlockLengthPrefixCode[r].offset+n.readBits(i)}function f(t,e,n){var r;return t<G?(n+=H[t],n&=3,r=e[n]+V[t]):r=t-G+1,r}function h(t,e){for(var n=t[e],r=e;r;--r)t[r]=t[r-1];t[0]=n}function d(t,e){var n,r=new Uint8Array(256);for(n=0;n<256;++n)r[n]=n;for(n=0;n<e;++n){var i=t[n];t[n]=r[i],i&&h(r,i)}}function p(t,e){this.alphabet_size=t,this.num_htrees=e,this.codes=new Array(e+e*q[t+31>>>5]),this.htrees=new Uint32Array(e)}function g(t,e){var n,r,o,a={num_htrees:null,context_map:null},u=0;e.readMoreInput();var c=a.num_htrees=i(e)+1,f=a.context_map=new Uint8Array(t);if(c<=1)return a;for(n=e.readBits(1),n&&(u=e.readBits(4)+1),r=[],o=0;o<W;o++)r[o]=new A(0,0);for(l(c+u,r,0,e),o=0;o<t;){var h;if(e.readMoreInput(),0===(h=s(r,0,e)))f[o]=0,++o;else if(h<=u)for(var p=1+(1<<h)+e.readBits(h);--p;){if(o>=t)throw new Error("[DecodeContextMap] i >= context_map_size");f[o]=0,++o}else f[o]=h-u,++o}return e.readBits(1)&&d(f,t),a}function v(t,e,n,r,i,o,a){var u,l=2*n,c=n,f=s(e,n*W,a);u=0===f?i[l+(1&o[c])]:1===f?i[l+(o[c]-1&1)]+1:f-2,u>=t&&(u-=t),r[n]=u,i[l+(1&o[c])]=u,++o[c]}function y(t,e,n,r,i,o){var a,s=i+1,u=n&i,l=o.pos_&S.IBUF_MASK;if(e<8||o.bit_pos_+(e<<3)<o.bit_end_pos_)for(;e-- >0;)o.readMoreInput(),r[u++]=o.readBits(8),u===s&&(t.write(r,s),u=0);else{if(o.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;o.bit_pos_<32;)r[u]=o.val_>>>o.bit_pos_,o.bit_pos_+=8,++u,--e;if(a=o.bit_end_pos_-o.bit_pos_>>3,l+a>S.IBUF_MASK){for(var c=S.IBUF_MASK+1-l,f=0;f<c;f++)r[u+f]=o.buf_[l+f];a-=c,u+=c,e-=c,l=0}for(var f=0;f<a;f++)r[u+f]=o.buf_[l+f];if(u+=a,e-=a,u>=s){t.write(r,s),u-=s;for(var f=0;f<u;f++)r[f]=r[s+f]}for(;u+e>=s;){if(a=s-u,o.input_.read(r,u,a)<a)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");t.write(r,s),e-=a,u=0}if(o.input_.read(r,u,e)<e)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");o.reset()}}function b(t){var e=t.bit_pos_+7&-8;return 0==t.readBits(e-t.bit_pos_)}function m(t){var e=new _(t),n=new S(e);return r(n),a(n).meta_block_length}function w(t,e){var n=new _(t);null==e&&(e=m(t));var r=new Uint8Array(e),i=new k(r);return x(n,i),i.pos<i.buffer.length&&(i.buffer=i.buffer.subarray(0,i.pos)),i.buffer}function x(t,e){var n,o,u,h,d,m,w,x,_,k=0,P=0,I=0,B=0,z=[16,15,11,4],N=0,U=0,j=0,H=[new p(0,0),new p(0,0),new p(0,0)],V=128+S.READ_SIZE;_=new S(t),I=r(_),o=(1<<I)-16,u=1<<I,h=u-1,d=new Uint8Array(u+V+C.maxDictionaryWordLength),m=u,w=[],x=[];for(var q=0;q<3*W;q++)w[q]=new A(0,0),x[q]=new A(0,0);for(;!P;){var Z,Y,X,K,J,Q,$,tt,et,nt=0,rt=[1<<28,1<<28,1<<28],it=[0],ot=[1,1,1],at=[0,1,0,1,0,1],st=[0],ut=null,lt=null,ct=null,ft=0,ht=null,dt=0,pt=0,gt=null,vt=0,yt=0,bt=0;for(n=0;n<3;++n)H[n].codes=null,H[n].htrees=null;_.readMoreInput();var mt=a(_);if(nt=mt.meta_block_length,k+nt>e.buffer.length){var wt=new Uint8Array(k+nt);wt.set(e.buffer),e.buffer=wt}if(P=mt.input_end,Z=mt.is_uncompressed,mt.is_metadata)for(b(_);nt>0;--nt)_.readMoreInput(),_.readBits(8);else if(0!==nt)if(Z)_.bit_pos_=_.bit_pos_+7&-8,y(e,nt,k,d,h,_),k+=nt;else{for(n=0;n<3;++n)ot[n]=i(_)+1,ot[n]>=2&&(l(ot[n]+2,w,n*W,_),l(M,x,n*W,_),rt[n]=c(x,n*W,_),st[n]=1);for(_.readMoreInput(),Y=_.readBits(2),X=G+(_.readBits(4)<<Y),K=(1<<Y)-1,J=X+(48<<Y),lt=new Uint8Array(ot[0]),n=0;n<ot[0];++n)_.readMoreInput(),lt[n]=_.readBits(2)<<1;var xt=g(ot[0]<<F,_);Q=xt.num_htrees,ut=xt.context_map;var _t=g(ot[2]<<D,_);for($=_t.num_htrees,ct=_t.context_map,H[0]=new p(L,Q),H[1]=new p(R,ot[1]),H[2]=new p(J,$),n=0;n<3;++n)H[n].decode(_);for(ht=0,gt=0,tt=lt[it[0]],yt=E.lookupOffsets[tt],bt=E.lookupOffsets[tt+1],et=H[1].htrees[0];nt>0;){var kt,St,Ct,At,Pt,Et,Ot,Tt,It,Bt,Lt;for(_.readMoreInput(),0===rt[1]&&(v(ot[1],w,1,it,at,st,_),rt[1]=c(x,W,_),et=H[1].htrees[it[1]]),--rt[1],kt=s(H[1].codes,et,_),St=kt>>6,St>=2?(St-=2,Ot=-1):Ot=0,Ct=O.kInsertRangeLut[St]+(kt>>3&7),At=O.kCopyRangeLut[St]+(7&kt),Pt=O.kInsertLengthPrefixCode[Ct].offset+_.readBits(O.kInsertLengthPrefixCode[Ct].nbits),Et=O.kCopyLengthPrefixCode[At].offset+_.readBits(O.kCopyLengthPrefixCode[At].nbits),U=d[k-1&h],j=d[k-2&h],Bt=0;Bt<Pt;++Bt)_.readMoreInput(),0===rt[0]&&(v(ot[0],w,0,it,at,st,_),rt[0]=c(x,0,_),ft=it[0]<<F,ht=ft,tt=lt[it[0]],yt=E.lookupOffsets[tt],bt=E.lookupOffsets[tt+1]),It=E.lookup[yt+U]|E.lookup[bt+j],dt=ut[ht+It],--rt[0],j=U,U=s(H[0].codes,H[0].htrees[dt],_),d[k&h]=U,(k&h)===h&&e.write(d,u),++k;if((nt-=Pt)<=0)break;if(Ot<0){var It;if(_.readMoreInput(),0===rt[2]&&(v(ot[2],w,2,it,at,st,_),rt[2]=c(x,2*W,_),pt=it[2]<<D,gt=pt),--rt[2],It=255&(Et>4?3:Et-2),vt=ct[gt+It],(Ot=s(H[2].codes,H[2].htrees[vt],_))>=X){var Rt,Mt,Ft;Ot-=X,Mt=Ot&K,Ot>>=Y,Rt=1+(Ot>>1),Ft=(2+(1&Ot)<<Rt)-4,Ot=X+(Ft+_.readBits(Rt)<<Y)+Mt}}if((Tt=f(Ot,z,N))<0)throw new Error("[BrotliDecompress] invalid distance");if(B=k<o&&B!==o?k:o,Lt=k&h,Tt>B){if(!(Et>=C.minDictionaryWordLength&&Et<=C.maxDictionaryWordLength))throw new Error("Invalid backward reference. pos: "+k+" distance: "+Tt+" len: "+Et+" bytes left: "+nt);var Ft=C.offsetsByLength[Et],Dt=Tt-B-1,zt=C.sizeBitsByLength[Et],Nt=(1<<zt)-1,Wt=Dt&Nt,Ut=Dt>>zt;if(Ft+=Wt*Et,!(Ut<T.kNumTransforms))throw new Error("Invalid backward reference. pos: "+k+" distance: "+Tt+" len: "+Et+" bytes left: "+nt);var jt=T.transformDictionaryWord(d,Lt,Ft,Et,Ut);if(Lt+=jt,k+=jt,nt-=jt,Lt>=m){e.write(d,u);for(var Gt=0;Gt<Lt-m;Gt++)d[Gt]=d[m+Gt]}}else{if(Ot>0&&(z[3&N]=Tt,++N),Et>nt)throw new Error("Invalid backward reference. pos: "+k+" distance: "+Tt+" len: "+Et+" bytes left: "+nt);for(Bt=0;Bt<Et;++Bt)d[k&h]=d[k-Tt&h],(k&h)===h&&e.write(d,u),++k,--nt}U=d[k-1&h],j=d[k-2&h]}k&=1073741823}}e.write(d,k&h)}var _=n(197).BrotliInput,k=n(197).BrotliOutput,S=n(416),C=n(198),A=n(199).HuffmanCode,P=n(199).BrotliBuildHuffmanTable,E=n(420),O=n(421),T=n(422),I=8,B=16,L=256,R=704,M=26,F=6,D=2,z=8,N=255,W=1080,U=18,j=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),G=16,H=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),V=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),q=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);p.prototype.decode=function(t){var e,n,r=0;for(e=0;e<this.num_htrees;++e)this.htrees[e]=r,n=l(this.alphabet_size,this.codes,r,t),r+=n},e.BrotliDecompressedSize=m,e.BrotliDecompressBuffer=w,e.BrotliDecompress=x,C.init()},function(t,e){function n(t){this.buffer=t,this.pos=0}function r(t){this.buffer=t,this.pos=0}n.prototype.read=function(t,e,n){this.pos+n>this.buffer.length&&(n=this.buffer.length-this.pos);for(var r=0;r<n;r++)t[e+r]=this.buffer[this.pos+r];return this.pos+=n,n},e.BrotliInput=n,r.prototype.write=function(t,e){if(this.pos+e>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(t.subarray(0,e),this.pos),this.pos+=e,e},e.BrotliOutput=r},function(t,e,n){var r=n(417);e.init=function(){e.dictionary=r.init()},e.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]),e.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]),e.minDictionaryWordLength=4,e.maxDictionaryWordLength=24},function(t,e){function n(t,e){this.bits=t,this.value=e}function r(t,e){for(var n=1<<e-1;t&n;)n>>=1;return(t&n-1)+n}function i(t,e,r,i,o){do{i-=r,t[e+i]=new n(o.bits,o.value)}while(i>0)}function o(t,e,n){for(var r=1<<e-n;e<a&&!((r-=t[e])<=0);)++e,r<<=1;return e-n}e.HuffmanCode=n;var a=15;e.BrotliBuildHuffmanTable=function(t,e,s,u,l){var c,f,h,d,p,g,v,y,b,m,w,x=e,_=new Int32Array(a+1),k=new Int32Array(a+1);for(w=new Int32Array(l),h=0;h<l;h++)_[u[h]]++;for(k[1]=0,f=1;f<a;f++)k[f+1]=k[f]+_[f];for(h=0;h<l;h++)0!==u[h]&&(w[k[u[h]]++]=h);if(y=s,b=1<<y,m=b,1===k[a]){for(d=0;d<m;++d)t[e+d]=new n(0,65535&w[0]);return m}for(d=0,h=0,f=1,p=2;f<=s;++f,p<<=1)for(;_[f]>0;--_[f])c=new n(255&f,65535&w[h++]),i(t,e+d,p,b,c),d=r(d,f);for(v=m-1,g=-1,f=s+1,p=2;f<=a;++f,p<<=1)for(;_[f]>0;--_[f])(d&v)!==g&&(e+=b,y=o(_,f,s),b=1<<y,m+=b,g=d&v,t[x+g]=new n(y+s&255,e-x-g&65535)),c=new n(f-s&255,65535&w[h++]),i(t,e+(d>>s),p,b,c),d=r(d,f);return m}},function(t,e,n){(function(){var e,r,i,o,a,s,u,l,c,f,h,d,p,g,v,y,b,m,w,x,_,k,S,C,A,P,E;w=n(133),k=n(423),P=n(424),o=P.BK,c=P.CR,d=P.LF,g=P.NL,a=P.CB,i=P.BA,m=P.SP,x=P.WJ,m=P.SP,o=P.BK,d=P.LF,g=P.NL,e=P.AI,r=P.AL,y=P.SA,b=P.SG,_=P.XX,u=P.CJ,P.ID,v=P.NS,P.characterClasses,E=n(425),f=E.DI_BRK,h=E.IN_BRK,s=E.CI_BRK,l=E.CP_BRK,E.PR_BRK,A=E.pairTable,C=k.toByteArray("AA4IAAAAAAAAAhqg5VV7NJtZvz7fTC8zU5deplUlMrQoWqmqahD5So0aipYWrUhVFSVBQ10iSTtUtW6nKDVF6k7d75eQfEUbFcQ9KiFS90tQEolcP23nrLPmO+esr/+f39rr/a293t/e7/P8nmfvlz0O6RvrBJADtbBNaD88IOKTOmOrCqhu9zE770vc1pBV/xL5dxj2V7Zj4FGSomFKStCWNlV7hG1VabZfZ1LaHbFrRwzzLjzPoi1UHDnlV/lWbhgIIJvLBp/pu7AHEdRnIY+ROdXxg4fNpMdTxVnnm08OjozejAVsBqwqz8kddGRlRxsd8c55dNZoPuex6a7Dt6L0NNb03sqgTlR2/OT7eTt0Y0WnpUXxLsp5SMANc4DsmX4zJUBQvznwexm9tsMH+C9uRYMPOd96ZHB29NZjCIM2nfO7tsmQveX3l2r7ft0N4/SRJ7kO6Y8ZCaeuUQ4gMTZ67cp7TgxvlNDsPgOBdZi2YTam5Q7m3+00l+XG7PrDe6YoPmHgK+yLih7fAR16ZFCeD9WvOVt+gfNW/KT5/M6rb/9KERt+N1lad5RneVjzxXHsLofuU+TvrEsr3+26sVz5WJh6L/svoPK3qepFH9bysDljWtD1F7KrxzW1i9r+e/NLxV/acts7zuo304J9+t3Pd6Y6u8f3EAqxNRgv5DZjaI3unyvkvHPya/v3mWVYOC38qBq11+yHZ2bAyP1HbkV92vdno7r2lxz9UwCdCJVfd14NLcpO2CadHS/XPJ9doXgz5vLv/1OBVS3gX0D9n6LiNIDfpilO9RsLgZ2W/wIy8W/Rh93jfoz4qmRV2xElv6p2lRXQdO6/Cv8f5nGn3u0wLXjhnvClabL1o+7yvIpvLfT/xsKG30y/sTvq30ia9Czxp9dr9v/e7Yn/O0QJXxxBOJmceP/DBFa1q1v6oudn/e6qc/37dUoNvnYL4plQ9OoneYOh/r8fOFm7yl7FETHY9dXd5K2n/qEc53dOEe1TTJcvCfp1dpTC334l0vyaFL6mttNEbFjzO+ZV2mLk0qc3BrxJ4d9gweMmjRorxb7vic0rSq6D4wzAyFWas1TqPE0sLI8XLAryC8tPChaN3ALEZSWmtB34SyZcxXYn/E4Tg0LeMIPhgPKD9zyHGMxxhxnDDih7eI86xECTM8zodUCdgffUmRh4rQ8zyA6ow/Aei+01a8OMfziQQ+GAEkhwN/cqUFYAVzA9ex4n6jgtsiMvXf5BtXxEU4hSphvx3v8+9au8eEekEEpkrkne/zB1M+HAPuXIz3paxKlfe8aDMfGWAX6Md6PuuAdKHFVH++Ed5LEji94Z5zeiJIxbmWeN7rr1/ZcaBl5/nimdHsHgIH/ssyLUXZ4fDQ46HnBb+hQqG8yNiKRrXL/b1IPYDUsu3dFKtRMcjqlRvONd4xBvOufx2cUHuk8pmG1D7PyOQmUmluisVFS9OWS8fPIe8LiCtjwJKnEC9hrS9uKmISI3Wa5+vdXUG9dtyfr7g/oJv2wbzeZU838G6mEvntUb3SVV/fBZ6H/sL+lElzeRrHy2Xbe7UWX1q5sgOQ81rv+2baej4fP4m5Mf/GkoxfDtT3++KP7do9Jn26aa6xAhCf5L9RZVfkWKCcjI1eYbm2plvTEqkDxKC402bGzXCYaGnuALHabBT1dFLuOSB7RorOPEhZah1NjZIgR/UFGfK3p1ElYnevOMBDLURdpIjrI+qZk4sffGbRFiXuEmdFjiAODlQCJvIaB1rW61Ljg3y4eS4LAcSgDxxZQs0DYa15wA032Z+lGUfpoyOrFo3mg1sRQtN/fHHCx3TrM8eTrldMbYisDLXbUDoXMLejSq0fUNuO1muX0gEa8vgyegkqiqqbC3W0S4cC9Kmt8MuS/hFO7Xei3f8rSvIjeveMM7kxjUixOrl6gJshe4JU7PhOHpfrRYvu7yoAZKa3Buyk2J+K5W+nNTz1nhJDhRUfDJLiUXxjxXCJeeaOe/r7HlBP/uURc/5efaZEPxr55Qj39rfTLkugUGyMrwo7HAglfEjDriehF1jXtwJkPoiYkYQ5aoXSA7qbCBGKq5hwtu2VkpI9xVDop/1xrC52eiIvCoPWx4lLl40jm9upvycVPfpaH9/o2D4xKXpeNjE2HPQRS+3RFaYTc4Txw7Dvq5X6JBRwzs9mvoB49BK6b+XgsZVJYiInTlSXZ+62FT18mkFVcPKCJsoF5ahb19WheZLUYsSwdrrVM3aQ2XE6SzU2xHDS6iWkodk5AF6F8WUNmmushi8aVpMPwiIfEiQWo3CApONDRjrhDiVnkaFsaP5rjIJkmsN6V26li5LNM3JxGSyKgomknTyyrhcnwv9Qcqaq5utAh44W30SWo8Q0XHKR0glPF4fWst1FUCnk2woFq3iy9fAbzcjJ8fvSjgKVOfn14RDqyQuIgaGJZuswTywdCFSa89SakMf6fe+9KaQMYQlKxiJBczuPSho4wmBjdA+ag6QUOr2GdpcbSl51Ay6khhBt5UXdrnxc7ZGMxCvz96A4oLocxh2+px+1zkyLacCGrxnPzTRSgrLKpStFpH5ppKWm7PgMKZtwgytKLOjbGCOQLTm+KOowqa1sdut9raj1CZFkZD0jbaKNLpJUarSH5Qknx1YiOxdA5L6d5sfI/unmkSF65Ic/AvtXt98Pnrdwl5vgppQ3dYzWFwknZsy6xh2llmLxpegF8ayLwniknlXRHiF4hzzrgB8jQ4wdIqcaHCEAxyJwCeGkXPBZYSrrGa4vMwZvNN9aK0F4JBOK9mQ8g8EjEbIQVwvfS2D8GuCYsdqwqSWbQrfWdTRUJMqmpnWPax4Z7E137I6brHbvjpPlfNZpF1d7PP7HB/MPHcHVKTMhLO4f3CZcaccZEOiS2DpKiQB5KXDJ+Ospcz4qTRCRxgrKEQIgUkKLTKKwskdx2DWo3bg3PEoB5h2nA24olwfKSR+QR6TAvEDi/0czhUT59RZmO1MGeKGeEfuOSPWfL+XKmhqpZmOVR9mJVNDPKOS49Lq+Um10YsBybzDMtemlPCOJEtE8zaXhsaqEs9bngSJGhlOTTMlCXly9Qv5cRN3PVLK7zoMptutf7ihutrQ/Xj7VqeCdUwleTTKklOI8Wep9h7fCY0kVtDtIWKnubWAvbNZtsRRqOYl802vebPEkZRSZc6wXOfPtpPtN5HI63EUFfsy7U/TLr8NkIzaY3vx4A28x765XZMzRZTpMk81YIMuwJ5+/zoCuZj1wGnaHObxa5rpKZj4WhT670maRw04w0e3cZW74Z0aZe2n05hjZaxm6urenz8Ef5O6Yu1J2aqYAlqsCXs5ZB5o1JJ5l3xkTVr8rJQ09NLsBqRRDT2IIjOPmcJa6xQ1R5yGP9jAsj23xYDTezdyqG8YWZ7vJBIWK56K+iDgcHimiQOTIasNSua1fOBxsKMMEKd15jxTl+3CyvGCR+UyRwuSI2XuwRIPoNNclPihfJhaq2mKkNijwYLY6feqohktukmI3KDvOpN7ItCqHHhNuKlxMfBAEO5LjW2RKh6lE5Hd1dtAOopac/Z4FdsNsjMhXz/ug8JGmbVJTA+VOBJXdrYyJcIn5+OEeoK8kWEWF+wdG8ZtZHKSquWDtDVyhFPkRVqguKFkLkKCz46hcU1SUY9oJ2Sk+dmq0kglqk4kqKT1CV9JDELPjK1WsWGkEXF87g9P98e5ff0mIupm/w6vc3kCeq04X5bgJQlcMFRjlFWmSk+kssXCAVikfeAlMuzpUvCSdXiG+dc6KrIiLxxhbEVuKf7vW7KmDQI95bZe3H9mN3/77F6fZ2Yx/F9yClllj8gXpLWLpd5+v90iOaFa9sd7Pvx0lNa1o1+bkiZ69wCiC2x9UIb6/boBCuNMB/HYR0RC6+FD9Oe5qrgQl6JbXtkaYn0wkdNhROLqyhv6cKvyMj1Fvs2o3OOKoMYTubGENLfY5F6H9d8wX1cnINsvz+wZFQu3zhWVlwJvwBEp69Dqu/ZnkBf3nIfbx4TK7zOVJH5sGJX+IMwkn1vVBn38GbpTg9bJnMcTOb5F6Ci5gOn9Fcy6Qzcu+FL6mYJJ+f2ZZJGda1VqruZ0JRXItp8X0aTjIcJgzdaXlha7q7kV4ebrMsunfsRyRa9qYuryBHA0hc1KVsKdE+oI0ljLmSAyMze8lWmc5/lQ18slyTVC/vADTc+SNM5++gztTBLz4m0aVUKcfgOEExuKVomJ7XQDZuziMDjG6JP9tgR7JXZTeo9RGetW/Xm9/TgPJpTgHACPOGvmy2mDm9fl09WeMm9sQUAXP3Su2uApeCwJVT5iWCXDgmcuTsFgU9Nm6/PusJzSbDQIMfl6INY/OAEvZRN54BSSXUClM51im6Wn9VhVamKJmzOaFJErgJcs0etFZ40LIF3EPkjFTjGmAhsd174NnOwJW8TdJ1Dja+E6Wa6FVS22Haj1DDA474EesoMP5nbspAPJLWJ8rYcP1DwCslhnn+gTFm+sS9wY+U6SogAa9tiwpoxuaFeqm2OK+uozR6SfiLCOPz36LiDlzXr6UWd7BpY6mlrNANkTOeme5EgnnAkQRTGo9T6iYxbUKfGJcI9B+ub2PcyUOgpwXbOf3bHFWtygD7FYbRhb+vkzi87dB0JeXl/vBpBUz93VtqZi7AL7C1VowTF+tGmyurw7DBcktc+UMY0E10Jw4URojf8NdaNpN6E1q4+Oz+4YePtMLy8FPRP"),S=new w(C),p=function(){function t(t){this.string=t,this.pos=0,this.lastPos=0,this.curClass=null,this.nextClass=null}var n,p,w;return t.prototype.nextCodePoint=function(){var t,e;return t=this.string.charCodeAt(this.pos++),e=this.string.charCodeAt(this.pos),55296<=t&&t<=56319&&56320<=e&&e<=57343?(this.pos++,1024*(t-55296)+(e-56320)+65536):t},p=function(t){switch(t){case e:return r;case y:case b:case _:return r;case u:return v;default:return t}},w=function(t){switch(t){case d:case g:return o;case a:return i;case m:return x;default:return t}},t.prototype.nextCharClass=function(t){return null==t&&(t=!1),p(S.get(this.nextCodePoint()))},n=function(){function t(t,e){this.position=t,this.required=null!=e&&e}return t}(),t.prototype.nextBreak=function(){var t,e,r;for(null==this.curClass&&(this.curClass=w(this.nextCharClass()));this.pos<this.string.length;){if(this.lastPos=this.pos,e=this.nextClass,this.nextClass=this.nextCharClass(),this.curClass===o||this.curClass===c&&this.nextClass!==d)return this.curClass=w(p(this.nextClass)),new n(this.lastPos,!0);if(null==(t=function(){switch(this.nextClass){case m:return this.curClass;case o:case d:case g:return o;case c:return c;case a:return i}}.call(this))){switch(r=!1,A[this.curClass][this.nextClass]){case f:r=!0;break;case h:r=e===m;break;case s:if(!(r=e===m))continue;break;case l:if(e!==m)continue}if(this.curClass=this.nextClass,r)return new n(this.lastPos)}else if(this.curClass=t,this.nextClass===a)return new n(this.lastPos)}if(this.pos>=this.string.length)return this.lastPos<this.string.length?(this.lastPos=this.string.length,new n(this.string.length)):null},t}(),t.exports=p}).call(this)},function(t,e,n){"use strict";function r(){this.events={}}r.prototype.startTracking=function(t,e){var n=this.events[t]||(this.events[t]=[]);n.indexOf(e)<0&&n.push(e)},r.prototype.stopTracking=function(t,e){var n=this.events[t];if(n){var r=n.indexOf(e);r>=0&&n.splice(r,1)}},r.prototype.emit=function(t){var e=Array.prototype.slice.call(arguments,1),n=this.events[t];n&&n.forEach(function(t){t.apply(this,e)})},r.prototype.auto=function(t,e,n){this.startTracking(t,e),n(),this.stopTracking(t,e)},t.exports=r},function(t,e,n){"use strict";function r(t,e){this.defaultStyle=e||{},this.styleDictionary=t,this.styleOverrides=[]}var i=n(0).isString,o=n(0).isArray,a=n(0).isUndefined,s=n(0).isNull;r.prototype.clone=function(){var t=new r(this.styleDictionary,this.defaultStyle);return this.styleOverrides.forEach(function(e){t.styleOverrides.push(e)}),t},r.prototype.push=function(t){this.styleOverrides.push(t)},r.prototype.pop=function(t){for(t=t||1;t-- >0;)this.styleOverrides.pop()},r.prototype.autopush=function(t){if(i(t))return 0;var e=[];t.style&&(e=o(t.style)?t.style:[t.style]);for(var n=0,r=e.length;n<r;n++)this.push(e[n]);var u=["font","fontSize","fontFeatures","bold","italics","alignment","color","columnGap","fillColor","decoration","decorationStyle","decorationColor","background","lineHeight","characterSpacing","noWrap","markerColor","leadingIndent"],l={},c=!1;return u.forEach(function(e){a(t[e])||s(t[e])||(l[e]=t[e],c=!0)}),c&&this.push(l),e.length+(c?1:0)},r.prototype.auto=function(t,e){var n=this.autopush(t),r=e();return n>0&&this.pop(n),r},r.prototype.getProperty=function(t){if(this.styleOverrides)for(var e=this.styleOverrides.length-1;e>=0;e--){var n=this.styleOverrides[e];if(i(n)){var r=this.styleDictionary[n];if(r&&!a(r[t])&&!s(r[t]))return r[t]}else if(!a(n[t])&&!s(n[t]))return n[t]}return this.defaultStyle&&this.defaultStyle[t]},t.exports=r},function(t,e,n){"use strict";function r(t,e){this.pages=[],this.pageMargins=e,this.x=e.left,this.availableWidth=t.width-e.left-e.right,this.availableHeight=0,this.page=-1,this.snapshots=[],this.endingCell=null,this.tracker=new a,this.backgroundLength=[],this.addPage(t)}function i(t,e){return void 0===t?e:s(t)&&"landscape"===t.toLowerCase()?"landscape":"portrait"}function o(t,e){var n;return n=t.page>e.page?t:e.page>t.page?e:t.y>e.y?t:e,{page:n.page,x:n.x,y:n.y,availableHeight:n.availableHeight,availableWidth:n.availableWidth}}var a=n(201),s=n(0).isString;r.prototype.beginColumnGroup=function(){this.snapshots.push({x:this.x,y:this.y,availableHeight:this.availableHeight,availableWidth:this.availableWidth,page:this.page,bottomMost:{x:this.x,y:this.y,availableHeight:this.availableHeight,availableWidth:this.availableWidth,page:this.page},endingCell:this.endingCell,lastColumnWidth:this.lastColumnWidth}),this.lastColumnWidth=0},r.prototype.beginColumn=function(t,e,n){var r=this.snapshots[this.snapshots.length-1];this.calculateBottomMost(r),this.endingCell=n,this.page=r.page,this.x=this.x+this.lastColumnWidth+(e||0),this.y=r.y,this.availableWidth=t,this.availableHeight=r.availableHeight,this.lastColumnWidth=t},r.prototype.calculateBottomMost=function(t){this.endingCell?(this.saveContextInEndingCell(this.endingCell),this.endingCell=null):t.bottomMost=o(this,t.bottomMost)},r.prototype.markEnding=function(t){this.page=t._columnEndingContext.page,this.x=t._columnEndingContext.x,this.y=t._columnEndingContext.y,this.availableWidth=t._columnEndingContext.availableWidth,this.availableHeight=t._columnEndingContext.availableHeight,this.lastColumnWidth=t._columnEndingContext.lastColumnWidth},r.prototype.saveContextInEndingCell=function(t){t._columnEndingContext={page:this.page,x:this.x,y:this.y,availableHeight:this.availableHeight,availableWidth:this.availableWidth,lastColumnWidth:this.lastColumnWidth}},r.prototype.completeColumnGroup=function(t){var e=this.snapshots.pop();this.calculateBottomMost(e),this.endingCell=null,this.x=e.x;var n=e.bottomMost.y;t&&(e.page===e.bottomMost.page?e.y+t>n&&(n=e.y+t):n+=t),this.y=n,this.page=e.bottomMost.page,this.availableWidth=e.availableWidth,this.availableHeight=e.bottomMost.availableHeight,t&&(this.availableHeight-=n-e.bottomMost.y),this.lastColumnWidth=e.lastColumnWidth},r.prototype.addMargin=function(t,e){this.x+=t,this.availableWidth-=t+(e||0)},r.prototype.moveDown=function(t){return this.y+=t,this.availableHeight-=t,this.availableHeight>0},r.prototype.initializePage=function(){this.y=this.pageMargins.top,this.availableHeight=this.getCurrentPage().pageSize.height-this.pageMargins.top-this.pageMargins.bottom,this.pageSnapshot().availableWidth=this.getCurrentPage().pageSize.width-this.pageMargins.left-this.pageMargins.right},r.prototype.pageSnapshot=function(){return this.snapshots[0]?this.snapshots[0]:this},r.prototype.moveTo=function(t,e){void 0!==t&&null!==t&&(this.x=t,this.availableWidth=this.getCurrentPage().pageSize.width-this.x-this.pageMargins.right),void 0!==e&&null!==e&&(this.y=e,this.availableHeight=this.getCurrentPage().pageSize.height-this.y-this.pageMargins.bottom)},r.prototype.beginDetachedBlock=function(){this.snapshots.push({x:this.x,y:this.y,availableHeight:this.availableHeight,availableWidth:this.availableWidth,page:this.page,endingCell:this.endingCell,lastColumnWidth:this.lastColumnWidth})},r.prototype.endDetachedBlock=function(){var t=this.snapshots.pop();this.x=t.x,this.y=t.y,this.availableWidth=t.availableWidth,this.availableHeight=t.availableHeight,this.page=t.page,this.endingCell=t.endingCell,this.lastColumnWidth=t.lastColumnWidth};var u=function(t,e){return e=i(e,t.pageSize.orientation),e!==t.pageSize.orientation?{orientation:e,width:t.pageSize.height,height:t.pageSize.width}:{orientation:t.pageSize.orientation,width:t.pageSize.width,height:t.pageSize.height}};r.prototype.moveToNextPage=function(t){var e=this.page+1,n=this.page,r=this.y,i=e>=this.pages.length;if(i){var o=this.availableWidth,a=this.getCurrentPage().pageSize.orientation,s=u(this.getCurrentPage(),t);this.addPage(s),a===s.orientation&&(this.availableWidth=o)}else this.page=e,this.initializePage();return{newPageCreated:i,prevPage:n,prevY:r,y:this.y}},r.prototype.addPage=function(t){var e={items:[],pageSize:t};return this.pages.push(e),this.backgroundLength.push(0),this.page=this.pages.length-1,this.initializePage(),this.tracker.emit("pageAdded"),e},r.prototype.getCurrentPage=function(){return this.page<0||this.page>=this.pages.length?null:this.pages[this.page]},r.prototype.getCurrentPosition=function(){var t=this.getCurrentPage().pageSize,e=t.height-this.pageMargins.top-this.pageMargins.bottom,n=t.width-this.pageMargins.left-this.pageMargins.right;return{pageNumber:this.page+1,pageOrientation:t.orientation,pageInnerHeight:e,pageInnerWidth:n,left:this.x,top:this.y,verticalRatio:(this.y-this.pageMargins.top)/e,horizontalRatio:(this.x-this.pageMargins.left)/n}},t.exports=r},function(t,e,n){"use strict";function r(t){this.maxWidth=t,this.leadingCut=0,this.trailingCut=0,this.inlineWidths=0,this.inlines=[]}r.prototype.getAscenderHeight=function(){var t=0;return this.inlines.forEach(function(e){t=Math.max(t,e.font.ascender/1e3*e.fontSize)}),t},r.prototype.hasEnoughSpaceForInline=function(t,e){if(e=e||[],0===this.inlines.length)return!0;if(this.newLineForced)return!1;var n=t.width,r=t.trailingCut||0;if(t.noNewLine)for(var i=0,o=e.length;i<o;i++){var a=e[i];if(n+=a.width,r+=a.trailingCut||0,!a.noNewLine)break}return this.inlineWidths+n-this.leadingCut-r<=this.maxWidth},r.prototype.addInline=function(t){0===this.inlines.length&&(this.leadingCut=t.leadingCut||0),this.trailingCut=t.trailingCut||0,t.x=this.inlineWidths-this.leadingCut,this.inlines.push(t),this.inlineWidths+=t.width,t.lineEnd&&(this.newLineForced=!0)},r.prototype.getWidth=function(){return this.inlineWidths-this.leadingCut-this.trailingCut},r.prototype.getAvailableWidth=function(){return this.maxWidth-this.getWidth()},r.prototype.getHeight=function(){var t=0;return this.inlines.forEach(function(e){t=Math.max(t,e.height||0)}),t},t.exports=r},function(t,e,n){(function(e){t.exports=e.pdfMake=n(206)}).call(e,n(22))},function(t,e,n){"use strict";(function(e,r){function i(t,e,n,r){this.docDefinition=t,this.tableLayouts=e||null,this.fonts=n||l,this.vfs=r}function o(){return!(!Object.keys||"undefined"==typeof Uint16Array)}var a=n(0).isFunction,s=n(209),u=s.saveAs,l={Roboto:{normal:"Roboto-Regular.ttf",bold:"Roboto-Medium.ttf",italics:"Roboto-Italic.ttf",bolditalics:"Roboto-MediumItalic.ttf"}};i.prototype._createDoc=function(t){t=t||{},this.tableLayouts&&(t.tableLayouts=this.tableLayouts);var e=n(210),r=new e(this.fonts);return n(50).bindFS(this.vfs),r.createPdfKitDocument(this.docDefinition,t)},i.prototype._flushDoc=function(t,n){var r,i=[];t.on("readable",function(){for(var e;null!==(e=t.read(9007199254740991));)i.push(e)}),t.on("end",function(){r=e.concat(i),n(r,t._pdfMakePages)}),t.end()},i.prototype._getPages=function(t,e){if(!e)throw"_getPages is an async method and needs a callback argument";var n=this._createDoc(t);this._flushDoc(n,function(t,n){e(n)})},i.prototype._bufferToBlob=function(t){var e;try{e=new Blob([t],{type:"application/pdf"})}catch(r){if("InvalidStateError"===r.name){var n=new Uint8Array(t);e=new Blob([n.buffer],{type:"application/pdf"})}}if(!e)throw"Could not generate blob";return e},i.prototype._openWindow=function(){var t=window.open("","_blank");if(null===t)throw"Open PDF in new window blocked by browser";return t},i.prototype._openPdf=function(t,e){e||(e=this._openWindow());try{this.getBlob(function(t){var n=window.URL||window.webkitURL,r=n.createObjectURL(t);e.location.href=r},t)}catch(t){throw e.close(),t}},i.prototype.open=function(t,e){t=t||{},t.autoPrint=!1,e=e||null,this._openPdf(t,e)},i.prototype.print=function(t,e){t=t||{},t.autoPrint=!0,e=e||null,this._openPdf(t,e)},i.prototype.download=function(t,e,n){a(t)&&(e=t,t=null),t=t||"file.pdf",this.getBlob(function(n){u(n,t),a(e)&&e()},n)},i.prototype.getBase64=function(t,e){if(!t)throw"getBase64 is an async method and needs a callback argument";this.getBuffer(function(e){t(e.toString("base64"))},e)},i.prototype.getDataUrl=function(t,e){if(!t)throw"getDataUrl is an async method and needs a callback argument";this.getBuffer(function(e){t("data:application/pdf;base64,"+e.toString("base64"))},e)},i.prototype.getBlob=function(t,e){if(!t)throw"getBlob is an async method and needs a callback argument";var n=this;this.getBuffer(function(e){var r=n._bufferToBlob(e);t(r)},e)},i.prototype.getBuffer=function(t,e){if(!t)throw"getBuffer is an async method and needs a callback argument";var n=this._createDoc(e);this._flushDoc(n,function(e){t(e)})},i.prototype.getStream=function(t){return this._createDoc(t)},t.exports={createPdf:function(t,e,n,a){if(!o())throw"Your browser does not provide the level of support needed";return new i(t,e||r.pdfMake.tableLayouts,n||r.pdfMake.fonts,a||r.pdfMake.vfs)}}}).call(e,n(3).Buffer,n(22))},function(t,e,n){"use strict";function r(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function i(t){var e=r(t),n=e[0],i=e[1];return 3*(n+i)/4-i}function o(t,e,n){return 3*(e+n)/4-n}function a(t){for(var e,n=r(t),i=n[0],a=n[1],s=new h(o(t,i,a)),u=0,l=a>0?i-4:i,c=0;c<l;c+=4)e=f[t.charCodeAt(c)]<<18|f[t.charCodeAt(c+1)]<<12|f[t.charCodeAt(c+2)]<<6|f[t.charCodeAt(c+3)],s[u++]=e>>16&255,s[u++]=e>>8&255,s[u++]=255&e;return 2===a&&(e=f[t.charCodeAt(c)]<<2|f[t.charCodeAt(c+1)]>>4,s[u++]=255&e),1===a&&(e=f[t.charCodeAt(c)]<<10|f[t.charCodeAt(c+1)]<<4|f[t.charCodeAt(c+2)]>>2,s[u++]=e>>8&255,s[u++]=255&e),s}function s(t){return c[t>>18&63]+c[t>>12&63]+c[t>>6&63]+c[63&t]}function u(t,e,n){for(var r,i=[],o=e;o<n;o+=3)r=(t[o]<<16&16711680)+(t[o+1]<<8&65280)+(255&t[o+2]),i.push(s(r));return i.join("")}function l(t){for(var e,n=t.length,r=n%3,i=[],o=0,a=n-r;o<a;o+=16383)i.push(u(t,o,o+16383>a?a:o+16383));return 1===r?(e=t[n-1],i.push(c[e>>2]+c[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],i.push(c[e>>10]+c[e>>4&63]+c[e<<2&63]+"=")),i.join("")}e.byteLength=i,e.toByteArray=a,e.fromByteArray=l;for(var c=[],f=[],h="undefined"!=typeof Uint8Array?Uint8Array:Array,d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",p=0,g=d.length;p<g;++p)c[p]=d[p],f[d.charCodeAt(p)]=p;f["-".charCodeAt(0)]=62,f["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,i){var o,a,s=8*i-r-1,u=(1<<s)-1,l=u>>1,c=-7,f=n?i-1:0,h=n?-1:1,d=t[e+f];for(f+=h,o=d&(1<<-c)-1,d>>=-c,c+=s;c>0;o=256*o+t[e+f],f+=h,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=r;c>0;a=256*a+t[e+f],f+=h,c-=8);if(0===o)o=1-l;else{if(o===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,r),o-=l}return(d?-1:1)*a*Math.pow(2,o-r)},e.write=function(t,e,n,r,i,o){var a,s,u,l=8*o-i-1,c=(1<<l)-1,f=c>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:o-1,p=r?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,a=c):(a=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-a))<1&&(a--,u*=2),e+=a+f>=1?h/u:h*Math.pow(2,1-f),e*u>=2&&(a++,u/=2),a+f>=c?(s=0,a=c):a+f>=1?(s=(e*u-1)*Math.pow(2,i),a+=f):(s=e*Math.pow(2,f-1)*Math.pow(2,i),a=0));i>=8;t[n+d]=255&s,d+=p,s/=256,i-=8);for(a=a<<i|s,l+=i;l>0;t[n+d]=255&a,d+=p,a/=256,l-=8);t[n+d-p]|=128*g}},function(t,e,n){(function(n){var r,i,o;!function(n,a){i=[],r=a,void 0!==(o="function"==typeof r?r.apply(e,i):r)&&(t.exports=o)}(0,function(){"use strict";function e(t,e){return void 0===e?e={autoBom:!1}:"object"!=typeof e&&(console.warn("Deprecated: Expected third argument to be a object"),e={autoBom:!e}),e.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob(["\ufeff",t],{type:t.type}):t}function r(t,e,n){var r=new XMLHttpRequest;r.open("GET",t),r.responseType="blob",r.onload=function(){s(r.response,e,n)},r.onerror=function(){console.error("could not download file")},r.send()}function i(t){var e=new XMLHttpRequest;return e.open("HEAD",t,!1),e.send(),200<=e.status&&299>=e.status}function o(t){try{t.dispatchEvent(new MouseEvent("click"))}catch(n){var e=document.createEvent("MouseEvents");e.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}}var a="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof n&&n.global===n?n:void 0,s=a.saveAs||("object"!=typeof window||window!==a?function(){}:"undefined"!=typeof HTMLAnchorElement&&"download"in HTMLAnchorElement.prototype?function(t,e,n){var s=a.URL||a.webkitURL,u=document.createElement("a");e=e||t.name||"download",u.download=e,u.rel="noopener","string"==typeof t?(u.href=t,u.origin===location.origin?o(u):i(u.href)?r(t,e,n):o(u,u.target="_blank")):(u.href=s.createObjectURL(t),setTimeout(function(){s.revokeObjectURL(u.href)},4e4),setTimeout(function(){o(u)},0))}:"msSaveOrOpenBlob"in navigator?function(t,n,a){if(n=n||t.name||"download","string"!=typeof t)navigator.msSaveOrOpenBlob(e(t,a),n);else if(i(t))r(t,n,a);else{var s=document.createElement("a");s.href=t,s.target="_blank",setTimeout(function(){o(s)})}}:function(t,e,n,i){if(i=i||open("","_blank"),i&&(i.document.title=i.document.body.innerText="downloading..."),"string"==typeof t)return r(t,e,n);var o="application/octet-stream"===t.type,s=/constructor/i.test(a.HTMLElement)||a.safari,u=/CriOS\/[\d]+/.test(navigator.userAgent);if((u||o&&s)&&"object"==typeof FileReader){var l=new FileReader;l.onloadend=function(){var t=l.result;t=u?t:t.replace(/^data:[^;]*;/,"data:attachment/file;"),i?i.location.href=t:location=t,i=null},l.readAsDataURL(t)}else{var c=a.URL||a.webkitURL,f=c.createObjectURL(t);i?i.location=f:location.href=f,i=null,setTimeout(function(){c.revokeObjectURL(f)},4e4)}});a.saveAs=s.saveAs=s,void 0!==t&&(t.exports=s)})}).call(e,n(22))},function(t,e,n){"use strict";function r(t){this.fontDescriptors=t}function i(t,e){if(e.info.Producer="pdfmake",e.info.Creator="pdfmake",t.info)for(var n in t.info){var r=t.info[n];r&&(n=function(t){var e=["Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped"],n=t.charAt(0).toUpperCase()+t.slice(1);return-1!==e.indexOf(n)?n:t.replace(/\s+/g,"")}(n),e.info[n]=r)}}function o(t,e){function n(t){return C(t.item.getHeight)?t.item.getHeight():t.item._height?t.item._height:0}function r(t){return t.item.y+n(t)}var i=s(e||40),o=i.top;return t.forEach(function(t){t.items.forEach(function(t){var e=r(t);e>o&&(o=e)})}),o+=i.bottom}function a(t,e){t&&"auto"===t.height&&(t.height=1/0);var n=l(t||"A4");return function(t){return!!A(t)&&("portrait"===(t=t.toLowerCase())&&n.width>n.height||"landscape"===t&&n.width<n.height)}(e)&&(n={width:n.height,height:n.width}),n.orientation=n.width>n.height?"landscape":"portrait",n}function s(t){if(!t)return null;if(P(t))t={left:t,right:t,top:t,bottom:t};else if(O(t))if(2===t.length)t={left:t[0],top:t[1],right:t[0],bottom:t[1]};else{if(4!==t.length)throw"Invalid pageMargins definition";t={left:t[0],top:t[1],right:t[2],bottom:t[3]}}return t}function u(t){t.registerTableLayouts({noBorders:{hLineWidth:function(t){return 0},vLineWidth:function(t){return 0},paddingLeft:function(t){return t&&4||0},paddingRight:function(t,e){return t<e.table.widths.length-1?4:0}},headerLineOnly:{hLineWidth:function(t,e){return 0===t||t===e.table.body.length?0:t===e.table.headerRows?2:0},vLineWidth:function(t){return 0},paddingLeft:function(t){return 0===t?0:8},paddingRight:function(t,e){return t===e.table.widths.length-1?0:8}},lightHorizontalLines:{hLineWidth:function(t,e){return 0===t||t===e.table.body.length?0:t===e.table.headerRows?2:1},vLineWidth:function(t){return 0},hLineColor:function(t){return 1===t?"black":"#aaa"},paddingLeft:function(t){return 0===t?0:8},paddingRight:function(t,e){return t===e.table.widths.length-1?0:8}}})}function l(t){if(A(t)){var e=x[t.toUpperCase()];if(!e)throw"Page size "+t+" not recognized";return{width:e[0],height:e[1]}}return t}function c(t,e){var n=e.options.size[0]>e.options.size[1]?"landscape":"portrait";if(t.pageSize.orientation!==n){var r=e.options.size[0],i=e.options.size[1];e.options.size=[i,r]}}function f(t,e,n,r){n._pdfMakePages=t,n.addPage();var i=0;r&&t.forEach(function(t){i+=t.items.length});var o=0;r=r||function(){};for(var a=0;a<t.length;a++){a>0&&(c(t[a],n),n.addPage(n.options));for(var s=t[a],u=0,l=s.items.length;u<l;u++){var f=s.items[u];switch(f.type){case"vector":p(f.item,n);break;case"line":h(f.item,f.item.x,f.item.y,n);break;case"image":g(f.item,f.item.x,f.item.y,n);break;case"beginClip":v(f.item,n);break;case"endClip":y(n)}o++,r(o/i)}s.watermark&&d(s,n)}}function h(t,e,n,r){function i(t,e){var n,r,i=new S(null);if(T(t.positions))throw"Page reference id not found";var o=t.positions[0].pageNumber.toString();switch(e.text=o,e.linkToPage=o,n=i.widthOfString(e.text,e.font,e.fontSize,e.characterSpacing,e.fontFeatures),r=e.width-n,e.width=n,e.alignment){case"right":e.x+=r;break;case"center":e.x+=r/2}}t._pageNodeRef&&i(t._pageNodeRef,t.inlines[0]),e=e||0,n=n||0;var o=t.getHeight(),a=t.getAscenderHeight(),s=o-a;k.drawBackground(t,e,n,r);for(var u=0,l=t.inlines.length;u<l;u++){var c=t.inlines[u],f=o-c.font.ascender/1e3*c.fontSize-s;c._pageNodeRef&&i(c._pageNodeRef,c);var h={lineBreak:!1,textWidth:c.width,characterSpacing:c.characterSpacing,wordCount:1,link:c.link};if(c.fontFeatures&&(h.features=c.fontFeatures),r.opacity(c.opacity||1),r.fill(c.color||"black"),r._font=c.font,r.fontSize(c.fontSize),r.text(c.text,e+c.x,n+f,h),c.linkToPage){r.ref({Type:"Action",S:"GoTo",D:[c.linkToPage,0,0]}).end();r.annotate(e+c.x,n+f,c.width,c.height,{Subtype:"Link",Dest:[c.linkToPage-1,"XYZ",null,null,null]})}}k.drawDecorations(t,e,n,r)}function d(t,e){var n=t.watermark;e.fill(n.color),e.opacity(n.opacity),e.save();var r=-180*Math.atan2(e.page.height,e.page.width)/Math.PI;e.rotate(r,{origin:[e.page.width/2,e.page.height/2]});var i=e.page.width/2-n.size.size.width/2,o=e.page.height/2-n.size.size.height/4;e._font=n.font,e.fontSize(n.size.fontSize),e.text(n.text,i,o,{lineBreak:!1}),e.restore()}function p(t,e){switch(e.lineWidth(t.lineWidth||1),t.dash?e.dash(t.dash.length,{space:t.dash.space||t.dash.length,phase:t.dash.phase||0}):e.undash(),e.lineJoin(t.lineJoin||"miter"),e.lineCap(t.lineCap||"butt"),t.type){case"ellipse":e.ellipse(t.x,t.y,t.r1,t.r2);break;case"rect":if(t.r?e.roundedRect(t.x,t.y,t.w,t.h,t.r):e.rect(t.x,t.y,t.w,t.h),t.linearGradient){for(var n=e.linearGradient(t.x,t.y,t.x+t.w,t.y),r=1/(t.linearGradient.length-1),i=0;i<t.linearGradient.length;i++)n.stop(i*r,t.linearGradient[i]);t.color=n}break;case"line":e.moveTo(t.x1,t.y1),e.lineTo(t.x2,t.y2);break;case"polyline":if(0===t.points.length)break;e.moveTo(t.points[0].x,t.points[0].y);for(var i=1,o=t.points.length;i<o;i++)e.lineTo(t.points[i].x,t.points[i].y);if(t.points.length>1){var a=t.points[0],s=t.points[t.points.length-1];(t.closePath||a.x===s.x&&a.y===s.y)&&e.closePath()}break;case"path":e.path(t.d)}t.color&&t.lineColor?(e.fillColor(t.color,t.fillOpacity||1),e.strokeColor(t.lineColor,t.strokeOpacity||1),e.fillAndStroke()):t.color?(e.fillColor(t.color,t.fillOpacity||1),e.fill()):(e.strokeColor(t.lineColor||"black",t.strokeOpacity||1),e.stroke())}function g(t,e,n,r){r.opacity(t.opacity||1),r.image(t.image,t.x,t.y,{width:t._width,height:t._height}),t.link&&r.link(t.x,t.y,t._width,t._height,t.link)}function v(t,e){e.save(),e.addContent(t.x+" "+t.y+" "+t.width+" "+t.height+" re"),e.clip()}function y(t){t.restore()}var b=n(211),m=n(427),w=n(428),x=n(435),_=n(436),k=n(437),S=n(134),C=n(0).isFunction,A=n(0).isString,P=n(0).isNumber,E=n(0).isBoolean,O=n(0).isArray,T=n(0).isUndefined;r.prototype.createPdfKitDocument=function(t,e){e=e||{},t.version=t.version||"1.3",t.compress=!E(t.compress)||t.compress,t.images=t.images||{};var n=a(t.pageSize,t.pageOrientation),r={size:[n.width,n.height],pdfVersion:t.version,compress:t.compress,userPassword:t.userPassword,ownerPassword:t.ownerPassword,permissions:t.permissions,fontLayoutCache:!E(e.fontLayoutCache)||e.fontLayoutCache,bufferPages:e.bufferPages||!1,autoFirstPage:!1,font:null};this.pdfKitDoc=b.createPdfDocument(r),i(t,this.pdfKitDoc),this.fontProvider=new m(this.fontDescriptors,this.pdfKitDoc);var l=new w(n,s(t.pageMargins||40),new _(this.pdfKitDoc,t.images));u(l),e.tableLayouts&&l.registerTableLayouts(e.tableLayouts);var c=l.layoutDocument(t.content,this.fontProvider,t.styles||{},t.defaultStyle||{fontSize:12,font:"Roboto"},t.background,t.header,t.footer,t.images,t.watermark,t.pageBreakBefore),h=t.maxPagesNumber||-1;if(P(h)&&h>-1&&(c=c.slice(0,h)),n.height===1/0){var d=o(c,t.pageMargins);this.pdfKitDoc.options.size=[n.width,d]}if(f(c,this.fontProvider,this.pdfKitDoc,e.progressCallback),e.autoPrint){var p=this.pdfKitDoc.ref({Type:"Action",S:"Named",N:"Print"});this.pdfKitDoc._root.data.OpenAction=p,p.end()}return this.pdfKitDoc},t.exports=r},function(t,e,n){"use strict";function r(){return o}function i(t){return t=t||{},new o(t)}var o=function(t){return t&&"object"==typeof t&&"default"in t?t.default:t}(n(212));t.exports={getEngineInstance:r,createPdfDocument:i}},function(t,e,n){"use strict";(function(t,r){function i(t){return t&&t.__esModule?t:{default:t}}function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=-64;return t.printing&&(e|=2),t.modifying&&(e|=8),t.copying&&(e|=16),t.annotating&&(e|=32),e}function a(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=-3904;return"lowResolution"===t.printing&&(e|=4),"highResolution"===t.printing&&(e|=2052),t.modifying&&(e|=8),t.copying&&(e|=16),t.annotating&&(e|=32),t.fillingForms&&(e|=256),t.contentAccessibility&&(e|=512),t.documentAssembly&&(e|=1024),e}function s(t){return _.default.RC4.encrypt(y(),t).ciphertext}function u(t,e){for(var n=e.clone(),r=_.default.MD5(y().concat(_.default.lib.WordArray.create(t))),i=0;i<20;i++){for(var o=Math.ceil(n.sigBytes/4),a=0;a<o;a++)n.words[a]=e.words[a]^(i|i<<8|i<<16|i<<24);r=_.default.RC4.encrypt(r,n).ciphertext}return r.concat(_.default.lib.WordArray.create(null,16))}function l(t,e,n,r){for(var i=r,o=t>=3?51:1,a=0;a<o;a++)i=_.default.MD5(i);var s=i.clone();s.sigBytes=e/8;var u=n;o=t>=3?20:1;for(var l=0;l<o;l++){for(var c=Math.ceil(s.sigBytes/4),f=0;f<c;f++)s.words[f]=i.words[f]^(l|l<<8|l<<16|l<<24);u=_.default.RC4.encrypt(u,s).ciphertext}return u}function c(t,e,n,r,i,o){for(var a=r.clone().concat(i).concat(_.default.lib.WordArray.create([m(o)],4)).concat(_.default.lib.WordArray.create(n)),s=t>=3?51:1,u=0;u<s;u++)a=_.default.MD5(a),a.sigBytes=e/8;return a}function f(t,e){var n=e(8),r=e(8);return _.default.SHA256(t.clone().concat(n)).concat(n).concat(r)}function h(t,e,n){var r=_.default.SHA256(t.clone().concat(e)),i={mode:_.default.mode.CBC,padding:_.default.pad.NoPadding,iv:_.default.lib.WordArray.create(null,16)};return _.default.AES.encrypt(n,r,i).ciphertext}function d(t,e,n){var r=n(8),i=n(8);return _.default.SHA256(t.clone().concat(r).concat(e)).concat(r).concat(i)}function p(t,e,n,r){var i=_.default.SHA256(t.clone().concat(e).concat(n)),o={mode:_.default.mode.CBC,padding:_.default.pad.NoPadding,iv:_.default.lib.WordArray.create(null,16)};return _.default.AES.encrypt(r,i,o).ciphertext}function g(t){return t(32)}function v(t,e,n){var r=_.default.lib.WordArray.create([m(t),4294967295,1415668834],12).concat(n(4)),i={mode:_.default.mode.ECB,padding:_.default.pad.NoPadding};return _.default.AES.encrypt(r,e,i).ciphertext}function y(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=new t(32),r=e.length,i=0;i<r&&i<32;){var o=e.charCodeAt(i);if(o>255)throw new Error("Password contains one or more invalid characters.");n[i]=o,i++}for(;i<32;)n[i]=Y[i-r],i++;return _.default.lib.WordArray.create(n)}function b(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";e=unescape(encodeURIComponent((0,k.default)(e)));for(var n=Math.min(127,e.length),r=new t(n),i=0;i<n;i++)r[i]=e.charCodeAt(i);return _.default.lib.WordArray.create(r)}function m(t){return(255&t)<<24|(65280&t)<<8|t>>8&65280|t>>24&255}function w(e){for(var n=[],r=0;r<e.sigBytes;r++)n.push(e.words[Math.floor(r/4)]>>8*(3-r%4)&255);return t.from(n)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n(213),n(216),n(217),n(218),n(219),n(229),n(230),n(149),n(232),n(233),n(236),n(237),n(151),n(239),n(153),n(241),n(242),n(243);var x=i(n(157)),_=i(n(265)),k=i(n(289)),S=i(n(298)),C=n(68),A=i(n(200)),P=i(n(426)),E=i(n(102)),O=n(50),T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},B=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),L=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)},R=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e},M=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&s.return&&s.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),F=function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)},D=function(){function t(){I(this,t)}return B(t,[{key:"toString",value:function(){throw new Error("Must be implemented by subclasses")}}]),t}(),z=function(t,e){return(Array(e+1).join("0")+t).slice(-e)},N=/[\n\r\t\b\f\(\)\\]/g,W={"\n":"\\n","\r":"\\r","\t":"\\t","\b":"\\b","\f":"\\f","\\":"\\\\","(":"\\(",")":"\\)"},U=function(t){var e=t.length;if(1&e)throw new Error("Buffer length must be even");for(var n=0,r=e-1;n<r;n+=2){var i=t[n];t[n]=t[n+1],t[n+1]=i}return t},j=function(){function e(){I(this,e)}return B(e,null,[{key:"convert",value:function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if("string"==typeof n)return"/"+n;if(n instanceof String){for(var i=n,o=!1,a=0,s=i.length;a<s;a++)if(i.charCodeAt(a)>127){o=!0;break}var u=void 0;return u=o?U(t.from("\ufeff"+i,"utf16le")):t.from(i.valueOf(),"ascii"),i=r?r(u).toString("binary"):u.toString("binary"),"("+(i=i.replace(N,function(t){return W[t]}))+")"}if(t.isBuffer(n))return"<"+n.toString("hex")+">";if(n instanceof D)return n.toString();if(n instanceof Date){var l="D:"+z(n.getUTCFullYear(),4)+z(n.getUTCMonth()+1,2)+z(n.getUTCDate(),2)+z(n.getUTCHours(),2)+z(n.getUTCMinutes(),2)+z(n.getUTCSeconds(),2)+"Z";return r&&(l=r(new t(l,"ascii")).toString("binary"),l=l.replace(N,function(t){return W[t]})),"("+l+")"}if(Array.isArray(n)){return"["+n.map(function(t){return e.convert(t,r)}).join(" ")+"]"}if("[object Object]"==={}.toString.call(n)){var c=["<<"];for(var f in n){var h=n[f];c.push("/"+f+" "+e.convert(h,r))}return c.push(">>"),c.join("\n")}return"number"==typeof n?e.number(n):""+n}},{key:"number",value:function(t){if(t>-1e21&&t<1e21)return Math.round(1e6*t)/1e6;throw new Error("unsupported number: "+t)}}]),e}(),G=function(e){function n(t,e,r){I(this,n);var i=R(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return i.document=t,i.id=e,null==r&&(r={}),i.data=r,i.gen=0,i.compress=i.document.compress&&!i.data.Filter,i.uncompressedLength=0,i.buffer=[],i}return L(n,e),B(n,[{key:"write",value:function(e){if(t.isBuffer(e)||(e=new t(e+"\n","binary")),this.uncompressedLength+=e.length,null==this.data.Length&&(this.data.Length=0),this.buffer.push(e),this.data.Length+=e.length,this.compress)return this.data.Filter="FlateDecode"}},{key:"end",value:function(t){return t&&this.write(t),this.finalize()}},{key:"finalize",value:function(){this.offset=this.document._offset;var e=this.document._security?this.document._security.getEncryptFn(this.id,this.gen):null;this.buffer.length&&(this.buffer=t.concat(this.buffer),this.compress&&(this.buffer=x.default.deflateSync(this.buffer)),e&&(this.buffer=e(this.buffer)),this.data.Length=this.buffer.length),this.document._write(this.id+" "+this.gen+" obj"),this.document._write(j.convert(this.data,e)),this.buffer.length&&(this.document._write("stream"),this.document._write(this.buffer),this.buffer=[],this.document._write("\nendstream")),this.document._write("endobj"),this.document._refEnd(this)}},{key:"toString",value:function(){return this.id+" "+this.gen+" R"}}]),n}(D),H={top:72,left:72,bottom:72,right:72},V={"4A0":[4767.87,6740.79],"2A0":[3370.39,4767.87],A0:[2383.94,3370.39],A1:[1683.78,2383.94],A2:[1190.55,1683.78],A3:[841.89,1190.55],A4:[595.28,841.89],A5:[419.53,595.28],A6:[297.64,419.53],A7:[209.76,297.64],A8:[147.4,209.76],A9:[104.88,147.4],A10:[73.7,104.88],B0:[2834.65,4008.19],B1:[2004.09,2834.65],B2:[1417.32,2004.09],B3:[1000.63,1417.32],B4:[708.66,1000.63],B5:[498.9,708.66],B6:[354.33,498.9],B7:[249.45,354.33],B8:[175.75,249.45],B9:[124.72,175.75],B10:[87.87,124.72],C0:[2599.37,3676.54],C1:[1836.85,2599.37],C2:[1298.27,1836.85],C3:[918.43,1298.27],C4:[649.13,918.43],C5:[459.21,649.13],C6:[323.15,459.21],C7:[229.61,323.15],C8:[161.57,229.61],C9:[113.39,161.57],C10:[79.37,113.39],RA0:[2437.8,3458.27],RA1:[1729.13,2437.8],RA2:[1218.9,1729.13],RA3:[864.57,1218.9],RA4:[609.45,864.57],SRA0:[2551.18,3628.35],SRA1:[1814.17,2551.18],SRA2:[1275.59,1814.17],SRA3:[907.09,1275.59],SRA4:[637.8,907.09],EXECUTIVE:[521.86,756],FOLIO:[612,936],LEGAL:[612,1008],LETTER:[612,792],TABLOID:[792,1224]},q=function(){function t(e,n){I(this,t),this.document=e,null==n&&(n={}),this.size=n.size||"letter",this.layout=n.layout||"portrait","number"==typeof n.margin?this.margins={top:n.margin,left:n.margin,bottom:n.margin,right:n.margin}:this.margins=n.margins||H;var r=Array.isArray(this.size)?this.size:V[this.size.toUpperCase()];this.width=r["portrait"===this.layout?0:1],this.height=r["portrait"===this.layout?1:0],this.content=this.document.ref(),this.resources=this.document.ref({ProcSet:["PDF","Text","ImageB","ImageC","ImageI"]}),this.dictionary=this.document.ref({Type:"Page",Parent:this.document._root.data.Pages,MediaBox:[0,0,this.width,this.height],Contents:this.content,Resources:this.resources})}return B(t,[{key:"maxY",value:function(){return this.height-this.margins.bottom}},{key:"write",value:function(t){return this.content.write(t)}},{key:"end",value:function(){return this.dictionary.end(),this.resources.end(),this.content.end()}},{key:"fonts",get:function(){var t=this.resources.data;return null!=t.Font?t.Font:t.Font={}}},{key:"xobjects",get:function(){var t=this.resources.data;return null!=t.XObject?t.XObject:t.XObject={}}},{key:"ext_gstates",get:function(){var t=this.resources.data;return null!=t.ExtGState?t.ExtGState:t.ExtGState={}}},{key:"patterns",get:function(){var t=this.resources.data;return null!=t.Pattern?t.Pattern:t.Pattern={}}},{key:"annotations",get:function(){var t=this.dictionary.data;return null!=t.Annots?t.Annots:t.Annots=[]}}]),t}(),Z=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(I(this,t),!n.ownerPassword&&!n.userPassword)throw new Error("None of owner password and user password is defined.");this.document=e,this._setupEncryption(n)}return B(t,null,[{key:"generateFileID",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.CreationDate.getTime()+"\n";for(var n in t)t.hasOwnProperty(n)&&(e+=n+": "+t[n].toString()+"\n");return w(_.default.MD5(e))}},{key:"generateRandomWordArray",value:function(t){return _.default.lib.WordArray.random(t)}},{key:"create",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n.ownerPassword||n.userPassword?new t(e,n):null}}]),B(t,[{key:"_setupEncryption",value:function(t){switch(t.pdfVersion){case"1.4":case"1.5":this.version=2;break;case"1.6":case"1.7":this.version=4;break;case"1.7ext3":this.version=5;break;default:this.version=1}var e={Filter:"Standard"};switch(this.version){case 1:case 2:case 4:this._setupEncryptionV1V2V4(this.version,e,t);break;case 5:this._setupEncryptionV5(e,t)}this.dictionary=this.document.ref(e)}},{key:"_setupEncryptionV1V2V4",value:function(t,e,n){var r=void 0,i=void 0;switch(t){case 1:r=2,this.keyBits=40,i=o(n.permissions);break;case 2:r=3,this.keyBits=128,i=a(n.permissions);break;case 4:r=4,this.keyBits=128,i=a(n.permissions)}var f=y(n.userPassword),h=n.ownerPassword?y(n.ownerPassword):f,d=l(r,this.keyBits,f,h);this.encryptionKey=c(r,this.keyBits,this.document._id,f,d,i);var p=void 0;p=2===r?s(this.encryptionKey):u(this.document._id,this.encryptionKey),e.V=t,t>=2&&(e.Length=this.keyBits),4===t&&(e.CF={StdCF:{AuthEvent:"DocOpen",CFM:"AESV2",Length:this.keyBits/8}},e.StmF="StdCF",e.StrF="StdCF"),e.R=r,e.O=w(d),e.U=w(p),e.P=i}},{key:"_setupEncryptionV5",value:function(e,n){this.keyBits=256;var r=a(n),i=b(n.userPassword),o=n.ownerPassword?b(n.ownerPassword):i;this.encryptionKey=g(t.generateRandomWordArray);var s=f(i,t.generateRandomWordArray),u=_.default.lib.WordArray.create(s.words.slice(10,12),8),l=h(i,u,this.encryptionKey),c=d(o,s,t.generateRandomWordArray),y=_.default.lib.WordArray.create(c.words.slice(10,12),8),m=p(o,y,s,this.encryptionKey),x=v(r,this.encryptionKey,t.generateRandomWordArray);e.V=5,e.Length=this.keyBits,e.CF={StdCF:{AuthEvent:"DocOpen",CFM:"AESV3",Length:this.keyBits/8}},e.StmF="StdCF",e.StrF="StdCF",e.R=5,e.O=w(c),e.OE=w(m),e.U=w(s),e.UE=w(l),e.P=r,e.Perms=w(x)}},{key:"getEncryptFn",value:function(e,n){var r=void 0;if(this.version<5&&(r=this.encryptionKey.clone().concat(_.default.lib.WordArray.create([(255&e)<<24|(65280&e)<<8|e>>8&65280|255&n,(65280&n)<<16],5))),1===this.version||2===this.version){var i=_.default.MD5(r);return i.sigBytes=Math.min(16,this.keyBits/8+5),function(t){return w(_.default.RC4.encrypt(_.default.lib.WordArray.create(t),i).ciphertext)}}var o=void 0;o=4===this.version?_.default.MD5(r.concat(_.default.lib.WordArray.create([1933667412],4))):this.encryptionKey;var a=t.generateRandomWordArray(16),s={mode:_.default.mode.CBC,padding:_.default.pad.Pkcs7,iv:a};return function(t){return w(a.clone().concat(_.default.AES.encrypt(_.default.lib.WordArray.create(t),o,s).ciphertext))}}},{key:"end",value:function(){this.dictionary.end()}}]),t}(),Y=[40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122],X=j.number,K=function(){function t(e){I(this,t),this.doc=e,this.stops=[],this.embedded=!1,this.transform=[1,0,0,1,0,0]}return B(t,[{key:"stop",value:function(t,e,n){if(null==n&&(n=1),e=this.doc._normalizeColor(e),0===this.stops.length)if(3===e.length)this._colorSpace="DeviceRGB";else if(4===e.length)this._colorSpace="DeviceCMYK";else{if(1!==e.length)throw new Error("Unknown color space");this._colorSpace="DeviceGray"}else if("DeviceRGB"===this._colorSpace&&3!==e.length||"DeviceCMYK"===this._colorSpace&&4!==e.length||"DeviceGray"===this._colorSpace&&1!==e.length)throw new Error("All gradient stops must use the same color space");return n=Math.max(0,Math.min(1,n)),this.stops.push([t,e,n]),this}},{key:"setTransform",value:function(t,e,n,r,i,o){return this.transform=[t,e,n,r,i,o],this}},{key:"embed",value:function(t){var e=void 0,n=void 0,r=void 0,i=void 0;if(0!==this.stops.length){this.embedded=!0,this.matrix=t;var o=this.stops[this.stops.length-1];o[0]<1&&this.stops.push([1,o[1],o[2]]);var a=[],s=[],u=[];for(n=0,r=this.stops.length-1,e=0<=r;e?n<r:n>r;e?n++:n--)s.push(0,1),n+2!==this.stops.length&&a.push(this.stops[n+1][0]),i=this.doc.ref({FunctionType:2,Domain:[0,1],C0:this.stops[n+0][1],C1:this.stops[n+1][1],N:1}),u.push(i),i.end();1===u.length?i=u[0]:(i=this.doc.ref({FunctionType:3,Domain:[0,1],Functions:u,Bounds:a,Encode:s}),i.end()),this.id="Sh"+ ++this.doc._gradCount;var l=this.shader(i);l.end();var c=this.doc.ref({Type:"Pattern",PatternType:2,Shading:l,Matrix:this.matrix.map(function(t){return X(t)})});if(c.end(),this.stops.some(function(t){return t[2]<1})){var f=this.opacityGradient();f._colorSpace="DeviceGray";var h=!0,d=!1,p=void 0;try{for(var g,v=this.stops[Symbol.iterator]();!(h=(g=v.next()).done);h=!0){var y=g.value;f.stop(y[0],[y[2]])}}catch(t){d=!0,p=t}finally{try{!h&&v.return&&v.return()}finally{if(d)throw p}}f=f.embed(this.matrix);var b=[0,0,this.doc.page.width,this.doc.page.height],m=this.doc.ref({Type:"XObject",Subtype:"Form",FormType:1,BBox:b,Group:{Type:"Group",S:"Transparency",CS:"DeviceGray"},Resources:{ProcSet:["PDF","Text","ImageB","ImageC","ImageI"],Pattern:{Sh1:f}}});m.write("/Pattern cs /Sh1 scn"),m.end(b.join(" ")+" re f");var w=this.doc.ref({Type:"ExtGState",SMask:{Type:"Mask",S:"Luminosity",G:m}});w.end();var x=this.doc.ref({Type:"Pattern",PatternType:1,PaintType:1,TilingType:2,BBox:b,XStep:b[2],YStep:b[3],Resources:{ProcSet:["PDF","Text","ImageB","ImageC","ImageI"],Pattern:{Sh1:c},ExtGState:{Gs1:w}}});x.write("/Gs1 gs /Pattern cs /Sh1 scn"),x.end(b.join(" ")+" re f"),this.doc.page.patterns[this.id]=x}else this.doc.page.patterns[this.id]=c;return c}}},{key:"apply",value:function(t){var e=M(this.doc._ctm,6),n=e[0],r=e[1],i=e[2],o=e[3],a=e[4],s=e[5],u=M(this.transform,6),l=u[0],c=u[1],f=u[2],h=u[3],d=u[4],p=u[5],g=[n*l+i*c,r*l+o*c,n*f+i*h,r*f+o*h,n*d+i*p+a,r*d+o*p+s];return this.embedded&&g.join(" ")===this.matrix.join(" ")||this.embed(g),this.doc.addContent("/"+this.id+" "+t)}}]),t}(),J=function(t){function e(t,n,r,i,o){I(this,e);var a=R(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return a.x1=n,a.y1=r,a.x2=i,a.y2=o,a}return L(e,t),B(e,[{key:"shader",value:function(t){return this.doc.ref({ShadingType:2,ColorSpace:this._colorSpace,Coords:[this.x1,this.y1,this.x2,this.y2],Function:t,Extend:[!0,!0]})}},{key:"opacityGradient",value:function(){return new e(this.doc,this.x1,this.y1,this.x2,this.y2)}}]),e}(K),Q=function(t){function e(t,n,r,i,o,a,s){I(this,e);var u=R(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return u.doc=t,u.x1=n,u.y1=r,u.r1=i,u.x2=o,u.y2=a,u.r2=s,u}return L(e,t),B(e,[{key:"shader",value:function(t){return this.doc.ref({ShadingType:3,ColorSpace:this._colorSpace,Coords:[this.x1,this.y1,this.r1,this.x2,this.y2,this.r2],Function:t,Extend:[!0,!0]})}},{key:"opacityGradient",value:function(){return new e(this.doc,this.x1,this.y1,this.r1,this.x2,this.y2,this.r2)}}]),e}(K),$={PDFGradient:K,PDFLinearGradient:J,PDFRadialGradient:Q},tt=$.PDFGradient,et=$.PDFLinearGradient,nt=$.PDFRadialGradient,rt={initColor:function(){return this._opacityRegistry={},this._opacityCount=0,this._gradCount=0},_normalizeColor:function(t){if(t instanceof tt)return t;if("string"==typeof t)if("#"===t.charAt(0)){4===t.length&&(t=t.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i,"#$1$1$2$2$3$3"));var e=parseInt(t.slice(1),16);t=[e>>16,e>>8&255,255&e]}else it[t]&&(t=it[t]);return Array.isArray(t)?(3===t.length?t=t.map(function(t){return t/255}):4===t.length&&(t=t.map(function(t){return t/100})),t):null},_setColor:function(t,e){if(!(t=this._normalizeColor(t)))return!1;var n=e?"SCN":"scn";if(t instanceof tt)this._setColorSpace("Pattern",e),t.apply(n);else{var r=4===t.length?"DeviceCMYK":"DeviceRGB";this._setColorSpace(r,e),t=t.join(" "),this.addContent(t+" "+n)}return!0},_setColorSpace:function(t,e){var n=e?"CS":"cs";return this.addContent("/"+t+" "+n)},fillColor:function(t,e){return this._setColor(t,!1)&&this.fillOpacity(e),this._fillColor=[t,e],this},strokeColor:function(t,e){return this._setColor(t,!0)&&this.strokeOpacity(e),this},opacity:function(t){return this._doOpacity(t,t),this},fillOpacity:function(t){return this._doOpacity(t,null),this},strokeOpacity:function(t){return this._doOpacity(null,t),this},_doOpacity:function(t,e){var n=void 0,r=void 0;if(null!=t||null!=e){null!=t&&(t=Math.max(0,Math.min(1,t))),null!=e&&(e=Math.max(0,Math.min(1,e)));var i=t+"_"+e;if(this._opacityRegistry[i]){var o=M(this._opacityRegistry[i],2);n=o[0],r=o[1]}else{n={Type:"ExtGState"},null!=t&&(n.ca=t),null!=e&&(n.CA=e),n=this.ref(n),n.end();r="Gs"+ ++this._opacityCount,this._opacityRegistry[i]=[n,r]}return this.page.ext_gstates[r]=n,this.addContent("/"+r+" gs")}},linearGradient:function(t,e,n,r){return new et(this,t,e,n,r)},radialGradient:function(t,e,n,r,i,o){return new nt(this,t,e,n,r,i,o)}},it={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],grey:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},ot=void 0,at=void 0,st=void 0,ut=void 0,lt=void 0,ct=void 0;ot=at=st=ut=lt=ct=0;var ft={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:2,t:2,V:1,v:1,Z:0,z:0},ht=function(t){var e=void 0,n=[],r=[],i="",o=!1,a=0,s=!0,u=!1,l=void 0;try{for(var c,f=t[Symbol.iterator]();!(s=(c=f.next()).done);s=!0){var h=c.value;if(null!=ft[h])a=ft[h],e&&(i.length>0&&(r[r.length]=+i),n[n.length]={cmd:e,args:r},r=[],i="",o=!1),e=h;else if([" ",","].includes(h)||"-"===h&&i.length>0&&"e"!==i[i.length-1]||"."===h&&o){if(0===i.length)continue;r.length===a?(n[n.length]={cmd:e,args:r},r=[+i],"M"===e&&(e="L"),"m"===e&&(e="l")):r[r.length]=+i,o="."===h,i=["-","."].includes(h)?h:""}else i+=h,"."===h&&(o=!0)}}catch(t){u=!0,l=t}finally{try{!s&&f.return&&f.return()}finally{if(u)throw l}}return i.length>0&&(r.length===a?(n[n.length]={cmd:e,args:r},r=[+i],"M"===e&&(e="L"),"m"===e&&(e="l")):r[r.length]=+i),n[n.length]={cmd:e,args:r},n},dt=function(t,e){ot=at=st=ut=lt=ct=0;for(var n=0;n<t.length;n++){var r=t[n];"function"==typeof pt[r.cmd]&&pt[r.cmd](e,r.args)}},pt={M:function(t,e){return ot=e[0],at=e[1],st=ut=null,lt=ot,ct=at,t.moveTo(ot,at)},m:function(t,e){return ot+=e[0],at+=e[1],st=ut=null,lt=ot,ct=at,t.moveTo(ot,at)},C:function(t,e){return ot=e[4],at=e[5],st=e[2],ut=e[3],t.bezierCurveTo.apply(t,F(e||[]))},c:function(t,e){return t.bezierCurveTo(e[0]+ot,e[1]+at,e[2]+ot,e[3]+at,e[4]+ot,e[5]+at),st=ot+e[2],ut=at+e[3],ot+=e[4],at+=e[5]},S:function(t,e){return null===st&&(st=ot,ut=at),t.bezierCurveTo(ot-(st-ot),at-(ut-at),e[0],e[1],e[2],e[3]),st=e[0],ut=e[1],ot=e[2],at=e[3]},s:function(t,e){return null===st&&(st=ot,ut=at),t.bezierCurveTo(ot-(st-ot),at-(ut-at),ot+e[0],at+e[1],ot+e[2],at+e[3]),st=ot+e[0],ut=at+e[1],ot+=e[2],at+=e[3]},Q:function(t,e){return st=e[0],ut=e[1],ot=e[2],at=e[3],t.quadraticCurveTo(e[0],e[1],ot,at)},q:function(t,e){return t.quadraticCurveTo(e[0]+ot,e[1]+at,e[2]+ot,e[3]+at),st=ot+e[0],ut=at+e[1],ot+=e[2],at+=e[3]},T:function(t,e){return null===st?(st=ot,ut=at):(st=ot-(st-ot),ut=at-(ut-at)),t.quadraticCurveTo(st,ut,e[0],e[1]),st=ot-(st-ot),ut=at-(ut-at),ot=e[0],at=e[1]},t:function(t,e){return null===st?(st=ot,ut=at):(st=ot-(st-ot),ut=at-(ut-at)),t.quadraticCurveTo(st,ut,ot+e[0],at+e[1]),ot+=e[0],at+=e[1]},A:function(t,e){return gt(t,ot,at,e),ot=e[5],at=e[6]},a:function(t,e){return e[5]+=ot,e[6]+=at,gt(t,ot,at,e),ot=e[5],at=e[6]},L:function(t,e){return ot=e[0],at=e[1],st=ut=null,t.lineTo(ot,at)},l:function(t,e){return ot+=e[0],at+=e[1],st=ut=null,t.lineTo(ot,at)},H:function(t,e){return ot=e[0],st=ut=null,t.lineTo(ot,at)},h:function(t,e){return ot+=e[0],st=ut=null,t.lineTo(ot,at)},V:function(t,e){return at=e[0],st=ut=null,t.lineTo(ot,at)},v:function(t,e){return at+=e[0],st=ut=null,t.lineTo(ot,at)},Z:function(t){return t.closePath(),ot=lt,at=ct},z:function(t){return t.closePath(),ot=lt,at=ct}},gt=function(t,e,n,r){var i=M(r,7),o=i[0],a=i[1],s=i[2],u=i[3],l=i[4],c=i[5],f=i[6],h=vt(c,f,o,a,u,l,s,e,n),d=!0,p=!1,g=void 0;try{for(var v,y=h[Symbol.iterator]();!(d=(v=y.next()).done);d=!0){var b=v.value,m=yt.apply(void 0,F(b||[]));t.bezierCurveTo.apply(t,F(m||[]))}}catch(t){p=!0,g=t}finally{try{!d&&y.return&&y.return()}finally{if(p)throw g}}},vt=function(t,e,n,r,i,o,a,s,u){var l=a*(Math.PI/180),c=Math.sin(l),f=Math.cos(l);n=Math.abs(n),r=Math.abs(r),st=f*(s-t)*.5+c*(u-e)*.5,ut=f*(u-e)*.5-c*(s-t)*.5;var h=st*st/(n*n)+ut*ut/(r*r);h>1&&(h=Math.sqrt(h),n*=h,r*=h);var d=f/n,p=c/n,g=-c/r,v=f/r,y=d*s+p*u,b=g*s+v*u,m=d*t+p*e,w=g*t+v*e,x=(m-y)*(m-y)+(w-b)*(w-b),_=1/x-.25;_<0&&(_=0);var k=Math.sqrt(_);o===i&&(k=-k);var S=.5*(y+m)-k*(w-b),C=.5*(b+w)+k*(m-y),A=Math.atan2(b-C,y-S),P=Math.atan2(w-C,m-S),E=P-A;E<0&&1===o?E+=2*Math.PI:E>0&&0===o&&(E-=2*Math.PI);for(var O=Math.ceil(Math.abs(E/(.5*Math.PI+.001))),T=[],I=0,B=O,L=0<=B;L?I<B:I>B;L?I++:I--){var R=A+I*E/O,M=A+(I+1)*E/O;T[I]=[S,C,R,M,n,r,c,f]}return T},yt=function(t,e,n,r,i,o,a,s){var u=s*i,l=-a*o,c=a*i,f=s*o,h=.5*(r-n),d=8/3*Math.sin(.5*h)*Math.sin(.5*h)/Math.sin(h),p=t+Math.cos(n)-d*Math.sin(n),g=e+Math.sin(n)+d*Math.cos(n),v=t+Math.cos(r),y=e+Math.sin(r),b=v+d*Math.sin(r),m=y-d*Math.cos(r);return[u*p+l*g,c*p+f*g,u*b+l*m,c*b+f*m,u*v+l*y,c*v+f*y]},bt=function(){function t(){I(this,t)}return B(t,null,[{key:"apply",value:function(t,e){var n=ht(e);dt(n,t)}}]),t}(),mt=j.number,wt=(Math.sqrt(2)-1)/3*4,xt={initVector:function(){return this._ctm=[1,0,0,1,0,0],this._ctmStack=[]},save:function(){return this._ctmStack.push(this._ctm.slice()),this.addContent("q")},restore:function(){return this._ctm=this._ctmStack.pop()||[1,0,0,1,0,0],this.addContent("Q")},closePath:function(){return this.addContent("h")},lineWidth:function(t){return this.addContent(mt(t)+" w")},_CAP_STYLES:{BUTT:0,ROUND:1,SQUARE:2},lineCap:function(t){return"string"==typeof t&&(t=this._CAP_STYLES[t.toUpperCase()]),this.addContent(t+" J")},_JOIN_STYLES:{MITER:0,ROUND:1,BEVEL:2},lineJoin:function(t){return"string"==typeof t&&(t=this._JOIN_STYLES[t.toUpperCase()]),this.addContent(t+" j")},miterLimit:function(t){return this.addContent(mt(t)+" M")},dash:function(t,e){var n=void 0;if(null==e&&(e={}),null==t)return this;if(Array.isArray(t))return t=t.map(function(t){return mt(t)}).join(" "),n=e.phase||0,this.addContent("["+t+"] "+mt(n)+" d");var r=null!=e.space?e.space:t;return n=e.phase||0,this.addContent("["+mt(t)+" "+mt(r)+"] "+mt(n)+" d")},undash:function(){return this.addContent("[] 0 d")},moveTo:function(t,e){return this.addContent(mt(t)+" "+mt(e)+" m")},lineTo:function(t,e){return this.addContent(mt(t)+" "+mt(e)+" l")},bezierCurveTo:function(t,e,n,r,i,o){return this.addContent(mt(t)+" "+mt(e)+" "+mt(n)+" "+mt(r)+" "+mt(i)+" "+mt(o)+" c")},quadraticCurveTo:function(t,e,n,r){return this.addContent(mt(t)+" "+mt(e)+" "+mt(n)+" "+mt(r)+" v")},rect:function(t,e,n,r){return this.addContent(mt(t)+" "+mt(e)+" "+mt(n)+" "+mt(r)+" re")},roundedRect:function(t,e,n,r,i){null==i&&(i=0),i=Math.min(i,.5*n,.5*r);var o=i*(1-wt);return this.moveTo(t+i,e),this.lineTo(t+n-i,e),this.bezierCurveTo(t+n-o,e,t+n,e+o,t+n,e+i),this.lineTo(t+n,e+r-i),this.bezierCurveTo(t+n,e+r-o,t+n-o,e+r,t+n-i,e+r),this.lineTo(t+i,e+r),this.bezierCurveTo(t+o,e+r,t,e+r-o,t,e+r-i),this.lineTo(t,e+i),this.bezierCurveTo(t,e+o,t+o,e,t+i,e),this.closePath()},ellipse:function(t,e,n,r){null==r&&(r=n),t-=n,e-=r;var i=n*wt,o=r*wt,a=t+2*n,s=e+2*r,u=t+n,l=e+r;return this.moveTo(t,l),this.bezierCurveTo(t,l-o,u-i,e,u,e),this.bezierCurveTo(u+i,e,a,l-o,a,l),this.bezierCurveTo(a,l+o,u+i,s,u,s),this.bezierCurveTo(u-i,s,t,l+o,t,l),this.closePath()},circle:function(t,e,n){return this.ellipse(t,e,n)},arc:function(t,e,n,r,i,o){null==o&&(o=!1);var a=2*Math.PI,s=.5*Math.PI,u=i-r;if(Math.abs(u)>a)u=a;else if(0!==u&&o!==u<0){var l=o?-1:1;u=l*a+u}var c=Math.ceil(Math.abs(u)/s),f=u/c,h=f/s*wt*n,d=r,p=-Math.sin(d)*h,g=Math.cos(d)*h,v=t+Math.cos(d)*n,y=e+Math.sin(d)*n;this.moveTo(v,y);for(var b=0,m=c,w=0<=m;w?b<m:b>m;w?b++:b--){var x=v+p,_=y+g;d+=f,v=t+Math.cos(d)*n,y=e+Math.sin(d)*n,p=-Math.sin(d)*h,g=Math.cos(d)*h;var k=v-p,S=y-g;this.bezierCurveTo(x,_,k,S,v,y)}return this},polygon:function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];this.moveTo.apply(this,F(e.shift()||[]));var r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var u=a.value;this.lineTo.apply(this,F(u||[]))}}catch(t){i=!0,o=t}finally{try{!r&&s.return&&s.return()}finally{if(i)throw o}}return this.closePath()},path:function(t){return bt.apply(this,t),this},_windingRule:function(t){return/even-?odd/.test(t)?"*":""},fill:function(t,e){return/(even-?odd)|(non-?zero)/.test(t)&&(e=t,t=null),t&&this.fillColor(t),this.addContent("f"+this._windingRule(e))},stroke:function(t){return t&&this.strokeColor(t),this.addContent("S")},fillAndStroke:function(t,e,n){null==e&&(e=t);var r=/(even-?odd)|(non-?zero)/;return r.test(t)&&(n=t,t=null),r.test(e)&&(n=e,e=t),t&&(this.fillColor(t),this.strokeColor(e)),this.addContent("B"+this._windingRule(n))},clip:function(t){return this.addContent("W"+this._windingRule(t)+" n")},transform:function(t,e,n,r,i,o){var a=this._ctm,s=M(a,6),u=s[0],l=s[1],c=s[2],f=s[3],h=s[4],d=s[5];a[0]=u*t+c*e,a[1]=l*t+f*e,a[2]=u*n+c*r,a[3]=l*n+f*r,a[4]=u*i+c*o+h,a[5]=l*i+f*o+d;var p=[t,e,n,r,i,o].map(function(t){return mt(t)}).join(" ");return this.addContent(p+" cm")},translate:function(t,e){return this.transform(1,0,0,1,t,e)},rotate:function(t,e){var n=void 0;null==e&&(e={});var r=t*Math.PI/180,i=Math.cos(r),o=Math.sin(r),a=n=0;if(null!=e.origin){var s=M(e.origin,2);a=s[0],n=s[1];var u=a*i-n*o,l=a*o+n*i;a-=u,n-=l}return this.transform(i,o,-o,i,a,n)},scale:function(t,e,n){var r=void 0;null==e&&(e=t),null==n&&(n={}),"object"===(void 0===e?"undefined":T(e))&&(n=e,e=t);var i=r=0;if(null!=n.origin){var o=M(n.origin,2);i=o[0],r=o[1],i-=t*i,r-=e*r}return this.transform(t,0,0,e,i,r)}},_t={402:131,8211:150,8212:151,8216:145,8217:146,8218:130,8220:147,8221:148,8222:132,8224:134,8225:135,8226:149,8230:133,8364:128,8240:137,8249:139,8250:155,710:136,8482:153,338:140,339:156,732:152,352:138,353:154,376:159,381:142,382:158},kt=".notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n.notdef       .notdef        .notdef        .notdef\n  \nspace         exclam         quotedbl       numbersign\ndollar        percent        ampersand      quotesingle\nparenleft     parenright     asterisk       plus\ncomma         hyphen         period         slash\nzero          one            two            three\nfour          five           six            seven\neight         nine           colon          semicolon\nless          equal          greater        question\n  \nat            A              B              C\nD             E              F              G\nH             I              J              K\nL             M              N              O\nP             Q              R              S\nT             U              V              W\nX             Y              Z              bracketleft\nbackslash     bracketright   asciicircum    underscore\n  \ngrave         a              b              c\nd             e              f              g\nh             i              j              k\nl             m              n              o\np             q              r              s\nt             u              v              w\nx             y              z              braceleft\nbar           braceright     asciitilde     .notdef\n  \nEuro          .notdef        quotesinglbase florin\nquotedblbase  ellipsis       dagger         daggerdbl\ncircumflex    perthousand    Scaron         guilsinglleft\nOE            .notdef        Zcaron         .notdef\n.notdef       quoteleft      quoteright     quotedblleft\nquotedblright bullet         endash         emdash\ntilde         trademark      scaron         guilsinglright\noe            .notdef        zcaron         ydieresis\n  \nspace         exclamdown     cent           sterling\ncurrency      yen            brokenbar      section\ndieresis      copyright      ordfeminine    guillemotleft\nlogicalnot    hyphen         registered     macron\ndegree        plusminus      twosuperior    threesuperior\nacute         mu             paragraph      periodcentered\ncedilla       onesuperior    ordmasculine   guillemotright\nonequarter    onehalf        threequarters  questiondown\n  \nAgrave        Aacute         Acircumflex    Atilde\nAdieresis     Aring          AE             Ccedilla\nEgrave        Eacute         Ecircumflex    Edieresis\nIgrave        Iacute         Icircumflex    Idieresis\nEth           Ntilde         Ograve         Oacute\nOcircumflex   Otilde         Odieresis      multiply\nOslash        Ugrave         Uacute         Ucircumflex\nUdieresis     Yacute         Thorn          germandbls\n  \nagrave        aacute         acircumflex    atilde\nadieresis     aring          ae             ccedilla\negrave        eacute         ecircumflex    edieresis\nigrave        iacute         icircumflex    idieresis\neth           ntilde         ograve         oacute\nocircumflex   otilde         odieresis      divide\noslash        ugrave         uacute         ucircumflex\nudieresis     yacute         thorn          ydieresis".split(/\s+/),St=function(){function t(e){I(this,t),this.contents=e,this.attributes={},this.glyphWidths={},this.boundingBoxes={},this.kernPairs={},this.parse(),this.charWidths=new Array(256);for(var n=0;n<=255;n++)this.charWidths[n]=this.glyphWidths[kt[n]];this.bbox=this.attributes.FontBBox.split(/\s+/).map(function(t){return+t}),this.ascender=+(this.attributes.Ascender||0),this.descender=+(this.attributes.Descender||0),this.xHeight=+(this.attributes.XHeight||0),this.capHeight=+(this.attributes.CapHeight||0),this.lineGap=this.bbox[3]-this.bbox[1]-(this.ascender-this.descender)}return B(t,null,[{key:"open",value:function(e){return new t(O.readFileSync(e,"utf8"))}}]),B(t,[{key:"parse",value:function(){var t="",e=!0,n=!1,r=void 0;try{for(var i,o=this.contents.split("\n")[Symbol.iterator]();!(e=(i=o.next()).done);e=!0){var a,s,u=i.value;if(a=u.match(/^Start(\w+)/))t=a[1];else if(a=u.match(/^End(\w+)/))t="";else switch(t){case"FontMetrics":a=u.match(/(^\w+)\s+(.*)/);var l=a[1],c=a[2];(s=this.attributes[l])?(Array.isArray(s)||(s=this.attributes[l]=[s]),s.push(c)):this.attributes[l]=c;break;case"CharMetrics":if(!/^CH?\s/.test(u))continue;var f=u.match(/\bN\s+(\.?\w+)\s*;/)[1];this.glyphWidths[f]=+u.match(/\bWX\s+(\d+)\s*;/)[1];break;case"KernPairs":a=u.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/),a&&(this.kernPairs[a[1]+"\0"+a[2]]=parseInt(a[3]))}}}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}}},{key:"encodeText",value:function(t){for(var e=[],n=0,r=t.length,i=0<=r;i?n<r:n>r;i?n++:n--){var o=t.charCodeAt(n);o=_t[o]||o,e.push(o.toString(16))}return e}},{key:"glyphsForString",value:function(t){for(var e=[],n=0,r=t.length,i=0<=r;i?n<r:n>r;i?n++:n--){var o=t.charCodeAt(n);e.push(this.characterToGlyph(o))}return e}},{key:"characterToGlyph",value:function(t){return kt[_t[t]||t]||".notdef"}},{key:"widthOfGlyph",value:function(t){return this.glyphWidths[t]||0}},{key:"getKernPair",value:function(t,e){return this.kernPairs[t+"\0"+e]||0}},{key:"advancesForGlyphs",value:function(t){for(var e=[],n=0;n<t.length;n++){var r=t[n],i=t[n+1];e.push(this.widthOfGlyph(r)+this.getKernPair(r,i))}return e}}]),t}(),Ct=function(){function t(){I(this,t)}return B(t,[{key:"encode",value:function(){throw new Error("Must be implemented by subclasses")}},{key:"widthOfString",value:function(){throw new Error("Must be implemented by subclasses")}},{key:"ref",value:function(){return null!=this.dictionary?this.dictionary:this.dictionary=this.document.ref()}},{key:"finalize",value:function(){if(!this.embedded&&null!=this.dictionary)return this.embed(),this.embedded=!0}},{key:"embed",value:function(){throw new Error("Must be implemented by subclasses")}},{key:"lineHeight",value:function(t,e){null==e&&(e=!1);var n=e?this.lineGap:0;return(this.ascender+n-this.descender)/1e3*t}}]),t}(),At={Courier:function(){return O.readFileSync(r+"/data/Courier.afm","utf8")},"Courier-Bold":function(){return O.readFileSync(r+"/data/Courier-Bold.afm","utf8")},"Courier-Oblique":function(){return O.readFileSync(r+"/data/Courier-Oblique.afm","utf8")},"Courier-BoldOblique":function(){return O.readFileSync(r+"/data/Courier-BoldOblique.afm","utf8")},Helvetica:function(){return O.readFileSync(r+"/data/Helvetica.afm","utf8")},"Helvetica-Bold":function(){return O.readFileSync(r+"/data/Helvetica-Bold.afm","utf8")},"Helvetica-Oblique":function(){return O.readFileSync(r+"/data/Helvetica-Oblique.afm","utf8")},"Helvetica-BoldOblique":function(){return O.readFileSync(r+"/data/Helvetica-BoldOblique.afm","utf8")},"Times-Roman":function(){return O.readFileSync(r+"/data/Times-Roman.afm","utf8")},"Times-Bold":function(){return O.readFileSync(r+"/data/Times-Bold.afm","utf8")},"Times-Italic":function(){return O.readFileSync(r+"/data/Times-Italic.afm","utf8")},"Times-BoldItalic":function(){return O.readFileSync(r+"/data/Times-BoldItalic.afm","utf8")},Symbol:function(){return O.readFileSync(r+"/data/Symbol.afm","utf8")},ZapfDingbats:function(){return O.readFileSync(r+"/data/ZapfDingbats.afm","utf8")}},Pt=function(t){function e(t,n,r){I(this,e);var i=R(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));i.document=t,i.name=n,i.id=r,i.font=new St(At[i.name]());var o=i.font;return i.ascender=o.ascender,i.descender=o.descender,i.bbox=o.bbox,i.lineGap=o.lineGap,i.xHeight=o.xHeight,i.capHeight=o.capHeight,i}return L(e,t),B(e,[{key:"embed",value:function(){return this.dictionary.data={Type:"Font",BaseFont:this.name,Subtype:"Type1",Encoding:"WinAnsiEncoding"},this.dictionary.end()}},{key:"encode",value:function(t){for(var e=this.font.encodeText(t),n=this.font.glyphsForString(""+t),r=this.font.advancesForGlyphs(n),i=[],o=0;o<n.length;o++){var a=n[o];i.push({xAdvance:r[o],yAdvance:0,xOffset:0,yOffset:0,advanceWidth:this.font.widthOfGlyph(a)})}return[e,i]}},{key:"widthOfString",value:function(t,e){var n=this.font.glyphsForString(""+t),r=this.font.advancesForGlyphs(n),i=0,o=!0,a=!1,s=void 0;try{for(var u,l=r[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){i+=u.value}}catch(t){a=!0,s=t}finally{try{!o&&l.return&&l.return()}finally{if(a)throw s}}return i*(e/1e3)}}],[{key:"isStandardFont",value:function(t){return t in At}}]),e}(Ct),Et=function(t){return("0000"+t.toString(16)).slice(-4)},Ot=function(t){function e(t,n,r){I(this,e);var i=R(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return i.document=t,i.font=n,i.id=r,i.subset=i.font.createSubset(),i.unicode=[[0]],i.widths=[i.font.getGlyph(0).advanceWidth],i.name=i.font.postscriptName,i.scale=1e3/i.font.unitsPerEm,i.ascender=i.font.ascent*i.scale,i.descender=i.font.descent*i.scale,i.xHeight=i.font.xHeight*i.scale,i.capHeight=i.font.capHeight*i.scale,i.lineGap=i.font.lineGap*i.scale,i.bbox=i.font.bbox,i.layoutCache=Object.create(null),i}return L(e,t),B(e,[{key:"layoutRun",value:function(t,e){for(var n=this.font.layout(t,e),r=0;r<n.positions.length;r++){var i=n.positions[r];for(var o in i)i[o]*=this.scale;i.advanceWidth=n.glyphs[r].advanceWidth*this.scale}return n}},{key:"layoutCached",value:function(t){var e=void 0;if(e=this.layoutCache[t])return e;var n=this.layoutRun(t);return this.layoutCache[t]=n,n}},{key:"layout",value:function(t,e,n){if(null==n&&(n=!1),e)return this.layoutRun(t,e);for(var r=n?null:[],i=n?null:[],o=0,a=0,s=0;s<=t.length;){var u;if(s===t.length&&a<s||(u=t.charAt(s),[" ","\t"].includes(u))){var l=this.layoutCached(t.slice(a,++s));n||(r.push.apply(r,F(l.glyphs||[])),i.push.apply(i,F(l.positions||[]))),o+=l.advanceWidth,a=s}else s++}return{glyphs:r,positions:i,advanceWidth:o}}},{key:"encode",value:function(t,e){for(var n=this.layout(t,e),r=n.glyphs,i=n.positions,o=[],a=0;a<r.length;a++){var s=r[a],u=this.subset.includeGlyph(s.id);o.push(("0000"+u.toString(16)).slice(-4)),null==this.widths[u]&&(this.widths[u]=s.advanceWidth*this.scale),null==this.unicode[u]&&(this.unicode[u]=s.codePoints)}return[o,i]}},{key:"widthOfString",value:function(t,e,n){return this.layout(t,n,!0).advanceWidth*(e/1e3)}},{key:"embed",value:function(){var t=this,e=null!=this.subset.cff,n=this.document.ref();e&&(n.data.Subtype="CIDFontType0C"),this.subset.encodeStream().on("data",function(t){return n.write(t)}).on("end",function(){return n.end()});var r=((null!=this.font["OS/2"]?this.font["OS/2"].sFamilyClass:void 0)||0)>>8,i=0;this.font.post.isFixedPitch&&(i|=1),1<=r&&r<=7&&(i|=2),i|=4,10===r&&(i|=8),this.font.head.macStyle.italic&&(i|=64);var o=[1,2,3,4,5,6].map(function(e){return String.fromCharCode((t.id.charCodeAt(e)||74)+16)}).join(""),a=o+"+"+this.font.postscriptName,s=this.font.bbox,u=this.document.ref({Type:"FontDescriptor",FontName:a,Flags:i,FontBBox:[s.minX*this.scale,s.minY*this.scale,s.maxX*this.scale,s.maxY*this.scale],ItalicAngle:this.font.italicAngle,Ascent:this.ascender,Descent:this.descender,CapHeight:(this.font.capHeight||this.font.ascent)*this.scale,XHeight:(this.font.xHeight||0)*this.scale,StemV:0});e?u.data.FontFile3=n:u.data.FontFile2=n,u.end();var l=this.document.ref({Type:"Font",Subtype:e?"CIDFontType0":"CIDFontType2",BaseFont:a,CIDSystemInfo:{Registry:new String("Adobe"),Ordering:new String("Identity"),Supplement:0},FontDescriptor:u,W:[0,this.widths]});return l.end(),this.dictionary.data={Type:"Font",Subtype:"Type0",BaseFont:a,Encoding:"Identity-H",DescendantFonts:[l],ToUnicode:this.toUnicodeCmap()},this.dictionary.end()}},{key:"toUnicodeCmap",value:function(){var t=this.document.ref(),e=[],n=!0,r=!1,i=void 0;try{for(var o,a=this.unicode[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value,u=[],l=!0,c=!1,f=void 0;try{for(var h,d=s[Symbol.iterator]();!(l=(h=d.next()).done);l=!0){var p=h.value;p>65535&&(p-=65536,u.push(Et(p>>>10&1023|55296)),p=56320|1023&p),u.push(Et(p))}}catch(t){c=!0,f=t}finally{try{!l&&d.return&&d.return()}finally{if(c)throw f}}e.push("<"+u.join(" ")+">")}}catch(t){r=!0,i=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw i}}return t.end("/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n1 beginbfrange\n<0000> <"+Et(e.length-1)+"> ["+e.join(" ")+"]\nendbfrange\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend"),t}}]),e}(Ct),Tt=function(){function e(){I(this,e)}return B(e,null,[{key:"open",value:function(e,n,r,i){var o=void 0;if("string"==typeof n){if(Pt.isStandardFont(n))return new Pt(e,n,i);o=S.default.openSync(n,r)}else t.isBuffer(n)?o=S.default.create(n,r):n instanceof Uint8Array?o=S.default.create(new t(n),r):n instanceof ArrayBuffer&&(o=S.default.create(new t(new Uint8Array(n)),r));if(null==o)throw new Error("Not a supported font format or standard PDF font.");return new Ot(e,o,i)}}]),e}(),It={initFonts:function(){this._fontFamilies={},this._fontCount=0,this._fontSize=12,this._font=null,this._registeredFonts={}},font:function(t,e,n){var r=void 0,i=void 0;if("number"==typeof e&&(n=e,e=null),"string"==typeof t&&this._registeredFonts[t]){r=t;var o=this._registeredFonts[t];t=o.src,e=o.family}else"string"!=typeof(r=e||t)&&(r=null);if(null!=n&&this.fontSize(n),i=this._fontFamilies[r])return this._font=i,this;var a="F"+ ++this._fontCount;return this._font=Tt.open(this,t,e,a),(i=this._fontFamilies[this._font.name])?(this._font=i,this):(r&&(this._fontFamilies[r]=this._font),this._font.name&&(this._fontFamilies[this._font.name]=this._font),this)},fontSize:function(t){return this._fontSize=t,this},currentLineHeight:function(t){return null==t&&(t=!1),this._font.lineHeight(this._fontSize,t)},registerFont:function(t,e,n){return this._registeredFonts[t]={src:e,family:n},this}},Bt=function(t){function e(t,n){I(this,e);var r=R(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.document=t,r.indent=n.indent||0,r.characterSpacing=n.characterSpacing||0,r.wordSpacing=0===n.wordSpacing,r.columns=n.columns||1,r.columnGap=null!=n.columnGap?n.columnGap:18,r.lineWidth=(n.width-r.columnGap*(r.columns-1))/r.columns,r.spaceLeft=r.lineWidth,r.startX=r.document.x,r.startY=r.document.y,r.column=1,r.ellipsis=n.ellipsis,r.continuedX=0,r.features=n.features,null!=n.height?(r.height=n.height,r.maxY=r.startY+n.height):r.maxY=r.document.page.maxY(),r.on("firstLine",function(t){var e=r.continuedX||r.indent;return r.document.x+=e,r.lineWidth-=e,r.once("line",function(){if(r.document.x-=e,r.lineWidth+=e,t.continued&&!r.continuedX&&(r.continuedX=r.indent),!t.continued)return r.continuedX=0})}),r.on("lastLine",function(t){var e=t.align;return"justify"===e&&(t.align="left"),r.lastLine=!0,r.once("line",function(){return r.document.y+=t.paragraphGap||0,t.align=e,r.lastLine=!1})}),r}return L(e,t),B(e,[{key:"wordWidth",value:function(t){return this.document.widthOfString(t,this)+this.characterSpacing+this.wordSpacing}},{key:"eachWord",value:function(t,e){for(var n=void 0,r=new A.default(t),i=null,o=Object.create(null);n=r.nextBreak();){var a,s=t.slice((null!=i?i.position:void 0)||0,n.position),u=null!=o[s]?o[s]:o[s]=this.wordWidth(s);if(u>this.lineWidth+this.continuedX)for(var l=i,c={};s.length;){var f,h;u>this.spaceLeft?(f=Math.ceil(this.spaceLeft/(u/s.length)),u=this.wordWidth(s.slice(0,f)),h=u<=this.spaceLeft&&f<s.length):f=s.length;for(var d=u>this.spaceLeft&&f>0;d||h;)d?(u=this.wordWidth(s.slice(0,--f)),d=u>this.spaceLeft&&f>0):(u=this.wordWidth(s.slice(0,++f)),d=u>this.spaceLeft&&f>0,h=u<=this.spaceLeft&&f<s.length);if(c.required=n.required||f<s.length,a=e(s.slice(0,f),u,c,l),l={required:!1},s=s.slice(f),u=this.wordWidth(s),!1===a)break}else a=e(s,u,n,i);if(!1===a)break;i=n}}},{key:"wrap",value:function(t,e){var n=this;null!=e.indent&&(this.indent=e.indent),null!=e.characterSpacing&&(this.characterSpacing=e.characterSpacing),null!=e.wordSpacing&&(this.wordSpacing=e.wordSpacing),null!=e.ellipsis&&(this.ellipsis=e.ellipsis);var r=this.document.y+this.document.currentLineHeight(!0);(this.document.y>this.maxY||r>this.maxY)&&this.nextSection();var i="",o=0,a=0,s=0,u=this.document.y,l=function(){return e.textWidth=o+n.wordSpacing*(a-1),e.wordCount=a,e.lineWidth=n.lineWidth,u=n.document.y,n.emit("line",i,e,n),s++};return this.emit("sectionStart",e,this),this.eachWord(t,function(t,r,s,u){if((null==u||u.required)&&(n.emit("firstLine",e,n),n.spaceLeft=n.lineWidth),r<=n.spaceLeft&&(i+=t,o+=r,a++),s.required||r>n.spaceLeft){var c=n.document.currentLineHeight(!0);if(null!=n.height&&n.ellipsis&&n.document.y+2*c>n.maxY&&n.column>=n.columns){for(!0===n.ellipsis&&(n.ellipsis="â¦"),i=i.replace(/\s+$/,""),o=n.wordWidth(i+n.ellipsis);i&&o>n.lineWidth;)i=i.slice(0,-1).replace(/\s+$/,""),o=n.wordWidth(i+n.ellipsis);o<=n.lineWidth&&(i+=n.ellipsis),o=n.wordWidth(i)}if(s.required&&(r>n.spaceLeft&&(l(),i=t,o=r,a=1),n.emit("lastLine",e,n)),l(),n.document.y+c>n.maxY){if(!n.nextSection())return a=0,i="",!1}return s.required?(n.spaceLeft=n.lineWidth,i="",o=0,a=0):(n.spaceLeft=n.lineWidth-r,i=t,o=r,a=1)}return n.spaceLeft-=r}),a>0&&(this.emit("lastLine",e,this),l()),this.emit("sectionEnd",e,this),!0===e.continued?(s>1&&(this.continuedX=0),this.continuedX+=e.textWidth||0,this.document.y=u):this.document.x=this.startX}},{key:"nextSection",value:function(t){if(this.emit("sectionEnd",t,this),++this.column>this.columns){if(null!=this.height)return!1;if(this.document.addPage(),this.column=1,this.startY=this.document.page.margins.top,this.maxY=this.document.page.maxY(),this.document.x=this.startX,this.document._fillColor){var e;(e=this.document).fillColor.apply(e,F(this.document._fillColor||[]))}this.emit("pageBreak",t,this)}else this.document.x+=this.lineWidth+this.columnGap,this.document.y=this.startY,this.emit("columnBreak",t,this);return this.emit("sectionStart",t,this),!0}}]),e}(C.EventEmitter),Lt=j.number,Rt={initText:function(){return this._line=this._line.bind(this),this.x=0,this.y=0,this._lineGap=0},lineGap:function(t){return this._lineGap=t,this},moveDown:function(t){return null==t&&(t=1),this.y+=this.currentLineHeight(!0)*t+this._lineGap,this},moveUp:function(t){return null==t&&(t=1),this.y-=this.currentLineHeight(!0)*t+this._lineGap,this},_text:function(t,e,n,r,i){if(r=this._initOptions(e,n,r),t=null==t?"":""+t,r.wordSpacing&&(t=t.replace(/\s{2,}/g," ")),r.width){var o=this._wrapper;o||(o=new Bt(this,r),o.on("line",i)),this._wrapper=r.continued?o:null,this._textOptions=r.continued?r:null,o.wrap(t,r)}else{var a=!0,s=!1,u=void 0;try{for(var l,c=t.split("\n")[Symbol.iterator]();!(a=(l=c.next()).done);a=!0){i(l.value,r)}}catch(t){s=!0,u=t}finally{try{!a&&c.return&&c.return()}finally{if(s)throw u}}}return this},text:function(t,e,n,r){return this._text(t,e,n,r,this._line)},widthOfString:function(t,e){return null==e&&(e={}),this._font.widthOfString(t,this._fontSize,e.features)+(e.characterSpacing||0)*(t.length-1)},heightOfString:function(t,e){var n=this;null==e&&(e={});var r=this.x,i=this.y;e=this._initOptions(e),e.height=1/0;var o=e.lineGap||this._lineGap||0;this._text(t,this.x,this.y,e,function(t,e){return n.y+=n.currentLineHeight(!0)+o});var a=this.y-i;return this.x=r,this.y=i,a},list:function(t,e,n,r,i){var o=this;r=this._initOptions(e,n,r);var a=r.listType||"bullet",s=Math.round(this._font.ascender/1e3*this._fontSize),u=s/2,l=r.bulletRadius||s/3,c=r.textIndent||("bullet"===a?5*l:2*s),f=r.bulletIndent||("bullet"===a?8*l:2*s),h=1,d=[],p=[],g=[];!function t(e){for(var n=1,r=0;r<e.length;r++){var i=e[r];Array.isArray(i)?(h++,t(i),h--):(d.push(i),p.push(h),"bullet"!==a&&g.push(n++))}}(t);var v=function(t){switch(a){case"numbered":return t+".";case"lettered":var e=String.fromCharCode((t-1)%26+65),n=Math.floor((t-1)/26+1);return Array(n+1).join(e)+"."}};i=new Bt(this,r),i.on("line",this._line),h=1;var y=0;return i.on("firstLine",function(){var t=void 0;if((t=p[y++])!==h){var e=f*(t-h);o.x+=e,i.lineWidth-=e,h=t}switch(a){case"bullet":return o.circle(o.x-c+l,o.y+u,l),o.fill();case"numbered":case"lettered":var n=v(g[y-1]);return o._fragment(n,o.x-c,o.y,r)}}),i.on("sectionStart",function(){var t=c+f*(h-1);return o.x+=t,i.lineWidth-=t}),i.on("sectionEnd",function(){var t=c+f*(h-1);return o.x-=t,i.lineWidth+=t}),i.wrap(d.join("\n"),r),this},_initOptions:function(t,e,n){if(null==t&&(t={}),null==n&&(n={}),"object"===(void 0===t?"undefined":T(t))&&(n=t,t=null),n=function(){var t={};for(var e in n){var r=n[e];t[e]=r}return t}(),this._textOptions)for(var r in this._textOptions){var i=this._textOptions[r];"continued"!==r&&null==n[r]&&(n[r]=i)}return null!=t&&(this.x=t),null!=e&&(this.y=e),!1!==n.lineBreak&&null==n.width&&(n.width=this.page.width-this.x-this.page.margins.right),n.columns||(n.columns=0),null==n.columnGap&&(n.columnGap=18),n},_line:function(t,e,n){null==e&&(e={}),this._fragment(t,this.x,this.y,e);var r=e.lineGap||this._lineGap||0;return n?this.y+=this.currentLineHeight(!0)+r:this.x+=this.widthOfString(t)},_fragment:function(t,e,n,r){var i=this,o=void 0,a=void 0,s=void 0,u=void 0,l=void 0,c=void 0;if(t=(""+t).replace(/\n/g,""),0!==t.length){var f=r.align||"left",h=r.wordSpacing||0,d=r.characterSpacing||0;if(r.width)switch(f){case"right":l=this.widthOfString(t.replace(/\s+$/,""),r),e+=r.lineWidth-l;break;case"center":e+=r.lineWidth/2-r.textWidth/2;break;case"justify":c=t.trim().split(/\s+/),l=this.widthOfString(t.replace(/\s+/g,""),r);var p=this.widthOfString(" ")+d;h=Math.max(0,(r.lineWidth-l)/Math.max(1,c.length-1)-p)}if("number"==typeof r.baseline)o=-r.baseline;else{switch(r.baseline){case"svg-middle":o=.5*this._font.xHeight;break;case"middle":case"svg-central":o=.5*(this._font.descender+this._font.ascender);break;case"bottom":case"ideographic":o=this._font.descender;break;case"alphabetic":o=0;break;case"mathematical":o=.5*this._font.ascender;break;case"hanging":o=.8*this._font.ascender;break;case"top":o=this._font.ascender;break;default:o=this._font.ascender}o=o/1e3*this._fontSize}var g=r.textWidth+h*(r.wordCount-1)+d*(t.length-1);if(null!=r.link&&this.link(e,n,g,this.currentLineHeight(),r.link),r.underline||r.strike){this.save(),r.stroke||this.strokeColor.apply(this,F(this._fillColor||[]));var v=this._fontSize<10?.5:Math.floor(this._fontSize/10);this.lineWidth(v);var y=r.underline?1:2,b=n+this.currentLineHeight()/y;r.underline&&(b-=v),this.moveTo(e,b),this.lineTo(e+g,b),this.stroke(),this.restore()}if(this.save(),r.oblique){var m=void 0;m="number"==typeof r.oblique?-Math.tan(r.oblique*Math.PI/180):-.25,this.transform(1,0,0,1,e,n),this.transform(1,0,m,1,-m*o,0),this.transform(1,0,0,1,-e,-n)}this.transform(1,0,0,-1,0,this.page.height),n=this.page.height-n-o,null==this.page.fonts[this._font.id]&&(this.page.fonts[this._font.id]=this._font.ref()),this.addContent("BT"),this.addContent("1 0 0 1 "+Lt(e)+" "+Lt(n)+" Tm"),this.addContent("/"+this._font.id+" "+Lt(this._fontSize)+" Tf");var w=r.fill&&r.stroke?2:r.stroke?1:0;if(w&&this.addContent(w+" Tr"),d&&this.addContent(Lt(d)+" Tc"),h){c=t.trim().split(/\s+/),h+=this.widthOfString(" ")+d,h*=1e3/this._fontSize,a=[],u=[];var x=!0,_=!1,k=void 0;try{for(var S,C=c[Symbol.iterator]();!(x=(S=C.next()).done);x=!0){var A,P,E=S.value,O=this._font.encode(E,r.features),T=M(O,2),I=T[0],B=T[1];(A=a).push.apply(A,F(I||[])),(P=u).push.apply(P,F(B||[]));var L={},R=u[u.length-1];for(var D in R){var z=R[D];L[D]=z}L.xAdvance+=h,u[u.length-1]=L}}catch(t){_=!0,k=t}finally{try{!x&&C.return&&C.return()}finally{if(_)throw k}}}else{var N=this._font.encode(t,r.features),W=M(N,2);a=W[0],u=W[1]}var U=this._fontSize/1e3,j=[],G=0,H=!1,V=function(t){if(G<t){var e=a.slice(G,t).join(""),n=u[t-1].xAdvance-u[t-1].advanceWidth;j.push("<"+e+"> "+Lt(-n))}return G=t},q=function(t){if(V(t),j.length>0)return i.addContent("["+j.join(" ")+"] TJ"),j.length=0};for(s=0;s<u.length;s++){var Z=u[s];Z.xOffset||Z.yOffset?(q(s),this.addContent("1 0 0 1 "+Lt(e+Z.xOffset*U)+" "+Lt(n+Z.yOffset*U)+" Tm"),q(s+1),H=!0):(H&&(this.addContent("1 0 0 1 "+Lt(e)+" "+Lt(n)+" Tm"),H=!1),Z.xAdvance-Z.advanceWidth!=0&&V(s+1)),e+=Z.xAdvance*U}return q(s),this.addContent("ET"),this.restore()}}},Mt=[65472,65473,65474,65475,65477,65478,65479,65480,65481,65482,65483,65484,65485,65486,65487],Ft={1:"DeviceGray",3:"DeviceRGB",4:"DeviceCMYK"},Dt=function(){function t(e,n){I(this,t);var r=void 0;if(this.data=e,this.label=n,65496!==this.data.readUInt16BE(0))throw"SOI not found in JPEG";for(var i=2;i<this.data.length&&(r=this.data.readUInt16BE(i),i+=2,!Mt.includes(r));)i+=this.data.readUInt16BE(i);if(!Mt.includes(r))throw"Invalid JPEG.";i+=2,this.bits=this.data[i++],this.height=this.data.readUInt16BE(i),i+=2,this.width=this.data.readUInt16BE(i),i+=2;var o=this.data[i++];this.colorSpace=Ft[o],this.obj=null}return B(t,[{key:"embed",value:function(t){if(!this.obj)return this.obj=t.ref({Type:"XObject",Subtype:"Image",BitsPerComponent:this.bits,Width:this.width,Height:this.height,ColorSpace:this.colorSpace,Filter:"DCTDecode"}),"DeviceCMYK"===this.colorSpace&&(this.obj.data.Decode=[1,0,1,0,1,0,1,0]),this.obj.end(this.data),this.data=null}}]),t}(),zt=function(){function e(t,n){I(this,e),this.label=n,this.image=new P.default(t),this.width=this.image.width,this.height=this.image.height,this.imgData=this.image.imgData,this.obj=null}return B(e,[{key:"embed",value:function(e){if(this.document=e,!this.obj){var n=this.image.hasAlphaChannel;if(this.obj=this.document.ref({Type:"XObject",Subtype:"Image",BitsPerComponent:n?8:this.image.bits,Width:this.width,Height:this.height,Filter:"FlateDecode"}),!n){var r=this.document.ref({Predictor:15,Colors:this.image.colors,BitsPerComponent:this.image.bits,Columns:this.width});this.obj.data.DecodeParms=r,r.end()}if(0===this.image.palette.length)this.obj.data.ColorSpace=this.image.colorSpace;else{var i=this.document.ref();i.end(new t(this.image.palette)),this.obj.data.ColorSpace=["Indexed","DeviceRGB",this.image.palette.length/3-1,i]}if(null!=this.image.transparency.grayscale){var o=this.image.transparency.grayscale;this.obj.data.Mask=[o,o]}else if(this.image.transparency.rgb){var a=this.image.transparency.rgb,s=[],u=!0,l=!1,c=void 0;try{for(var f,h=a[Symbol.iterator]();!(u=(f=h.next()).done);u=!0){var d=f.value;s.push(d,d)}}catch(t){l=!0,c=t}finally{try{!u&&h.return&&h.return()}finally{if(l)throw c}}this.obj.data.Mask=s}else{if(this.image.transparency.indexed)return this.loadIndexedAlphaChannel();if(n)return this.splitAlphaChannel()}this.finalize()}}},{key:"finalize",value:function(){if(this.alphaChannel){var t=this.document.ref({Type:"XObject",Subtype:"Image",Height:this.height,Width:this.width,BitsPerComponent:8,Filter:"FlateDecode",ColorSpace:"DeviceGray",Decode:[0,1]});t.end(this.alphaChannel),this.obj.data.SMask=t}return this.obj.end(this.imgData),this.image=null,this.imgData=null}},{key:"splitAlphaChannel",value:function(){var e=this;return this.image.decodePixels(function(n){for(var r=void 0,i=void 0,o=e.image.colors,a=e.width*e.height,s=new t(a*o),u=new t(a),l=i=r=0,c=n.length,f=16===e.image.bits?1:0;l<c;){for(var h=0;h<o;h++)s[i++]=n[l++],l+=f;u[r++]=n[l++],l+=f}return e.imgData=x.default.deflateSync(s),e.alphaChannel=x.default.deflateSync(u),e.finalize()})}},{key:"loadIndexedAlphaChannel",value:function(){var e=this,n=this.image.transparency.indexed;return this.image.decodePixels(function(r){for(var i=new t(e.width*e.height),o=0,a=0,s=r.length;a<s;a++)i[o++]=n[r[a]];return e.alphaChannel=x.default.deflateSync(i),e.finalize()})}}]),e}(),Nt=function(){function e(){I(this,e)}return B(e,null,[{key:"open",value:function(e,n){var r=void 0;if(t.isBuffer(e))r=e;else if(e instanceof ArrayBuffer)r=new t(new Uint8Array(e));else{var i=void 0;if(i=/^data:.+;base64,(.*)$/.exec(e))r=new t(i[1],"base64");else if(!(r=O.readFileSync(e)))return}if(255===r[0]&&216===r[1])return new Dt(r,n);if(137===r[0]&&"PNG"===r.toString("ascii",1,4))return new zt(r,n);throw new Error("Unknown image format.")}}]),e}(),Wt={initImages:function(){return this._imageRegistry={},this._imageCount=0},image:function(t,e,n,r){var i=void 0,o=void 0,a=void 0,s=void 0,u=void 0,l=void 0,c=void 0;null==r&&(r={}),"object"===(void 0===e?"undefined":T(e))&&(r=e,e=null),e=null!=(l=null!=e?e:r.x)?l:this.x,n=null!=(c=null!=n?n:r.y)?c:this.y,"string"==typeof t&&(s=this._imageRegistry[t]),s||(s=t.width&&t.height?t:this.openImage(t)),s.obj||s.embed(this),null==this.page.xobjects[s.label]&&(this.page.xobjects[s.label]=s.obj);var f=r.width||s.width,h=r.height||s.height;if(r.width&&!r.height){var d=f/s.width;f=s.width*d,h=s.height*d}else if(r.height&&!r.width){var p=h/s.height;f=s.width*p,h=s.height*p}else if(r.scale)f=s.width*r.scale,h=s.height*r.scale;else if(r.fit){var g=M(r.fit,2);a=g[0],i=g[1],o=a/i,u=s.width/s.height,u>o?(f=a,h=a/u):(h=i,f=i*u)}else if(r.cover){var v=M(r.cover,2);a=v[0],i=v[1],o=a/i,u=s.width/s.height,u>o?(h=i,f=i*u):(f=a,h=a/u)}return(r.fit||r.cover)&&("center"===r.align?e=e+a/2-f/2:"right"===r.align&&(e=e+a-f),"center"===r.valign?n=n+i/2-h/2:"bottom"===r.valign&&(n=n+i-h)),this.y===n&&(this.y+=h),this.save(),this.transform(f,0,0,-h,e,n+h),this.addContent("/"+s.label+" Do"),this.restore(),this},openImage:function(t){var e=void 0;return"string"==typeof t&&(e=this._imageRegistry[t]),e||(e=Nt.open(t,"I"+ ++this._imageCount),"string"==typeof t&&(this._imageRegistry[t]=e)),e}},Ut={annotate:function(t,e,n,r,i){i.Type="Annot",i.Rect=this._convertRect(t,e,n,r),i.Border=[0,0,0],"Link"!==i.Subtype&&null==i.C&&(i.C=this._normalizeColor(i.color||[0,0,0])),delete i.color,"string"==typeof i.Dest&&(i.Dest=new String(i.Dest));for(var o in i){var a=i[o];i[o[0].toUpperCase()+o.slice(1)]=a}var s=this.ref(i);return this.page.annotations.push(s),s.end(),this},note:function(t,e,n,r,i,o){return null==o&&(o={}),o.Subtype="Text",o.Contents=new String(i),o.Name="Comment",null==o.color&&(o.color=[243,223,92]),this.annotate(t,e,n,r,o)},link:function(t,e,n,r,i,o){if(null==o&&(o={}),o.Subtype="Link","number"==typeof i){var a=this._root.data.Pages.data;if(!(i>=0&&i<a.Kids.length))throw new Error("The document has no page "+i);o.A=this.ref({S:"GoTo",D:[a.Kids[i],"XYZ",null,null,null]}),o.A.end()}else o.A=this.ref({S:"URI",URI:new String(i)}),o.A.end();return this.annotate(t,e,n,r,o)},_markup:function(t,e,n,r,i){null==i&&(i={});var o=this._convertRect(t,e,n,r),a=M(o,4),s=a[0],u=a[1],l=a[2],c=a[3];return i.QuadPoints=[s,c,l,c,s,u,l,u],i.Contents=new String,this.annotate(t,e,n,r,i)},highlight:function(t,e,n,r,i){return null==i&&(i={}),i.Subtype="Highlight",null==i.color&&(i.color=[241,238,148]),this._markup(t,e,n,r,i)},underline:function(t,e,n,r,i){return null==i&&(i={}),i.Subtype="Underline",this._markup(t,e,n,r,i)},strike:function(t,e,n,r,i){return null==i&&(i={}),i.Subtype="StrikeOut",this._markup(t,e,n,r,i)},lineAnnotation:function(t,e,n,r,i){return null==i&&(i={}),i.Subtype="Line",i.Contents=new String,i.L=[t,this.page.height-e,n,this.page.height-r],this.annotate(t,e,n,r,i)},rectAnnotation:function(t,e,n,r,i){return null==i&&(i={}),i.Subtype="Square",i.Contents=new String,this.annotate(t,e,n,r,i)},ellipseAnnotation:function(t,e,n,r,i){return null==i&&(i={}),i.Subtype="Circle",i.Contents=new String,this.annotate(t,e,n,r,i)},textAnnotation:function(t,e,n,r,i,o){return null==o&&(o={}),o.Subtype="FreeText",o.Contents=new String(i),o.DA=new String,this.annotate(t,e,n,r,o)},_convertRect:function(t,e,n,r){var i=e;e+=r;var o=t+n,a=M(this._ctm,6),s=a[0],u=a[1],l=a[2],c=a[3],f=a[4],h=a[5];return t=s*t+l*e+f,e=u*t+c*e+h,o=s*o+l*i+f,i=u*o+c*i+h,[t,e,o,i]}},jt=function(){function t(e,n,r,i,o){I(this,t),this.document=e,null==o&&(o={expanded:!1}),this.options=o,this.outlineData={},null!==i&&(this.outlineData.Dest=[i.dictionary,"Fit"]),null!==n&&(this.outlineData.Parent=n),null!==r&&(this.outlineData.Title=new String(r)),this.dictionary=this.document.ref(this.outlineData),this.children=[]}return B(t,[{key:"addItem",value:function(e,n){null==n&&(n={expanded:!1});var r=new t(this.document,this.dictionary,e,this.document.page,n);return this.children.push(r),r}},{key:"endOutline",value:function(){var t=void 0;if(this.children.length>0){var e=void 0,n=void 0;this.options.expanded&&(this.outlineData.Count=this.children.length);var r=this.children[0],i=this.children[this.children.length-1];for(this.outlineData.First=r.dictionary,this.outlineData.Last=i.dictionary,n=0,t=this.children.length,e=0<=t;e?n<t:n>t;e?n++:n--){var o=this.children[n];n>0&&(o.outlineData.Prev=this.children[n-1].dictionary),n<this.children.length-1&&(o.outlineData.Next=this.children[n+1].dictionary),o.endOutline()}}return this.dictionary.end()}}]),t}(),Gt={initOutline:function(){return this.outline=new jt(this,null,null,null)},endOutline:function(){if(this.outline.endOutline(),this.outline.children.length>0)return this._root.data.Outlines=this.outline.dictionary,this._root.data.PageMode="UseOutlines"}},Ht=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};I(this,n);var r=R(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));switch(r.options=e,e.pdfVersion){case"1.4":r.version=1.4;break;case"1.5":r.version=1.5;break;case"1.6":r.version=1.6;break;case"1.7":case"1.7ext3":r.version=1.7;break;default:r.version=1.3}r.compress=null==r.options.compress||r.options.compress,r._pageBuffer=[],r._pageBufferStart=0,r._offsets=[],r._waiting=0,r._ended=!1,r._offset=0;var i=r.ref({Type:"Pages",Count:0,Kids:[]});if(i.finalize=function(){return this.offset=this.document._offset,this.document._write(this.id+" "+this.gen+" obj"),this.document._write("<<"),this.document._write("/Type /Pages"),this.document._write("/Count "+this.data.Count),this.document._write("/Kids ["+t.concat(this.data.Kids).slice(0,-1).toString()+"]"),this.document._write(">>"),this.document._write("endobj"),this.document._refEnd(this)},r._root=r.ref({Type:"Catalog",Pages:i}),r.page=null,r.initColor(),r.initVector(),r.initFonts(),r.initText(),r.initImages(),r.initOutline(),r.info={Producer:"PDFKit",Creator:"PDFKit",CreationDate:new Date},r.options.info)for(var o in r.options.info){var a=r.options.info[o];r.info[o]=a}return r._id=Z.generateFileID(r.info),r._security=Z.create(r,e),r._write("%PDF-"+r.version),r._write("%Ã¿Ã¿Ã¿Ã¿"),!1!==r.options.autoFirstPage&&r.addPage(),r}return L(n,e),B(n,[{key:"addPage",value:function(e){null==e&&(e=this.options),this.options.bufferPages||this.flushPages(),this.page=new q(this,e),this._pageBuffer.push(this.page);var n=this._root.data.Pages.data;return n.Kids.push(new t(this.page.dictionary+" ")),n.Count++,this.x=this.page.margins.left,this.y=this.page.margins.top,this._ctm=[1,0,0,1,0,0],this.transform(1,0,0,-1,0,this.page.height),this.emit("pageAdded"),this}},{key:"bufferedPageRange",value:function(){return{start:this._pageBufferStart,count:this._pageBuffer.length}}},{key:"switchToPage",value:function(t){var e=void 0;if(!(e=this._pageBuffer[t-this._pageBufferStart]))throw new Error("switchToPage("+t+") out of bounds, current buffer covers pages "+this._pageBufferStart+" to "+(this._pageBufferStart+this._pageBuffer.length-1));return this.page=e}},{key:"flushPages",value:function(){var t=this._pageBuffer;this._pageBuffer=[],this._pageBufferStart+=t.length;var e=!0,n=!1,r=void 0;try{for(var i,o=t[Symbol.iterator]();!(e=(i=o.next()).done);e=!0){i.value.end()}}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}}},{key:"ref",value:function(t){var e=new G(this,this._offsets.length+1,t);return this._offsets.push(null),this._waiting++,e}},{key:"_read",value:function(){}},{key:"_write",value:function(e){return t.isBuffer(e)||(e=new t(e+"\n","binary")),this.push(e),this._offset+=e.length}},{key:"addContent",value:function(t){return this.page.write(t),this}},{key:"_refEnd",value:function(t){if(this._offsets[t.id-1]=t.offset,0==--this._waiting&&this._ended)return this._finalize(),this._ended=!1}},{key:"write",value:function(t,e){var n=new Error("PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.");return console.warn(n.stack),this.pipe(O.createWriteStream(t)),this.end(),this.once("end",e)}},{key:"output",value:function(t){throw new Error("PDFDocument#output is deprecated, and has been removed from PDFKit. Please pipe the document into a Node stream.")}},{key:"end",value:function(){this.flushPages(),this._info=this.ref();for(var t in this.info){var e=this.info[t];"string"==typeof e&&(e=new String(e));var n=this.ref(e);n.end(),this._info.data[t]=n}this._info.end();for(var r in this._fontFamilies){this._fontFamilies[r].finalize()}return this.endOutline(),this._root.end(),this._root.data.Pages.end(),this._security&&this._security.end(),0===this._waiting?this._finalize():this._ended=!0}},{key:"_finalize",value:function(t){var e=this._offset;this._write("xref"),this._write("0 "+(this._offsets.length+1)),this._write("0000000000 65535 f ");var n=!0,r=!1,i=void 0;try{for(var o,a=this._offsets[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;s=("0000000000"+s).slice(-10),this._write(s+" 00000 n ")}}catch(t){r=!0,i=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw i}}var u={Size:this._offsets.length+1,Root:this._root,Info:this._info,ID:[this._id,this._id]};return this._security&&(u.Encrypt=this._security.dictionary),this._write("trailer"),this._write(j.convert(u)),this._write("startxref"),this._write(""+e),this._write("%%EOF"),this.push(null)}},{key:"toString",value:function(){return"[object PDFDocument]"}}]),n}(E.default.Readable),Vt=function(t){Object.assign(Ht.prototype,t)};Vt(rt),Vt(xt),Vt(It),Vt(Rt),Vt(Wt),Vt(Ut),Vt(Gt);var qt=Ht;e.default=qt}).call(e,n(3).Buffer,"/")},function(t,e,n){var r=n(7);r(r.S+r.F,"Object",{assign:n(215)})},function(t,e,n){t.exports=n(61)("native-function-to-string",Function.toString)},function(t,e,n){"use strict";var r=n(52),i=n(85),o=n(63),a=n(25),s=n(81),u=Object.assign;t.exports=!u||n(14)(function(){var t={},e={},n=Symbol(),r="abcdefghijklmnopqrst";return t[n]=7,r.split("").forEach(function(t){e[t]=t}),7!=u({},t)[n]||Object.keys(u({},e)).join("")!=r})?function(t,e){for(var n=a(t),u=arguments.length,l=1,c=i.f,f=o.f;u>l;)for(var h,d=s(arguments[l++]),p=c?r(d).concat(c(d)):r(d),g=p.length,v=0;g>v;)f.call(d,h=p[v++])&&(n[h]=d[h]);return n}:u},function(t,e,n){"use strict";n(141)("strike",function(t){return function(){return t(this,"strike","","")}})},function(t,e,n){"use strict";n(141)("link",function(t){return function(e){return t(this,"a","href",e)}})},function(t,e,n){var r=n(7);r(r.P,"Array",{fill:n(86)}),n(87)("fill")},function(t,e,n){n(220)("Uint8",1,function(t){return function(e,n,r){return t(this,e,n,r)}})},function(t,e,n){"use strict";if(n(11)){var r=n(40),i=n(8),o=n(14),a=n(7),s=n(142),u=n(221),l=n(30),c=n(65),f=n(39),h=n(16),d=n(64),p=n(31),g=n(15),v=n(143),y=n(53),b=n(60),m=n(24),w=n(88),x=n(13),_=n(25),k=n(89),S=n(67),C=n(144),A=n(66).f,P=n(90),E=n(29),O=n(4),T=n(224),I=n(82),B=n(146),L=n(91),R=n(43),M=n(93),F=n(148),D=n(86),z=n(228),N=n(9),W=n(94),U=N.f,j=W.f,G=i.RangeError,H=i.TypeError,V=i.Uint8Array,q=Array.prototype,Z=u.ArrayBuffer,Y=u.DataView,X=T(0),K=T(2),J=T(3),Q=T(4),$=T(5),tt=T(6),et=I(!0),nt=I(!1),rt=L.values,it=L.keys,ot=L.entries,at=q.lastIndexOf,st=q.reduce,ut=q.reduceRight,lt=q.join,ct=q.sort,ft=q.slice,ht=q.toString,dt=q.toLocaleString,pt=O("iterator"),gt=O("toStringTag"),vt=E("typed_constructor"),yt=E("def_constructor"),bt=s.CONSTR,mt=s.TYPED,wt=s.VIEW,xt=T(1,function(t,e){return At(B(t,t[yt]),e)}),_t=o(function(){return 1===new V(new Uint16Array([1]).buffer)[0]}),kt=!!V&&!!V.prototype.set&&o(function(){new V(1).set({})}),St=function(t,e){var n=p(t);if(n<0||n%e)throw G("Wrong offset!");return n},Ct=function(t){if(x(t)&&mt in t)return t;throw H(t+" is not a typed array!")},At=function(t,e){if(!(x(t)&&vt in t))throw H("It is not a typed array constructor!");return new t(e)},Pt=function(t,e){return Et(B(t,t[yt]),e)},Et=function(t,e){for(var n=0,r=e.length,i=At(t,r);r>n;)i[n]=e[n++];return i},Ot=function(t,e,n){U(t,e,{get:function(){return this._d[n]}})},Tt=function(t){var e,n,r,i,o,a,s=_(t),u=arguments.length,c=u>1?arguments[1]:void 0,f=void 0!==c,h=P(s);if(void 0!=h&&!k(h)){for(a=h.call(s),r=[],e=0;!(o=a.next()).done;e++)r.push(o.value);s=r}for(f&&u>2&&(c=l(c,arguments[2],2)),e=0,n=g(s.length),i=At(this,n);n>e;e++)i[e]=f?c(s[e],e):s[e];return i},It=function(){for(var t=0,e=arguments.length,n=At(this,e);e>t;)n[t]=arguments[t++];return n},Bt=!!V&&o(function(){dt.call(new V(1))}),Lt=function(){return dt.apply(Bt?ft.call(Ct(this)):Ct(this),arguments)},Rt={copyWithin:function(t,e){return z.call(Ct(this),t,e,arguments.length>2?arguments[2]:void 0)},every:function(t){return Q(Ct(this),t,arguments.length>1?arguments[1]:void 0)},fill:function(t){return D.apply(Ct(this),arguments)},filter:function(t){return Pt(this,K(Ct(this),t,arguments.length>1?arguments[1]:void 0))},find:function(t){return $(Ct(this),t,arguments.length>1?arguments[1]:void 0)},findIndex:function(t){return tt(Ct(this),t,arguments.length>1?arguments[1]:void 0)},forEach:function(t){X(Ct(this),t,arguments.length>1?arguments[1]:void 0)},indexOf:function(t){return nt(Ct(this),t,arguments.length>1?arguments[1]:void 0)},includes:function(t){return et(Ct(this),t,arguments.length>1?arguments[1]:void 0)},join:function(t){return lt.apply(Ct(this),arguments)},lastIndexOf:function(t){return at.apply(Ct(this),arguments)},map:function(t){return xt(Ct(this),t,arguments.length>1?arguments[1]:void 0)},reduce:function(t){return st.apply(Ct(this),arguments)},reduceRight:function(t){return ut.apply(Ct(this),arguments)},reverse:function(){for(var t,e=this,n=Ct(e).length,r=Math.floor(n/2),i=0;i<r;)t=e[i],e[i++]=e[--n],e[n]=t;return e},some:function(t){return J(Ct(this),t,arguments.length>1?arguments[1]:void 0)},sort:function(t){return ct.call(Ct(this),t)},subarray:function(t,e){var n=Ct(this),r=n.length,i=y(t,r);return new(B(n,n[yt]))(n.buffer,n.byteOffset+i*n.BYTES_PER_ELEMENT,g((void 0===e?r:y(e,r))-i))}},Mt=function(t,e){return Pt(this,ft.call(Ct(this),t,e))},Ft=function(t){Ct(this);var e=St(arguments[1],1),n=this.length,r=_(t),i=g(r.length),o=0;if(i+e>n)throw G("Wrong length!");for(;o<i;)this[e+o]=r[o++]},Dt={entries:function(){return ot.call(Ct(this))},keys:function(){return it.call(Ct(this))},values:function(){return rt.call(Ct(this))}},zt=function(t,e){return x(t)&&t[mt]&&"symbol"!=typeof e&&e in t&&String(+e)==String(e)},Nt=function(t,e){return zt(t,e=b(e,!0))?f(2,t[e]):j(t,e)},Wt=function(t,e,n){return!(zt(t,e=b(e,!0))&&x(n)&&m(n,"value"))||m(n,"get")||m(n,"set")||n.configurable||m(n,"writable")&&!n.writable||m(n,"enumerable")&&!n.enumerable?U(t,e,n):(t[e]=n.value,t)};bt||(W.f=Nt,N.f=Wt),a(a.S+a.F*!bt,"Object",{getOwnPropertyDescriptor:Nt,defineProperty:Wt}),o(function(){ht.call({})})&&(ht=dt=function(){return lt.call(this)});var Ut=d({},Rt);d(Ut,Dt),h(Ut,pt,Dt.values),d(Ut,{slice:Mt,set:Ft,constructor:function(){},toString:ht,toLocaleString:Lt}),Ot(Ut,"buffer","b"),Ot(Ut,"byteOffset","o"),Ot(Ut,"byteLength","l"),Ot(Ut,"length","e"),U(Ut,gt,{get:function(){return this[mt]}}),t.exports=function(t,e,n,u){u=!!u;var l=t+(u?"Clamped":"")+"Array",f="get"+t,d="set"+t,p=i[l],y=p||{},b=p&&C(p),m=!p||!s.ABV,_={},k=p&&p.prototype,P=function(t,n){var r=t._d;return r.v[f](n*e+r.o,_t)},E=function(t,n,r){var i=t._d;u&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),i.v[d](n*e+i.o,r,_t)},O=function(t,e){U(t,e,{get:function(){return P(this,e)},set:function(t){return E(this,e,t)},enumerable:!0})};m?(p=n(function(t,n,r,i){c(t,p,l,"_d");var o,a,s,u,f=0,d=0;if(x(n)){if(!(n instanceof Z||"ArrayBuffer"==(u=w(n))||"SharedArrayBuffer"==u))return mt in n?Et(p,n):Tt.call(p,n);o=n,d=St(r,e);var y=n.byteLength;if(void 0===i){if(y%e)throw G("Wrong length!");if((a=y-d)<0)throw G("Wrong length!")}else if((a=g(i)*e)+d>y)throw G("Wrong length!");s=a/e}else s=v(n),a=s*e,o=new Z(a);for(h(t,"_d",{b:o,o:d,l:a,e:s,v:new Y(o)});f<s;)O(t,f++)}),k=p.prototype=S(Ut),h(k,"constructor",p)):o(function(){p(1)})&&o(function(){new p(-1)})&&M(function(t){new p,new p(null),new p(1.5),new p(t)},!0)||(p=n(function(t,n,r,i){c(t,p,l);var o;return x(n)?n instanceof Z||"ArrayBuffer"==(o=w(n))||"SharedArrayBuffer"==o?void 0!==i?new y(n,St(r,e),i):void 0!==r?new y(n,St(r,e)):new y(n):mt in n?Et(p,n):Tt.call(p,n):new y(v(n))}),X(b!==Function.prototype?A(y).concat(A(b)):A(y),function(t){t in p||h(p,t,y[t])}),p.prototype=k,r||(k.constructor=p));var T=k[pt],I=!!T&&("values"==T.name||void 0==T.name),B=Dt.values;h(p,vt,!0),h(k,mt,l),h(k,wt,!0),h(k,yt,p),(u?new p(1)[gt]==l:gt in k)||U(k,gt,{get:function(){return l}}),_[l]=p,a(a.G+a.W+a.F*(p!=y),_),a(a.S,l,{BYTES_PER_ELEMENT:e}),a(a.S+a.F*o(function(){y.of.call(p,1)}),l,{from:Tt,of:It}),"BYTES_PER_ELEMENT"in k||h(k,"BYTES_PER_ELEMENT",e),a(a.P,l,Rt),F(l),a(a.P+a.F*kt,l,{set:Ft}),a(a.P+a.F*!I,l,Dt),r||k.toString==ht||(k.toString=ht),a(a.P+a.F*o(function(){new p(1).slice()}),l,{slice:Mt}),a(a.P+a.F*(o(function(){return[1,2].toLocaleString()!=new p([1,2]).toLocaleString()})||!o(function(){k.toLocaleString.call([1,2])})),l,{toLocaleString:Lt}),R[l]=I?T:B,r||I||h(k,pt,B)}}else t.exports=function(){}},function(t,e,n){"use strict";function r(t,e,n){var r,i,o,a=new Array(n),s=8*n-e-1,u=(1<<s)-1,l=u>>1,c=23===e?z(2,-24)-z(2,-77):0,f=0,h=t<0||0===t&&1/t<0?1:0;for(t=D(t),t!=t||t===M?(i=t!=t?1:0,r=u):(r=N(W(t)/U),t*(o=z(2,-r))<1&&(r--,o*=2),t+=r+l>=1?c/o:c*z(2,1-l),t*o>=2&&(r++,o/=2),r+l>=u?(i=0,r=u):r+l>=1?(i=(t*o-1)*z(2,e),r+=l):(i=t*z(2,l-1)*z(2,e),r=0));e>=8;a[f++]=255&i,i/=256,e-=8);for(r=r<<e|i,s+=e;s>0;a[f++]=255&r,r/=256,s-=8);return a[--f]|=128*h,a}function i(t,e,n){var r,i=8*n-e-1,o=(1<<i)-1,a=o>>1,s=i-7,u=n-1,l=t[u--],c=127&l;for(l>>=7;s>0;c=256*c+t[u],u--,s-=8);for(r=c&(1<<-s)-1,c>>=-s,s+=e;s>0;r=256*r+t[u],u--,s-=8);if(0===c)c=1-a;else{if(c===o)return r?NaN:l?-M:M;r+=z(2,e),c-=a}return(l?-1:1)*r*z(2,c-e)}function o(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]}function a(t){return[255&t]}function s(t){return[255&t,t>>8&255]}function u(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]}function l(t){return r(t,52,8)}function c(t){return r(t,23,4)}function f(t,e,n){A(t[O],e,{get:function(){return this[n]}})}function h(t,e,n,r){var i=+n,o=S(i);if(o+e>t[G])throw R(T);var a=t[j]._b,s=o+t[H],u=a.slice(s,s+e);return r?u:u.reverse()}function d(t,e,n,r,i,o){var a=+n,s=S(a);if(s+e>t[G])throw R(T);for(var u=t[j]._b,l=s+t[H],c=r(+i),f=0;f<e;f++)u[l+f]=c[o?f:e-f-1]}var p=n(8),g=n(11),v=n(40),y=n(142),b=n(16),m=n(64),w=n(14),x=n(65),_=n(31),k=n(15),S=n(143),C=n(66).f,A=n(9).f,P=n(86),E=n(54),O="prototype",T="Wrong index!",I=p.ArrayBuffer,B=p.DataView,L=p.Math,R=p.RangeError,M=p.Infinity,F=I,D=L.abs,z=L.pow,N=L.floor,W=L.log,U=L.LN2,j=g?"_b":"buffer",G=g?"_l":"byteLength",H=g?"_o":"byteOffset";if(y.ABV){if(!w(function(){I(1)})||!w(function(){new I(-1)})||w(function(){return new I,new I(1.5),new I(NaN),"ArrayBuffer"!=I.name})){I=function(t){return x(this,I),new F(S(t))};for(var V,q=I[O]=F[O],Z=C(F),Y=0;Z.length>Y;)(V=Z[Y++])in I||b(I,V,F[V]);v||(q.constructor=I)}var X=new B(new I(2)),K=B[O].setInt8;X.setInt8(0,2147483648),X.setInt8(1,2147483649),!X.getInt8(0)&&X.getInt8(1)||m(B[O],{setInt8:function(t,e){K.call(this,t,e<<24>>24)},setUint8:function(t,e){K.call(this,t,e<<24>>24)}},!0)}else I=function(t){x(this,I,"ArrayBuffer");var e=S(t);this._b=P.call(new Array(e),0),this[G]=e},B=function(t,e,n){x(this,B,"DataView"),x(t,I,"DataView");var r=t[G],i=_(e);if(i<0||i>r)throw R("Wrong offset!");if(n=void 0===n?r-i:k(n),i+n>r)throw R("Wrong length!");this[j]=t,this[H]=i,this[G]=n},g&&(f(I,"byteLength","_l"),f(B,"buffer","_b"),f(B,"byteLength","_l"),f(B,"byteOffset","_o")),m(B[O],{getInt8:function(t){return h(this,1,t)[0]<<24>>24},getUint8:function(t){return h(this,1,t)[0]},getInt16:function(t){var e=h(this,2,t,arguments[1]);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=h(this,2,t,arguments[1]);return e[1]<<8|e[0]},getInt32:function(t){return o(h(this,4,t,arguments[1]))},getUint32:function(t){return o(h(this,4,t,arguments[1]))>>>0},getFloat32:function(t){return i(h(this,4,t,arguments[1]),23,4)},getFloat64:function(t){return i(h(this,8,t,arguments[1]),52,8)},setInt8:function(t,e){d(this,1,t,a,e)},setUint8:function(t,e){d(this,1,t,a,e)},setInt16:function(t,e){d(this,2,t,s,e,arguments[2])},setUint16:function(t,e){d(this,2,t,s,e,arguments[2])},setInt32:function(t,e){d(this,4,t,u,e,arguments[2])},setUint32:function(t,e){d(this,4,t,u,e,arguments[2])},setFloat32:function(t,e){d(this,4,t,c,e,arguments[2])},setFloat64:function(t,e){d(this,8,t,l,e,arguments[2])}});E(I,"ArrayBuffer"),E(B,"DataView"),b(B[O],y.VIEW,!0),e.ArrayBuffer=I,e.DataView=B},function(t,e,n){var r=n(9),i=n(10),o=n(52);t.exports=n(11)?Object.defineProperties:function(t,e){i(t);for(var n,a=o(e),s=a.length,u=0;s>u;)r.f(t,n=a[u++],e[n]);return t}},function(t,e,n){var r=n(8).document;t.exports=r&&r.documentElement},function(t,e,n){var r=n(30),i=n(81),o=n(25),a=n(15),s=n(225);t.exports=function(t,e){var n=1==t,u=2==t,l=3==t,c=4==t,f=6==t,h=5==t||f,d=e||s;return function(e,s,p){for(var g,v,y=o(e),b=i(y),m=r(s,p,3),w=a(b.length),x=0,_=n?d(e,w):u?d(e,0):void 0;w>x;x++)if((h||x in b)&&(g=b[x],v=m(g,x,y),t))if(n)_[x]=v;else if(v)switch(t){case 3:return!0;case 5:return g;case 6:return x;case 2:_.push(g)}else if(c)return!1;return f?-1:l||c?c:_}}},function(t,e,n){var r=n(226);t.exports=function(t,e){return new(r(t))(e)}},function(t,e,n){var r=n(13),i=n(145),o=n(4)("species");t.exports=function(t){var e;return i(t)&&(e=t.constructor,"function"!=typeof e||e!==Array&&!i(e.prototype)||(e=void 0),r(e)&&null===(e=e[o])&&(e=void 0)),void 0===e?Array:e}},function(t,e,n){"use strict";var r=n(67),i=n(39),o=n(54),a={};n(16)(a,n(4)("iterator"),function(){return this}),t.exports=function(t,e,n){t.prototype=r(a,{next:i(1,n)}),o(t,e+" Iterator")}},function(t,e,n){"use strict";var r=n(25),i=n(53),o=n(15);t.exports=[].copyWithin||function(t,e){var n=r(this),a=o(n.length),s=i(t,a),u=i(e,a),l=arguments.length>2?arguments[2]:void 0,c=Math.min((void 0===l?a:i(l,a))-u,a-s),f=1;for(u<s&&s<u+c&&(f=-1,u+=c-1,s+=c-1);c-- >0;)u in n?n[s]=n[u]:delete n[s],s+=f,u+=f;return n}},function(t,e,n){var r=n(9).f,i=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in i||n(11)&&r(i,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(t){return""}}})},function(t,e,n){"use strict";var r=n(10),i=n(15),o=n(95),a=n(97);n(98)("match",1,function(t,e,n,s){return[function(n){var r=t(this),i=void 0==n?void 0:n[e];return void 0!==i?i.call(n,r):new RegExp(n)[e](String(r))},function(t){var e=s(n,t,this);if(e.done)return e.value;var u=r(t),l=String(this);if(!u.global)return a(u,l);var c=u.unicode;u.lastIndex=0;for(var f,h=[],d=0;null!==(f=a(u,l));){var p=String(f[0]);h[d]=p,""===p&&(u.lastIndex=o(l,i(u.lastIndex),c)),d++}return 0===d?null:h}]})},function(t,e,n){"use strict";var r=n(99);n(7)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},function(t,e,n){"use strict";var r=n(7),i=n(82)(!0);r(r.P,"Array",{includes:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),n(87)("includes")},function(t,e,n){"use strict";var r=n(7),i=n(234);r(r.P+r.F*n(235)("includes"),"String",{includes:function(t){return!!~i(this,t,"includes").indexOf(t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(150),i=n(42);t.exports=function(t,e,n){if(r(e))throw TypeError("String#"+n+" doesn't accept regex!");return String(i(t))}},function(t,e,n){var r=n(4)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(n){try{return e[r]=!1,!"/./"[t](e)}catch(t){}}return!0}},function(t,e,n){"use strict";var r=n(10),i=n(25),o=n(15),a=n(31),s=n(95),u=n(97),l=Math.max,c=Math.min,f=Math.floor,h=/\$([$&`']|\d\d?|<[^>]*>)/g,d=/\$([$&`']|\d\d?)/g,p=function(t){return void 0===t?t:String(t)};n(98)("replace",2,function(t,e,n,g){function v(t,e,r,o,a,s){var u=r+t.length,l=o.length,c=d;return void 0!==a&&(a=i(a),c=h),n.call(s,c,function(n,i){var s;switch(i.charAt(0)){case"$":return"$";case"&":return t;case"`":return e.slice(0,r);case"'":return e.slice(u);case"<":s=a[i.slice(1,-1)];break;default:var c=+i;if(0===c)return n;if(c>l){var h=f(c/10);return 0===h?n:h<=l?void 0===o[h-1]?i.charAt(1):o[h-1]+i.charAt(1):n}s=o[c-1]}return void 0===s?"":s})}return[function(r,i){var o=t(this),a=void 0==r?void 0:r[e];return void 0!==a?a.call(r,o,i):n.call(String(o),r,i)},function(t,e){var i=g(n,t,this,e);if(i.done)return i.value;var f=r(t),h=String(this),d="function"==typeof e;d||(e=String(e));var y=f.global;if(y){var b=f.unicode;f.lastIndex=0}for(var m=[];;){var w=u(f,h);if(null===w)break;if(m.push(w),!y)break;""===String(w[0])&&(f.lastIndex=s(h,o(f.lastIndex),b))}for(var x="",_=0,k=0;k<m.length;k++){w=m[k];for(var S=String(w[0]),C=l(c(a(w.index),h.length),0),A=[],P=1;P<w.length;P++)A.push(p(w[P]));var E=w.groups;if(d){var O=[S].concat(A,C,h);void 0!==E&&O.push(E);var T=String(e.apply(void 0,O))}else T=v(S,h,C,A,E,e);C>=_&&(x+=h.slice(_,C)+T,_=C+S.length)}return x+h.slice(_)}]})},function(t,e,n){"use strict";n(238);var r=n(10),i=n(100),o=n(11),a=/./.toString,s=function(t){n(23)(RegExp.prototype,"toString",t,!0)};n(14)(function(){return"/a/b"!=a.call({source:"a",flags:"b"})})?s(function(){var t=r(this);return"/".concat(t.source,"/","flags"in t?t.flags:!o&&t instanceof RegExp?i.call(t):void 0)}):"toString"!=a.name&&s(function(){return a.call(this)})},function(t,e,n){n(11)&&"g"!=/./g.flags&&n(9).f(RegExp.prototype,"flags",{configurable:!0,get:n(100)})},function(t,e,n){"use strict";var r=n(30),i=n(7),o=n(25),a=n(152),s=n(89),u=n(15),l=n(240),c=n(90);i(i.S+i.F*!n(93)(function(t){Array.from(t)}),"Array",{from:function(t){var e,n,i,f,h=o(t),d="function"==typeof this?this:Array,p=arguments.length,g=p>1?arguments[1]:void 0,v=void 0!==g,y=0,b=c(h);if(v&&(g=r(g,p>2?arguments[2]:void 0,2)),void 0==b||d==Array&&s(b))for(e=u(h.length),n=new d(e);e>y;y++)l(n,y,v?g(h[y],y):h[y]);else for(f=b.call(h),n=new d;!(i=f.next()).done;y++)l(n,y,v?a(f,g,[i.value,y],!0):i.value);return n.length=y,n}})},function(t,e,n){"use strict";var r=n(9),i=n(39);t.exports=function(t,e,n){e in t?r.f(t,e,i(0,n)):t[e]=n}},function(t,e,n){var r=n(7);r(r.S,"Object",{setPrototypeOf:n(154).set})},function(t,e,n){n(155)("asyncIterator")},function(t,e,n){"use strict";var r=n(8),i=n(24),o=n(11),a=n(7),s=n(23),u=n(101).KEY,l=n(14),c=n(61),f=n(54),h=n(29),d=n(4),p=n(156),g=n(155),v=n(244),y=n(145),b=n(10),m=n(13),w=n(41),x=n(60),_=n(39),k=n(67),S=n(245),C=n(94),A=n(9),P=n(52),E=C.f,O=A.f,T=S.f,I=r.Symbol,B=r.JSON,L=B&&B.stringify,R=d("_hidden"),M=d("toPrimitive"),F={}.propertyIsEnumerable,D=c("symbol-registry"),z=c("symbols"),N=c("op-symbols"),W=Object.prototype,U="function"==typeof I,j=r.QObject,G=!j||!j.prototype||!j.prototype.findChild,H=o&&l(function(){return 7!=k(O({},"a",{get:function(){return O(this,"a",{value:7}).a}})).a})?function(t,e,n){var r=E(W,e);r&&delete W[e],O(t,e,n),r&&t!==W&&O(W,e,r)}:O,V=function(t){var e=z[t]=k(I.prototype);return e._k=t,e},q=U&&"symbol"==typeof I.iterator?function(t){return"symbol"==typeof t}:function(t){return t instanceof I},Z=function(t,e,n){return t===W&&Z(N,e,n),b(t),e=x(e,!0),b(n),i(z,e)?(n.enumerable?(i(t,R)&&t[R][e]&&(t[R][e]=!1),n=k(n,{enumerable:_(0,!1)})):(i(t,R)||O(t,R,_(1,{})),t[R][e]=!0),H(t,e,n)):O(t,e,n)},Y=function(t,e){b(t);for(var n,r=v(e=w(e)),i=0,o=r.length;o>i;)Z(t,n=r[i++],e[n]);return t},X=function(t,e){return void 0===e?k(t):Y(k(t),e)},K=function(t){var e=F.call(this,t=x(t,!0));return!(this===W&&i(z,t)&&!i(N,t))&&(!(e||!i(this,t)||!i(z,t)||i(this,R)&&this[R][t])||e)},J=function(t,e){if(t=w(t),e=x(e,!0),t!==W||!i(z,e)||i(N,e)){var n=E(t,e);return!n||!i(z,e)||i(t,R)&&t[R][e]||(n.enumerable=!0),n}},Q=function(t){for(var e,n=T(w(t)),r=[],o=0;n.length>o;)i(z,e=n[o++])||e==R||e==u||r.push(e);return r},$=function(t){for(var e,n=t===W,r=T(n?N:w(t)),o=[],a=0;r.length>a;)!i(z,e=r[a++])||n&&!i(W,e)||o.push(z[e]);return o};U||(I=function(){if(this instanceof I)throw TypeError("Symbol is not a constructor!");var t=h(arguments.length>0?arguments[0]:void 0),e=function(n){this===W&&e.call(N,n),i(this,R)&&i(this[R],t)&&(this[R][t]=!1),H(this,t,_(1,n))};return o&&G&&H(W,t,{configurable:!0,set:e}),V(t)},s(I.prototype,"toString",function(){return this._k}),C.f=J,A.f=Z,n(66).f=S.f=Q,n(63).f=K,n(85).f=$,o&&!n(40)&&s(W,"propertyIsEnumerable",K,!0),p.f=function(t){return V(d(t))}),a(a.G+a.W+a.F*!U,{Symbol:I});for(var tt="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),et=0;tt.length>et;)d(tt[et++]);for(var nt=P(d.store),rt=0;nt.length>rt;)g(nt[rt++]);a(a.S+a.F*!U,"Symbol",{for:function(t){return i(D,t+="")?D[t]:D[t]=I(t)},keyFor:function(t){if(!q(t))throw TypeError(t+" is not a symbol!");for(var e in D)if(D[e]===t)return e},useSetter:function(){G=!0},useSimple:function(){G=!1}}),a(a.S+a.F*!U,"Object",{create:X,defineProperty:Z,defineProperties:Y,getOwnPropertyDescriptor:J,getOwnPropertyNames:Q,getOwnPropertySymbols:$}),B&&a(a.S+a.F*(!U||l(function(){var t=I();return"[null]"!=L([t])||"{}"!=L({a:t})||"{}"!=L(Object(t))})),"JSON",{stringify:function(t){for(var e,n,r=[t],i=1;arguments.length>i;)r.push(arguments[i++]);if(n=e=r[1],(m(e)||void 0!==t)&&!q(t))return y(e)||(e=function(t,e){if("function"==typeof n&&(e=n.call(this,t,e)),!q(e))return e}),r[1]=e,L.apply(B,r)}}),I.prototype[M]||n(16)(I.prototype,M,I.prototype.valueOf),f(I,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(t,e,n){var r=n(52),i=n(85),o=n(63);t.exports=function(t){var e=r(t),n=i.f;if(n)for(var a,s=n(t),u=o.f,l=0;s.length>l;)u.call(t,a=s[l++])&&e.push(a);return e}},function(t,e,n){var r=n(41),i=n(66).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(t){try{return i(t)}catch(t){return a.slice()}};t.exports.f=function(t){return a&&"[object Window]"==o.call(t)?s(t):i(r(t))}},function(t,e){},function(t,e,n){"use strict";function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e,n){t.copy(e,n)}var o=n(70).Buffer,a=n(248);t.exports=function(){function t(){r(this,t),this.head=null,this.tail=null,this.length=0}return t.prototype.push=function(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length},t.prototype.unshift=function(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length},t.prototype.shift=function(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}},t.prototype.clear=function(){this.head=this.tail=null,this.length=0},t.prototype.join=function(t){if(0===this.length)return"";for(var e=this.head,n=""+e.data;e=e.next;)n+=t+e.data;return n},t.prototype.concat=function(t){if(0===this.length)return o.alloc(0);if(1===this.length)return this.head.data;for(var e=o.allocUnsafe(t>>>0),n=this.head,r=0;n;)i(n.data,e,r),r+=n.data.length,n=n.next;return e},t}(),a&&a.inspect&&a.inspect.custom&&(t.exports.prototype[a.inspect.custom]=function(){var t=a.inspect({length:this.length});return this.constructor.name+" "+t})},function(t,e){},function(t,e,n){(function(e){function n(t,e){function n(){if(!i){if(r("throwDeprecation"))throw new Error(e);r("traceDeprecation")?console.trace(e):console.warn(e),i=!0}return t.apply(this,arguments)}if(r("noDeprecation"))return t;var i=!1;return n}function r(t){try{if(!e.localStorage)return!1}catch(t){return!1}var n=e.localStorage[t];return null!=n&&"true"===String(n).toLowerCase()}t.exports=n}).call(e,n(22))},function(t,e,n){"use strict";function r(t){if(!(this instanceof r))return new r(t);i.call(this,t)}t.exports=r;var i=n(161),o=n(55);o.inherits=n(32),o.inherits(r,i),r.prototype._transform=function(t,e,n){n(null,t)}},function(t,e,n){t.exports=n(104)},function(t,e,n){t.exports=n(33)},function(t,e,n){t.exports=n(103).Transform},function(t,e,n){t.exports=n(103).PassThrough},function(t,e,n){"use strict";(function(t,r){function i(t){if("number"!=typeof t||t<e.DEFLATE||t>e.UNZIP)throw new TypeError("Bad argument");this.dictionary=null,this.err=0,this.flush=0,this.init_done=!1,this.level=0,this.memLevel=0,this.mode=t,this.strategy=0,this.windowBits=0,this.write_in_progress=!1,this.pending_close=!1,this.gzip_id_bytes_read=0}var o=n(162),a=n(257),s=n(258),u=n(261),l=n(264);for(var c in l)e[c]=l[c];e.NONE=0,e.DEFLATE=1,e.INFLATE=2,e.GZIP=3,e.GUNZIP=4,e.DEFLATERAW=5,e.INFLATERAW=6,e.UNZIP=7;i.prototype.close=function(){if(this.write_in_progress)return void(this.pending_close=!0);this.pending_close=!1,o(this.init_done,"close before init"),o(this.mode<=e.UNZIP),this.mode===e.DEFLATE||this.mode===e.GZIP||this.mode===e.DEFLATERAW?s.deflateEnd(this.strm):this.mode!==e.INFLATE&&this.mode!==e.GUNZIP&&this.mode!==e.INFLATERAW&&this.mode!==e.UNZIP||u.inflateEnd(this.strm),this.mode=e.NONE,this.dictionary=null},i.prototype.write=function(t,e,n,r,i,o,a){return this._write(!0,t,e,n,r,i,o,a)},i.prototype.writeSync=function(t,e,n,r,i,o,a){return this._write(!1,t,e,n,r,i,o,a)},i.prototype._write=function(n,i,a,s,u,l,c,f){if(o.equal(arguments.length,8),o(this.init_done,"write before init"),o(this.mode!==e.NONE,"already finalized"),o.equal(!1,this.write_in_progress,"write already in progress"),o.equal(!1,this.pending_close,"close is pending"),this.write_in_progress=!0,o.equal(!1,void 0===i,"must provide flush value"),this.write_in_progress=!0,i!==e.Z_NO_FLUSH&&i!==e.Z_PARTIAL_FLUSH&&i!==e.Z_SYNC_FLUSH&&i!==e.Z_FULL_FLUSH&&i!==e.Z_FINISH&&i!==e.Z_BLOCK)throw new Error("Invalid flush value");if(null==a&&(a=t.alloc(0),u=0,s=0),this.strm.avail_in=u,this.strm.input=a,this.strm.next_in=s,this.strm.avail_out=f,this.strm.output=l,this.strm.next_out=c,this.flush=i,n){var h=this;return r.nextTick(function(){h._process(),h._after()}),this}if(this._process(),this._checkError())return this._afterSync()},i.prototype._afterSync=function(){var t=this.strm.avail_out,e=this.strm.avail_in;return this.write_in_progress=!1,[e,t]},i.prototype._process=function(){var t=null;switch(this.mode){case e.DEFLATE:case e.GZIP:case e.DEFLATERAW:this.err=s.deflate(this.strm,this.flush);break;case e.UNZIP:switch(this.strm.avail_in>0&&(t=this.strm.next_in),this.gzip_id_bytes_read){case 0:if(null===t)break;if(31!==this.strm.input[t]){this.mode=e.INFLATE;break}if(this.gzip_id_bytes_read=1,t++,1===this.strm.avail_in)break;case 1:if(null===t)break;139===this.strm.input[t]?(this.gzip_id_bytes_read=2,this.mode=e.GUNZIP):this.mode=e.INFLATE;break;default:throw new Error("invalid number of gzip magic number bytes read")}case e.INFLATE:case e.GUNZIP:case e.INFLATERAW:for(this.err=u.inflate(this.strm,this.flush),this.err===e.Z_NEED_DICT&&this.dictionary&&(this.err=u.inflateSetDictionary(this.strm,this.dictionary),this.err===e.Z_OK?this.err=u.inflate(this.strm,this.flush):this.err===e.Z_DATA_ERROR&&(this.err=e.Z_NEED_DICT));this.strm.avail_in>0&&this.mode===e.GUNZIP&&this.err===e.Z_STREAM_END&&0!==this.strm.next_in[0];)this.reset(),this.err=u.inflate(this.strm,this.flush);break;default:throw new Error("Unknown mode "+this.mode)}},i.prototype._checkError=function(){switch(this.err){case e.Z_OK:case e.Z_BUF_ERROR:if(0!==this.strm.avail_out&&this.flush===e.Z_FINISH)return this._error("unexpected end of file"),!1;break;case e.Z_STREAM_END:break;case e.Z_NEED_DICT:return null==this.dictionary?this._error("Missing dictionary"):this._error("Bad dictionary"),!1;default:return this._error("Zlib error"),!1}return!0},i.prototype._after=function(){if(this._checkError()){var t=this.strm.avail_out,e=this.strm.avail_in;this.write_in_progress=!1,this.callback(e,t),this.pending_close&&this.close()}},i.prototype._error=function(t){this.strm.msg&&(t=this.strm.msg),this.onerror(t,this.err),this.write_in_progress=!1,this.pending_close&&this.close()},i.prototype.init=function(t,n,r,i,a){o(4===arguments.length||5===arguments.length,"init(windowBits, level, memLevel, strategy, [dictionary])"),o(t>=8&&t<=15,"invalid windowBits"),o(n>=-1&&n<=9,"invalid compression level"),o(r>=1&&r<=9,"invalid memlevel"),o(i===e.Z_FILTERED||i===e.Z_HUFFMAN_ONLY||i===e.Z_RLE||i===e.Z_FIXED||i===e.Z_DEFAULT_STRATEGY,"invalid strategy"),this._init(n,t,r,i,a),this._setDictionary()},i.prototype.params=function(){throw new Error("deflateParams Not supported")},i.prototype.reset=function(){this._reset(),this._setDictionary()},i.prototype._init=function(t,n,r,i,o){switch(this.level=t,this.windowBits=n,this.memLevel=r,this.strategy=i,this.flush=e.Z_NO_FLUSH,this.err=e.Z_OK,this.mode!==e.GZIP&&this.mode!==e.GUNZIP||(this.windowBits+=16),this.mode===e.UNZIP&&(this.windowBits+=32),this.mode!==e.DEFLATERAW&&this.mode!==e.INFLATERAW||(this.windowBits=-1*this.windowBits),this.strm=new a,this.mode){case e.DEFLATE:case e.GZIP:case e.DEFLATERAW:this.err=s.deflateInit2(this.strm,this.level,e.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);break;case e.INFLATE:case e.GUNZIP:case e.INFLATERAW:case e.UNZIP:this.err=u.inflateInit2(this.strm,this.windowBits);break;default:throw new Error("Unknown mode "+this.mode)}this.err!==e.Z_OK&&this._error("Init error"),this.dictionary=o,this.write_in_progress=!1,this.init_done=!0},i.prototype._setDictionary=function(){if(null!=this.dictionary){switch(this.err=e.Z_OK,this.mode){case e.DEFLATE:case e.DEFLATERAW:this.err=s.deflateSetDictionary(this.strm,this.dictionary)}this.err!==e.Z_OK&&this._error("Failed to set dictionary")}},i.prototype._reset=function(){switch(this.err=e.Z_OK,this.mode){case e.DEFLATE:case e.DEFLATERAW:case e.GZIP:this.err=s.deflateReset(this.strm);break;case e.INFLATE:case e.INFLATERAW:case e.GUNZIP:this.err=u.inflateReset(this.strm)}this.err!==e.Z_OK&&this._error("Failed to reset stream")},e.Zlib=i}).call(e,n(3).Buffer,n(21))},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e,n){"use strict";function r(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}t.exports=r},function(t,e,n){"use strict";function r(t,e){return t.msg=R[e],e}function i(t){return(t<<1)-(t>4?9:0)}function o(t){for(var e=t.length;--e>=0;)t[e]=0}function a(t){var e=t.state,n=e.pending;n>t.avail_out&&(n=t.avail_out),0!==n&&(T.arraySet(t.output,e.pending_buf,e.pending_out,n,t.next_out),t.next_out+=n,e.pending_out+=n,t.total_out+=n,t.avail_out-=n,e.pending-=n,0===e.pending&&(e.pending_out=0))}function s(t,e){I._tr_flush_block(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,a(t.strm)}function u(t,e){t.pending_buf[t.pending++]=e}function l(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function c(t,e,n,r){var i=t.avail_in;return i>r&&(i=r),0===i?0:(t.avail_in-=i,T.arraySet(e,t.input,t.next_in,i,n),1===t.state.wrap?t.adler=B(t.adler,e,i,n):2===t.state.wrap&&(t.adler=L(t.adler,e,i,n)),t.next_in+=i,t.total_in+=i,i)}function f(t,e){var n,r,i=t.max_chain_length,o=t.strstart,a=t.prev_length,s=t.nice_match,u=t.strstart>t.w_size-lt?t.strstart-(t.w_size-lt):0,l=t.window,c=t.w_mask,f=t.prev,h=t.strstart+ut,d=l[o+a-1],p=l[o+a];t.prev_length>=t.good_match&&(i>>=2),s>t.lookahead&&(s=t.lookahead);do{if(n=e,l[n+a]===p&&l[n+a-1]===d&&l[n]===l[o]&&l[++n]===l[o+1]){o+=2,n++;do{}while(l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&o<h);if(r=ut-(h-o),o=h-ut,r>a){if(t.match_start=e,a=r,r>=s)break;d=l[o+a-1],p=l[o+a]}}}while((e=f[e&c])>u&&0!=--i);return a<=t.lookahead?a:t.lookahead}function h(t){var e,n,r,i,o,a=t.w_size;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=a+(a-lt)){T.arraySet(t.window,t.window,a,a,0),t.match_start-=a,t.strstart-=a,t.block_start-=a,n=t.hash_size,e=n;do{r=t.head[--e],t.head[e]=r>=a?r-a:0}while(--n);n=a,e=n;do{r=t.prev[--e],t.prev[e]=r>=a?r-a:0}while(--n);i+=a}if(0===t.strm.avail_in)break;if(n=c(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=n,t.lookahead+t.insert>=st)for(o=t.strstart-t.insert,t.ins_h=t.window[o],t.ins_h=(t.ins_h<<t.hash_shift^t.window[o+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[o+st-1])&t.hash_mask,t.prev[o&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=o,o++,t.insert--,!(t.lookahead+t.insert<st)););}while(t.lookahead<lt&&0!==t.strm.avail_in)}function d(t,e){var n=65535;for(n>t.pending_buf_size-5&&(n=t.pending_buf_size-5);;){if(t.lookahead<=1){if(h(t),0===t.lookahead&&e===M)return bt;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var r=t.block_start+n;if((0===t.strstart||t.strstart>=r)&&(t.lookahead=t.strstart-r,t.strstart=r,s(t,!1),0===t.strm.avail_out))return bt;if(t.strstart-t.block_start>=t.w_size-lt&&(s(t,!1),0===t.strm.avail_out))return bt}return t.insert=0,e===z?(s(t,!0),0===t.strm.avail_out?wt:xt):(t.strstart>t.block_start&&(s(t,!1),t.strm.avail_out),bt)}function p(t,e){for(var n,r;;){if(t.lookahead<lt){if(h(t),t.lookahead<lt&&e===M)return bt;if(0===t.lookahead)break}if(n=0,t.lookahead>=st&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+st-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==n&&t.strstart-n<=t.w_size-lt&&(t.match_length=f(t,n)),t.match_length>=st)if(r=I._tr_tally(t,t.strstart-t.match_start,t.match_length-st),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=st){t.match_length--;do{t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+st-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else r=I._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(r&&(s(t,!1),0===t.strm.avail_out))return bt}return t.insert=t.strstart<st-1?t.strstart:st-1,e===z?(s(t,!0),0===t.strm.avail_out?wt:xt):t.last_lit&&(s(t,!1),0===t.strm.avail_out)?bt:mt}function g(t,e){for(var n,r,i;;){if(t.lookahead<lt){if(h(t),t.lookahead<lt&&e===M)return bt;if(0===t.lookahead)break}if(n=0,t.lookahead>=st&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+st-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=st-1,0!==n&&t.prev_length<t.max_lazy_match&&t.strstart-n<=t.w_size-lt&&(t.match_length=f(t,n),t.match_length<=5&&(t.strategy===q||t.match_length===st&&t.strstart-t.match_start>4096)&&(t.match_length=st-1)),t.prev_length>=st&&t.match_length<=t.prev_length){i=t.strstart+t.lookahead-st,r=I._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-st),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=i&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+st-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=st-1,t.strstart++,r&&(s(t,!1),0===t.strm.avail_out))return bt}else if(t.match_available){if(r=I._tr_tally(t,0,t.window[t.strstart-1]),r&&s(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return bt}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(r=I._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<st-1?t.strstart:st-1,e===z?(s(t,!0),0===t.strm.avail_out?wt:xt):t.last_lit&&(s(t,!1),0===t.strm.avail_out)?bt:mt}function v(t,e){for(var n,r,i,o,a=t.window;;){if(t.lookahead<=ut){if(h(t),t.lookahead<=ut&&e===M)return bt;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=st&&t.strstart>0&&(i=t.strstart-1,(r=a[i])===a[++i]&&r===a[++i]&&r===a[++i])){o=t.strstart+ut;do{}while(r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&i<o);t.match_length=ut-(o-i),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=st?(n=I._tr_tally(t,1,t.match_length-st),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(n=I._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),n&&(s(t,!1),0===t.strm.avail_out))return bt}return t.insert=0,e===z?(s(t,!0),0===t.strm.avail_out?wt:xt):t.last_lit&&(s(t,!1),0===t.strm.avail_out)?bt:mt}function y(t,e){for(var n;;){if(0===t.lookahead&&(h(t),0===t.lookahead)){if(e===M)return bt;break}if(t.match_length=0,n=I._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,n&&(s(t,!1),0===t.strm.avail_out))return bt}return t.insert=0,e===z?(s(t,!0),0===t.strm.avail_out?wt:xt):t.last_lit&&(s(t,!1),0===t.strm.avail_out)?bt:mt}function b(t,e,n,r,i){this.good_length=t,this.max_lazy=e,this.nice_length=n,this.max_chain=r,this.func=i}function m(t){t.window_size=2*t.w_size,o(t.head),t.max_lazy_match=O[t.level].max_lazy,t.good_match=O[t.level].good_length,t.nice_match=O[t.level].nice_length,t.max_chain_length=O[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=st-1,t.match_available=0,t.ins_h=0}function w(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Q,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new T.Buf16(2*ot),this.dyn_dtree=new T.Buf16(2*(2*rt+1)),this.bl_tree=new T.Buf16(2*(2*it+1)),o(this.dyn_ltree),o(this.dyn_dtree),o(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new T.Buf16(at+1),this.heap=new T.Buf16(2*nt+1),o(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new T.Buf16(2*nt+1),o(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function x(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=J,e=t.state,e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?ft:vt,t.adler=2===e.wrap?0:1,e.last_flush=M,I._tr_init(e),W):r(t,j)}function _(t){var e=x(t);return e===W&&m(t.state),e}function k(t,e){return t&&t.state?2!==t.state.wrap?j:(t.state.gzhead=e,W):j}function S(t,e,n,i,o,a){if(!t)return j;var s=1;if(e===V&&(e=6),i<0?(s=0,i=-i):i>15&&(s=2,i-=16),o<1||o>$||n!==Q||i<8||i>15||e<0||e>9||a<0||a>X)return r(t,j);8===i&&(i=9);var u=new w;return t.state=u,u.strm=t,u.wrap=s,u.gzhead=null,u.w_bits=i,u.w_size=1<<u.w_bits,u.w_mask=u.w_size-1,u.hash_bits=o+7,u.hash_size=1<<u.hash_bits,u.hash_mask=u.hash_size-1,u.hash_shift=~~((u.hash_bits+st-1)/st),u.window=new T.Buf8(2*u.w_size),u.head=new T.Buf16(u.hash_size),u.prev=new T.Buf16(u.w_size),u.lit_bufsize=1<<o+6,u.pending_buf_size=4*u.lit_bufsize,u.pending_buf=new T.Buf8(u.pending_buf_size),u.d_buf=1*u.lit_bufsize,u.l_buf=3*u.lit_bufsize,u.level=e,u.strategy=a,u.method=n,_(t)}function C(t,e){return S(t,e,Q,tt,et,K)}function A(t,e){var n,s,c,f;if(!t||!t.state||e>N||e<0)return t?r(t,j):j;if(s=t.state,!t.output||!t.input&&0!==t.avail_in||s.status===yt&&e!==z)return r(t,0===t.avail_out?H:j);if(s.strm=t,n=s.last_flush,s.last_flush=e,s.status===ft)if(2===s.wrap)t.adler=0,u(s,31),u(s,139),u(s,8),s.gzhead?(u(s,(s.gzhead.text?1:0)+(s.gzhead.hcrc?2:0)+(s.gzhead.extra?4:0)+(s.gzhead.name?8:0)+(s.gzhead.comment?16:0)),u(s,255&s.gzhead.time),u(s,s.gzhead.time>>8&255),u(s,s.gzhead.time>>16&255),u(s,s.gzhead.time>>24&255),u(s,9===s.level?2:s.strategy>=Z||s.level<2?4:0),u(s,255&s.gzhead.os),s.gzhead.extra&&s.gzhead.extra.length&&(u(s,255&s.gzhead.extra.length),u(s,s.gzhead.extra.length>>8&255)),s.gzhead.hcrc&&(t.adler=L(t.adler,s.pending_buf,s.pending,0)),s.gzindex=0,s.status=ht):(u(s,0),u(s,0),u(s,0),u(s,0),u(s,0),u(s,9===s.level?2:s.strategy>=Z||s.level<2?4:0),u(s,_t),s.status=vt);else{var h=Q+(s.w_bits-8<<4)<<8,d=-1;d=s.strategy>=Z||s.level<2?0:s.level<6?1:6===s.level?2:3,h|=d<<6,0!==s.strstart&&(h|=ct),h+=31-h%31,s.status=vt,l(s,h),0!==s.strstart&&(l(s,t.adler>>>16),l(s,65535&t.adler)),t.adler=1}if(s.status===ht)if(s.gzhead.extra){for(c=s.pending;s.gzindex<(65535&s.gzhead.extra.length)&&(s.pending!==s.pending_buf_size||(s.gzhead.hcrc&&s.pending>c&&(t.adler=L(t.adler,s.pending_buf,s.pending-c,c)),a(t),c=s.pending,s.pending!==s.pending_buf_size));)u(s,255&s.gzhead.extra[s.gzindex]),s.gzindex++;s.gzhead.hcrc&&s.pending>c&&(t.adler=L(t.adler,s.pending_buf,s.pending-c,c)),s.gzindex===s.gzhead.extra.length&&(s.gzindex=0,s.status=dt)}else s.status=dt;if(s.status===dt)if(s.gzhead.name){c=s.pending;do{if(s.pending===s.pending_buf_size&&(s.gzhead.hcrc&&s.pending>c&&(t.adler=L(t.adler,s.pending_buf,s.pending-c,c)),a(t),c=s.pending,s.pending===s.pending_buf_size)){f=1;break}f=s.gzindex<s.gzhead.name.length?255&s.gzhead.name.charCodeAt(s.gzindex++):0,u(s,f)}while(0!==f);s.gzhead.hcrc&&s.pending>c&&(t.adler=L(t.adler,s.pending_buf,s.pending-c,c)),0===f&&(s.gzindex=0,s.status=pt)}else s.status=pt;if(s.status===pt)if(s.gzhead.comment){c=s.pending;do{if(s.pending===s.pending_buf_size&&(s.gzhead.hcrc&&s.pending>c&&(t.adler=L(t.adler,s.pending_buf,s.pending-c,c)),a(t),c=s.pending,s.pending===s.pending_buf_size)){f=1;break}f=s.gzindex<s.gzhead.comment.length?255&s.gzhead.comment.charCodeAt(s.gzindex++):0,u(s,f)}while(0!==f);s.gzhead.hcrc&&s.pending>c&&(t.adler=L(t.adler,s.pending_buf,s.pending-c,c)),0===f&&(s.status=gt)}else s.status=gt;if(s.status===gt&&(s.gzhead.hcrc?(s.pending+2>s.pending_buf_size&&a(t),s.pending+2<=s.pending_buf_size&&(u(s,255&t.adler),u(s,t.adler>>8&255),t.adler=0,s.status=vt)):s.status=vt),0!==s.pending){if(a(t),0===t.avail_out)return s.last_flush=-1,W}else if(0===t.avail_in&&i(e)<=i(n)&&e!==z)return r(t,H);if(s.status===yt&&0!==t.avail_in)return r(t,H);if(0!==t.avail_in||0!==s.lookahead||e!==M&&s.status!==yt){var p=s.strategy===Z?y(s,e):s.strategy===Y?v(s,e):O[s.level].func(s,e);if(p!==wt&&p!==xt||(s.status=yt),p===bt||p===wt)return 0===t.avail_out&&(s.last_flush=-1),W;if(p===mt&&(e===F?I._tr_align(s):e!==N&&(I._tr_stored_block(s,0,0,!1),e===D&&(o(s.head),0===s.lookahead&&(s.strstart=0,s.block_start=0,s.insert=0))),a(t),0===t.avail_out))return s.last_flush=-1,W}return e!==z?W:s.wrap<=0?U:(2===s.wrap?(u(s,255&t.adler),u(s,t.adler>>8&255),u(s,t.adler>>16&255),u(s,t.adler>>24&255),u(s,255&t.total_in),u(s,t.total_in>>8&255),u(s,t.total_in>>16&255),u(s,t.total_in>>24&255)):(l(s,t.adler>>>16),l(s,65535&t.adler)),a(t),s.wrap>0&&(s.wrap=-s.wrap),0!==s.pending?W:U)}function P(t){var e;return t&&t.state?(e=t.state.status)!==ft&&e!==ht&&e!==dt&&e!==pt&&e!==gt&&e!==vt&&e!==yt?r(t,j):(t.state=null,e===vt?r(t,G):W):j}function E(t,e){var n,r,i,a,s,u,l,c,f=e.length;if(!t||!t.state)return j;if(n=t.state,2===(a=n.wrap)||1===a&&n.status!==ft||n.lookahead)return j;for(1===a&&(t.adler=B(t.adler,e,f,0)),n.wrap=0,f>=n.w_size&&(0===a&&(o(n.head),n.strstart=0,n.block_start=0,n.insert=0),c=new T.Buf8(n.w_size),T.arraySet(c,e,f-n.w_size,n.w_size,0),e=c,f=n.w_size),s=t.avail_in,u=t.next_in,l=t.input,t.avail_in=f,t.next_in=0,t.input=e,h(n);n.lookahead>=st;){r=n.strstart,i=n.lookahead-(st-1);do{n.ins_h=(n.ins_h<<n.hash_shift^n.window[r+st-1])&n.hash_mask,n.prev[r&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=r,r++}while(--i);n.strstart=r,n.lookahead=st-1,h(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=st-1,n.match_available=0,t.next_in=u,t.input=l,t.avail_in=s,n.wrap=a,W}var O,T=n(71),I=n(259),B=n(163),L=n(164),R=n(260),M=0,F=1,D=3,z=4,N=5,W=0,U=1,j=-2,G=-3,H=-5,V=-1,q=1,Z=2,Y=3,X=4,K=0,J=2,Q=8,$=9,tt=15,et=8,nt=286,rt=30,it=19,ot=2*nt+1,at=15,st=3,ut=258,lt=ut+st+1,ct=32,ft=42,ht=69,dt=73,pt=91,gt=103,vt=113,yt=666,bt=1,mt=2,wt=3,xt=4,_t=3;O=[new b(0,0,0,0,d),new b(4,4,8,4,p),new b(4,5,16,8,p),new b(4,6,32,32,p),new b(4,4,16,16,g),new b(8,16,32,32,g),new b(8,16,128,128,g),new b(8,32,128,256,g),new b(32,128,258,1024,g),new b(32,258,258,4096,g)],e.deflateInit=C,e.deflateInit2=S,e.deflateReset=_,e.deflateResetKeep=x,e.deflateSetHeader=k,e.deflate=A,e.deflateEnd=P,e.deflateSetDictionary=E,e.deflateInfo="pako deflate (from Nodeca project)"},function(t,e,n){"use strict";function r(t){for(var e=t.length;--e>=0;)t[e]=0}function i(t,e,n,r,i){this.static_tree=t,this.extra_bits=e,this.extra_base=n,this.elems=r,this.max_length=i,this.has_stree=t&&t.length}function o(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function a(t){return t<256?ot[t]:ot[256+(t>>>7)]}function s(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function u(t,e,n){t.bi_valid>Z-n?(t.bi_buf|=e<<t.bi_valid&65535,s(t,t.bi_buf),t.bi_buf=e>>Z-t.bi_valid,t.bi_valid+=n-Z):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=n)}function l(t,e,n){u(t,n[2*e],n[2*e+1])}function c(t,e){var n=0;do{n|=1&t,t>>>=1,n<<=1}while(--e>0);return n>>>1}function f(t){16===t.bi_valid?(s(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}function h(t,e){var n,r,i,o,a,s,u=e.dyn_tree,l=e.max_code,c=e.stat_desc.static_tree,f=e.stat_desc.has_stree,h=e.stat_desc.extra_bits,d=e.stat_desc.extra_base,p=e.stat_desc.max_length,g=0;for(o=0;o<=q;o++)t.bl_count[o]=0;for(u[2*t.heap[t.heap_max]+1]=0,n=t.heap_max+1;n<V;n++)r=t.heap[n],o=u[2*u[2*r+1]+1]+1,o>p&&(o=p,g++),u[2*r+1]=o,r>l||(t.bl_count[o]++,a=0,r>=d&&(a=h[r-d]),s=u[2*r],t.opt_len+=s*(o+a),f&&(t.static_len+=s*(c[2*r+1]+a)));if(0!==g){do{for(o=p-1;0===t.bl_count[o];)o--;t.bl_count[o]--,t.bl_count[o+1]+=2,t.bl_count[p]--,g-=2}while(g>0);for(o=p;0!==o;o--)for(r=t.bl_count[o];0!==r;)(i=t.heap[--n])>l||(u[2*i+1]!==o&&(t.opt_len+=(o-u[2*i+1])*u[2*i],u[2*i+1]=o),r--)}}function d(t,e,n){var r,i,o=new Array(q+1),a=0;for(r=1;r<=q;r++)o[r]=a=a+n[r-1]<<1;for(i=0;i<=e;i++){var s=t[2*i+1];0!==s&&(t[2*i]=c(o[s]++,s))}}function p(){var t,e,n,r,o,a=new Array(q+1);for(n=0,r=0;r<W-1;r++)for(st[r]=n,t=0;t<1<<$[r];t++)at[n++]=r;for(at[n-1]=r,o=0,r=0;r<16;r++)for(ut[r]=o,t=0;t<1<<tt[r];t++)ot[o++]=r;for(o>>=7;r<G;r++)for(ut[r]=o<<7,t=0;t<1<<tt[r]-7;t++)ot[256+o++]=r;for(e=0;e<=q;e++)a[e]=0;for(t=0;t<=143;)rt[2*t+1]=8,t++,a[8]++;for(;t<=255;)rt[2*t+1]=9,t++,a[9]++;for(;t<=279;)rt[2*t+1]=7,t++,a[7]++;for(;t<=287;)rt[2*t+1]=8,t++,a[8]++;for(d(rt,j+1,a),t=0;t<G;t++)it[2*t+1]=5,it[2*t]=c(t,5);lt=new i(rt,$,U+1,j,q),ct=new i(it,tt,0,G,q),ft=new i(new Array(0),et,0,H,Y)}function g(t){var e;for(e=0;e<j;e++)t.dyn_ltree[2*e]=0;for(e=0;e<G;e++)t.dyn_dtree[2*e]=0;for(e=0;e<H;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*X]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function v(t){t.bi_valid>8?s(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function y(t,e,n,r){v(t),r&&(s(t,n),s(t,~n)),B.arraySet(t.pending_buf,t.window,e,n,t.pending),t.pending+=n}function b(t,e,n,r){var i=2*e,o=2*n;return t[i]<t[o]||t[i]===t[o]&&r[e]<=r[n]}function m(t,e,n){for(var r=t.heap[n],i=n<<1;i<=t.heap_len&&(i<t.heap_len&&b(e,t.heap[i+1],t.heap[i],t.depth)&&i++,!b(e,r,t.heap[i],t.depth));)t.heap[n]=t.heap[i],n=i,i<<=1;t.heap[n]=r}function w(t,e,n){var r,i,o,s,c=0;if(0!==t.last_lit)do{r=t.pending_buf[t.d_buf+2*c]<<8|t.pending_buf[t.d_buf+2*c+1],i=t.pending_buf[t.l_buf+c],c++,0===r?l(t,i,e):(o=at[i],l(t,o+U+1,e),s=$[o],0!==s&&(i-=st[o],u(t,i,s)),r--,o=a(r),l(t,o,n),0!==(s=tt[o])&&(r-=ut[o],u(t,r,s)))}while(c<t.last_lit);l(t,X,e)}function x(t,e){var n,r,i,o=e.dyn_tree,a=e.stat_desc.static_tree,s=e.stat_desc.has_stree,u=e.stat_desc.elems,l=-1;for(t.heap_len=0,t.heap_max=V,n=0;n<u;n++)0!==o[2*n]?(t.heap[++t.heap_len]=l=n,t.depth[n]=0):o[2*n+1]=0;for(;t.heap_len<2;)i=t.heap[++t.heap_len]=l<2?++l:0,o[2*i]=1,t.depth[i]=0,t.opt_len--,s&&(t.static_len-=a[2*i+1]);for(e.max_code=l,n=t.heap_len>>1;n>=1;n--)m(t,o,n);i=u;do{n=t.heap[1],t.heap[1]=t.heap[t.heap_len--],m(t,o,1),r=t.heap[1],t.heap[--t.heap_max]=n,t.heap[--t.heap_max]=r,o[2*i]=o[2*n]+o[2*r],t.depth[i]=(t.depth[n]>=t.depth[r]?t.depth[n]:t.depth[r])+1,o[2*n+1]=o[2*r+1]=i,t.heap[1]=i++,m(t,o,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],h(t,e),d(o,l,t.bl_count)}function _(t,e,n){var r,i,o=-1,a=e[1],s=0,u=7,l=4;for(0===a&&(u=138,l=3),e[2*(n+1)+1]=65535,r=0;r<=n;r++)i=a,a=e[2*(r+1)+1],++s<u&&i===a||(s<l?t.bl_tree[2*i]+=s:0!==i?(i!==o&&t.bl_tree[2*i]++,t.bl_tree[2*K]++):s<=10?t.bl_tree[2*J]++:t.bl_tree[2*Q]++,s=0,o=i,0===a?(u=138,l=3):i===a?(u=6,l=3):(u=7,l=4))}function k(t,e,n){var r,i,o=-1,a=e[1],s=0,c=7,f=4;for(0===a&&(c=138,f=3),r=0;r<=n;r++)if(i=a,a=e[2*(r+1)+1],!(++s<c&&i===a)){if(s<f)do{l(t,i,t.bl_tree)}while(0!=--s);else 0!==i?(i!==o&&(l(t,i,t.bl_tree),s--),l(t,K,t.bl_tree),u(t,s-3,2)):s<=10?(l(t,J,t.bl_tree),u(t,s-3,3)):(l(t,Q,t.bl_tree),u(t,s-11,7));s=0,o=i,0===a?(c=138,f=3):i===a?(c=6,f=3):(c=7,f=4)}}function S(t){var e;for(_(t,t.dyn_ltree,t.l_desc.max_code),_(t,t.dyn_dtree,t.d_desc.max_code),x(t,t.bl_desc),e=H-1;e>=3&&0===t.bl_tree[2*nt[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}function C(t,e,n,r){var i;for(u(t,e-257,5),u(t,n-1,5),u(t,r-4,4),i=0;i<r;i++)u(t,t.bl_tree[2*nt[i]+1],3);k(t,t.dyn_ltree,e-1),k(t,t.dyn_dtree,n-1)}function A(t){var e,n=4093624447;for(e=0;e<=31;e++,n>>>=1)if(1&n&&0!==t.dyn_ltree[2*e])return R;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return M;for(e=32;e<U;e++)if(0!==t.dyn_ltree[2*e])return M;return R}function P(t){ht||(p(),ht=!0),t.l_desc=new o(t.dyn_ltree,lt),t.d_desc=new o(t.dyn_dtree,ct),t.bl_desc=new o(t.bl_tree,ft),t.bi_buf=0,t.bi_valid=0,g(t)}function E(t,e,n,r){u(t,(D<<1)+(r?1:0),3),y(t,e,n,!0)}function O(t){u(t,z<<1,3),l(t,X,rt),f(t)}function T(t,e,n,r){var i,o,a=0;t.level>0?(t.strm.data_type===F&&(t.strm.data_type=A(t)),x(t,t.l_desc),x(t,t.d_desc),a=S(t),i=t.opt_len+3+7>>>3,(o=t.static_len+3+7>>>3)<=i&&(i=o)):i=o=n+5,n+4<=i&&-1!==e?E(t,e,n,r):t.strategy===L||o===i?(u(t,(z<<1)+(r?1:0),3),w(t,rt,it)):(u(t,(N<<1)+(r?1:0),3),C(t,t.l_desc.max_code+1,t.d_desc.max_code+1,a+1),w(t,t.dyn_ltree,t.dyn_dtree)),g(t),r&&v(t)}function I(t,e,n){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&n,t.last_lit++,0===e?t.dyn_ltree[2*n]++:(t.matches++,e--,t.dyn_ltree[2*(at[n]+U+1)]++,t.dyn_dtree[2*a(e)]++),t.last_lit===t.lit_bufsize-1}var B=n(71),L=4,R=0,M=1,F=2,D=0,z=1,N=2,W=29,U=256,j=U+1+W,G=30,H=19,V=2*j+1,q=15,Z=16,Y=7,X=256,K=16,J=17,Q=18,$=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],tt=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],et=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],nt=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],rt=new Array(2*(j+2));r(rt);var it=new Array(2*G);r(it);var ot=new Array(512);r(ot);var at=new Array(256);r(at);var st=new Array(W);r(st);var ut=new Array(G);r(ut);var lt,ct,ft,ht=!1;e._tr_init=P,e._tr_stored_block=E,e._tr_flush_block=T,e._tr_tally=I,e._tr_align=O},function(t,e,n){"use strict";t.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},function(t,e,n){"use strict";function r(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function i(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new b.Buf16(320),this.work=new b.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function o(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=D,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new b.Buf32(gt),e.distcode=e.distdyn=new b.Buf32(vt),e.sane=1,e.back=-1,O):B}function a(t){var e;return t&&t.state?(e=t.state,e.wsize=0,e.whave=0,e.wnext=0,o(t)):B}function s(t,e){var n,r;return t&&t.state?(r=t.state,e<0?(n=0,e=-e):(n=1+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?B:(null!==r.window&&r.wbits!==e&&(r.window=null),r.wrap=n,r.wbits=e,a(t))):B}function u(t,e){var n,r;return t?(r=new i,t.state=r,r.window=null,n=s(t,e),n!==O&&(t.state=null),n):B}function l(t){return u(t,yt)}function c(t){if(bt){var e;for(v=new b.Buf32(512),y=new b.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(_(S,t.lens,0,288,v,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;_(C,t.lens,0,32,y,0,t.work,{bits:5}),bt=!1}t.lencode=v,t.lenbits=9,t.distcode=y,t.distbits=5}function f(t,e,n,r){var i,o=t.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new b.Buf8(o.wsize)),r>=o.wsize?(b.arraySet(o.window,e,n-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):(i=o.wsize-o.wnext,i>r&&(i=r),b.arraySet(o.window,e,n-r,i,o.wnext),r-=i,r?(b.arraySet(o.window,e,n-r,r,0),o.wnext=r,o.whave=o.wsize):(o.wnext+=i,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=i))),0}function h(t,e){var n,i,o,a,s,u,l,h,d,p,g,v,y,gt,vt,yt,bt,mt,wt,xt,_t,kt,St,Ct,At=0,Pt=new b.Buf8(4),Et=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return B;n=t.state,n.mode===Y&&(n.mode=X),s=t.next_out,o=t.output,l=t.avail_out,a=t.next_in,i=t.input,u=t.avail_in,h=n.hold,d=n.bits,p=u,g=l,kt=O;t:for(;;)switch(n.mode){case D:if(0===n.wrap){n.mode=X;break}for(;d<16;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(2&n.wrap&&35615===h){n.check=0,Pt[0]=255&h,Pt[1]=h>>>8&255,n.check=w(n.check,Pt,2,0),h=0,d=0,n.mode=z;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg="incorrect header check",n.mode=ht;break}if((15&h)!==F){t.msg="unknown compression method",n.mode=ht;break}if(h>>>=4,d-=4,_t=8+(15&h),0===n.wbits)n.wbits=_t;else if(_t>n.wbits){t.msg="invalid window size",n.mode=ht;break}n.dmax=1<<_t,t.adler=n.check=1,n.mode=512&h?q:Y,h=0,d=0;break;case z:for(;d<16;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(n.flags=h,(255&n.flags)!==F){t.msg="unknown compression method",n.mode=ht;break}if(57344&n.flags){t.msg="unknown header flags set",n.mode=ht;break}n.head&&(n.head.text=h>>8&1),512&n.flags&&(Pt[0]=255&h,Pt[1]=h>>>8&255,n.check=w(n.check,Pt,2,0)),h=0,d=0,n.mode=N;case N:for(;d<32;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}n.head&&(n.head.time=h),512&n.flags&&(Pt[0]=255&h,Pt[1]=h>>>8&255,Pt[2]=h>>>16&255,Pt[3]=h>>>24&255,n.check=w(n.check,Pt,4,0)),h=0,d=0,n.mode=W;case W:for(;d<16;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}n.head&&(n.head.xflags=255&h,n.head.os=h>>8),512&n.flags&&(Pt[0]=255&h,Pt[1]=h>>>8&255,n.check=w(n.check,Pt,2,0)),h=0,d=0,n.mode=U;case U:if(1024&n.flags){for(;d<16;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}n.length=h,n.head&&(n.head.extra_len=h),512&n.flags&&(Pt[0]=255&h,Pt[1]=h>>>8&255,n.check=w(n.check,Pt,2,0)),h=0,d=0}else n.head&&(n.head.extra=null);n.mode=j;case j:if(1024&n.flags&&(v=n.length,v>u&&(v=u),v&&(n.head&&(_t=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),b.arraySet(n.head.extra,i,a,v,_t)),512&n.flags&&(n.check=w(n.check,i,v,a)),u-=v,a+=v,n.length-=v),n.length))break t;n.length=0,n.mode=G;case G:if(2048&n.flags){if(0===u)break t;v=0;do{_t=i[a+v++],n.head&&_t&&n.length<65536&&(n.head.name+=String.fromCharCode(_t))}while(_t&&v<u);if(512&n.flags&&(n.check=w(n.check,i,v,a)),u-=v,a+=v,_t)break t}else n.head&&(n.head.name=null);n.length=0,n.mode=H;case H:if(4096&n.flags){if(0===u)break t;v=0;do{_t=i[a+v++],n.head&&_t&&n.length<65536&&(n.head.comment+=String.fromCharCode(_t))}while(_t&&v<u);if(512&n.flags&&(n.check=w(n.check,i,v,a)),u-=v,a+=v,_t)break t}else n.head&&(n.head.comment=null);n.mode=V;case V:if(512&n.flags){for(;d<16;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(h!==(65535&n.check)){t.msg="header crc mismatch",n.mode=ht;break}h=0,d=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),t.adler=n.check=0,n.mode=Y;break;case q:for(;d<32;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}t.adler=n.check=r(h),h=0,d=0,n.mode=Z;case Z:if(0===n.havedict)return t.next_out=s,t.avail_out=l,t.next_in=a,t.avail_in=u,n.hold=h,n.bits=d,I;t.adler=n.check=1,n.mode=Y;case Y:if(e===P||e===E)break t;case X:if(n.last){h>>>=7&d,d-=7&d,n.mode=lt;break}for(;d<3;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}switch(n.last=1&h,h>>>=1,d-=1,3&h){case 0:n.mode=K;break;case 1:if(c(n),n.mode=nt,e===E){h>>>=2,d-=2;break t}break;case 2:n.mode=$;break;case 3:t.msg="invalid block type",n.mode=ht}h>>>=2,d-=2;break;case K:for(h>>>=7&d,d-=7&d;d<32;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg="invalid stored block lengths",n.mode=ht;break}if(n.length=65535&h,h=0,d=0,n.mode=J,e===E)break t;case J:n.mode=Q;case Q:if(v=n.length){if(v>u&&(v=u),v>l&&(v=l),0===v)break t;b.arraySet(o,i,a,v,s),u-=v,a+=v,l-=v,s+=v,n.length-=v;break}n.mode=Y;break;case $:for(;d<14;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(n.nlen=257+(31&h),h>>>=5,d-=5,n.ndist=1+(31&h),h>>>=5,d-=5,n.ncode=4+(15&h),h>>>=4,d-=4,n.nlen>286||n.ndist>30){t.msg="too many length or distance symbols",n.mode=ht;break}n.have=0,n.mode=tt;case tt:for(;n.have<n.ncode;){for(;d<3;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}n.lens[Et[n.have++]]=7&h,h>>>=3,d-=3}for(;n.have<19;)n.lens[Et[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,St={bits:n.lenbits},kt=_(k,n.lens,0,19,n.lencode,0,n.work,St),n.lenbits=St.bits,kt){t.msg="invalid code lengths set",n.mode=ht;break}n.have=0,n.mode=et;case et:for(;n.have<n.nlen+n.ndist;){for(;At=n.lencode[h&(1<<n.lenbits)-1],vt=At>>>24,yt=At>>>16&255,bt=65535&At,!(vt<=d);){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(bt<16)h>>>=vt,d-=vt,n.lens[n.have++]=bt;else{if(16===bt){for(Ct=vt+2;d<Ct;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(h>>>=vt,d-=vt,0===n.have){t.msg="invalid bit length repeat",n.mode=ht;break}_t=n.lens[n.have-1],v=3+(3&h),h>>>=2,d-=2}else if(17===bt){for(Ct=vt+3;d<Ct;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}h>>>=vt,d-=vt,_t=0,v=3+(7&h),h>>>=3,d-=3}else{for(Ct=vt+7;d<Ct;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}h>>>=vt,d-=vt,_t=0,v=11+(127&h),h>>>=7,d-=7}if(n.have+v>n.nlen+n.ndist){t.msg="invalid bit length repeat",n.mode=ht;break}for(;v--;)n.lens[n.have++]=_t}}if(n.mode===ht)break;if(0===n.lens[256]){t.msg="invalid code -- missing end-of-block",n.mode=ht;break}if(n.lenbits=9,St={bits:n.lenbits},kt=_(S,n.lens,0,n.nlen,n.lencode,0,n.work,St),n.lenbits=St.bits,kt){t.msg="invalid literal/lengths set",n.mode=ht;break}if(n.distbits=6,n.distcode=n.distdyn,St={bits:n.distbits},kt=_(C,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,St),n.distbits=St.bits,kt){t.msg="invalid distances set",n.mode=ht;break}if(n.mode=nt,e===E)break t;case nt:n.mode=rt;case rt:if(u>=6&&l>=258){t.next_out=s,t.avail_out=l,t.next_in=a,t.avail_in=u,n.hold=h,n.bits=d,x(t,g),s=t.next_out,o=t.output,l=t.avail_out,a=t.next_in,i=t.input,u=t.avail_in,h=n.hold,d=n.bits,n.mode===Y&&(n.back=-1);break}for(n.back=0;At=n.lencode[h&(1<<n.lenbits)-1],vt=At>>>24,yt=At>>>16&255,bt=65535&At,!(vt<=d);){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(yt&&0==(240&yt)){for(mt=vt,wt=yt,xt=bt;At=n.lencode[xt+((h&(1<<mt+wt)-1)>>mt)],vt=At>>>24,yt=At>>>16&255,bt=65535&At,!(mt+vt<=d);){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}h>>>=mt,d-=mt,n.back+=mt}if(h>>>=vt,d-=vt,n.back+=vt,n.length=bt,0===yt){n.mode=ut;break}if(32&yt){n.back=-1,n.mode=Y;break}if(64&yt){t.msg="invalid literal/length code",n.mode=ht;break}n.extra=15&yt,n.mode=it;case it:if(n.extra){for(Ct=n.extra;d<Ct;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}n.length+=h&(1<<n.extra)-1,h>>>=n.extra,d-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=ot;case ot:for(;At=n.distcode[h&(1<<n.distbits)-1],vt=At>>>24,yt=At>>>16&255,bt=65535&At,!(vt<=d);){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(0==(240&yt)){for(mt=vt,wt=yt,xt=bt;At=n.distcode[xt+((h&(1<<mt+wt)-1)>>mt)],vt=At>>>24,yt=At>>>16&255,bt=65535&At,!(mt+vt<=d);){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}h>>>=mt,d-=mt,n.back+=mt}if(h>>>=vt,d-=vt,n.back+=vt,64&yt){t.msg="invalid distance code",n.mode=ht;break}n.offset=bt,n.extra=15&yt,n.mode=at;case at:if(n.extra){for(Ct=n.extra;d<Ct;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}n.offset+=h&(1<<n.extra)-1,h>>>=n.extra,d-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){t.msg="invalid distance too far back",n.mode=ht;break}n.mode=st;case st:if(0===l)break t;if(v=g-l,n.offset>v){if((v=n.offset-v)>n.whave&&n.sane){t.msg="invalid distance too far back",n.mode=ht;break}v>n.wnext?(v-=n.wnext,y=n.wsize-v):y=n.wnext-v,v>n.length&&(v=n.length),gt=n.window}else gt=o,y=s-n.offset,v=n.length;v>l&&(v=l),l-=v,n.length-=v;do{o[s++]=gt[y++]}while(--v);0===n.length&&(n.mode=rt);break;case ut:if(0===l)break t;o[s++]=n.length,l--,n.mode=rt;break;case lt:if(n.wrap){for(;d<32;){if(0===u)break t;u--,h|=i[a++]<<d,d+=8}if(g-=l,t.total_out+=g,n.total+=g,g&&(t.adler=n.check=n.flags?w(n.check,o,g,s-g):m(n.check,o,g,s-g)),g=l,(n.flags?h:r(h))!==n.check){t.msg="incorrect data check",n.mode=ht;break}h=0,d=0}n.mode=ct;case ct:if(n.wrap&&n.flags){for(;d<32;){if(0===u)break t;u--,h+=i[a++]<<d,d+=8}if(h!==(4294967295&n.total)){t.msg="incorrect length check",n.mode=ht;break}h=0,d=0}n.mode=ft;case ft:kt=T;break t;case ht:kt=L;break t;case dt:return R;case pt:default:return B}return t.next_out=s,t.avail_out=l,t.next_in=a,t.avail_in=u,n.hold=h,n.bits=d,(n.wsize||g!==t.avail_out&&n.mode<ht&&(n.mode<lt||e!==A))&&f(t,t.output,t.next_out,g-t.avail_out)?(n.mode=dt,R):(p-=t.avail_in,g-=t.avail_out,t.total_in+=p,t.total_out+=g,n.total+=g,n.wrap&&g&&(t.adler=n.check=n.flags?w(n.check,o,g,t.next_out-g):m(n.check,o,g,t.next_out-g)),t.data_type=n.bits+(n.last?64:0)+(n.mode===Y?128:0)+(n.mode===nt||n.mode===J?256:0),(0===p&&0===g||e===A)&&kt===O&&(kt=M),kt)}function d(t){if(!t||!t.state)return B;var e=t.state;return e.window&&(e.window=null),t.state=null,O}function p(t,e){var n;return t&&t.state?(n=t.state,0==(2&n.wrap)?B:(n.head=e,e.done=!1,O)):B}function g(t,e){var n,r,i=e.length;return t&&t.state?(n=t.state,0!==n.wrap&&n.mode!==Z?B:n.mode===Z&&(r=1,(r=m(r,e,i,0))!==n.check)?L:f(t,e,i,i)?(n.mode=dt,R):(n.havedict=1,O)):B}var v,y,b=n(71),m=n(163),w=n(164),x=n(262),_=n(263),k=0,S=1,C=2,A=4,P=5,E=6,O=0,T=1,I=2,B=-2,L=-3,R=-4,M=-5,F=8,D=1,z=2,N=3,W=4,U=5,j=6,G=7,H=8,V=9,q=10,Z=11,Y=12,X=13,K=14,J=15,Q=16,$=17,tt=18,et=19,nt=20,rt=21,it=22,ot=23,at=24,st=25,ut=26,lt=27,ct=28,ft=29,ht=30,dt=31,pt=32,gt=852,vt=592,yt=15,bt=!0;e.inflateReset=a,e.inflateReset2=s,e.inflateResetKeep=o,e.inflateInit=l,e.inflateInit2=u,e.inflate=h,e.inflateEnd=d,e.inflateGetHeader=p,e.inflateSetDictionary=g,e.inflateInfo="pako inflate (from Nodeca project)"},function(t,e,n){"use strict";t.exports=function(t,e){var n,r,i,o,a,s,u,l,c,f,h,d,p,g,v,y,b,m,w,x,_,k,S,C,A;n=t.state,r=t.next_in,C=t.input,i=r+(t.avail_in-5),o=t.next_out,A=t.output,a=o-(e-t.avail_out),s=o+(t.avail_out-257),u=n.dmax,l=n.wsize,c=n.whave,f=n.wnext,h=n.window,d=n.hold,p=n.bits,g=n.lencode,v=n.distcode,y=(1<<n.lenbits)-1,b=(1<<n.distbits)-1;t:do{p<15&&(d+=C[r++]<<p,p+=8,d+=C[r++]<<p,p+=8),m=g[d&y];e:for(;;){if(w=m>>>24,d>>>=w,p-=w,0===(w=m>>>16&255))A[o++]=65535&m;else{if(!(16&w)){if(0==(64&w)){m=g[(65535&m)+(d&(1<<w)-1)];continue e}if(32&w){n.mode=12;break t}t.msg="invalid literal/length code",n.mode=30;break t}x=65535&m,w&=15,w&&(p<w&&(d+=C[r++]<<p,p+=8),x+=d&(1<<w)-1,d>>>=w,p-=w),p<15&&(d+=C[r++]<<p,p+=8,d+=C[r++]<<p,p+=8),m=v[d&b];n:for(;;){if(w=m>>>24,d>>>=w,p-=w,!(16&(w=m>>>16&255))){if(0==(64&w)){m=v[(65535&m)+(d&(1<<w)-1)];continue n}t.msg="invalid distance code",n.mode=30;break t}if(_=65535&m,w&=15,p<w&&(d+=C[r++]<<p,(p+=8)<w&&(d+=C[r++]<<p,p+=8)),(_+=d&(1<<w)-1)>u){t.msg="invalid distance too far back",n.mode=30;break t}if(d>>>=w,p-=w,w=o-a,_>w){if((w=_-w)>c&&n.sane){t.msg="invalid distance too far back",n.mode=30;break t}if(k=0,S=h,0===f){if(k+=l-w,w<x){x-=w;do{A[o++]=h[k++]}while(--w);k=o-_,S=A}}else if(f<w){if(k+=l+f-w,(w-=f)<x){x-=w;do{A[o++]=h[k++]}while(--w);if(k=0,f<x){w=f,x-=w;do{A[o++]=h[k++]}while(--w);k=o-_,S=A}}}else if(k+=f-w,w<x){x-=w;do{A[o++]=h[k++]}while(--w);k=o-_,S=A}for(;x>2;)A[o++]=S[k++],A[o++]=S[k++],A[o++]=S[k++],x-=3;x&&(A[o++]=S[k++],x>1&&(A[o++]=S[k++]))}else{k=o-_;do{A[o++]=A[k++],A[o++]=A[k++],A[o++]=A[k++],x-=3}while(x>2);x&&(A[o++]=A[k++],x>1&&(A[o++]=A[k++]))}break}}break}}while(r<i&&o<s);x=p>>3,r-=x,p-=x<<3,d&=(1<<p)-1,t.next_in=r,t.next_out=o,t.avail_in=r<i?i-r+5:5-(r-i),t.avail_out=o<s?s-o+257:257-(o-s),n.hold=d,n.bits=p}},function(t,e,n){"use strict";var r=n(71),i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],o=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],a=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],s=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(t,e,n,u,l,c,f,h){var d,p,g,v,y,b,m,w,x,_=h.bits,k=0,S=0,C=0,A=0,P=0,E=0,O=0,T=0,I=0,B=0,L=null,R=0,M=new r.Buf16(16),F=new r.Buf16(16),D=null,z=0;for(k=0;k<=15;k++)M[k]=0;for(S=0;S<u;S++)M[e[n+S]]++;for(P=_,A=15;A>=1&&0===M[A];A--);if(P>A&&(P=A),0===A)return l[c++]=20971520,l[c++]=20971520,h.bits=1,0;for(C=1;C<A&&0===M[C];C++);for(P<C&&(P=C),T=1,k=1;k<=15;k++)if(T<<=1,(T-=M[k])<0)return-1;if(T>0&&(0===t||1!==A))return-1;for(F[1]=0,k=1;k<15;k++)F[k+1]=F[k]+M[k];for(S=0;S<u;S++)0!==e[n+S]&&(f[F[e[n+S]]++]=S);if(0===t?(L=D=f,b=19):1===t?(L=i,R-=257,D=o,z-=257,b=256):(L=a,D=s,b=-1),B=0,S=0,k=C,y=c,E=P,O=0,g=-1,I=1<<P,v=I-1,1===t&&I>852||2===t&&I>592)return 1;for(;;){m=k-O,f[S]<b?(w=0,x=f[S]):f[S]>b?(w=D[z+f[S]],x=L[R+f[S]]):(w=96,x=0),d=1<<k-O,p=1<<E,C=p;do{p-=d,l[y+(B>>O)+p]=m<<24|w<<16|x|0}while(0!==p);for(d=1<<k-1;B&d;)d>>=1;if(0!==d?(B&=d-1,B+=d):B=0,S++,0==--M[k]){if(k===A)break;k=e[n+f[S]]}if(k>P&&(B&v)!==g){for(0===O&&(O=P),y+=C,E=k-O,T=1<<E;E+O<A&&!((T-=M[E+O])<=0);)E++,T<<=1;if(I+=1<<E,1===t&&I>852||2===t&&I>592)return 1;g=B&v,l[g]=P<<24|E<<16|y-c|0}}return 0!==B&&(l[y+B]=k-O<<24|64<<16|0),h.bits=P,0}},function(t,e,n){"use strict";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(72),n(266),n(267),n(44),n(45),n(107),n(165),n(268),n(166),n(269),n(270),n(271),n(108),n(272),n(34),n(5),n(273),n(274),n(275),n(276),n(277),n(278),n(279),n(280),n(281),n(282),n(283),n(284),n(285),n(286),n(287),n(288))}(0,function(t){return t})},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){return function(){if("function"==typeof ArrayBuffer){var e=t,n=e.lib,r=n.WordArray,i=r.init;(r.init=function(t){if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),(t instanceof Int8Array||"undefined"!=typeof Uint8ClampedArray&&t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),t instanceof Uint8Array){for(var e=t.byteLength,n=[],r=0;r<e;r++)n[r>>>2]|=t[r]<<24-r%4*8;i.call(this,n,e)}else i.apply(this,arguments)}).prototype=r}}(),t.lib.WordArray})},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){return function(){function e(t){return t<<8&4278255360|t>>>8&16711935}var n=t,r=n.lib,i=r.WordArray,o=n.enc;o.Utf16=o.Utf16BE={stringify:function(t){for(var e=t.words,n=t.sigBytes,r=[],i=0;i<n;i+=2){var o=e[i>>>2]>>>16-i%4*8&65535;r.push(String.fromCharCode(o))}return r.join("")},parse:function(t){for(var e=t.length,n=[],r=0;r<e;r++)n[r>>>1]|=t.charCodeAt(r)<<16-r%2*16;return i.create(n,2*e)}};o.Utf16LE={stringify:function(t){for(var n=t.words,r=t.sigBytes,i=[],o=0;o<r;o+=2){var a=e(n[o>>>2]>>>16-o%4*8&65535);i.push(String.fromCharCode(a))}return i.join("")},parse:function(t){for(var n=t.length,r=[],o=0;o<n;o++)r[o>>>1]|=e(t.charCodeAt(o)<<16-o%2*16);return i.create(r,2*n)}}}(),t.enc.Utf16})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(165))}(0,function(t){return function(){var e=t,n=e.lib,r=n.WordArray,i=e.algo,o=i.SHA256,a=i.SHA224=o.extend({_doReset:function(){this._hash=new r.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var t=o._doFinalize.call(this);return t.sigBytes-=4,t}});e.SHA224=o._createHelper(a),e.HmacSHA224=o._createHmacHelper(a)}(),t.SHA224})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(72),n(166))}(0,function(t){return function(){var e=t,n=e.x64,r=n.Word,i=n.WordArray,o=e.algo,a=o.SHA512,s=o.SHA384=a.extend({_doReset:function(){this._hash=new i.init([new r.init(3418070365,3238371032),new r.init(1654270250,914150663),new r.init(2438529370,812702999),new r.init(355462360,4144912697),new r.init(1731405415,4290775857),new r.init(2394180231,1750603025),new r.init(3675008525,1694076839),new r.init(1203062813,3204075428)])},_doFinalize:function(){var t=a._doFinalize.call(this);return t.sigBytes-=16,t}});e.SHA384=a._createHelper(s),e.HmacSHA384=a._createHmacHelper(s)}(),t.SHA384})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(72))}(0,function(t){return function(e){var n=t,r=n.lib,i=r.WordArray,o=r.Hasher,a=n.x64,s=a.Word,u=n.algo,l=[],c=[],f=[];!function(){for(var t=1,e=0,n=0;n<24;n++){l[t+5*e]=(n+1)*(n+2)/2%64;var r=e%5,i=(2*t+3*e)%5;t=r,e=i}for(var t=0;t<5;t++)for(var e=0;e<5;e++)c[t+5*e]=e+(2*t+3*e)%5*5;for(var o=1,a=0;a<24;a++){for(var u=0,h=0,d=0;d<7;d++){if(1&o){var p=(1<<d)-1;p<32?h^=1<<p:u^=1<<p-32}128&o?o=o<<1^113:o<<=1}f[a]=s.create(u,h)}}();var h=[];!function(){for(var t=0;t<25;t++)h[t]=s.create()}();var d=u.SHA3=o.extend({cfg:o.cfg.extend({outputLength:512}),_doReset:function(){for(var t=this._state=[],e=0;e<25;e++)t[e]=new s.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(t,e){for(var n=this._state,r=this.blockSize/2,i=0;i<r;i++){var o=t[e+2*i],a=t[e+2*i+1];o=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),a=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8);var s=n[i];s.high^=a,s.low^=o}for(var u=0;u<24;u++){for(var d=0;d<5;d++){for(var p=0,g=0,v=0;v<5;v++){var s=n[d+5*v];p^=s.high,g^=s.low}var y=h[d];y.high=p,y.low=g}for(var d=0;d<5;d++)for(var b=h[(d+4)%5],m=h[(d+1)%5],w=m.high,x=m.low,p=b.high^(w<<1|x>>>31),g=b.low^(x<<1|w>>>31),v=0;v<5;v++){var s=n[d+5*v];s.high^=p,s.low^=g}for(var _=1;_<25;_++){var s=n[_],k=s.high,S=s.low,C=l[_];if(C<32)var p=k<<C|S>>>32-C,g=S<<C|k>>>32-C;else var p=S<<C-32|k>>>64-C,g=k<<C-32|S>>>64-C;var A=h[c[_]];A.high=p,A.low=g}var P=h[0],E=n[0];P.high=E.high,P.low=E.low;for(var d=0;d<5;d++)for(var v=0;v<5;v++){var _=d+5*v,s=n[_],O=h[_],T=h[(d+1)%5+5*v],I=h[(d+2)%5+5*v];s.high=O.high^~T.high&I.high,s.low=O.low^~T.low&I.low}var s=n[0],B=f[u];s.high^=B.high,s.low^=B.low}},_doFinalize:function(){var t=this._data,n=t.words,r=(this._nDataBytes,8*t.sigBytes),o=32*this.blockSize;n[r>>>5]|=1<<24-r%32,n[(e.ceil((r+1)/o)*o>>>5)-1]|=128,t.sigBytes=4*n.length,this._process();for(var a=this._state,s=this.cfg.outputLength/8,u=s/8,l=[],c=0;c<u;c++){var f=a[c],h=f.high,d=f.low;h=16711935&(h<<8|h>>>24)|4278255360&(h<<24|h>>>8),d=16711935&(d<<8|d>>>24)|4278255360&(d<<24|d>>>8),l.push(d),l.push(h)}return new i.init(l,s)},clone:function(){for(var t=o.clone.call(this),e=t._state=this._state.slice(0),n=0;n<25;n++)e[n]=e[n].clone();return t}});n.SHA3=o._createHelper(d),n.HmacSHA3=o._createHmacHelper(d)}(Math),t.SHA3})},function(t,e,n){!function(r,i){t.exports=e=i(n(1))}(0,function(t){/** @preserve
	(c) 2012 by CÃ©dric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
return function(e){function n(t,e,n){return t^e^n}function r(t,e,n){return t&e|~t&n}function i(t,e,n){return(t|~e)^n}function o(t,e,n){return t&n|e&~n}function a(t,e,n){return t^(e|~n)}function s(t,e){return t<<e|t>>>32-e}var u=t,l=u.lib,c=l.WordArray,f=l.Hasher,h=u.algo,d=c.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),p=c.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),g=c.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),v=c.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),y=c.create([0,1518500249,1859775393,2400959708,2840853838]),b=c.create([1352829926,1548603684,1836072691,2053994217,0]),m=h.RIPEMD160=f.extend({_doReset:function(){this._hash=c.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,e){for(var u=0;u<16;u++){var l=e+u,c=t[l];t[l]=16711935&(c<<8|c>>>24)|4278255360&(c<<24|c>>>8)}var f,h,m,w,x,_,k,S,C,A,P=this._hash.words,E=y.words,O=b.words,T=d.words,I=p.words,B=g.words,L=v.words;_=f=P[0],k=h=P[1],S=m=P[2],C=w=P[3],A=x=P[4];for(var R,u=0;u<80;u+=1)R=f+t[e+T[u]]|0,R+=u<16?n(h,m,w)+E[0]:u<32?r(h,m,w)+E[1]:u<48?i(h,m,w)+E[2]:u<64?o(h,m,w)+E[3]:a(h,m,w)+E[4],R|=0,R=s(R,B[u]),R=R+x|0,f=x,x=w,w=s(m,10),m=h,h=R,R=_+t[e+I[u]]|0,R+=u<16?a(k,S,C)+O[0]:u<32?o(k,S,C)+O[1]:u<48?i(k,S,C)+O[2]:u<64?r(k,S,C)+O[3]:n(k,S,C)+O[4],R|=0,R=s(R,L[u]),R=R+A|0,_=A,A=C,C=s(S,10),S=k,k=R;R=P[1]+m+C|0,P[1]=P[2]+w+A|0,P[2]=P[3]+x+_|0,P[3]=P[4]+f+k|0,P[4]=P[0]+h+S|0,P[0]=R},_doFinalize:function(){var t=this._data,e=t.words,n=8*this._nDataBytes,r=8*t.sigBytes;e[r>>>5]|=128<<24-r%32,e[14+(r+64>>>9<<4)]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8),t.sigBytes=4*(e.length+1),this._process();for(var i=this._hash,o=i.words,a=0;a<5;a++){var s=o[a];o[a]=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8)}return i},clone:function(){var t=f.clone.call(this);return t._hash=this._hash.clone(),t}});u.RIPEMD160=f._createHelper(m),u.HmacRIPEMD160=f._createHmacHelper(m)}(Math),t.RIPEMD160})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(107),n(108))}(0,function(t){return function(){var e=t,n=e.lib,r=n.Base,i=n.WordArray,o=e.algo,a=o.SHA1,s=o.HMAC,u=o.PBKDF2=r.extend({cfg:r.extend({keySize:4,hasher:a,iterations:1}),init:function(t){this.cfg=this.cfg.extend(t)},compute:function(t,e){for(var n=this.cfg,r=s.create(n.hasher,t),o=i.create(),a=i.create([1]),u=o.words,l=a.words,c=n.keySize,f=n.iterations;u.length<c;){var h=r.update(e).finalize(a);r.reset();for(var d=h.words,p=d.length,g=h,v=1;v<f;v++){g=r.finalize(g),r.reset();for(var y=g.words,b=0;b<p;b++)d[b]^=y[b]}o.concat(h),l[0]++}return o.sigBytes=4*c,o}});e.PBKDF2=function(t,e,n){return u.create(n).compute(t,e)}}(),t.PBKDF2})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.mode.CFB=function(){function e(t,e,n,r){var i=this._iv;if(i){var o=i.slice(0);this._iv=void 0}else var o=this._prevBlock;r.encryptBlock(o,0);for(var a=0;a<n;a++)t[e+a]^=o[a]}var n=t.lib.BlockCipherMode.extend();return n.Encryptor=n.extend({processBlock:function(t,n){var r=this._cipher,i=r.blockSize;e.call(this,t,n,i,r),this._prevBlock=t.slice(n,n+i)}}),n.Decryptor=n.extend({processBlock:function(t,n){var r=this._cipher,i=r.blockSize,o=t.slice(n,n+i);e.call(this,t,n,i,r),this._prevBlock=o}}),n}(),t.mode.CFB})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.mode.CTR=function(){var e=t.lib.BlockCipherMode.extend(),n=e.Encryptor=e.extend({processBlock:function(t,e){var n=this._cipher,r=n.blockSize,i=this._iv,o=this._counter;i&&(o=this._counter=i.slice(0),this._iv=void 0);var a=o.slice(0);n.encryptBlock(a,0),o[r-1]=o[r-1]+1|0;for(var s=0;s<r;s++)t[e+s]^=a[s]}});return e.Decryptor=n,e}(),t.mode.CTR})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
return t.mode.CTRGladman=function(){function e(t){if(255==(t>>24&255)){var e=t>>16&255,n=t>>8&255,r=255&t;255===e?(e=0,255===n?(n=0,255===r?r=0:++r):++n):++e,t=0,t+=e<<16,t+=n<<8,t+=r}else t+=1<<24;return t}function n(t){return 0===(t[0]=e(t[0]))&&(t[1]=e(t[1])),t}var r=t.lib.BlockCipherMode.extend(),i=r.Encryptor=r.extend({processBlock:function(t,e){var r=this._cipher,i=r.blockSize,o=this._iv,a=this._counter;o&&(a=this._counter=o.slice(0),this._iv=void 0),n(a);var s=a.slice(0);r.encryptBlock(s,0);for(var u=0;u<i;u++)t[e+u]^=s[u]}});return r.Decryptor=i,r}(),t.mode.CTRGladman})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.mode.OFB=function(){var e=t.lib.BlockCipherMode.extend(),n=e.Encryptor=e.extend({processBlock:function(t,e){var n=this._cipher,r=n.blockSize,i=this._iv,o=this._keystream;i&&(o=this._keystream=i.slice(0),this._iv=void 0),n.encryptBlock(o,0);for(var a=0;a<r;a++)t[e+a]^=o[a]}});return e.Decryptor=n,e}(),t.mode.OFB})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.mode.ECB=function(){var e=t.lib.BlockCipherMode.extend();return e.Encryptor=e.extend({processBlock:function(t,e){this._cipher.encryptBlock(t,e)}}),e.Decryptor=e.extend({processBlock:function(t,e){this._cipher.decryptBlock(t,e)}}),e}(),t.mode.ECB})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.pad.AnsiX923={pad:function(t,e){var n=t.sigBytes,r=4*e,i=r-n%r,o=n+i-1;t.clamp(),t.words[o>>>2]|=i<<24-o%4*8,t.sigBytes+=i},unpad:function(t){var e=255&t.words[t.sigBytes-1>>>2];t.sigBytes-=e}},t.pad.Ansix923})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.pad.Iso10126={pad:function(e,n){var r=4*n,i=r-e.sigBytes%r;e.concat(t.lib.WordArray.random(i-1)).concat(t.lib.WordArray.create([i<<24],1))},unpad:function(t){var e=255&t.words[t.sigBytes-1>>>2];t.sigBytes-=e}},t.pad.Iso10126})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.pad.Iso97971={pad:function(e,n){e.concat(t.lib.WordArray.create([2147483648],1)),t.pad.ZeroPadding.pad(e,n)},unpad:function(e){t.pad.ZeroPadding.unpad(e),e.sigBytes--}},t.pad.Iso97971})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.pad.ZeroPadding={pad:function(t,e){var n=4*e;t.clamp(),t.sigBytes+=n-(t.sigBytes%n||n)},unpad:function(t){for(var e=t.words,n=t.sigBytes-1;!(e[n>>>2]>>>24-n%4*8&255);)n--;t.sigBytes=n+1}},t.pad.ZeroPadding})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return t.pad.NoPadding={pad:function(){},unpad:function(){}},t.pad.NoPadding})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(5))}(0,function(t){return function(e){var n=t,r=n.lib,i=r.CipherParams,o=n.enc,a=o.Hex,s=n.format;s.Hex={stringify:function(t){return t.ciphertext.toString(a)},parse:function(t){var e=a.parse(t);return i.create({ciphertext:e})}}}(),t.format.Hex})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(44),n(45),n(34),n(5))}(0,function(t){return function(){var e=t,n=e.lib,r=n.BlockCipher,i=e.algo,o=[],a=[],s=[],u=[],l=[],c=[],f=[],h=[],d=[],p=[];!function(){for(var t=[],e=0;e<256;e++)t[e]=e<128?e<<1:e<<1^283;for(var n=0,r=0,e=0;e<256;e++){var i=r^r<<1^r<<2^r<<3^r<<4;i=i>>>8^255&i^99,o[n]=i,a[i]=n;var g=t[n],v=t[g],y=t[v],b=257*t[i]^16843008*i;s[n]=b<<24|b>>>8,u[n]=b<<16|b>>>16,l[n]=b<<8|b>>>24,c[n]=b;var b=16843009*y^65537*v^257*g^16843008*n;f[i]=b<<24|b>>>8,h[i]=b<<16|b>>>16,d[i]=b<<8|b>>>24,p[i]=b,n?(n=g^t[t[t[y^g]]],r^=t[t[r]]):n=r=1}}();var g=[0,1,2,4,8,16,32,64,128,27,54],v=i.AES=r.extend({_doReset:function(){if(!this._nRounds||this._keyPriorReset!==this._key){for(var t=this._keyPriorReset=this._key,e=t.words,n=t.sigBytes/4,r=this._nRounds=n+6,i=4*(r+1),a=this._keySchedule=[],s=0;s<i;s++)if(s<n)a[s]=e[s];else{var u=a[s-1];s%n?n>6&&s%n==4&&(u=o[u>>>24]<<24|o[u>>>16&255]<<16|o[u>>>8&255]<<8|o[255&u]):(u=u<<8|u>>>24,u=o[u>>>24]<<24|o[u>>>16&255]<<16|o[u>>>8&255]<<8|o[255&u],u^=g[s/n|0]<<24),a[s]=a[s-n]^u}for(var l=this._invKeySchedule=[],c=0;c<i;c++){var s=i-c;if(c%4)var u=a[s];else var u=a[s-4];l[c]=c<4||s<=4?u:f[o[u>>>24]]^h[o[u>>>16&255]]^d[o[u>>>8&255]]^p[o[255&u]]}}},encryptBlock:function(t,e){this._doCryptBlock(t,e,this._keySchedule,s,u,l,c,o)},decryptBlock:function(t,e){var n=t[e+1];t[e+1]=t[e+3],t[e+3]=n,this._doCryptBlock(t,e,this._invKeySchedule,f,h,d,p,a);var n=t[e+1];t[e+1]=t[e+3],t[e+3]=n},_doCryptBlock:function(t,e,n,r,i,o,a,s){for(var u=this._nRounds,l=t[e]^n[0],c=t[e+1]^n[1],f=t[e+2]^n[2],h=t[e+3]^n[3],d=4,p=1;p<u;p++){var g=r[l>>>24]^i[c>>>16&255]^o[f>>>8&255]^a[255&h]^n[d++],v=r[c>>>24]^i[f>>>16&255]^o[h>>>8&255]^a[255&l]^n[d++],y=r[f>>>24]^i[h>>>16&255]^o[l>>>8&255]^a[255&c]^n[d++],b=r[h>>>24]^i[l>>>16&255]^o[c>>>8&255]^a[255&f]^n[d++];l=g,c=v,f=y,h=b}var g=(s[l>>>24]<<24|s[c>>>16&255]<<16|s[f>>>8&255]<<8|s[255&h])^n[d++],v=(s[c>>>24]<<24|s[f>>>16&255]<<16|s[h>>>8&255]<<8|s[255&l])^n[d++],y=(s[f>>>24]<<24|s[h>>>16&255]<<16|s[l>>>8&255]<<8|s[255&c])^n[d++],b=(s[h>>>24]<<24|s[l>>>16&255]<<16|s[c>>>8&255]<<8|s[255&f])^n[d++];t[e]=g,t[e+1]=v,t[e+2]=y,t[e+3]=b},keySize:8});e.AES=r._createHelper(v)}(),t.AES})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(44),n(45),n(34),n(5))}(0,function(t){return function(){function e(t,e){var n=(this._lBlock>>>t^this._rBlock)&e;this._rBlock^=n,this._lBlock^=n<<t}function n(t,e){var n=(this._rBlock>>>t^this._lBlock)&e;this._lBlock^=n,this._rBlock^=n<<t}var r=t,i=r.lib,o=i.WordArray,a=i.BlockCipher,s=r.algo,u=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],l=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],c=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],f=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],h=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],d=s.DES=a.extend({_doReset:function(){for(var t=this._key,e=t.words,n=[],r=0;r<56;r++){var i=u[r]-1;n[r]=e[i>>>5]>>>31-i%32&1}for(var o=this._subKeys=[],a=0;a<16;a++){for(var s=o[a]=[],f=c[a],r=0;r<24;r++)s[r/6|0]|=n[(l[r]-1+f)%28]<<31-r%6,s[4+(r/6|0)]|=n[28+(l[r+24]-1+f)%28]<<31-r%6;s[0]=s[0]<<1|s[0]>>>31;for(var r=1;r<7;r++)s[r]=s[r]>>>4*(r-1)+3;s[7]=s[7]<<5|s[7]>>>27}for(var h=this._invSubKeys=[],r=0;r<16;r++)h[r]=o[15-r]},encryptBlock:function(t,e){this._doCryptBlock(t,e,this._subKeys)},decryptBlock:function(t,e){this._doCryptBlock(t,e,this._invSubKeys)},_doCryptBlock:function(t,r,i){this._lBlock=t[r],this._rBlock=t[r+1],e.call(this,4,252645135),e.call(this,16,65535),n.call(this,2,858993459),n.call(this,8,16711935),e.call(this,1,1431655765);for(var o=0;o<16;o++){for(var a=i[o],s=this._lBlock,u=this._rBlock,l=0,c=0;c<8;c++)l|=f[c][((u^a[c])&h[c])>>>0];this._lBlock=u,this._rBlock=s^l}var d=this._lBlock;this._lBlock=this._rBlock,this._rBlock=d,e.call(this,1,1431655765),n.call(this,8,16711935),n.call(this,2,858993459),e.call(this,16,65535),e.call(this,4,252645135),t[r]=this._lBlock,t[r+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});r.DES=a._createHelper(d);var p=s.TripleDES=a.extend({_doReset:function(){var t=this._key,e=t.words;this._des1=d.createEncryptor(o.create(e.slice(0,2))),this._des2=d.createEncryptor(o.create(e.slice(2,4))),this._des3=d.createEncryptor(o.create(e.slice(4,6)))},encryptBlock:function(t,e){this._des1.encryptBlock(t,e),this._des2.decryptBlock(t,e),this._des3.encryptBlock(t,e)},decryptBlock:function(t,e){this._des3.decryptBlock(t,e),this._des2.encryptBlock(t,e),this._des1.decryptBlock(t,e)},keySize:6,ivSize:2,blockSize:2});r.TripleDES=a._createHelper(p)}(),t.TripleDES})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(44),n(45),n(34),n(5))}(0,function(t){return function(){function e(){for(var t=this._S,e=this._i,n=this._j,r=0,i=0;i<4;i++){e=(e+1)%256,n=(n+t[e])%256;var o=t[e];t[e]=t[n],t[n]=o,r|=t[(t[e]+t[n])%256]<<24-8*i}return this._i=e,this._j=n,r}var n=t,r=n.lib,i=r.StreamCipher,o=n.algo,a=o.RC4=i.extend({_doReset:function(){for(var t=this._key,e=t.words,n=t.sigBytes,r=this._S=[],i=0;i<256;i++)r[i]=i;for(var i=0,o=0;i<256;i++){var a=i%n,s=e[a>>>2]>>>24-a%4*8&255;o=(o+r[i]+s)%256;var u=r[i];r[i]=r[o],r[o]=u}this._i=this._j=0},_doProcessBlock:function(t,n){t[n]^=e.call(this)},keySize:8,ivSize:0});n.RC4=i._createHelper(a);var s=o.RC4Drop=a.extend({cfg:a.cfg.extend({drop:192}),_doReset:function(){a._doReset.call(this);for(var t=this.cfg.drop;t>0;t--)e.call(this)}});n.RC4Drop=i._createHelper(s)}(),t.RC4})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(44),n(45),n(34),n(5))}(0,function(t){return function(){function e(){for(var t=this._X,e=this._C,n=0;n<8;n++)s[n]=e[n];e[0]=e[0]+1295307597+this._b|0,e[1]=e[1]+3545052371+(e[0]>>>0<s[0]>>>0?1:0)|0,e[2]=e[2]+886263092+(e[1]>>>0<s[1]>>>0?1:0)|0,e[3]=e[3]+1295307597+(e[2]>>>0<s[2]>>>0?1:0)|0,e[4]=e[4]+3545052371+(e[3]>>>0<s[3]>>>0?1:0)|0,e[5]=e[5]+886263092+(e[4]>>>0<s[4]>>>0?1:0)|0,e[6]=e[6]+1295307597+(e[5]>>>0<s[5]>>>0?1:0)|0,e[7]=e[7]+3545052371+(e[6]>>>0<s[6]>>>0?1:0)|0,this._b=e[7]>>>0<s[7]>>>0?1:0;for(var n=0;n<8;n++){var r=t[n]+e[n],i=65535&r,o=r>>>16,a=((i*i>>>17)+i*o>>>15)+o*o,l=((4294901760&r)*r|0)+((65535&r)*r|0);u[n]=a^l}t[0]=u[0]+(u[7]<<16|u[7]>>>16)+(u[6]<<16|u[6]>>>16)|0,t[1]=u[1]+(u[0]<<8|u[0]>>>24)+u[7]|0,t[2]=u[2]+(u[1]<<16|u[1]>>>16)+(u[0]<<16|u[0]>>>16)|0,t[3]=u[3]+(u[2]<<8|u[2]>>>24)+u[1]|0,t[4]=u[4]+(u[3]<<16|u[3]>>>16)+(u[2]<<16|u[2]>>>16)|0,t[5]=u[5]+(u[4]<<8|u[4]>>>24)+u[3]|0,t[6]=u[6]+(u[5]<<16|u[5]>>>16)+(u[4]<<16|u[4]>>>16)|0,t[7]=u[7]+(u[6]<<8|u[6]>>>24)+u[5]|0}var n=t,r=n.lib,i=r.StreamCipher,o=n.algo,a=[],s=[],u=[],l=o.Rabbit=i.extend({_doReset:function(){for(var t=this._key.words,n=this.cfg.iv,r=0;r<4;r++)t[r]=16711935&(t[r]<<8|t[r]>>>24)|4278255360&(t[r]<<24|t[r]>>>8);var i=this._X=[t[0],t[3]<<16|t[2]>>>16,t[1],t[0]<<16|t[3]>>>16,t[2],t[1]<<16|t[0]>>>16,t[3],t[2]<<16|t[1]>>>16],o=this._C=[t[2]<<16|t[2]>>>16,4294901760&t[0]|65535&t[1],t[3]<<16|t[3]>>>16,4294901760&t[1]|65535&t[2],t[0]<<16|t[0]>>>16,4294901760&t[2]|65535&t[3],t[1]<<16|t[1]>>>16,4294901760&t[3]|65535&t[0]];this._b=0;for(var r=0;r<4;r++)e.call(this);for(var r=0;r<8;r++)o[r]^=i[r+4&7];if(n){var a=n.words,s=a[0],u=a[1],l=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),c=16711935&(u<<8|u>>>24)|4278255360&(u<<24|u>>>8),f=l>>>16|4294901760&c,h=c<<16|65535&l;o[0]^=l,o[1]^=f,o[2]^=c,o[3]^=h,o[4]^=l,o[5]^=f,o[6]^=c,o[7]^=h;for(var r=0;r<4;r++)e.call(this)}},_doProcessBlock:function(t,n){var r=this._X;e.call(this),a[0]=r[0]^r[5]>>>16^r[3]<<16,a[1]=r[2]^r[7]>>>16^r[5]<<16,a[2]=r[4]^r[1]>>>16^r[7]<<16,a[3]=r[6]^r[3]>>>16^r[1]<<16;for(var i=0;i<4;i++)a[i]=16711935&(a[i]<<8|a[i]>>>24)|4278255360&(a[i]<<24|a[i]>>>8),t[n+i]^=a[i]},blockSize:4,ivSize:2});n.Rabbit=i._createHelper(l)}(),t.Rabbit})},function(t,e,n){!function(r,i,o){t.exports=e=i(n(1),n(44),n(45),n(34),n(5))}(0,function(t){return function(){function e(){for(var t=this._X,e=this._C,n=0;n<8;n++)s[n]=e[n];e[0]=e[0]+1295307597+this._b|0,e[1]=e[1]+3545052371+(e[0]>>>0<s[0]>>>0?1:0)|0,e[2]=e[2]+886263092+(e[1]>>>0<s[1]>>>0?1:0)|0,e[3]=e[3]+1295307597+(e[2]>>>0<s[2]>>>0?1:0)|0,e[4]=e[4]+3545052371+(e[3]>>>0<s[3]>>>0?1:0)|0,e[5]=e[5]+886263092+(e[4]>>>0<s[4]>>>0?1:0)|0,e[6]=e[6]+1295307597+(e[5]>>>0<s[5]>>>0?1:0)|0,e[7]=e[7]+3545052371+(e[6]>>>0<s[6]>>>0?1:0)|0,this._b=e[7]>>>0<s[7]>>>0?1:0;for(var n=0;n<8;n++){var r=t[n]+e[n],i=65535&r,o=r>>>16,a=((i*i>>>17)+i*o>>>15)+o*o,l=((4294901760&r)*r|0)+((65535&r)*r|0);u[n]=a^l}t[0]=u[0]+(u[7]<<16|u[7]>>>16)+(u[6]<<16|u[6]>>>16)|0,t[1]=u[1]+(u[0]<<8|u[0]>>>24)+u[7]|0,t[2]=u[2]+(u[1]<<16|u[1]>>>16)+(u[0]<<16|u[0]>>>16)|0,t[3]=u[3]+(u[2]<<8|u[2]>>>24)+u[1]|0,t[4]=u[4]+(u[3]<<16|u[3]>>>16)+(u[2]<<16|u[2]>>>16)|0,t[5]=u[5]+(u[4]<<8|u[4]>>>24)+u[3]|0,t[6]=u[6]+(u[5]<<16|u[5]>>>16)+(u[4]<<16|u[4]>>>16)|0,t[7]=u[7]+(u[6]<<8|u[6]>>>24)+u[5]|0}var n=t,r=n.lib,i=r.StreamCipher,o=n.algo,a=[],s=[],u=[],l=o.RabbitLegacy=i.extend({_doReset:function(){var t=this._key.words,n=this.cfg.iv,r=this._X=[t[0],t[3]<<16|t[2]>>>16,t[1],t[0]<<16|t[3]>>>16,t[2],t[1]<<16|t[0]>>>16,t[3],t[2]<<16|t[1]>>>16],i=this._C=[t[2]<<16|t[2]>>>16,4294901760&t[0]|65535&t[1],t[3]<<16|t[3]>>>16,4294901760&t[1]|65535&t[2],t[0]<<16|t[0]>>>16,4294901760&t[2]|65535&t[3],t[1]<<16|t[1]>>>16,4294901760&t[3]|65535&t[0]];this._b=0;for(var o=0;o<4;o++)e.call(this);for(var o=0;o<8;o++)i[o]^=r[o+4&7];if(n){var a=n.words,s=a[0],u=a[1],l=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),c=16711935&(u<<8|u>>>24)|4278255360&(u<<24|u>>>8),f=l>>>16|4294901760&c,h=c<<16|65535&l;i[0]^=l,i[1]^=f,i[2]^=c,i[3]^=h,i[4]^=l,i[5]^=f,i[6]^=c,i[7]^=h;for(var o=0;o<4;o++)e.call(this)}},_doProcessBlock:function(t,n){var r=this._X;e.call(this),a[0]=r[0]^r[5]>>>16^r[3]<<16,a[1]=r[2]^r[7]>>>16^r[5]<<16,a[2]=r[4]^r[1]>>>16^r[7]<<16,a[3]=r[6]^r[3]>>>16^r[1]<<16;for(var i=0;i<4;i++)a[i]=16711935&(a[i]<<8|a[i]>>>24)|4278255360&(a[i]<<24|a[i]>>>8),t[n+i]^=a[i]},blockSize:4,ivSize:2});n.RabbitLegacy=i._createHelper(l)}(),t.RabbitLegacy})},function(t,e,n){"use strict";function r(t,e){if(void 0===e&&(e={}),"string"!=typeof t)throw new TypeError("Expected string.");if(0===t.length)return"";var n=t.split("").map(d).map(function(t){return f.has(t)?32:t}).filter(function(t){return!h.has(t)}),r=String.fromCodePoint.apply(String,n).normalize("NFKC"),i=r.split("").map(d);if(i.some(function(t){return u.has(t)}))throw new Error("Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3");if(!0!==e.allowUnassigned){if(i.some(function(t){return o.has(t)}))throw new Error("Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5")}var a=i.some(function(t){return l.has(t)}),s=i.some(function(t){return c.has(t)});if(a&&s)throw new Error("String must not contain RandALCat and LCat at the same time, see https://tools.ietf.org/html/rfc3454#section-6");var v=l.has(d(p(r))),y=l.has(d(g(r)));if(a&&(!v||!y))throw new Error("Bidirectional RandALCat character must be the first and the last character of the string, see https://tools.ietf.org/html/rfc3454#section-6");return r}n(290),n(149),n(291);var i=n(292),o=i.unassigned_code_points,a=i.commonly_mapped_to_nothing,s=i.non_ASCII_space_characters,u=i.prohibited_characters,l=i.bidirectional_r_al,c=i.bidirectional_l;t.exports=r;var f=s,h=a,d=function(t){return t.codePointAt(0)},p=function(t){return t[0]},g=function(t){return t[t.length-1]}},function(t,e,n){var r=n(7),i=n(53),o=String.fromCharCode,a=String.fromCodePoint;r(r.S+r.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(t){for(var e,n=[],r=arguments.length,a=0;r>a;){if(e=+arguments[a++],i(e,1114111)!==e)throw RangeError(e+" is not a valid code point");n.push(e<65536?o(e):o(55296+((e-=65536)>>10),e%1024+56320))}return n.join("")}})},function(t,e,n){"use strict";var r=n(7),i=n(96)(!1);r(r.P,"String",{codePointAt:function(t){return i(this,t)}})},function(t,e,n){"use strict";n(153),n(91),n(151),n(293);var r=n(297),i=r.range,o=new Set([545].concat(i(564,591),i(686,687),i(751,767),i(848,863),i(880,883),i(886,889),i(891,893),i(895,899),[907,909,930,975],i(1015,1023),[1159,1231],i(1270,1271),i(1274,1279),i(1296,1328),i(1367,1368),[1376,1416],i(1419,1424),[1442,1466],i(1477,1487),i(1515,1519),i(1525,1547),i(1549,1562),i(1564,1566),[1568],i(1595,1599),i(1622,1631),i(1774,1775),[1791,1806],i(1837,1839),i(1867,1919),i(1970,2304),[2308],i(2362,2363),i(2382,2383),i(2389,2391),i(2417,2432),[2436],i(2445,2446),i(2449,2450),[2473,2481],i(2483,2485),i(2490,2491),[2493],i(2501,2502),i(2505,2506),i(2510,2518),i(2520,2523),[2526],i(2532,2533),i(2555,2561),i(2563,2564),i(2571,2574),i(2577,2578),[2601,2609,2612,2615],i(2618,2619),[2621],i(2627,2630),i(2633,2634),i(2638,2648),[2653],i(2655,2661),i(2677,2688),[2692,2700,2702,2706,2729,2737,2740],i(2746,2747),[2758,2762],i(2766,2767),i(2769,2783),i(2785,2789),i(2800,2816),[2820],i(2829,2830),i(2833,2834),[2857,2865],i(2868,2869),i(2874,2875),i(2884,2886),i(2889,2890),i(2894,2901),i(2904,2907),[2910],i(2914,2917),i(2929,2945),[2948],i(2955,2957),[2961],i(2966,2968),[2971,2973],i(2976,2978),i(2981,2983),i(2987,2989),[2998],i(3002,3005),i(3011,3013),[3017],i(3022,3030),i(3032,3046),i(3059,3072),[3076,3085,3089,3113,3124],i(3130,3133),[3141,3145],i(3150,3156),i(3159,3167),i(3170,3173),i(3184,3201),[3204,3213,3217,3241,3252],i(3258,3261),[3269,3273],i(3278,3284),i(3287,3293),[3295],i(3298,3301),i(3312,3329),[3332,3341,3345,3369],i(3386,3389),i(3396,3397),[3401],i(3406,3414),i(3416,3423),i(3426,3429),i(3440,3457),[3460],i(3479,3481),[3506,3516],i(3518,3519),i(3527,3529),i(3531,3534),[3541,3543],i(3552,3569),i(3573,3584),i(3643,3646),i(3676,3712),[3715],i(3717,3718),[3721],i(3723,3724),i(3726,3731),[3736,3744,3748,3750],i(3752,3753),[3756,3770],i(3774,3775),[3781,3783],i(3790,3791),i(3802,3803),i(3806,3839),[3912],i(3947,3952),i(3980,3983),[3992,4029],i(4045,4046),i(4048,4095),[4130,4136,4139],i(4147,4149),i(4154,4159),i(4186,4255),i(4294,4303),i(4345,4346),i(4348,4351),i(4442,4446),i(4515,4519),i(4602,4607),[4615,4679,4681],i(4686,4687),[4695,4697],i(4702,4703),[4743,4745],i(4750,4751),[4783,4785],i(4790,4791),[4799,4801],i(4806,4807),[4815,4823,4847,4879,4881],i(4886,4887),[4895,4935],i(4955,4960),i(4989,5023),i(5109,5120),i(5751,5759),i(5789,5791),i(5873,5887),[5901],i(5909,5919),i(5943,5951),i(5972,5983),[5997,6001],i(6004,6015),i(6109,6111),i(6122,6143),[6159],i(6170,6175),i(6264,6271),i(6314,7679),i(7836,7839),i(7930,7935),i(7958,7959),i(7966,7967),i(8006,8007),i(8014,8015),[8024,8026,8028,8030],i(8062,8063),[8117,8133],i(8148,8149),[8156],i(8176,8177),[8181,8191],i(8275,8278),i(8280,8286),i(8292,8297),i(8306,8307),i(8335,8351),i(8370,8399),i(8427,8447),i(8507,8508),i(8524,8530),i(8580,8591),i(9167,9215),i(9255,9279),i(9291,9311),[9471],i(9748,9749),[9752],i(9854,9855),i(9866,9984),[9989],i(9994,9995),[10024,10060,10062],i(10067,10069),[10071],i(10079,10080),i(10133,10135),[10160],i(10175,10191),i(10220,10223),i(11008,11903),[11930],i(12020,12031),i(12246,12271),i(12284,12287),[12352],i(12439,12440),i(12544,12548),i(12589,12592),[12687],i(12728,12783),i(12829,12831),i(12868,12880),i(12924,12926),i(13004,13007),[13055],i(13175,13178),i(13278,13279),[13311],i(19894,19967),i(40870,40959),i(42125,42127),i(42183,44031),i(55204,55295),i(64046,64047),i(64107,64255),i(64263,64274),i(64280,64284),[64311,64317,64319,64322,64325],i(64434,64466),i(64832,64847),i(64912,64913),i(64968,64975),i(65021,65023),i(65040,65055),i(65060,65071),i(65095,65096),[65107,65127],i(65132,65135),[65141],i(65277,65278),[65280],i(65471,65473),i(65480,65481),i(65488,65489),i(65496,65497),i(65501,65503),[65511],i(65519,65528),i(65536,66303),[66335],i(66340,66351),i(66379,66559),i(66598,66599),i(66638,118783),i(119030,119039),i(119079,119081),i(119262,119807),[119893,119965],i(119968,119969),i(119971,119972),i(119975,119976),[119981,119994,119996,120001,120004,120070],i(120075,120076),[120085,120093,120122,120127,120133],i(120135,120137),[120145],i(120484,120487),i(120778,120781),i(120832,131069),i(173783,194559),i(195102,196605),i(196608,262141),i(262144,327677),i(327680,393213),i(393216,458749),i(458752,524285),i(524288,589821),i(589824,655357),i(655360,720893),i(720896,786429),i(786432,851965),i(851968,917501),[917504],i(917506,917535),i(917632,983037))),a=new Set([173,847,6150,6155,6156,6157,8203,8204,8205,8288,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279]),s=new Set([160,5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8239,8287,12288]),u=new Set([].concat(s,i(0,31),[127],i(128,159),[1757,1807,6158,8204,8205,8232,8233,8288,8289,8290,8291],i(8298,8303),[65279],i(65529,65532),i(119155,119162),i(57344,63743),i(983040,1048573),i(1048576,1114109),i(64976,65007),i(65534,65535),i(131070,131071),i(196606,196607),i(262142,262143),i(327678,327679),i(393214,393215),i(458750,458751),i(524286,524287),i(589822,589823),i(655358,655359),i(720894,720895),i(786430,786431),i(851966,851967),i(917502,917503),i(983038,983039),i(1114110,1114111),i(55296,57343),[65529,65530,65531,65532,65533],i(12272,12283),[832,833,8206,8207,8234,8235,8236,8237,8238,8298,8299,8300,8301,8302,8303,917505],i(917536,917631))),l=new Set([1470,1472,1475].concat(i(1488,1514),i(1520,1524),[1563,1567],i(1569,1594),i(1600,1610),i(1645,1647),i(1649,1749),[1757],i(1765,1766),i(1786,1790),i(1792,1805),[1808],i(1810,1836),i(1920,1957),[1969,8207,64285],i(64287,64296),i(64298,64310),i(64312,64316),[64318],i(64320,64321),i(64323,64324),i(64326,64433),i(64467,64829),i(64848,64911),i(64914,64967),i(65008,65020),i(65136,65140),i(65142,65276))),c=new Set([].concat(i(65,90),i(97,122),[170,181,186],i(192,214),i(216,246),i(248,544),i(546,563),i(592,685),i(688,696),i(699,705),i(720,721),i(736,740),[750,890,902],i(904,906),[908],i(910,929),i(931,974),i(976,1013),i(1024,1154),i(1162,1230),i(1232,1269),i(1272,1273),i(1280,1295),i(1329,1366),i(1369,1375),i(1377,1415),[1417,2307],i(2309,2361),i(2365,2368),i(2377,2380),[2384],i(2392,2401),i(2404,2416),i(2434,2435),i(2437,2444),i(2447,2448),i(2451,2472),i(2474,2480),[2482],i(2486,2489),i(2494,2496),i(2503,2504),i(2507,2508),[2519],i(2524,2525),i(2527,2529),i(2534,2545),i(2548,2554),i(2565,2570),i(2575,2576),i(2579,2600),i(2602,2608),i(2610,2611),i(2613,2614),i(2616,2617),i(2622,2624),i(2649,2652),[2654],i(2662,2671),i(2674,2676),[2691],i(2693,2699),[2701],i(2703,2705),i(2707,2728),i(2730,2736),i(2738,2739),i(2741,2745),i(2749,2752),[2761],i(2763,2764),[2768,2784],i(2790,2799),i(2818,2819),i(2821,2828),i(2831,2832),i(2835,2856),i(2858,2864),i(2866,2867),i(2870,2873),i(2877,2878),[2880],i(2887,2888),i(2891,2892),[2903],i(2908,2909),i(2911,2913),i(2918,2928),[2947],i(2949,2954),i(2958,2960),i(2962,2965),i(2969,2970),[2972],i(2974,2975),i(2979,2980),i(2984,2986),i(2990,2997),i(2999,3001),i(3006,3007),i(3009,3010),i(3014,3016),i(3018,3020),[3031],i(3047,3058),i(3073,3075),i(3077,3084),i(3086,3088),i(3090,3112),i(3114,3123),i(3125,3129),i(3137,3140),i(3168,3169),i(3174,3183),i(3202,3203),i(3205,3212),i(3214,3216),i(3218,3240),i(3242,3251),i(3253,3257),[3262],i(3264,3268),i(3271,3272),i(3274,3275),i(3285,3286),[3294],i(3296,3297),i(3302,3311),i(3330,3331),i(3333,3340),i(3342,3344),i(3346,3368),i(3370,3385),i(3390,3392),i(3398,3400),i(3402,3404),[3415],i(3424,3425),i(3430,3439),i(3458,3459),i(3461,3478),i(3482,3505),i(3507,3515),[3517],i(3520,3526),i(3535,3537),i(3544,3551),i(3570,3572),i(3585,3632),i(3634,3635),i(3648,3654),i(3663,3675),i(3713,3714),[3716],i(3719,3720),[3722,3725],i(3732,3735),i(3737,3743),i(3745,3747),[3749,3751],i(3754,3755),i(3757,3760),i(3762,3763),[3773],i(3776,3780),[3782],i(3792,3801),i(3804,3805),i(3840,3863),i(3866,3892),[3894,3896],i(3902,3911),i(3913,3946),[3967,3973],i(3976,3979),i(4030,4037),i(4039,4044),[4047],i(4096,4129),i(4131,4135),i(4137,4138),[4140,4145,4152],i(4160,4183),i(4256,4293),i(4304,4344),[4347],i(4352,4441),i(4447,4514),i(4520,4601),i(4608,4614),i(4616,4678),[4680],i(4682,4685),i(4688,4694),[4696],i(4698,4701),i(4704,4742),[4744],i(4746,4749),i(4752,4782),[4784],i(4786,4789),i(4792,4798),[4800],i(4802,4805),i(4808,4814),i(4816,4822),i(4824,4846),i(4848,4878),[4880],i(4882,4885),i(4888,4894),i(4896,4934),i(4936,4954),i(4961,4988),i(5024,5108),i(5121,5750),i(5761,5786),i(5792,5872),i(5888,5900),i(5902,5905),i(5920,5937),i(5941,5942),i(5952,5969),i(5984,5996),i(5998,6e3),i(6016,6070),i(6078,6085),i(6087,6088),i(6100,6106),[6108],i(6112,6121),i(6160,6169),i(6176,6263),i(6272,6312),i(7680,7835),i(7840,7929),i(7936,7957),i(7960,7965),i(7968,8005),i(8008,8013),i(8016,8023),[8025,8027,8029],i(8031,8061),i(8064,8116),i(8118,8124),[8126],i(8130,8132),i(8134,8140),i(8144,8147),i(8150,8155),i(8160,8172),i(8178,8180),i(8182,8188),[8206,8305,8319,8450,8455],i(8458,8467),[8469],i(8473,8477),[8484,8486,8488],i(8490,8493),i(8495,8497),i(8499,8505),i(8509,8511),i(8517,8521),i(8544,8579),i(9014,9082),[9109],i(9372,9449),i(12293,12295),i(12321,12329),i(12337,12341),i(12344,12348),i(12353,12438),i(12445,12447),i(12449,12538),i(12540,12543),i(12549,12588),i(12593,12686),i(12688,12727),i(12784,12828),i(12832,12867),i(12896,12923),i(12927,12976),i(12992,13003),i(13008,13054),i(13056,13174),i(13179,13277),i(13280,13310),i(13312,19893),i(19968,40869),i(40960,42124),i(44032,55203),i(55296,64045),i(64048,64106),i(64256,64262),i(64275,64279),i(65313,65338),i(65345,65370),i(65382,65470),i(65474,65479),i(65482,65487),i(65490,65495),i(65498,65500),i(66304,66334),i(66336,66339),i(66352,66378),i(66560,66597),i(66600,66637),i(118784,119029),i(119040,119078),i(119082,119142),i(119146,119154),i(119171,119172),i(119180,119209),i(119214,119261),i(119808,119892),i(119894,119964),i(119966,119967),[119970],i(119973,119974),i(119977,119980),i(119982,119993),[119995],i(119997,12e4),i(120002,120003),i(120005,120069),i(120071,120074),i(120077,120084),i(120086,120092),i(120094,120121),i(120123,120126),i(120128,120132),[120134],i(120138,120144),i(120146,120483),i(120488,120777),i(131072,173782),i(194560,195101),i(983040,1048573),i(1048576,1114109)));t.exports={unassigned_code_points:o,commonly_mapped_to_nothing:a,non_ASCII_space_characters:s,prohibited_characters:u,bidirectional_r_al:l,bidirectional_l:c}},function(t,e,n){"use strict";var r=n(294),i=n(168);t.exports=n(295)("Set",function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}},{add:function(t){return r.def(i(this,"Set"),t=0===t?0:t,t)}},r)},function(t,e,n){"use strict";var r=n(9).f,i=n(67),o=n(64),a=n(30),s=n(65),u=n(167),l=n(92),c=n(147),f=n(148),h=n(11),d=n(101).fastKey,p=n(168),g=h?"_s":"size",v=function(t,e){var n,r=d(e);if("F"!==r)return t._i[r];for(n=t._f;n;n=n.n)if(n.k==e)return n};t.exports={getConstructor:function(t,e,n,l){var c=t(function(t,r){s(t,c,e,"_i"),t._t=e,t._i=i(null),t._f=void 0,t._l=void 0,t[g]=0,void 0!=r&&u(r,n,t[l],t)});return o(c.prototype,{clear:function(){for(var t=p(this,e),n=t._i,r=t._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];t._f=t._l=void 0,t[g]=0},delete:function(t){var n=p(this,e),r=v(n,t);if(r){var i=r.n,o=r.p;delete n._i[r.i],r.r=!0,o&&(o.n=i),i&&(i.p=o),n._f==r&&(n._f=i),n._l==r&&(n._l=o),n[g]--}return!!r},forEach:function(t){p(this,e);for(var n,r=a(t,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(t){return!!v(p(this,e),t)}}),h&&r(c.prototype,"size",{get:function(){return p(this,e)[g]}}),c},def:function(t,e,n){var r,i,o=v(t,e);return o?o.v=n:(t._l=o={i:i=d(e,!0),k:e,v:n,p:r=t._l,n:void 0,r:!1},t._f||(t._f=o),r&&(r.n=o),t[g]++,"F"!==i&&(t._i[i]=o)),t},getEntry:v,setStrong:function(t,e,n){l(t,e,function(t,n){this._t=p(t,e),this._k=n,this._l=void 0},function(){for(var t=this,e=t._k,n=t._l;n&&n.r;)n=n.p;return t._t&&(t._l=n=n?n.n:t._t._f)?"keys"==e?c(0,n.k):"values"==e?c(0,n.v):c(0,[n.k,n.v]):(t._t=void 0,c(1))},n?"entries":"values",!n,!0),f(e)}}},function(t,e,n){"use strict";var r=n(8),i=n(7),o=n(23),a=n(64),s=n(101),u=n(167),l=n(65),c=n(13),f=n(14),h=n(93),d=n(54),p=n(296);t.exports=function(t,e,n,g,v,y){var b=r[t],m=b,w=v?"set":"add",x=m&&m.prototype,_={},k=function(t){var e=x[t];o(x,t,"delete"==t?function(t){return!(y&&!c(t))&&e.call(this,0===t?0:t)}:"has"==t?function(t){return!(y&&!c(t))&&e.call(this,0===t?0:t)}:"get"==t?function(t){return y&&!c(t)?void 0:e.call(this,0===t?0:t)}:"add"==t?function(t){return e.call(this,0===t?0:t),this}:function(t,n){return e.call(this,0===t?0:t,n),this})};if("function"==typeof m&&(y||x.forEach&&!f(function(){(new m).entries().next()}))){var S=new m,C=S[w](y?{}:-0,1)!=S,A=f(function(){S.has(1)}),P=h(function(t){new m(t)}),E=!y&&f(function(){for(var t=new m,e=5;e--;)t[w](e,e);return!t.has(-0)});P||(m=e(function(e,n){l(e,m,t);var r=p(new b,e,m);return void 0!=n&&u(n,v,r[w],r),r}),m.prototype=x,x.constructor=m),(A||E)&&(k("delete"),k("has"),v&&k("get")),(E||C)&&k(w),y&&x.clear&&delete x.clear}else m=g.getConstructor(e,t,v,w),a(m.prototype,n),s.NEED=!0;return d(m,t),_[t]=m,i(i.G+i.W+i.F*(m!=b),_),y||g.setStrong(m,t,v),m}},function(t,e,n){var r=n(13),i=n(154).set;t.exports=function(t,e,n){var o,a=e.constructor;return a!==n&&"function"==typeof a&&(o=a.prototype)!==n.prototype&&r(o)&&i&&i(t,o),t}},function(t,e,n){"use strict";function r(t,e){for(var n=new Array(e-t+1),r=0;r<n.length;++r)n[r]=t+r;return n}t.exports={range:r}},function(t,e,n){"use strict";(function(e,r){function i(t){return t&&"object"==typeof t&&"default"in t?t.default:t}function o(t,e,n){if(n.get){var r=n.get;n.get=function(){var t=r.call(this);return ut(this,e,{value:t}),t}}else if("function"==typeof n.value){var i=n.value;return{get:function(){function t(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];var o=e.length>0?e[0]:"value";if(n.has(o))return n.get(o);var a=i.apply(this,e);return n.set(o,a),a}var n=new ft;return ut(this,e,{value:t}),t}}}}function a(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return 1===t&&qt[n]?qt[n]:Vt[t][e]}function s(t){var e=new nt.Struct({lookupType:nt.uint16,flags:Te,subTableCount:nt.uint16,subTables:new nt.Array(new nt.Pointer(nt.uint16,t),"subTableCount"),markFilteringSet:new nt.Optional(nt.uint16,function(t){return t.flags.flags.useMarkFilteringSet})});return new nt.LazyArray(new nt.Pointer(nt.uint16,e),nt.uint16)}function u(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:nt.uint16,n=yt({newState:nt.uint16,flags:nt.uint16},t),r=new nt.Struct(n),i=new gi(new nt.Array(nt.uint16,function(t){return t.nClasses}));return new nt.Struct({nClasses:nt.uint32,classTable:new nt.Pointer(nt.uint32,new vi(e)),stateArray:new nt.Pointer(nt.uint32,i),entryTable:new nt.Pointer(nt.uint32,new gi(r))})}function l(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:nt.uint16,new nt.Struct({version:function(){return 8},firstGlyph:nt.uint16,values:new nt.Array(nt.uint8,nt.uint16)})),n=yt({newStateOffset:nt.uint16,newState:function(t){return(t.newStateOffset-(t.parent.stateArray.base-t.parent._startOffset))/t.parent.nClasses},flags:nt.uint16},t),r=new nt.Struct(n),i=new gi(new nt.Array(nt.uint8,function(t){return t.nClasses}));return new nt.Struct({nClasses:nt.uint16,classTable:new nt.Pointer(nt.uint16,e),stateArray:new nt.Pointer(nt.uint16,i),entryTable:new nt.Pointer(nt.uint16,new gi(r))})}function c(t,e){for(var n=0,r=t.length-1;n<=r;){var i=n+r>>1,o=e(t[i]);if(o<0)r=i-1;else{if(!(o>0))return i;n=i+1}}return-1}function f(t,e){for(var n=[];t<e;)n.push(t++);return n}function h(t,e,n,r,i){var o={};return Object.keys(r).forEach(function(t){o[t]=r[t]}),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=n.slice().reverse().reduce(function(n,r){return r(t,e,n)||n},o),i&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(i):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(t,e,o),o=null),o}function d(t){return io[t]}function p(t){for(var e=t.length,n=0;n<e;){var r=t.charCodeAt(n++);if(55296<=r&&r<=56319&&n<e){var i=t.charCodeAt(n);56320<=i&&i<=57343&&(n++,r=((1023&r)<<10)+(1023&i)+65536)}var o=xt.getScript(r);if("Common"!==o&&"Inherited"!==o&&"Unknown"!==o)return ro[o]}return ro.Unknown}function g(t){for(var e=0;e<t.length;e++){var n=t[e],r=xt.getScript(n);if("Common"!==r&&"Inherited"!==r&&"Unknown"!==r)return ro[r]}return ro.Unknown}function v(t){return ho[t]?"rtl":"ltr"}function y(t){var e={};for(var n in t){var r=void 0;(r=bo[n])&&(null==e[r[0]]&&(e[r[0]]={}),e[r[0]][r[1]]=t[n])}return e}function b(t){var e=t[0],n=t[1];if(isNaN(e))var r=vo[e]&&vo[e].code;else var r=e;if(isNaN(n))var i=vo[e]&&vo[e][n];else var i=n;return[r,i]}function m(t){var e={};if(Array.isArray(t))for(var n=0;n<t.length;n++){var r=void 0,i=b(t[n]);(r=wo[i[0]]&&wo[i[0]][i[1]])&&(e[r]=!0)}else if("object"===(void 0===t?"undefined":at(t)))for(var o in t){var a=t[o];for(var s in a){var u=void 0,l=b([o,s]);a[s]&&(u=wo[l[0]]&&wo[l[0]][l[1]])&&(e[u]=!0)}}return st(e)}function w(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=t.splice(n[0]-(n[1]-1),n[1]);i&&o.reverse();var a=t.splice.apply(t,[e[0],e[1]].concat(o));return r&&a.reverse(),t.splice.apply(t,[n[0]-(e[1]-1),0].concat(a)),t}function x(t,e,n,r){switch(e){case 0:return t;case 1:return w(t,[n,1],[r,0]);case 2:return w(t,[n,0],[r,1]);case 3:return w(t,[n,1],[r,1]);case 4:return w(t,[n,2],[r,0]);case 5:return w(t,[n,2],[r,0],!0,!1);case 6:return w(t,[n,0],[r,2]);case 7:return w(t,[n,0],[r,2],!1,!0);case 8:return w(t,[n,1],[r,2]);case 9:return w(t,[n,1],[r,2],!1,!0);case 10:return w(t,[n,2],[r,1]);case 11:return w(t,[n,2],[r,1],!0,!1);case 12:return w(t,[n,2],[r,2]);case 13:return w(t,[n,2],[r,2],!0,!1);case 14:return w(t,[n,2],[r,2],!1,!0);case 15:return w(t,[n,2],[r,2],!0,!0);default:throw new Error("Unknown verb: "+e)}}function _(t){var e=Ho.get(t);if(e)return e-1;var n=xt.getCategory(t);return"Mn"===n||"Me"===n||"Cf"===n?qo.Transparent:qo.Non_Joining}function k(t){return da(t)?ka:pa(t)?Sa:ga(t)?Ca:ba(t)?Aa:ya(t)?Pa:va(t)?Ea:_a}function S(t,e,n){return new ta(t,t.glyphForCodePoint(e).id,[e],n)}function C(t,e,n){var r=t[e],i=r.codePoints[0],o=i-na,a=aa+o%ua;o=o/ua|0;var s=ia+o/sa|0,u=oa+o%sa;if(!n.hasGlyphForCodePoint(s)||!n.hasGlyphForCodePoint(u)||a!==aa&&!n.hasGlyphForCodePoint(a))return e;var l=S(n,s,r.features);l.features.ljmo=!0;var c=S(n,u,r.features);c.features.vjmo=!0;var f=[l,c];if(a>aa){var h=S(n,a,r.features);h.features.tjmo=!0,f.push(h)}return t.splice.apply(t,[e,1].concat(f)),e+f.length-1}function A(t,e,n){var r=t[e],i=t[e].codePoints[0],o=k(i),a=t[e-1].codePoints[0],s=k(a),u=void 0,l=void 0,c=void 0,f=void 0;if(s===Aa&&o===Ca)u=a,f=r;else{o===Sa?(l=t[e-1],c=r):(l=t[e-2],c=t[e-1],f=r);var h=l.codePoints[0],d=c.codePoints[0];ma(h)&&wa(d)&&(u=na+((h-ia)*sa+(d-oa))*ua)}var p=f&&f.codePoints[0]||aa;if(null!=u&&(p===aa||xa(p))){var g=u+(p-aa);if(n.hasGlyphForCodePoint(g)){var v=s===Sa?3:2;return t.splice(e-v+1,v,S(n,g,r.features)),e-v+1}}return l&&(l.features.ljmo=!0),c&&(c.features.vjmo=!0),f&&(f.features.tjmo=!0),s===Aa?(C(t,e-1,n),e+1):e}function P(t){switch(k(t)){case Aa:case Pa:return 1;case Sa:return 2;case Ca:return 3}}function E(t,e,n){var r=t[e],i=t[e].codePoints[0];if(0!==n.glyphForCodePoint(i).advanceWidth){var o=t[e-1].codePoints[0],a=P(o);return t.splice(e,1),t.splice(e-a,0,r)}}function O(t,e,n){var r=t[e],i=t[e].codePoints[0];if(n.hasGlyphForCodePoint(ha)){var o=S(n,ha,r.features),a=0===n.glyphForCodePoint(i).advanceWidth?e:e+1;t.splice(a,0,o),e++}return e}function T(t){return Qa.get(t.codePoints[0])>>8}function I(t){return 1<<(255&Qa.get(t.codePoints[0]))}function B(t,e){for(var n=0,r=0,i=$a.match(e.map(T)),o=Array.isArray(i),a=0,i=o?i:it(i);;){var s;if(o){if(a>=i.length)break;s=i[a++]}else{if(a=i.next(),a.done)break;s=a.value}var u=s,l=u[0],c=u[1],f=u[2];if(l>r){++n;for(var h=r;h<l;h++)e[h].shaperInfo=new es(Ha.X,Va.End,"non_indic_cluster",n)}++n;for(var d=l;d<=c;d++)e[d].shaperInfo=new es(1<<T(e[d]),I(e[d]),f[0],n);r=c+1}if(r<e.length){++n;for(var p=r;p<e.length;p++)e[p].shaperInfo=new es(Ha.X,Va.End,"non_indic_cluster",n)}}function L(t){return t.shaperInfo.category&qa}function R(t){return t.shaperInfo.category&Za}function M(t){return t.shaperInfo.category&Ya}function F(t,e){for(var n=t,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o,a;if(r){if(i>=n.length)break;a=n[i++]}else{if(i=n.next(),i.done)break;a=i.value}a.features=(o={},o[e]=!0,o)}return t[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([e],t),1===t.length}function D(t,e,n){var r=[n,e,n];return F(r.slice(0,2),"blwf")||F(r.slice(1,3),"blwf")?Va.Below_C:F(r.slice(0,2),"pstf")||F(r.slice(1,3),"pstf")?Va.Post_C:F(r.slice(0,2),"pref")||F(r.slice(1,3),"pref")?Va.Post_C:Va.Base_C}function z(t,e,n){var r=n.indicConfig,i=t._layoutEngine.engine.GSUBProcessor.features,o=t.glyphForCodePoint(9676).id,a=t.glyphForCodePoint(r.virama).id;if(a)for(var s=new ta(t,a,[r.virama]),u=0;u<e.length;u++)e[u].shaperInfo.position===Va.Base_C&&(e[u].shaperInfo.position=D(t,e[u].copy(),s));for(var l=0,c=W(e,0);l<e.length;l=c,c=W(e,l)){var f=e[l].shaperInfo,h=(f.category,f.syllableType);if("symbol_cluster"!==h&&"non_indic_cluster"!==h){if("broken_cluster"===h&&o){var d=new ta(t,o,[9676]);d.shaperInfo=new es(1<<T(d),I(d),e[l].shaperInfo.syllableType,e[l].shaperInfo.syllable);for(var p=l;p<c&&e[p].shaperInfo.category===Ha.Repha;)p++;e.splice(p++,0,d),c++}var g=c,v=l,y=!1;if(r.rephPos!==Va.Ra_To_Become_Reph&&i.rphf&&l+3<=c&&("Implicit"===r.rephMode&&!R(e[l+2])||"Explicit"===r.rephMode&&e[l+2].shaperInfo.category===Ha.ZWJ)){var b=[e[l].copy(),e[l+1].copy(),e[l+2].copy()];if(F(b.slice(0,2),"rphf")||"Explicit"===r.rephMode&&F(b,"rphf")){for(v+=2;v<c&&R(e[v]);)v++;g=l,y=!0}}else if("Log_Repha"===r.rephMode&&e[l].shaperInfo.category===Ha.Repha){for(v++;v<c&&R(e[v]);)v++;g=l,y=!0}switch(r.basePos){case"Last":var m=c,w=!1;do{var x=e[--m].shaperInfo;if(L(e[m])){if(x.position!==Va.Below_C&&(x.position!==Va.Post_C||w)){g=m;break}x.position===Va.Below_C&&(w=!0),g=m}else if(l<m&&x.category===Ha.ZWJ&&e[m-1].shaperInfo.category===Ha.H)break}while(m>v);break;case"First":g=l;for(var _=g+1;_<c;_++)L(e[_])&&(e[_].shaperInfo.position=Va.Below_C)}y&&g===l&&v-g<=2&&(y=!1);for(var k=l;k<g;k++){var S=e[k].shaperInfo;S.position=Math.min(Va.Pre_C,S.position)}g<c&&(e[g].shaperInfo.position=Va.Base_C);for(var C=g+1;C<c;C++)if(e[C].shaperInfo.category===Ha.M){for(var A=C+1;A<c;A++)if(L(e[A])){e[A].shaperInfo.position=Va.Final_C;break}break}if(y&&(e[l].shaperInfo.position=Va.Ra_To_Become_Reph),n.isOldSpec)for(var P="Malayalam"!==n.unicodeScript,E=g+1;E<c;E++)if(e[E].shaperInfo.category===Ha.H){var O=void 0;for(O=c-1;O>E&&!(L(e[O])||P&&e[O].shaperInfo.category===Ha.H);O--);if(e[O].shaperInfo.category!==Ha.H&&O>E){var B=e[E];e.splice.apply(e,[E,0].concat(e.splice(E+1,O-E))),e[O]=B}break}for(var M=Va.Start,z=l;z<c;z++){var N=e[z].shaperInfo;if(N.category&(Za|Ha.N|Ha.RS|Ha.CM|Ya&N.category)){if(N.position=M,N.category===Ha.H&&N.position===Va.Pre_M)for(var U=z;U>l;U--)if(e[U-1].shaperInfo.position!==Va.Pre_M){N.position=e[U-1].shaperInfo.position;break}}else N.position!==Va.SMVD&&(M=N.position)}for(var j=g,G=g+1;G<c;G++)if(L(e[G])){for(var H=j+1;H<G;H++)e[H].shaperInfo.position<Va.SMVD&&(e[H].shaperInfo.position=e[G].shaperInfo.position);j=G}else e[G].shaperInfo.category===Ha.M&&(j=G);var V=e.slice(l,c);V.sort(function(t,e){return t.shaperInfo.position-e.shaperInfo.position}),e.splice.apply(e,[l,V.length].concat(V));for(var q=l;q<c;q++)if(e[q].shaperInfo.position===Va.Base_C){g=q;break}for(var Z=l;Z<c&&e[Z].shaperInfo.position===Va.Ra_To_Become_Reph;Z++)e[Z].features.rphf=!0;for(var Y=!n.isOldSpec&&"Pre_And_Post"===r.blwfMode,X=l;X<g;X++)e[X].features.half=!0,Y&&(e[X].features.blwf=!0);for(var K=g+1;K<c;K++)e[K].features.abvf=!0,e[K].features.pstf=!0,e[K].features.blwf=!0;if(n.isOldSpec&&"Devanagari"===n.unicodeScript)for(var J=l;J+1<g;J++)e[J].shaperInfo.category!==Ha.Ra||e[J+1].shaperInfo.category!==Ha.H||J+1!==g&&e[J+2].shaperInfo.category!==Ha.ZWJ||(e[J].features.blwf=!0,e[J+1].features.blwf=!0);if(i.pref&&g+2<c)for(var Q=g+1;Q+2-1<c;Q++){var $=[e[Q].copy(),e[Q+1].copy()];if(F($,"pref")){for(var tt=0;tt<2;tt++)e[Q++].features.pref=!0;if(i.cfar)for(;Q<c;Q++)e[Q].features.cfar=!0;break}}for(var et=l+1;et<c;et++)if(R(e[et])){var nt=e[et].shaperInfo.category===Ha.ZWNJ,rt=et;do{rt--,nt&&delete e[rt].features.half}while(rt>l&&!L(e[rt]))}}}}function N(t,e,n){for(var r=n.indicConfig,i=t._layoutEngine.engine.GSUBProcessor.features,o=0,a=W(e,0);o<e.length;o=a,a=W(e,o)){for(var s=!!i.pref,u=o;u<a;u++)if(e[u].shaperInfo.position>=Va.Base_C){if(s&&u+1<a)for(var l=u+1;l<a;l++)if(e[l].features.pref){if(!e[l].substituted||!e[l].isLigated||e[l].isMultiplied){for(u=l;u<a&&M(e[u]);)u++;e[u].shaperInfo.position=Va.BASE_C,s=!1}break}if("Malayalam"===n.unicodeScript)for(var c=u+1;c<a;c++){for(;c<a&&R(e[c]);)c++;if(c===a||!M(e[c]))break;for(c++;c<a&&R(e[c]);)c++;c<a&&L(e[c])&&e[c].shaperInfo.position===Va.Below_C&&(u=c,e[u].shaperInfo.position=Va.Base_C)}o<u&&e[u].shaperInfo.position>Va.Base_C&&u--;break}if(u===a&&o<u&&e[u-1].shaperInfo.category===Ha.ZWJ&&u--,u<a)for(;o<u&&e[u].shaperInfo.category&(Ha.N|Ya);)u--;if(o+1<a&&o<u){var f=u===a?u-2:u-1;if("Malayalam"!==n.unicodeScript&&"Tamil"!==n.unicodeScript){for(;f>o&&!(e[f].shaperInfo.category&(Ha.M|Ya));)f--;M(e[f])&&e[f].shaperInfo.position!==Va.Pre_M?f+1<a&&R(e[f+1])&&f++:f=o}if(o<f&&e[f].shaperInfo.position!==Va.Pre_M)for(var h=f;h>o;h--)if(e[h-1].shaperInfo.position===Va.Pre_M){var d=h-1;d<u&&u<=f&&u--;var p=e[d];e.splice.apply(e,[d,0].concat(e.splice(d+1,f-d))),e[f]=p,f--}}if(o+1<a&&e[o].shaperInfo.position===Va.Ra_To_Become_Reph&&e[o].shaperInfo.category===Ha.Repha!==(e[o].isLigated&&!e[o].isMultiplied)){var g=void 0,v=r.rephPos,y=!1;if(v!==Va.After_Post){for(g=o+1;g<u&&!M(e[g]);)g++;if(g<u&&M(e[g])&&(g+1<u&&R(e[g+1])&&g++,y=!0),!y&&v===Va.After_Main){for(g=u;g+1<a&&e[g+1].shaperInfo.position<=Va.After_Main;)g++;y=g<a}if(!y&&v===Va.After_Sub){for(g=u;g+1<a&&!(e[g+1].shaperInfo.position&(Va.Post_C|Va.After_Post|Va.SMVD));)g++;y=g<a}}if(!y){for(g=o+1;g<u&&!M(e[g]);)g++;g<u&&M(e[g])&&(g+1<u&&R(e[g+1])&&g++,y=!0)}if(!y){for(g=a-1;g>o&&e[g].shaperInfo.position===Va.SMVD;)g--;if(M(e[g]))for(var b=u+1;b<g;b++)e[b].shaperInfo.category===Ha.M&&g--}var m=e[o];e.splice.apply(e,[o,0].concat(e.splice(o+1,g-o))),e[g]=m,o<u&&u<=g&&u--}if(s&&u+1<a)for(var w=u+1;w<a;w++)if(e[w].features.pref){if(e[w].isLigated&&!e[w].isMultiplied){var x=u;if("Malayalam"!==n.unicodeScript&&"Tamil"!==n.unicodeScript){for(;x>o&&!(e[x-1].shaperInfo.category&(Ha.M|Ya));)x--;if(x>o&&e[x-1].shaperInfo.category===Ha.M)for(var _=w,k=u+1;k<_;k++)if(e[k].shaperInfo.category===Ha.M){x--;break}}x>o&&M(e[x-1])&&x<a&&R(e[x])&&x++;var S=w,C=e[S];e.splice.apply(e,[x+1,0].concat(e.splice(x,S-x))),e[x]=C,x<=u&&u<S&&u++}break}e[o].shaperInfo.position!==Va.Pre_M||o&&/Cf|Mn/.test(xt.getCategory(e[o-1].codePoints[0]))||(e[o].features.init=!0)}}function W(t,e){if(e>=t.length)return e;for(var n=t[e].shaperInfo.syllable;++e<t.length&&t[e].shaperInfo.syllable===n;);return e}function U(t){return is.get(t.codePoints[0])}function j(t,e){for(var n=0,r=os.match(e.map(U)),i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a,u=s[0],l=s[1],c=s[2];++n;for(var f=u;f<=l;f++)e[f].shaperInfo=new ss(ns[U(e[f])],c[0],n);for(var h="R"===e[u].shaperInfo.category?1:Math.min(3,l-u),d=u;d<u+h;d++)e[d].features.rphf=!0}}function G(t,e){for(var n=e,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}o.substituted=!1}}function H(t,e){for(var n=e,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o;a.substituted&&a.features.rphf&&(a.shaperInfo.category="R")}}function V(t,e){for(var n=e,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o;a.substituted&&(a.shaperInfo.category="VPre")}}function q(t,e){for(var n=t.glyphForCodePoint(9676).id,r=0,i=Z(e,0);r<e.length;r=i,i=Z(e,r)){var o=void 0,a=void 0,s=e[r].shaperInfo,u=s.syllableType;if("virama_terminated_cluster"===u||"standard_cluster"===u||"broken_cluster"===u){if("broken_cluster"===u&&n){var l=new ta(t,n,[9676]);for(l.shaperInfo=s,o=r;o<i&&"R"===e[o].shaperInfo.category;o++);e.splice(++o,0,l),i++}if("R"===s.category&&i-r>1)for(o=r+1;o<i;o++)if(s=e[o].shaperInfo,X(s)||Y(e[o])){Y(e[o])&&o--,e.splice.apply(e,[r,0].concat(e.splice(r+1,o-r),[e[o]]));break}for(o=r,a=i;o<i;o++)s=e[o].shaperInfo,X(s)||Y(e[o])?a=Y(e[o])?o+1:o:("VPre"===s.category||"VMPre"===s.category)&&a<o&&e.splice.apply(e,[a,1,e[o]].concat(e.splice(a,o-a)))}}}function Z(t,e){if(e>=t.length)return e;for(var n=t[e].shaperInfo.syllable;++e<t.length&&t[e].shaperInfo.syllable===n;);return e}function Y(t){return"H"===t.shaperInfo.category&&!t.isLigated}function X(t){return"B"===t.category||"GB"===t.category}function K(t){Array.isArray(t)||(t=[t]);for(var e=t,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i,a=us[o];if(a)return a}return Go}function J(t,e,n,r,i){var o={};return Object.keys(r).forEach(function(t){o[t]=r[t]}),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=n.slice().reverse().reduce(function(n,r){return r(t,e,n)||n},o),i&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(i):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(t,e,o),o=null),o}function Q(t,e,n,r,i){var o={};return Object.keys(r).forEach(function(t){o[t]=r[t]}),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=n.slice().reverse().reduce(function(n,r){return r(t,e,n)||n},o),i&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(i):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(t,e,o),o=null),o}function $(t){var e=t.readUInt8();return e===Xs?t.readUInt16BE():e===Js?t.readUInt8()+Qs:e===Ks?t.readUInt8()+2*Qs:e}function tt(t,e){return 1&t?e:-e}function et(t,e,n){for(var r=void 0,i=r=0,o=[],a=0;a<n;a++){var s=0,u=0,l=t.readUInt8(),c=!(l>>7);if((l&=127)<10)s=0,u=tt(l,((14&l)<<7)+e.readUInt8());else if(l<20)s=tt(l,((l-10&14)<<7)+e.readUInt8()),u=0;else if(l<84){var f=l-20,h=e.readUInt8();s=tt(l,1+(48&f)+(h>>4)),u=tt(l>>1,1+((12&f)<<2)+(15&h))}else if(l<120){var f=l-84;s=tt(l,1+(f/12<<8)+e.readUInt8()),u=tt(l>>1,1+(f%12>>2<<8)+e.readUInt8())}else if(l<124){var h=e.readUInt8(),d=e.readUInt8();s=tt(l,(h<<4)+(d>>4)),u=tt(l>>1,((15&d)<<8)+e.readUInt8())}else s=tt(l,e.readUInt16BE()),u=tt(l>>1,e.readUInt16BE());i+=s,r+=u,o.push(new _s(c,!1,i,r))}return o}var nt=i(n(299)),rt=i(n(328)),it=i(n(118)),ot=i(n(340)),at=i(n(126)),st=i(n(351)),ut=i(n(131)),lt=i(n(184)),ct=i(n(185)),ft=i(n(356)),ht=i(n(367)),dt=i(n(368)),pt=n(26),gt=i(n(376)),vt=i(n(379)),yt=i(n(382)),bt=i(n(386)),mt=i(n(389)),wt=i(n(394)),xt=i(n(400)),_t=i(n(133)),kt=i(n(402)),St=i(n(411)),Ct=i(n(414)),At=i(n(195)),Pt=i(n(415)),Et={};Et.logErrors=!1;var Ot=[];Et.registerFormat=function(t){Ot.push(t)},Et.openSync=function(t,e){var r=n(50).readFileSync(t);return Et.create(r,e)},Et.open=function(t,e,r){"function"==typeof e&&(r=e,e=null),n(50).readFile(t,function(t,n){if(t)return r(t);try{var i=Et.create(n,e)}catch(t){return r(t)}return r(null,i)})},Et.create=function(t,e){for(var n=0;n<Ot.length;n++){var r=Ot[n];if(r.probe(t)){var i=new r(new nt.DecodeStream(t));return e?i.getFont(e):i}}throw new Error("Unknown font format")},Et.defaultLanguage="en",Et.setDefaultLanguage=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"en";Et.defaultLanguage=t};var Tt=new nt.Struct({firstCode:nt.uint16,entryCount:nt.uint16,idDelta:nt.int16,idRangeOffset:nt.uint16}),It=new nt.Struct({startCharCode:nt.uint32,endCharCode:nt.uint32,glyphID:nt.uint32}),Bt=new nt.Struct({startUnicodeValue:nt.uint24,additionalCount:nt.uint8}),Lt=new nt.Struct({unicodeValue:nt.uint24,glyphID:nt.uint16}),Rt=new nt.Array(Bt,nt.uint32),Mt=new nt.Array(Lt,nt.uint32),Ft=new nt.Struct({varSelector:nt.uint24,defaultUVS:new nt.Pointer(nt.uint32,Rt,{type:"parent"}),nonDefaultUVS:new nt.Pointer(nt.uint32,Mt,{type:"parent"})}),Dt=new nt.VersionedStruct(nt.uint16,{0:{length:nt.uint16,language:nt.uint16,codeMap:new nt.LazyArray(nt.uint8,256)},2:{length:nt.uint16,language:nt.uint16,subHeaderKeys:new nt.Array(nt.uint16,256),subHeaderCount:function(t){return Math.max.apply(Math,t.subHeaderKeys)},subHeaders:new nt.LazyArray(Tt,"subHeaderCount"),glyphIndexArray:new nt.LazyArray(nt.uint16,"subHeaderCount")},4:{length:nt.uint16,language:nt.uint16,segCountX2:nt.uint16,segCount:function(t){return t.segCountX2>>1},searchRange:nt.uint16,entrySelector:nt.uint16,rangeShift:nt.uint16,endCode:new nt.LazyArray(nt.uint16,"segCount"),reservedPad:new nt.Reserved(nt.uint16),startCode:new nt.LazyArray(nt.uint16,"segCount"),idDelta:new nt.LazyArray(nt.int16,"segCount"),idRangeOffset:new nt.LazyArray(nt.uint16,"segCount"),glyphIndexArray:new nt.LazyArray(nt.uint16,function(t){return(t.length-t._currentOffset)/2})},6:{length:nt.uint16,language:nt.uint16,firstCode:nt.uint16,entryCount:nt.uint16,glyphIndices:new nt.LazyArray(nt.uint16,"entryCount")},8:{reserved:new nt.Reserved(nt.uint16),length:nt.uint32,language:nt.uint16,is32:new nt.LazyArray(nt.uint8,8192),nGroups:nt.uint32,groups:new nt.LazyArray(It,"nGroups")},10:{reserved:new nt.Reserved(nt.uint16),length:nt.uint32,language:nt.uint32,firstCode:nt.uint32,entryCount:nt.uint32,glyphIndices:new nt.LazyArray(nt.uint16,"numChars")},12:{reserved:new nt.Reserved(nt.uint16),length:nt.uint32,language:nt.uint32,nGroups:nt.uint32,groups:new nt.LazyArray(It,"nGroups")},13:{reserved:new nt.Reserved(nt.uint16),length:nt.uint32,language:nt.uint32,nGroups:nt.uint32,groups:new nt.LazyArray(It,"nGroups")},14:{length:nt.uint32,numRecords:nt.uint32,varSelectors:new nt.LazyArray(Ft,"numRecords")}}),zt=new nt.Struct({platformID:nt.uint16,encodingID:nt.uint16,table:new nt.Pointer(nt.uint32,Dt,{type:"parent",lazy:!0})}),Nt=new nt.Struct({version:nt.uint16,numSubtables:nt.uint16,tables:new nt.Array(zt,"numSubtables")}),Wt=new nt.Struct({version:nt.int32,revision:nt.int32,checkSumAdjustment:nt.uint32,magicNumber:nt.uint32,flags:nt.uint16,unitsPerEm:nt.uint16,created:new nt.Array(nt.int32,2),modified:new nt.Array(nt.int32,2),xMin:nt.int16,yMin:nt.int16,xMax:nt.int16,yMax:nt.int16,macStyle:new nt.Bitfield(nt.uint16,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:nt.uint16,fontDirectionHint:nt.int16,indexToLocFormat:nt.int16,glyphDataFormat:nt.int16}),Ut=new nt.Struct({version:nt.int32,ascent:nt.int16,descent:nt.int16,lineGap:nt.int16,advanceWidthMax:nt.uint16,minLeftSideBearing:nt.int16,minRightSideBearing:nt.int16,xMaxExtent:nt.int16,caretSlopeRise:nt.int16,caretSlopeRun:nt.int16,caretOffset:nt.int16,reserved:new nt.Reserved(nt.int16,4),metricDataFormat:nt.int16,numberOfMetrics:nt.uint16}),jt=new nt.Struct({advance:nt.uint16,bearing:nt.int16}),Gt=new nt.Struct({metrics:new nt.LazyArray(jt,function(t){return t.parent.hhea.numberOfMetrics}),bearings:new nt.LazyArray(nt.int16,function(t){return t.parent.maxp.numGlyphs-t.parent.hhea.numberOfMetrics})}),Ht=new nt.Struct({version:nt.int32,numGlyphs:nt.uint16,maxPoints:nt.uint16,maxContours:nt.uint16,maxComponentPoints:nt.uint16,maxComponentContours:nt.uint16,maxZones:nt.uint16,maxTwilightPoints:nt.uint16,maxStorage:nt.uint16,maxFunctionDefs:nt.uint16,maxInstructionDefs:nt.uint16,maxStackElements:nt.uint16,maxSizeOfInstructions:nt.uint16,maxComponentElements:nt.uint16,maxComponentDepth:nt.uint16}),Vt=[["utf16be","utf16be","utf16be","utf16be","utf16be","utf16be"],["macroman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","macgreek","maccyrillic","symbol","Devanagari","Gurmukhi","Gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","macthai","Laotian","Georgian","Armenian","gb-2312-80","Tibetan","Mongolian","Geez","maccenteuro","Vietnamese","Sindhi"],["ascii"],["symbol","utf16be","shift-jis","gb18030","big5","wansung","johab",null,null,null,"utf16be"]],qt={15:"maciceland",17:"macturkish",18:"maccroatian",24:"maccenteuro",25:"maccenteuro",26:"maccenteuro",27:"maccenteuro",28:"maccenteuro",30:"maciceland",37:"macromania",38:"maccenteuro",39:"maccenteuro",40:"maccenteuro",143:"macinuit",146:"macgaelic"},Zt=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}],Yt=new nt.Struct({platformID:nt.uint16,encodingID:nt.uint16,languageID:nt.uint16,nameID:nt.uint16,length:nt.uint16,string:new nt.Pointer(nt.uint16,new nt.String("length",function(t){return a(t.platformID,t.encodingID,t.languageID)}),{type:"parent",relativeTo:"parent.stringOffset",allowNull:!1})}),Xt=new nt.Struct({length:nt.uint16,tag:new nt.Pointer(nt.uint16,new nt.String("length","utf16be"),{type:"parent",relativeTo:"stringOffset"})}),Kt=new nt.VersionedStruct(nt.uint16,{0:{count:nt.uint16,stringOffset:nt.uint16,records:new nt.Array(Yt,"count")},1:{count:nt.uint16,stringOffset:nt.uint16,records:new nt.Array(Yt,"count"),langTagCount:nt.uint16,langTags:new nt.Array(Xt,"langTagCount")}}),Jt=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];Kt.process=function(t){for(var e={},n=this.records,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o,s=Zt[a.platformID][a.languageID];null==s&&null!=this.langTags&&a.languageID>=32768&&(s=this.langTags[a.languageID-32768].tag),null==s&&(s=a.platformID+"-"+a.languageID);var u=a.nameID>=256?"fontFeatures":Jt[a.nameID]||a.nameID;null==e[u]&&(e[u]={});var l=e[u];a.nameID>=256&&(l=l[a.nameID]||(l[a.nameID]={})),"string"!=typeof a.string&&"string"==typeof l[s]||(l[s]=a.string)}this.records=e},Kt.preEncode=function(){if(!Array.isArray(this.records)){this.version=0;var t=[];for(var n in this.records){var r=this.records[n];"fontFeatures"!==n&&(t.push({platformID:3,encodingID:1,languageID:1033,nameID:Jt.indexOf(n),length:e.byteLength(r.en,"utf16le"),string:r.en}),"postscriptName"===n&&t.push({platformID:1,encodingID:0,languageID:0,nameID:Jt.indexOf(n),length:r.en.length,string:r.en}))}this.records=t,this.count=t.length,this.stringOffset=Kt.size(this,null,!1)}};var Qt=new nt.VersionedStruct(nt.uint16,{header:{xAvgCharWidth:nt.int16,usWeightClass:nt.uint16,usWidthClass:nt.uint16,fsType:new nt.Bitfield(nt.uint16,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:nt.int16,ySubscriptYSize:nt.int16,ySubscriptXOffset:nt.int16,ySubscriptYOffset:nt.int16,ySuperscriptXSize:nt.int16,ySuperscriptYSize:nt.int16,ySuperscriptXOffset:nt.int16,ySuperscriptYOffset:nt.int16,yStrikeoutSize:nt.int16,yStrikeoutPosition:nt.int16,sFamilyClass:nt.int16,panose:new nt.Array(nt.uint8,10),ulCharRange:new nt.Array(nt.uint32,4),vendorID:new nt.String(4),fsSelection:new nt.Bitfield(nt.uint16,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:nt.uint16,usLastCharIndex:nt.uint16},0:{},1:{typoAscender:nt.int16,typoDescender:nt.int16,typoLineGap:nt.int16,winAscent:nt.uint16,winDescent:nt.uint16,codePageRange:new nt.Array(nt.uint32,2)},2:{typoAscender:nt.int16,typoDescender:nt.int16,typoLineGap:nt.int16,winAscent:nt.uint16,winDescent:nt.uint16,codePageRange:new nt.Array(nt.uint32,2),xHeight:nt.int16,capHeight:nt.int16,defaultChar:nt.uint16,breakChar:nt.uint16,maxContent:nt.uint16},5:{typoAscender:nt.int16,typoDescender:nt.int16,typoLineGap:nt.int16,winAscent:nt.uint16,winDescent:nt.uint16,codePageRange:new nt.Array(nt.uint32,2),xHeight:nt.int16,capHeight:nt.int16,defaultChar:nt.uint16,breakChar:nt.uint16,maxContent:nt.uint16,usLowerOpticalPointSize:nt.uint16,usUpperOpticalPointSize:nt.uint16}}),$t=Qt.versions;$t[3]=$t[4]=$t[2];var te=new nt.VersionedStruct(nt.fixed32,{header:{italicAngle:nt.fixed32,underlinePosition:nt.int16,underlineThickness:nt.int16,isFixedPitch:nt.uint32,minMemType42:nt.uint32,maxMemType42:nt.uint32,minMemType1:nt.uint32,maxMemType1:nt.uint32},1:{},2:{numberOfGlyphs:nt.uint16,glyphNameIndex:new nt.Array(nt.uint16,"numberOfGlyphs"),names:new nt.Array(new nt.String(nt.uint8))},2.5:{numberOfGlyphs:nt.uint16,offsets:new nt.Array(nt.uint8,"numberOfGlyphs")},3:{},4:{map:new nt.Array(nt.uint32,function(t){return t.parent.maxp.numGlyphs})}}),ee=new nt.Struct({controlValues:new nt.Array(nt.int16)}),ne=new nt.Struct({instructions:new nt.Array(nt.uint8)}),re=new nt.VersionedStruct("head.indexToLocFormat",{0:{offsets:new nt.Array(nt.uint16)},1:{offsets:new nt.Array(nt.uint32)}});re.process=function(){if(0===this.version)for(var t=0;t<this.offsets.length;t++)this.offsets[t]<<=1},re.preEncode=function(){if(0===this.version)for(var t=0;t<this.offsets.length;t++)this.offsets[t]>>>=1};var ie,oe=new nt.Struct({controlValueProgram:new nt.Array(nt.uint8)}),ae=new nt.Array(new nt.Buffer),se=function(){function t(e){lt(this,t),this.type=e}return t.prototype.getCFFVersion=function(t){for(;t&&!t.hdrSize;)t=t.parent;return t?t.version:-1},t.prototype.decode=function(t,e){var n=this.getCFFVersion(e),r=n>=2?t.readUInt32BE():t.readUInt16BE();if(0===r)return[];var i=t.readUInt8(),o=void 0;if(1===i)o=nt.uint8;else if(2===i)o=nt.uint16;else if(3===i)o=nt.uint24;else{if(4!==i)throw new Error("Bad offset size in CFFIndex: "+i+" "+t.pos);o=nt.uint32}for(var a=[],s=t.pos+(r+1)*i-1,u=o.decode(t),l=0;l<r;l++){var c=o.decode(t);if(null!=this.type){var f=t.pos;t.pos=s+u,e.length=c-u,a.push(this.type.decode(t,e)),t.pos=f}else a.push({offset:s+u,length:c-u});u=c}return t.pos=s+u,a},t.prototype.size=function(t,e){var n=2;if(0===t.length)return n;for(var r=this.type||new nt.Buffer,i=1,o=0;o<t.length;o++){var a=t[o];i+=r.size(a,e)}var s=void 0;if(i<=255)s=nt.uint8;else if(i<=65535)s=nt.uint16;else if(i<=16777215)s=nt.uint24;else{if(!(i<=4294967295))throw new Error("Bad offset in CFFIndex");s=nt.uint32}return n+=1+s.size()*(t.length+1),n+=i-1,n},t.prototype.encode=function(t,e,n){if(t.writeUInt16BE(e.length),0!==e.length){for(var r=this.type||new nt.Buffer,i=[],o=1,a=e,s=Array.isArray(a),u=0,a=s?a:it(a);;){var l;if(s){if(u>=a.length)break;l=a[u++]}else{if(u=a.next(),u.done)break;l=u.value}var c=l,f=r.size(c,n);i.push(f),o+=f}var h=void 0;if(o<=255)h=nt.uint8;else if(o<=65535)h=nt.uint16;else if(o<=16777215)h=nt.uint24;else{if(!(o<=4294967295))throw new Error("Bad offset in CFFIndex");h=nt.uint32}t.writeUInt8(h.size()),o=1,h.encode(t,o);for(var d=i,p=Array.isArray(d),g=0,d=p?d:it(d);;){var v;if(p){if(g>=d.length)break;v=d[g++]}else{if(g=d.next(),g.done)break;v=g.value}o+=v,h.encode(t,o)}for(var y=e,b=Array.isArray(y),m=0,y=b?y:it(y);;){var w;if(b){if(m>=y.length)break;w=y[m++]}else{if(m=y.next(),m.done)break;w=m.value}var x=w;r.encode(t,x,n)}}},t}(),ue=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],le={".":10,E:11,"E-":12,"-":14},ce=function(){function t(){lt(this,t)}return t.decode=function(t,e){if(32<=e&&e<=246)return e-139;if(247<=e&&e<=250)return 256*(e-247)+t.readUInt8()+108;if(251<=e&&e<=254)return 256*-(e-251)-t.readUInt8()-108;if(28===e)return t.readInt16BE();if(29===e)return t.readInt32BE();if(30===e){for(var n="";;){var r=t.readUInt8(),i=r>>4;if(15===i)break;n+=ue[i];var o=15&r;if(15===o)break;n+=ue[o]}return parseFloat(n)}return null},t.size=function(t){if(t.forceLarge&&(t=32768),(0|t)!==t){var e=""+t;return 1+Math.ceil((e.length+1)/2)}return-107<=t&&t<=107?1:108<=t&&t<=1131||-1131<=t&&t<=-108?2:-32768<=t&&t<=32767?3:5},t.encode=function(t,e){var n=Number(e);if(e.forceLarge)return t.writeUInt8(29),t.writeInt32BE(n);if((0|n)===n)return-107<=n&&n<=107?t.writeUInt8(n+139):108<=n&&n<=1131?(n-=108,t.writeUInt8(247+(n>>8)),t.writeUInt8(255&n)):-1131<=n&&n<=-108?(n=-n-108,t.writeUInt8(251+(n>>8)),t.writeUInt8(255&n)):-32768<=n&&n<=32767?(t.writeUInt8(28),t.writeInt16BE(n)):(t.writeUInt8(29),t.writeInt32BE(n));t.writeUInt8(30);for(var r=""+n,i=0;i<r.length;i+=2){var o=r[i],a=le[o]||+o;if(i===r.length-1)var s=15;else var u=r[i+1],s=le[u]||+u;t.writeUInt8(a<<4|15&s)}return 15!==s?t.writeUInt8(240):void 0},t}(),fe=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];lt(this,t),this.ops=e,this.fields={};for(var n=e,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o,s=Array.isArray(a[0])?a[0][0]<<8|a[0][1]:a[0];this.fields[s]=a}}return t.prototype.decodeOperands=function(t,e,n,r){var i=this;if(Array.isArray(t))return r.map(function(r,o){return i.decodeOperands(t[o],e,n,[r])});if(null!=t.decode)return t.decode(e,n,r);switch(t){case"number":case"offset":case"sid":return r[0];case"boolean":return!!r[0];default:return r}},t.prototype.encodeOperands=function(t,e,n,r){var i=this;return Array.isArray(t)?r.map(function(r,o){return i.encodeOperands(t[o],e,n,r)[0]}):null!=t.encode?t.encode(e,r,n):"number"==typeof r?[r]:"boolean"==typeof r?[+r]:Array.isArray(r)?r:[r]},t.prototype.decode=function(t,e){var n=t.pos+e.length,r={},i=[];gt(r,{parent:{value:e},_startOffset:{value:t.pos}});for(var o in this.fields){var a=this.fields[o];r[a[1]]=a[3]}for(;t.pos<n;){var s=t.readUInt8();if(s<28){12===s&&(s=s<<8|t.readUInt8());var u=this.fields[s];if(!u)throw new Error("Unknown operator "+s);var l=this.decodeOperands(u[2],t,r,i);null!=l&&(l instanceof pt.PropertyDescriptor?ut(r,u[1],l):r[u[1]]=l),i=[]}else i.push(ce.decode(t,s))}return r},t.prototype.size=function(t,e){var n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r={parent:e,val:t,pointerSize:0,startOffset:e.startOffset||0},i=0;for(var o in this.fields){var a=this.fields[o],s=t[a[1]];if(null!=s&&!vt(s,a[3])){for(var u=this.encodeOperands(a[2],null,r,s),l=u,c=Array.isArray(l),f=0,l=c?l:it(l);;){var h;if(c){if(f>=l.length)break;h=l[f++]}else{if(f=l.next(),f.done)break;h=f.value}var d=h;i+=ce.size(d)}i+=(Array.isArray(a[0])?a[0]:[a[0]]).length}}return n&&(i+=r.pointerSize),i},t.prototype.encode=function(t,e,n){var r={pointers:[],startOffset:t.pos,parent:n,val:e,pointerSize:0};r.pointerOffset=t.pos+this.size(e,r,!1);for(var i=this.ops,o=Array.isArray(i),a=0,i=o?i:it(i);;){var s;if(o){if(a>=i.length)break;s=i[a++]}else{if(a=i.next(),a.done)break;s=a.value}var u=s,l=e[u[1]];if(null!=l&&!vt(l,u[3])){for(var c=this.encodeOperands(u[2],t,r,l),f=c,h=Array.isArray(f),d=0,f=h?f:it(f);;){var p;if(h){if(d>=f.length)break;p=f[d++]}else{if(d=f.next(),d.done)break;p=d.value}var g=p;ce.encode(t,g)}for(var v=Array.isArray(u[0])?u[0]:[u[0]],y=v,b=Array.isArray(y),m=0,y=b?y:it(y);;){var w;if(b){if(m>=y.length)break;w=y[m++]}else{if(m=y.next(),m.done)break;w=m.value}var x=w;t.writeUInt8(x)}}}for(var _=0;_<r.pointers.length;){var k=r.pointers[_++];k.type.encode(t,k.val,k.parent)}},t}(),he=function(t){function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lt(this,e),null==r.type&&(r.type="global"),ht(this,t.call(this,null,n,r))}return dt(e,t),e.prototype.decode=function(e,n,r){return this.offsetType={decode:function(){return r[0]}},t.prototype.decode.call(this,e,n,r)},e.prototype.encode=function(e,n,r){if(!e)return this.offsetType={size:function(){return 0}},this.size(n,r),[new de(0)];var i=null;return this.offsetType={encode:function(t,e){return i=e}},t.prototype.encode.call(this,e,n,r),[new de(i)]},e}(nt.Pointer),de=function(){function t(e){lt(this,t),this.val=e,this.forceLarge=!0}return t.prototype.valueOf=function(){return this.val},t}(),pe=function(){function t(){lt(this,t)}return t.decode=function(t,e,n){for(var r=n.pop();n.length>r;)n.pop()},t}(),ge=new fe([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",pe,null],[19,"Subrs",new he(new se,{type:"local"}),null]]),ve=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],ye=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],be=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],me=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],we=[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],xe=[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"],_e=new nt.Struct({reserved:new nt.Reserved(nt.uint16),reqFeatureIndex:nt.uint16,featureCount:nt.uint16,featureIndexes:new nt.Array(nt.uint16,"featureCount")}),ke=new nt.Struct({tag:new nt.String(4),langSys:new nt.Pointer(nt.uint16,_e,{type:"parent"})}),Se=new nt.Struct({defaultLangSys:new nt.Pointer(nt.uint16,_e),count:nt.uint16,langSysRecords:new nt.Array(ke,"count")}),Ce=new nt.Struct({tag:new nt.String(4),script:new nt.Pointer(nt.uint16,Se,{type:"parent"})}),Ae=new nt.Array(Ce,nt.uint16),Pe=new nt.Struct({featureParams:nt.uint16,lookupCount:nt.uint16,lookupListIndexes:new nt.Array(nt.uint16,"lookupCount")}),Ee=new nt.Struct({tag:new nt.String(4),feature:new nt.Pointer(nt.uint16,Pe,{type:"parent"})}),Oe=new nt.Array(Ee,nt.uint16),Te=new nt.Struct({markAttachmentType:nt.uint8,flags:new nt.Bitfield(nt.uint8,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])}),Ie=new nt.Struct({start:nt.uint16,end:nt.uint16,startCoverageIndex:nt.uint16}),Be=new nt.VersionedStruct(nt.uint16,{1:{glyphCount:nt.uint16,glyphs:new nt.Array(nt.uint16,"glyphCount")},2:{rangeCount:nt.uint16,rangeRecords:new nt.Array(Ie,"rangeCount")}}),Le=new nt.Struct({start:nt.uint16,end:nt.uint16,class:nt.uint16}),Re=new nt.VersionedStruct(nt.uint16,{1:{startGlyph:nt.uint16,glyphCount:nt.uint16,classValueArray:new nt.Array(nt.uint16,"glyphCount")},2:{classRangeCount:nt.uint16,classRangeRecord:new nt.Array(Le,"classRangeCount")}}),Me=new nt.Struct({a:nt.uint16,b:nt.uint16,deltaFormat:nt.uint16}),Fe=new nt.Struct({sequenceIndex:nt.uint16,lookupListIndex:nt.uint16}),De=new nt.Struct({glyphCount:nt.uint16,lookupCount:nt.uint16,input:new nt.Array(nt.uint16,function(t){return t.glyphCount-1}),lookupRecords:new nt.Array(Fe,"lookupCount")}),ze=new nt.Array(new nt.Pointer(nt.uint16,De),nt.uint16),Ne=new nt.Struct({glyphCount:nt.uint16,lookupCount:nt.uint16,classes:new nt.Array(nt.uint16,function(t){return t.glyphCount-1}),lookupRecords:new nt.Array(Fe,"lookupCount")}),We=new nt.Array(new nt.Pointer(nt.uint16,Ne),nt.uint16),Ue=new nt.VersionedStruct(nt.uint16,{1:{coverage:new nt.Pointer(nt.uint16,Be),ruleSetCount:nt.uint16,ruleSets:new nt.Array(new nt.Pointer(nt.uint16,ze),"ruleSetCount")},2:{coverage:new nt.Pointer(nt.uint16,Be),classDef:new nt.Pointer(nt.uint16,Re),classSetCnt:nt.uint16,classSet:new nt.Array(new nt.Pointer(nt.uint16,We),"classSetCnt")},3:{glyphCount:nt.uint16,lookupCount:nt.uint16,coverages:new nt.Array(new nt.Pointer(nt.uint16,Be),"glyphCount"),lookupRecords:new nt.Array(Fe,"lookupCount")}}),je=new nt.Struct({backtrackGlyphCount:nt.uint16,backtrack:new nt.Array(nt.uint16,"backtrackGlyphCount"),inputGlyphCount:nt.uint16,input:new nt.Array(nt.uint16,function(t){return t.inputGlyphCount-1}),lookaheadGlyphCount:nt.uint16,lookahead:new nt.Array(nt.uint16,"lookaheadGlyphCount"),lookupCount:nt.uint16,lookupRecords:new nt.Array(Fe,"lookupCount")}),Ge=new nt.Array(new nt.Pointer(nt.uint16,je),nt.uint16),He=new nt.VersionedStruct(nt.uint16,{1:{coverage:new nt.Pointer(nt.uint16,Be),chainCount:nt.uint16,chainRuleSets:new nt.Array(new nt.Pointer(nt.uint16,Ge),"chainCount")},2:{coverage:new nt.Pointer(nt.uint16,Be),backtrackClassDef:new nt.Pointer(nt.uint16,Re),inputClassDef:new nt.Pointer(nt.uint16,Re),lookaheadClassDef:new nt.Pointer(nt.uint16,Re),chainCount:nt.uint16,chainClassSet:new nt.Array(new nt.Pointer(nt.uint16,Ge),"chainCount")},3:{backtrackGlyphCount:nt.uint16,backtrackCoverage:new nt.Array(new nt.Pointer(nt.uint16,Be),"backtrackGlyphCount"),inputGlyphCount:nt.uint16,inputCoverage:new nt.Array(new nt.Pointer(nt.uint16,Be),"inputGlyphCount"),lookaheadGlyphCount:nt.uint16,lookaheadCoverage:new nt.Array(new nt.Pointer(nt.uint16,Be),"lookaheadGlyphCount"),lookupCount:nt.uint16,lookupRecords:new nt.Array(Fe,"lookupCount")}}),Ve=new nt.Fixed(16,"BE",14),qe=new nt.Struct({startCoord:Ve,peakCoord:Ve,endCoord:Ve}),Ze=new nt.Struct({axisCount:nt.uint16,regionCount:nt.uint16,variationRegions:new nt.Array(new nt.Array(qe,"axisCount"),"regionCount")}),Ye=new nt.Struct({shortDeltas:new nt.Array(nt.int16,function(t){return t.parent.shortDeltaCount}),regionDeltas:new nt.Array(nt.int8,function(t){return t.parent.regionIndexCount-t.parent.shortDeltaCount}),deltas:function(t){return t.shortDeltas.concat(t.regionDeltas)}}),Xe=new nt.Struct({itemCount:nt.uint16,shortDeltaCount:nt.uint16,regionIndexCount:nt.uint16,regionIndexes:new nt.Array(nt.uint16,"regionIndexCount"),deltaSets:new nt.Array(Ye,"itemCount")}),Ke=new nt.Struct({format:nt.uint16,variationRegionList:new nt.Pointer(nt.uint32,Ze),variationDataCount:nt.uint16,itemVariationData:new nt.Array(new nt.Pointer(nt.uint32,Xe),"variationDataCount")}),Je=new nt.VersionedStruct(nt.uint16,{1:(ie={axisIndex:nt.uint16},ie.axisIndex=nt.uint16,ie.filterRangeMinValue=Ve,ie.filterRangeMaxValue=Ve,ie)}),Qe=new nt.Struct({conditionCount:nt.uint16,conditionTable:new nt.Array(new nt.Pointer(nt.uint32,Je),"conditionCount")}),$e=new nt.Struct({featureIndex:nt.uint16,alternateFeatureTable:new nt.Pointer(nt.uint32,Pe,{type:"parent"})}),tn=new nt.Struct({version:nt.fixed32,substitutionCount:nt.uint16,substitutions:new nt.Array($e,"substitutionCount")}),en=new nt.Struct({conditionSet:new nt.Pointer(nt.uint32,Qe,{type:"parent"}),featureTableSubstitution:new nt.Pointer(nt.uint32,tn,{type:"parent"})}),nn=new nt.Struct({majorVersion:nt.uint16,minorVersion:nt.uint16,featureVariationRecordCount:nt.uint32,featureVariationRecords:new nt.Array(en,"featureVariationRecordCount")}),rn=function(){function t(e,n){lt(this,t),this.predefinedOps=e,this.type=n}return t.prototype.decode=function(t,e,n){return this.predefinedOps[n[0]]?this.predefinedOps[n[0]]:this.type.decode(t,e,n)},t.prototype.size=function(t,e){return this.type.size(t,e)},t.prototype.encode=function(t,e,n){var r=this.predefinedOps.indexOf(e);return-1!==r?r:this.type.encode(t,e,n)},t}(),on=function(t){function e(){return lt(this,e),ht(this,t.call(this,"UInt8"))}return dt(e,t),e.prototype.decode=function(t){return 127&nt.uint8.decode(t)},e}(nt.Number),an=new nt.Struct({first:nt.uint16,nLeft:nt.uint8}),sn=new nt.Struct({first:nt.uint16,nLeft:nt.uint16}),un=new nt.VersionedStruct(new on,{0:{nCodes:nt.uint8,codes:new nt.Array(nt.uint8,"nCodes")},1:{nRanges:nt.uint8,ranges:new nt.Array(an,"nRanges")}}),ln=new rn([ye,be],new he(un,{lazy:!0})),cn=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype.decode=function(t,e){for(var n=pt.resolveLength(this.length,t,e),r=0,i=[];r<n;){var o=this.type.decode(t,e);o.offset=r,r+=o.nLeft+1,i.push(o)}return i},e}(nt.Array),fn=new nt.VersionedStruct(nt.uint8,{0:{glyphs:new nt.Array(nt.uint16,function(t){return t.parent.CharStrings.length-1})},1:{ranges:new cn(an,function(t){return t.parent.CharStrings.length-1})},2:{ranges:new cn(sn,function(t){return t.parent.CharStrings.length-1})}}),hn=new rn([me,we,xe],new he(fn,{lazy:!0})),dn=new nt.Struct({first:nt.uint16,fd:nt.uint8}),pn=new nt.Struct({first:nt.uint32,fd:nt.uint16}),gn=new nt.VersionedStruct(nt.uint8,{0:{fds:new nt.Array(nt.uint8,function(t){return t.parent.CharStrings.length})},3:{nRanges:nt.uint16,ranges:new nt.Array(dn,"nRanges"),sentinel:nt.uint16},4:{nRanges:nt.uint32,ranges:new nt.Array(pn,"nRanges"),sentinel:nt.uint32}}),vn=new he(ge),yn=function(){function t(){lt(this,t)}return t.prototype.decode=function(t,e,n){return e.length=n[0],vn.decode(t,e,[n[1]])},t.prototype.size=function(t,e){return[ge.size(t,e,!1),vn.size(t,e)[0]]},t.prototype.encode=function(t,e,n){return[ge.size(e,n,!1),vn.encode(t,e,n)[0]]},t}(),bn=new fe([[18,"Private",new yn,null],[[12,38],"FontName","sid",null]]),mn=new fe([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",hn,me],[16,"Encoding",ln,ye],[17,"CharStrings",new he(new se),null],[18,"Private",new yn,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new he(gn),null],[[12,36],"FDArray",new he(new se(bn)),null],[[12,38],"FontName","sid",null]]),wn=new nt.Struct({length:nt.uint16,itemVariationStore:Ke}),xn=new fe([[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[17,"CharStrings",new he(new se),null],[[12,37],"FDSelect",new he(gn),null],[[12,36],"FDArray",new he(new se(bn)),null],[24,"vstore",new he(wn),null],[25,"maxstack","number",193]]),_n=new nt.VersionedStruct(nt.fixed16,{1:{hdrSize:nt.uint8,offSize:nt.uint8,nameIndex:new se(new nt.String("length")),topDictIndex:new se(mn),stringIndex:new se(new nt.String("length")),globalSubrIndex:new se},2:{hdrSize:nt.uint8,length:nt.uint16,topDict:xn,globalSubrIndex:new se}}),kn=function(){function t(e){lt(this,t),this.stream=e,this.decode()}return t.decode=function(e){return new t(e)},t.prototype.decode=function(){var t=(this.stream.pos,_n.decode(this.stream));for(var e in t){var n=t[e];this[e]=n}if(this.version<2){if(1!==this.topDictIndex.length)throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=null!=this.topDict.ROS,this},t.prototype.string=function(t){return this.version>=2?null:t<ve.length?ve[t]:this.stringIndex[t-ve.length]},t.prototype.getCharString=function(t){return this.stream.pos=this.topDict.CharStrings[t].offset,this.stream.readBuffer(this.topDict.CharStrings[t].length)},t.prototype.getGlyphName=function(t){if(this.version>=2)return null;if(this.isCIDFont)return null;var e=this.topDict.charset;if(Array.isArray(e))return e[t];if(0===t)return".notdef";switch(t-=1,e.version){case 0:return this.string(e.glyphs[t]);case 1:case 2:for(var n=0;n<e.ranges.length;n++){var r=e.ranges[n];if(r.offset<=t&&t<=r.offset+r.nLeft)return this.string(r.first+(t-r.offset))}}return null},t.prototype.fdForGlyph=function(t){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[t];case 3:case 4:for(var e=this.topDict.FDSelect.ranges,n=0,r=e.length-1;n<=r;){var i=n+r>>1;if(t<e[i].first)r=i-1;else{if(!(i<r&&t>e[i+1].first))return e[i].fd;n=i+1}}default:throw new Error("Unknown FDSelect version: "+this.topDict.FDSelect.version)}},t.prototype.privateDictForGlyph=function(t){if(this.topDict.FDSelect){var e=this.fdForGlyph(t);return this.topDict.FDArray[e]?this.topDict.FDArray[e].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private},ct(t,[{key:"postscriptName",get:function(){return this.version<2?this.nameIndex[0]:null}},{key:"fullName",get:function(){return this.string(this.topDict.FullName)}},{key:"familyName",get:function(){return this.string(this.topDict.FamilyName)}}]),t}(),Sn=new nt.Struct({glyphIndex:nt.uint16,vertOriginY:nt.int16}),Cn=new nt.Struct({majorVersion:nt.uint16,minorVersion:nt.uint16,defaultVertOriginY:nt.int16,numVertOriginYMetrics:nt.uint16,metrics:new nt.Array(Sn,"numVertOriginYMetrics")}),An=new nt.Struct({height:nt.uint8,width:nt.uint8,horiBearingX:nt.int8,horiBearingY:nt.int8,horiAdvance:nt.uint8,vertBearingX:nt.int8,vertBearingY:nt.int8,vertAdvance:nt.uint8}),Pn=new nt.Struct({height:nt.uint8,width:nt.uint8,bearingX:nt.int8,bearingY:nt.int8,advance:nt.uint8}),En=new nt.Struct({glyph:nt.uint16,xOffset:nt.int8,yOffset:nt.int8}),On=function t(){lt(this,t)},Tn=function t(){lt(this,t)},In=(new nt.VersionedStruct("version",{1:{metrics:Pn,data:On},2:{metrics:Pn,data:Tn},5:{data:Tn},6:{metrics:An,data:On},7:{metrics:An,data:Tn},8:{metrics:Pn,pad:new nt.Reserved(nt.uint8),numComponents:nt.uint16,components:new nt.Array(En,"numComponents")},9:{metrics:An,pad:new nt.Reserved(nt.uint8),numComponents:nt.uint16,components:new nt.Array(En,"numComponents")},17:{metrics:Pn,dataLen:nt.uint32,data:new nt.Buffer("dataLen")},18:{metrics:An,dataLen:nt.uint32,data:new nt.Buffer("dataLen")},19:{dataLen:nt.uint32,data:new nt.Buffer("dataLen")}}),new nt.Struct({ascender:nt.int8,descender:nt.int8,widthMax:nt.uint8,caretSlopeNumerator:nt.int8,caretSlopeDenominator:nt.int8,caretOffset:nt.int8,minOriginSB:nt.int8,minAdvanceSB:nt.int8,maxBeforeBL:nt.int8,minAfterBL:nt.int8,pad:new nt.Reserved(nt.int8,2)})),Bn=new nt.Struct({glyphCode:nt.uint16,offset:nt.uint16}),Ln=new nt.VersionedStruct(nt.uint16,{header:{imageFormat:nt.uint16,imageDataOffset:nt.uint32},1:{offsetArray:new nt.Array(nt.uint32,function(t){return t.parent.lastGlyphIndex-t.parent.firstGlyphIndex+1})},2:{imageSize:nt.uint32,bigMetrics:An},3:{offsetArray:new nt.Array(nt.uint16,function(t){return t.parent.lastGlyphIndex-t.parent.firstGlyphIndex+1})},4:{numGlyphs:nt.uint32,glyphArray:new nt.Array(Bn,function(t){return t.numGlyphs+1})},5:{imageSize:nt.uint32,bigMetrics:An,numGlyphs:nt.uint32,glyphCodeArray:new nt.Array(nt.uint16,"numGlyphs")}}),Rn=new nt.Struct({firstGlyphIndex:nt.uint16,lastGlyphIndex:nt.uint16,subtable:new nt.Pointer(nt.uint32,Ln)}),Mn=new nt.Struct({indexSubTableArray:new nt.Pointer(nt.uint32,new nt.Array(Rn,1),{type:"parent"}),indexTablesSize:nt.uint32,numberOfIndexSubTables:nt.uint32,colorRef:nt.uint32,hori:In,vert:In,startGlyphIndex:nt.uint16,endGlyphIndex:nt.uint16,ppemX:nt.uint8,ppemY:nt.uint8,bitDepth:nt.uint8,flags:new nt.Bitfield(nt.uint8,["horizontal","vertical"])}),Fn=new nt.Struct({version:nt.uint32,numSizes:nt.uint32,sizes:new nt.Array(Mn,"numSizes")}),Dn=new nt.Struct({ppem:nt.uint16,resolution:nt.uint16,imageOffsets:new nt.Array(new nt.Pointer(nt.uint32,"void"),function(t){return t.parent.parent.maxp.numGlyphs+1})}),zn=new nt.Struct({version:nt.uint16,flags:new nt.Bitfield(nt.uint16,["renderOutlines"]),numImgTables:nt.uint32,imageTables:new nt.Array(new nt.Pointer(nt.uint32,Dn),"numImgTables")}),Nn=new nt.Struct({gid:nt.uint16,paletteIndex:nt.uint16}),Wn=new nt.Struct({gid:nt.uint16,firstLayerIndex:nt.uint16,numLayers:nt.uint16}),Un=new nt.Struct({version:nt.uint16,numBaseGlyphRecords:nt.uint16,baseGlyphRecord:new nt.Pointer(nt.uint32,new nt.Array(Wn,"numBaseGlyphRecords")),layerRecords:new nt.Pointer(nt.uint32,new nt.Array(Nn,"numLayerRecords"),{lazy:!0}),numLayerRecords:nt.uint16}),jn=new nt.Struct({blue:nt.uint8,green:nt.uint8,red:nt.uint8,alpha:nt.uint8}),Gn=new nt.VersionedStruct(nt.uint16,{header:{numPaletteEntries:nt.uint16,numPalettes:nt.uint16,numColorRecords:nt.uint16,colorRecords:new nt.Pointer(nt.uint32,new nt.Array(jn,"numColorRecords")),colorRecordIndices:new nt.Array(nt.uint16,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new nt.Pointer(nt.uint32,new nt.Array(nt.uint32,"numPalettes")),offsetPaletteLabelArray:new nt.Pointer(nt.uint32,new nt.Array(nt.uint16,"numPalettes")),offsetPaletteEntryLabelArray:new nt.Pointer(nt.uint32,new nt.Array(nt.uint16,"numPaletteEntries"))}}),Hn=new nt.VersionedStruct(nt.uint16,{1:{coordinate:nt.int16},2:{coordinate:nt.int16,referenceGlyph:nt.uint16,baseCoordPoint:nt.uint16},3:{coordinate:nt.int16,deviceTable:new nt.Pointer(nt.uint16,Me)}}),Vn=new nt.Struct({defaultIndex:nt.uint16,baseCoordCount:nt.uint16,baseCoords:new nt.Array(new nt.Pointer(nt.uint16,Hn),"baseCoordCount")}),qn=new nt.Struct({tag:new nt.String(4),minCoord:new nt.Pointer(nt.uint16,Hn,{type:"parent"}),maxCoord:new nt.Pointer(nt.uint16,Hn,{type:"parent"})}),Zn=new nt.Struct({minCoord:new nt.Pointer(nt.uint16,Hn),maxCoord:new nt.Pointer(nt.uint16,Hn),featMinMaxCount:nt.uint16,featMinMaxRecords:new nt.Array(qn,"featMinMaxCount")}),Yn=new nt.Struct({tag:new nt.String(4),minMax:new nt.Pointer(nt.uint16,Zn,{type:"parent"})}),Xn=new nt.Struct({baseValues:new nt.Pointer(nt.uint16,Vn),defaultMinMax:new nt.Pointer(nt.uint16,Zn),baseLangSysCount:nt.uint16,baseLangSysRecords:new nt.Array(Yn,"baseLangSysCount")}),Kn=new nt.Struct({tag:new nt.String(4),script:new nt.Pointer(nt.uint16,Xn,{type:"parent"})}),Jn=new nt.Array(Kn,nt.uint16),Qn=new nt.Array(new nt.String(4),nt.uint16),$n=new nt.Struct({baseTagList:new nt.Pointer(nt.uint16,Qn),baseScriptList:new nt.Pointer(nt.uint16,Jn)}),tr=new nt.VersionedStruct(nt.uint32,{header:{horizAxis:new nt.Pointer(nt.uint16,$n),vertAxis:new nt.Pointer(nt.uint16,$n)},65536:{},65537:{itemVariationStore:new nt.Pointer(nt.uint32,Ke)}}),er=new nt.Array(nt.uint16,nt.uint16),nr=new nt.Struct({coverage:new nt.Pointer(nt.uint16,Be),glyphCount:nt.uint16,attachPoints:new nt.Array(new nt.Pointer(nt.uint16,er),"glyphCount")}),rr=new nt.VersionedStruct(nt.uint16,{1:{coordinate:nt.int16},2:{caretValuePoint:nt.uint16},3:{coordinate:nt.int16,deviceTable:new nt.Pointer(nt.uint16,Me)}}),ir=new nt.Array(new nt.Pointer(nt.uint16,rr),nt.uint16),or=new nt.Struct({coverage:new nt.Pointer(nt.uint16,Be),ligGlyphCount:nt.uint16,ligGlyphs:new nt.Array(new nt.Pointer(nt.uint16,ir),"ligGlyphCount")}),ar=new nt.Struct({markSetTableFormat:nt.uint16,markSetCount:nt.uint16,coverage:new nt.Array(new nt.Pointer(nt.uint32,Be),"markSetCount")}),sr=new nt.VersionedStruct(nt.uint32,{header:{glyphClassDef:new nt.Pointer(nt.uint16,Re),attachList:new nt.Pointer(nt.uint16,nr),ligCaretList:new nt.Pointer(nt.uint16,or),markAttachClassDef:new nt.Pointer(nt.uint16,Re)},65536:{},65538:{markGlyphSetsDef:new nt.Pointer(nt.uint16,ar)},65539:{markGlyphSetsDef:new nt.Pointer(nt.uint16,ar),itemVariationStore:new nt.Pointer(nt.uint32,Ke)}}),ur=new nt.Bitfield(nt.uint16,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),lr={xPlacement:nt.int16,yPlacement:nt.int16,xAdvance:nt.int16,yAdvance:nt.int16,xPlaDevice:new nt.Pointer(nt.uint16,Me,{type:"global",relativeTo:"rel"}),yPlaDevice:new nt.Pointer(nt.uint16,Me,{type:"global",relativeTo:"rel"}),xAdvDevice:new nt.Pointer(nt.uint16,Me,{type:"global",relativeTo:"rel"}),yAdvDevice:new nt.Pointer(nt.uint16,Me,{type:"global",relativeTo:"rel"})},cr=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"valueFormat";lt(this,t),this.key=e}return t.prototype.buildStruct=function(t){for(var e=t;!e[this.key]&&e.parent;)e=e.parent;if(e[this.key]){var n={};n.rel=function(){return e._startOffset};var r=e[this.key];for(var i in r)r[i]&&(n[i]=lr[i]);return new nt.Struct(n)}},t.prototype.size=function(t,e){return this.buildStruct(e).size(t,e)},t.prototype.decode=function(t,e){var n=this.buildStruct(e).decode(t,e);return delete n.rel,n},t}(),fr=new nt.Struct({secondGlyph:nt.uint16,value1:new cr("valueFormat1"),value2:new cr("valueFormat2")}),hr=new nt.Array(fr,nt.uint16),dr=new nt.Struct({value1:new cr("valueFormat1"),value2:new cr("valueFormat2")}),pr=new nt.VersionedStruct(nt.uint16,{1:{xCoordinate:nt.int16,yCoordinate:nt.int16},2:{xCoordinate:nt.int16,yCoordinate:nt.int16,anchorPoint:nt.uint16},3:{xCoordinate:nt.int16,yCoordinate:nt.int16,xDeviceTable:new nt.Pointer(nt.uint16,Me),yDeviceTable:new nt.Pointer(nt.uint16,Me)}}),gr=new nt.Struct({entryAnchor:new nt.Pointer(nt.uint16,pr,{type:"parent"}),exitAnchor:new nt.Pointer(nt.uint16,pr,{type:"parent"})}),vr=new nt.Struct({class:nt.uint16,markAnchor:new nt.Pointer(nt.uint16,pr,{type:"parent"})}),yr=new nt.Array(vr,nt.uint16),br=new nt.Array(new nt.Pointer(nt.uint16,pr),function(t){return t.parent.classCount}),mr=new nt.Array(br,nt.uint16),wr=new nt.Array(new nt.Pointer(nt.uint16,pr),function(t){return t.parent.parent.classCount}),xr=new nt.Array(wr,nt.uint16),_r=new nt.Array(new nt.Pointer(nt.uint16,xr),nt.uint16),kr=new nt.VersionedStruct("lookupType",{1:new nt.VersionedStruct(nt.uint16,{1:{coverage:new nt.Pointer(nt.uint16,Be),valueFormat:ur,value:new cr},2:{coverage:new nt.Pointer(nt.uint16,Be),valueFormat:ur,valueCount:nt.uint16,values:new nt.LazyArray(new cr,"valueCount")}}),2:new nt.VersionedStruct(nt.uint16,{1:{coverage:new nt.Pointer(nt.uint16,Be),valueFormat1:ur,valueFormat2:ur,pairSetCount:nt.uint16,pairSets:new nt.LazyArray(new nt.Pointer(nt.uint16,hr),"pairSetCount")},2:{coverage:new nt.Pointer(nt.uint16,Be),valueFormat1:ur,valueFormat2:ur,classDef1:new nt.Pointer(nt.uint16,Re),classDef2:new nt.Pointer(nt.uint16,Re),class1Count:nt.uint16,class2Count:nt.uint16,classRecords:new nt.LazyArray(new nt.LazyArray(dr,"class2Count"),"class1Count")}}),3:{format:nt.uint16,coverage:new nt.Pointer(nt.uint16,Be),entryExitCount:nt.uint16,entryExitRecords:new nt.Array(gr,"entryExitCount")},4:{format:nt.uint16,markCoverage:new nt.Pointer(nt.uint16,Be),baseCoverage:new nt.Pointer(nt.uint16,Be),classCount:nt.uint16,markArray:new nt.Pointer(nt.uint16,yr),baseArray:new nt.Pointer(nt.uint16,mr)},5:{format:nt.uint16,markCoverage:new nt.Pointer(nt.uint16,Be),ligatureCoverage:new nt.Pointer(nt.uint16,Be),classCount:nt.uint16,markArray:new nt.Pointer(nt.uint16,yr),ligatureArray:new nt.Pointer(nt.uint16,_r)},6:{format:nt.uint16,mark1Coverage:new nt.Pointer(nt.uint16,Be),mark2Coverage:new nt.Pointer(nt.uint16,Be),classCount:nt.uint16,mark1Array:new nt.Pointer(nt.uint16,yr),mark2Array:new nt.Pointer(nt.uint16,mr)},7:Ue,8:He,9:{posFormat:nt.uint16,lookupType:nt.uint16,extension:new nt.Pointer(nt.uint32,kr)}});kr.versions[9].extension.type=kr;var Sr=new nt.VersionedStruct(nt.uint32,{header:{scriptList:new nt.Pointer(nt.uint16,Ae),featureList:new nt.Pointer(nt.uint16,Oe),lookupList:new nt.Pointer(nt.uint16,new s(kr))},65536:{},65537:{featureVariations:new nt.Pointer(nt.uint32,nn)}}),Cr=new nt.Array(nt.uint16,nt.uint16),Ar=Cr,Pr=new nt.Struct({glyph:nt.uint16,compCount:nt.uint16,components:new nt.Array(nt.uint16,function(t){return t.compCount-1})}),Er=new nt.Array(new nt.Pointer(nt.uint16,Pr),nt.uint16),Or=new nt.VersionedStruct("lookupType",{1:new nt.VersionedStruct(nt.uint16,{1:{coverage:new nt.Pointer(nt.uint16,Be),deltaGlyphID:nt.int16},2:{coverage:new nt.Pointer(nt.uint16,Be),glyphCount:nt.uint16,substitute:new nt.LazyArray(nt.uint16,"glyphCount")}}),2:{substFormat:nt.uint16,coverage:new nt.Pointer(nt.uint16,Be),count:nt.uint16,sequences:new nt.LazyArray(new nt.Pointer(nt.uint16,Cr),"count")},3:{substFormat:nt.uint16,coverage:new nt.Pointer(nt.uint16,Be),count:nt.uint16,alternateSet:new nt.LazyArray(new nt.Pointer(nt.uint16,Ar),"count")},4:{substFormat:nt.uint16,coverage:new nt.Pointer(nt.uint16,Be),count:nt.uint16,ligatureSets:new nt.LazyArray(new nt.Pointer(nt.uint16,Er),"count")},5:Ue,6:He,7:{substFormat:nt.uint16,lookupType:nt.uint16,extension:new nt.Pointer(nt.uint32,Or)},8:{substFormat:nt.uint16,coverage:new nt.Pointer(nt.uint16,Be),backtrackCoverage:new nt.Array(new nt.Pointer(nt.uint16,Be),"backtrackGlyphCount"),lookaheadGlyphCount:nt.uint16,lookaheadCoverage:new nt.Array(new nt.Pointer(nt.uint16,Be),"lookaheadGlyphCount"),glyphCount:nt.uint16,substitutes:new nt.Array(nt.uint16,"glyphCount")}});Or.versions[7].extension.type=Or;var Tr=new nt.VersionedStruct(nt.uint32,{header:{scriptList:new nt.Pointer(nt.uint16,Ae),featureList:new nt.Pointer(nt.uint16,Oe),lookupList:new nt.Pointer(nt.uint16,new s(Or))},65536:{},65537:{featureVariations:new nt.Pointer(nt.uint32,nn)}}),Ir=new nt.Array(nt.uint16,nt.uint16),Br=new nt.Struct({shrinkageEnableGSUB:new nt.Pointer(nt.uint16,Ir),shrinkageDisableGSUB:new nt.Pointer(nt.uint16,Ir),shrinkageEnableGPOS:new nt.Pointer(nt.uint16,Ir),shrinkageDisableGPOS:new nt.Pointer(nt.uint16,Ir),shrinkageJstfMax:new nt.Pointer(nt.uint16,new s(kr)),extensionEnableGSUB:new nt.Pointer(nt.uint16,Ir),extensionDisableGSUB:new nt.Pointer(nt.uint16,Ir),extensionEnableGPOS:new nt.Pointer(nt.uint16,Ir),extensionDisableGPOS:new nt.Pointer(nt.uint16,Ir),extensionJstfMax:new nt.Pointer(nt.uint16,new s(kr))}),Lr=new nt.Array(new nt.Pointer(nt.uint16,Br),nt.uint16),Rr=new nt.Struct({tag:new nt.String(4),jstfLangSys:new nt.Pointer(nt.uint16,Lr)}),Mr=new nt.Struct({extenderGlyphs:new nt.Pointer(nt.uint16,new nt.Array(nt.uint16,nt.uint16)),defaultLangSys:new nt.Pointer(nt.uint16,Lr),langSysCount:nt.uint16,langSysRecords:new nt.Array(Rr,"langSysCount")}),Fr=new nt.Struct({tag:new nt.String(4),script:new nt.Pointer(nt.uint16,Mr,{type:"parent"})}),Dr=new nt.Struct({version:nt.uint32,scriptCount:nt.uint16,scriptList:new nt.Array(Fr,"scriptCount")}),zr=function(){function t(e){lt(this,t),this._size=e}return t.prototype.decode=function(t,e){switch(this.size(0,e)){case 1:return t.readUInt8();case 2:return t.readUInt16BE();case 3:return t.readUInt24BE();case 4:return t.readUInt32BE()}},t.prototype.size=function(t,e){return pt.resolveLength(this._size,null,e)},t}(),Nr=new nt.Struct({entry:new zr(function(t){return 1+((48&t.parent.entryFormat)>>4)}),outerIndex:function(t){return t.entry>>1+(15&t.parent.entryFormat)},innerIndex:function(t){return t.entry&(1<<1+(15&t.parent.entryFormat))-1}}),Wr=new nt.Struct({entryFormat:nt.uint16,mapCount:nt.uint16,mapData:new nt.Array(Nr,"mapCount")}),Ur=new nt.Struct({majorVersion:nt.uint16,minorVersion:nt.uint16,itemVariationStore:new nt.Pointer(nt.uint32,Ke),advanceWidthMapping:new nt.Pointer(nt.uint32,Wr),LSBMapping:new nt.Pointer(nt.uint32,Wr),RSBMapping:new nt.Pointer(nt.uint32,Wr)}),jr=new nt.Struct({format:nt.uint32,length:nt.uint32,offset:nt.uint32}),Gr=new nt.Struct({reserved:new nt.Reserved(nt.uint16,2),cbSignature:nt.uint32,signature:new nt.Buffer("cbSignature")}),Hr=new nt.Struct({ulVersion:nt.uint32,usNumSigs:nt.uint16,usFlag:nt.uint16,signatures:new nt.Array(jr,"usNumSigs"),signatureBlocks:new nt.Array(Gr,"usNumSigs")}),Vr=new nt.Struct({rangeMaxPPEM:nt.uint16,rangeGaspBehavior:new nt.Bitfield(nt.uint16,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"])}),qr=new nt.Struct({version:nt.uint16,numRanges:nt.uint16,gaspRanges:new nt.Array(Vr,"numRanges")}),Zr=new nt.Struct({pixelSize:nt.uint8,maximumWidth:nt.uint8,widths:new nt.Array(nt.uint8,function(t){return t.parent.parent.maxp.numGlyphs})}),Yr=new nt.Struct({version:nt.uint16,numRecords:nt.int16,sizeDeviceRecord:nt.int32,records:new nt.Array(Zr,"numRecords")}),Xr=new nt.Struct({left:nt.uint16,right:nt.uint16,value:nt.int16}),Kr=new nt.Struct({firstGlyph:nt.uint16,nGlyphs:nt.uint16,offsets:new nt.Array(nt.uint16,"nGlyphs"),max:function(t){return t.offsets.length&&Math.max.apply(Math,t.offsets)}}),Jr=new nt.Struct({off:function(t){return t._startOffset-t.parent.parent._startOffset},len:function(t){return((t.parent.leftTable.max-t.off)/t.parent.rowWidth+1)*(t.parent.rowWidth/2)},values:new nt.LazyArray(nt.int16,"len")}),Qr=new nt.VersionedStruct("format",{0:{nPairs:nt.uint16,searchRange:nt.uint16,entrySelector:nt.uint16,rangeShift:nt.uint16,pairs:new nt.Array(Xr,"nPairs")},2:{rowWidth:nt.uint16,leftTable:new nt.Pointer(nt.uint16,Kr,{type:"parent"}),rightTable:new nt.Pointer(nt.uint16,Kr,{type:"parent"}),array:new nt.Pointer(nt.uint16,Jr,{type:"parent"})},3:{glyphCount:nt.uint16,kernValueCount:nt.uint8,leftClassCount:nt.uint8,rightClassCount:nt.uint8,flags:nt.uint8,kernValue:new nt.Array(nt.int16,"kernValueCount"),leftClass:new nt.Array(nt.uint8,"glyphCount"),rightClass:new nt.Array(nt.uint8,"glyphCount"),kernIndex:new nt.Array(nt.uint8,function(t){return t.leftClassCount*t.rightClassCount})}}),$r=new nt.VersionedStruct("version",{0:{subVersion:nt.uint16,length:nt.uint16,format:nt.uint8,coverage:new nt.Bitfield(nt.uint8,["horizontal","minimum","crossStream","override"]),subtable:Qr,padding:new nt.Reserved(nt.uint8,function(t){return t.length-t._currentOffset})},1:{length:nt.uint32,coverage:new nt.Bitfield(nt.uint8,[null,null,null,null,null,"variation","crossStream","vertical"]),format:nt.uint8,tupleIndex:nt.uint16,subtable:Qr,padding:new nt.Reserved(nt.uint8,function(t){return t.length-t._currentOffset})}}),ti=new nt.VersionedStruct(nt.uint16,{0:{nTables:nt.uint16,tables:new nt.Array($r,"nTables")},1:{reserved:new nt.Reserved(nt.uint16),nTables:nt.uint32,tables:new nt.Array($r,"nTables")}}),ei=new nt.Struct({version:nt.uint16,numGlyphs:nt.uint16,yPels:new nt.Array(nt.uint8,"numGlyphs")}),ni=new nt.Struct({version:nt.uint16,fontNumber:nt.uint32,pitch:nt.uint16,xHeight:nt.uint16,style:nt.uint16,typeFamily:nt.uint16,capHeight:nt.uint16,symbolSet:nt.uint16,typeface:new nt.String(16),characterComplement:new nt.String(8),fileName:new nt.String(6),strokeWeight:new nt.String(1),widthType:new nt.String(1),serifStyle:nt.uint8,reserved:new nt.Reserved(nt.uint8)}),ri=new nt.Struct({bCharSet:nt.uint8,xRatio:nt.uint8,yStartRatio:nt.uint8,yEndRatio:nt.uint8}),ii=new nt.Struct({yPelHeight:nt.uint16,yMax:nt.int16,yMin:nt.int16}),oi=new nt.Struct({recs:nt.uint16,startsz:nt.uint8,endsz:nt.uint8,entries:new nt.Array(ii,"recs")}),ai=new nt.Struct({version:nt.uint16,numRecs:nt.uint16,numRatios:nt.uint16,ratioRanges:new nt.Array(ri,"numRatios"),offsets:new nt.Array(nt.uint16,"numRatios"),groups:new nt.Array(oi,"numRecs")}),si=new nt.Struct({version:nt.uint16,ascent:nt.int16,descent:nt.int16,lineGap:nt.int16,advanceHeightMax:nt.int16,minTopSideBearing:nt.int16,minBottomSideBearing:nt.int16,yMaxExtent:nt.int16,caretSlopeRise:nt.int16,caretSlopeRun:nt.int16,caretOffset:nt.int16,reserved:new nt.Reserved(nt.int16,4),metricDataFormat:nt.int16,numberOfMetrics:nt.uint16}),ui=new nt.Struct({advance:nt.uint16,bearing:nt.int16}),li=new nt.Struct({metrics:new nt.LazyArray(ui,function(t){return t.parent.vhea.numberOfMetrics}),bearings:new nt.LazyArray(nt.int16,function(t){return t.parent.maxp.numGlyphs-t.parent.vhea.numberOfMetrics})}),ci=new nt.Fixed(16,"BE",14),fi=new nt.Struct({fromCoord:ci,toCoord:ci}),hi=new nt.Struct({pairCount:nt.uint16,correspondence:new nt.Array(fi,"pairCount")}),di=new nt.Struct({version:nt.fixed32,axisCount:nt.uint32,segment:new nt.Array(hi,"axisCount")}),pi=function(){function t(e,n,r){lt(this,t),this.type=e,this.stream=n,this.parent=r,this.base=this.stream.pos,this._items=[]}return t.prototype.getItem=function(t){if(null==this._items[t]){var e=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*t,this._items[t]=this.type.decode(this.stream,this.parent),this.stream.pos=e}return this._items[t]},t.prototype.inspect=function(){return"[UnboundedArray "+this.type.constructor.name+"]"},t}(),gi=function(t){function e(n){return lt(this,e),ht(this,t.call(this,n,0))}return dt(e,t),e.prototype.decode=function(t,e){return new pi(this.type,t,e)},e}(nt.Array),vi=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:nt.uint16;t=new(function(){function t(e){lt(this,t),this.type=e}return t.prototype.decode=function(t,e){return e=e.parent.parent,this.type.decode(t,e)},t.prototype.size=function(t,e){return e=e.parent.parent,this.type.size(t,e)},t.prototype.encode=function(t,e,n){return n=n.parent.parent,this.type.encode(t,e,n)},t}())(t);var e=new nt.Struct({unitSize:nt.uint16,nUnits:nt.uint16,searchRange:nt.uint16,entrySelector:nt.uint16,rangeShift:nt.uint16}),n=new nt.Struct({lastGlyph:nt.uint16,firstGlyph:nt.uint16,value:t}),r=new nt.Struct({lastGlyph:nt.uint16,firstGlyph:nt.uint16,values:new nt.Pointer(nt.uint16,new nt.Array(t,function(t){return t.lastGlyph-t.firstGlyph+1}),{type:"parent"})}),i=new nt.Struct({glyph:nt.uint16,value:t});return new nt.VersionedStruct(nt.uint16,{0:{values:new gi(t)},2:{binarySearchHeader:e,segments:new nt.Array(n,function(t){return t.binarySearchHeader.nUnits})},4:{binarySearchHeader:e,segments:new nt.Array(r,function(t){return t.binarySearchHeader.nUnits})},6:{binarySearchHeader:e,segments:new nt.Array(i,function(t){return t.binarySearchHeader.nUnits})},8:{firstGlyph:nt.uint16,count:nt.uint16,values:new nt.Array(t,"count")}})},yi=new nt.VersionedStruct("format",{0:{deltas:new nt.Array(nt.int16,32)},1:{deltas:new nt.Array(nt.int16,32),mappingData:new vi(nt.uint16)},2:{standardGlyph:nt.uint16,controlPoints:new nt.Array(nt.uint16,32)},3:{standardGlyph:nt.uint16,controlPoints:new nt.Array(nt.uint16,32),mappingData:new vi(nt.uint16)}}),bi=new nt.Struct({version:nt.fixed32,format:nt.uint16,defaultBaseline:nt.uint16,subtable:yi}),mi=new nt.Struct({setting:nt.uint16,nameIndex:nt.int16,name:function(t){return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]}}),wi=new nt.Struct({feature:nt.uint16,nSettings:nt.uint16,settingTable:new nt.Pointer(nt.uint32,new nt.Array(mi,"nSettings"),{type:"parent"}),featureFlags:new nt.Bitfield(nt.uint8,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:nt.uint8,nameIndex:nt.int16,name:function(t){return t.parent.parent.name.records.fontFeatures[t.nameIndex]}}),xi=new nt.Struct({version:nt.fixed32,featureNameCount:nt.uint16,reserved1:new nt.Reserved(nt.uint16),reserved2:new nt.Reserved(nt.uint32),featureNames:new nt.Array(wi,"featureNameCount")}),_i=new nt.Struct({axisTag:new nt.String(4),minValue:nt.fixed32,defaultValue:nt.fixed32,maxValue:nt.fixed32,flags:nt.uint16,nameID:nt.uint16,name:function(t){return t.parent.parent.name.records.fontFeatures[t.nameID]}}),ki=new nt.Struct({nameID:nt.uint16,name:function(t){return t.parent.parent.name.records.fontFeatures[t.nameID]},flags:nt.uint16,coord:new nt.Array(nt.fixed32,function(t){return t.parent.axisCount}),postscriptNameID:new nt.Optional(nt.uint16,function(t){return t.parent.instanceSize-t._currentOffset>0})}),Si=new nt.Struct({version:nt.fixed32,offsetToData:nt.uint16,countSizePairs:nt.uint16,axisCount:nt.uint16,axisSize:nt.uint16,instanceCount:nt.uint16,instanceSize:nt.uint16,axis:new nt.Array(_i,"axisCount"),instance:new nt.Array(ki,"instanceCount")}),Ci=new nt.Fixed(16,"BE",14),Ai=function(){function t(){lt(this,t)}return t.decode=function(t,e){return e.flags?t.readUInt32BE():2*t.readUInt16BE()},t}(),Pi=new nt.Struct({version:nt.uint16,reserved:new nt.Reserved(nt.uint16),axisCount:nt.uint16,globalCoordCount:nt.uint16,globalCoords:new nt.Pointer(nt.uint32,new nt.Array(new nt.Array(Ci,"axisCount"),"globalCoordCount")),glyphCount:nt.uint16,flags:nt.uint16,offsetToData:nt.uint32,offsets:new nt.Array(new nt.Pointer(Ai,"void",{relativeTo:"offsetToData",allowNull:!1}),function(t){return t.glyphCount+1})}),Ei=new nt.Struct({length:nt.uint16,coverage:nt.uint16,subFeatureFlags:nt.uint32,stateTable:new l}),Oi=new nt.Struct({justClass:nt.uint32,beforeGrowLimit:nt.fixed32,beforeShrinkLimit:nt.fixed32,afterGrowLimit:nt.fixed32,afterShrinkLimit:nt.fixed32,growFlags:nt.uint16,shrinkFlags:nt.uint16}),Ti=new nt.Array(Oi,nt.uint32),Ii=new nt.VersionedStruct("actionType",{0:{lowerLimit:nt.fixed32,upperLimit:nt.fixed32,order:nt.uint16,glyphs:new nt.Array(nt.uint16,nt.uint16)},1:{addGlyph:nt.uint16},2:{substThreshold:nt.fixed32,addGlyph:nt.uint16,substGlyph:nt.uint16},3:{},4:{variationAxis:nt.uint32,minimumLimit:nt.fixed32,noStretchValue:nt.fixed32,maximumLimit:nt.fixed32},5:{flags:nt.uint16,glyph:nt.uint16}}),Bi=new nt.Struct({actionClass:nt.uint16,actionType:nt.uint16,actionLength:nt.uint32,actionData:Ii,padding:new nt.Reserved(nt.uint8,function(t){return t.actionLength-t._currentOffset})}),Li=new nt.Array(Bi,nt.uint32),Ri=new nt.Struct({lookupTable:new vi(new nt.Pointer(nt.uint16,Li))}),Mi=new nt.Struct({classTable:new nt.Pointer(nt.uint16,Ei,{type:"parent"}),wdcOffset:nt.uint16,postCompensationTable:new nt.Pointer(nt.uint16,Ri,{type:"parent"}),widthDeltaClusters:new vi(new nt.Pointer(nt.uint16,Ti,{type:"parent",relativeTo:"wdcOffset"}))}),Fi=new nt.Struct({version:nt.uint32,format:nt.uint16,horizontal:new nt.Pointer(nt.uint16,Mi),vertical:new nt.Pointer(nt.uint16,Mi)}),Di={action:nt.uint16},zi={markIndex:nt.uint16,currentIndex:nt.uint16},Ni={currentInsertIndex:nt.uint16,markedInsertIndex:nt.uint16},Wi=new nt.Struct({items:new gi(new nt.Pointer(nt.uint32,new vi))}),Ui=new nt.VersionedStruct("type",{0:{stateTable:new u},1:{stateTable:new u(zi),substitutionTable:new nt.Pointer(nt.uint32,Wi)},2:{stateTable:new u(Di),ligatureActions:new nt.Pointer(nt.uint32,new gi(nt.uint32)),components:new nt.Pointer(nt.uint32,new gi(nt.uint16)),ligatureList:new nt.Pointer(nt.uint32,new gi(nt.uint16))},4:{lookupTable:new vi},5:{stateTable:new u(Ni),insertionActions:new nt.Pointer(nt.uint32,new gi(nt.uint16))}}),ji=new nt.Struct({length:nt.uint32,coverage:nt.uint24,type:nt.uint8,subFeatureFlags:nt.uint32,table:Ui,padding:new nt.Reserved(nt.uint8,function(t){return t.length-t._currentOffset})}),Gi=new nt.Struct({featureType:nt.uint16,featureSetting:nt.uint16,enableFlags:nt.uint32,disableFlags:nt.uint32}),Hi=new nt.Struct({defaultFlags:nt.uint32,chainLength:nt.uint32,nFeatureEntries:nt.uint32,nSubtables:nt.uint32,features:new nt.Array(Gi,"nFeatureEntries"),subtables:new nt.Array(ji,"nSubtables")}),Vi=new nt.Struct({version:nt.uint16,unused:new nt.Reserved(nt.uint16),nChains:nt.uint32,chains:new nt.Array(Hi,"nChains")}),qi=new nt.Struct({left:nt.int16,top:nt.int16,right:nt.int16,bottom:nt.int16}),Zi=new nt.Struct({version:nt.fixed32,format:nt.uint16,lookupTable:new vi(qi)}),Yi={};Yi.cmap=Nt,Yi.head=Wt,Yi.hhea=Ut,Yi.hmtx=Gt,Yi.maxp=Ht,Yi.name=Kt,Yi["OS/2"]=Qt,Yi.post=te,Yi.fpgm=ne,Yi.loca=re,Yi.prep=oe,Yi["cvt "]=ee,Yi.glyf=ae,Yi["CFF "]=kn,Yi.CFF2=kn,Yi.VORG=Cn,Yi.EBLC=Fn,Yi.CBLC=Yi.EBLC,Yi.sbix=zn,Yi.COLR=Un,Yi.CPAL=Gn,Yi.BASE=tr,Yi.GDEF=sr,Yi.GPOS=Sr,Yi.GSUB=Tr,Yi.JSTF=Dr,Yi.HVAR=Ur,Yi.DSIG=Hr,Yi.gasp=qr,Yi.hdmx=Yr,Yi.kern=ti,Yi.LTSH=ei,Yi.PCLT=ni,Yi.VDMX=ai,Yi.vhea=si,Yi.vmtx=li,Yi.avar=di,Yi.bsln=bi,Yi.feat=xi,Yi.fvar=Si,Yi.gvar=Pi,Yi.just=Fi,Yi.morx=Vi,Yi.opbd=Zi;var Xi=new nt.Struct({tag:new nt.String(4),checkSum:nt.uint32,offset:new nt.Pointer(nt.uint32,"void",{type:"global"}),length:nt.uint32}),Ki=new nt.Struct({tag:new nt.String(4),numTables:nt.uint16,searchRange:nt.uint16,entrySelector:nt.uint16,rangeShift:nt.uint16,tables:new nt.Array(Xi,"numTables")});Ki.process=function(){for(var t={},e=this.tables,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i;t[o.tag]=o}this.tables=t},Ki.preEncode=function(t){var e=[];for(var n in this.tables){var r=this.tables[n];r&&e.push({tag:n,checkSum:0,offset:new nt.VoidPointer(Yi[n],r),length:Yi[n].size(r)})}this.tag="true",this.numTables=e.length,this.tables=e;var i=Math.floor(Math.log(this.numTables)/Math.LN2),o=Math.pow(2,i);this.searchRange=16*o,this.entrySelector=Math.log(o)/Math.LN2,this.rangeShift=16*this.numTables-this.searchRange};var Ji;try{var Qi=n(110)}catch(t){}var $i=(Ji=function(){function t(e){if(lt(this,t),this.encoding=null,this.cmap=this.findSubtable(e,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap&&Qi)for(var n=e.tables,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var s=o,u=a(s.platformID,s.encodingID,s.table.language-1);Qi.encodingExists(u)&&(this.cmap=s.table,this.encoding=u)}if(!this.cmap)throw new Error("Could not find a supported cmap table");this.uvs=this.findSubtable(e,[[0,5]]),this.uvs&&14!==this.uvs.version&&(this.uvs=null)}return t.prototype.findSubtable=function(t,e){for(var n=e,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}for(var a=o,s=a[0],u=a[1],l=t.tables,c=Array.isArray(l),f=0,l=c?l:it(l);;){var h;if(c){if(f>=l.length)break;h=l[f++]}else{if(f=l.next(),f.done)break;h=f.value}var d=h;if(d.platformID===s&&d.encodingID===u)return d.table}}return null},t.prototype.lookup=function(t,e){if(this.encoding){var n=Qi.encode(bt(t),this.encoding);t=0;for(var r=0;r<n.length;r++)t=t<<8|n[r]}else if(e){var i=this.getVariationSelector(t,e);if(i)return i}var o=this.cmap;switch(o.version){case 0:return o.codeMap.get(t)||0;case 4:for(var a=0,s=o.segCount-1;a<=s;){var u=a+s>>1;if(t<o.startCode.get(u))s=u-1;else{if(!(t>o.endCode.get(u))){var l=o.idRangeOffset.get(u),c=void 0;if(0===l)c=t+o.idDelta.get(u);else{var f=l/2+(t-o.startCode.get(u))-(o.segCount-u);c=o.glyphIndexArray.get(f)||0,0!==c&&(c+=o.idDelta.get(u))}return 65535&c}a=u+1}}return 0;case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return o.glyphIndices.get(t-o.firstCode)||0;case 12:case 13:for(var h=0,d=o.nGroups-1;h<=d;){var p=h+d>>1,g=o.groups.get(p);if(t<g.startCharCode)d=p-1;else{if(!(t>g.endCharCode))return 12===o.version?g.glyphID+(t-g.startCharCode):g.glyphID;h=p+1}}return 0;case 14:throw new Error("TODO: cmap format 14");default:throw new Error("Unknown cmap format "+o.version)}},t.prototype.getVariationSelector=function(t,e){if(!this.uvs)return 0;var n=this.uvs.varSelectors.toArray(),r=c(n,function(t){return e-t.varSelector}),i=n[r];return-1!==r&&i.defaultUVS&&(r=c(i.defaultUVS,function(e){return t<e.startUnicodeValue?-1:t>e.startUnicodeValue+e.additionalCount?1:0})),-1!==r&&i.nonDefaultUVS&&-1!==(r=c(i.nonDefaultUVS,function(e){return t-e.unicodeValue}))?i.nonDefaultUVS[r].glyphID:0},t.prototype.getCharacterSet=function(){var t=this.cmap;switch(t.version){case 0:return f(0,t.codeMap.length);case 4:for(var e=[],n=t.endCode.toArray(),r=0;r<n.length;r++){var i=n[r]+1,o=t.startCode.get(r);e.push.apply(e,f(o,i))}return e;case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return f(t.firstCode,t.firstCode+t.glyphIndices.length);case 12:case 13:for(var a=[],s=t.groups.toArray(),u=Array.isArray(s),l=0,s=u?s:it(s);;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if(l=s.next(),l.done)break;c=l.value}var h=c;a.push.apply(a,f(h.startCharCode,h.endCharCode+1))}return a;case 14:throw new Error("TODO: cmap format 14");default:throw new Error("Unknown cmap format "+t.version)}},t.prototype.codePointsForGlyph=function(t){var e=this.cmap;switch(e.version){case 0:for(var n=[],r=0;r<256;r++)e.codeMap.get(r)===t&&n.push(r);return n;case 4:for(var i=[],o=0;o<e.segCount;o++)for(var a=e.endCode.get(o),s=e.startCode.get(o),u=e.idRangeOffset.get(o),l=e.idDelta.get(o),c=s;c<=a;c++){var h=0;if(0===u)h=c+l;else{var d=u/2+(c-s)-(e.segCount-o);h=e.glyphIndexArray.get(d)||0,0!==h&&(h+=l)}h===t&&i.push(c)}return i;case 12:for(var p=[],g=e.groups.toArray(),v=Array.isArray(g),y=0,g=v?g:it(g);;){var b;if(v){if(y>=g.length)break;b=g[y++]}else{if(y=g.next(),y.done)break;b=y.value}var m=b;t>=m.glyphID&&t<=m.glyphID+(m.endCharCode-m.startCharCode)&&p.push(m.startCharCode+(t-m.glyphID))}return p;case 13:for(var w=[],x=e.groups.toArray(),_=Array.isArray(x),k=0,x=_?x:it(x);;){var S;if(_){if(k>=x.length)break;S=x[k++]}else{if(k=x.next(),k.done)break;S=k.value}var C=S;t===C.glyphID&&w.push.apply(w,f(C.startCharCode,C.endCharCode+1))}return w;default:throw new Error("Unknown cmap format "+e.version)}},t}(),h(Ji.prototype,"getCharacterSet",[o],rt(Ji.prototype,"getCharacterSet"),Ji.prototype),h(Ji.prototype,"codePointsForGlyph",[o],rt(Ji.prototype,"codePointsForGlyph"),Ji.prototype),Ji),to=function(){function t(e){lt(this,t),this.kern=e.kern}return t.prototype.process=function(t,e){for(var n=0;n<t.length-1;n++){var r=t[n].id,i=t[n+1].id;e[n].xAdvance+=this.getKerning(r,i)}},t.prototype.getKerning=function(t,e){for(var n=0,r=this.kern.tables,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;if(!s.coverage.crossStream){switch(s.version){case 0:if(!s.coverage.horizontal)continue;break;case 1:if(s.coverage.vertical||s.coverage.variation)continue;break;default:throw new Error("Unsupported kerning table version "+s.version)}var u=0,l=s.subtable;switch(s.format){case 0:var f=c(l.pairs,function(n){return t-n.left||e-n.right});f>=0&&(u=l.pairs[f].value);break;case 2:var h=0,d=0;h=t>=l.leftTable.firstGlyph&&t<l.leftTable.firstGlyph+l.leftTable.nGlyphs?l.leftTable.offsets[t-l.leftTable.firstGlyph]:l.array.off,e>=l.rightTable.firstGlyph&&e<l.rightTable.firstGlyph+l.rightTable.nGlyphs&&(d=l.rightTable.offsets[e-l.rightTable.firstGlyph]);var p=(h+d-l.array.off)/2;u=l.array.values.get(p);break;case 3:if(t>=l.glyphCount||e>=l.glyphCount)return 0;u=l.kernValue[l.kernIndex[l.leftClass[t]*l.rightClassCount+l.rightClass[e]]];break;default:throw new Error("Unsupported kerning sub-table format "+s.format)}s.coverage.override?n=u:n+=u}}return n},t}(),eo=function(){function t(e){lt(this,t),this.font=e}return t.prototype.positionGlyphs=function(t,e){for(var n=0,r=0,i=0;i<t.length;i++){t[i].isMark?r=i:(n!==r&&this.positionCluster(t,e,n,r),n=r=i)}return n!==r&&this.positionCluster(t,e,n,r),e},t.prototype.positionCluster=function(t,e,n,r){var i=t[n],o=i.cbox.copy();i.codePoints.length>1&&(o.minX+=(i.codePoints.length-1)*o.width/i.codePoints.length);for(var a=-e[n].xAdvance,s=0,u=this.font.unitsPerEm/16,l=n+1;l<=r;l++){var c=t[l],f=c.cbox,h=e[l],d=this.getCombiningClass(c.codePoints[0]);if("Not_Reordered"!==d){switch(h.xOffset=h.yOffset=0,d){case"Double_Above":case"Double_Below":h.xOffset+=o.minX-f.width/2-f.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":h.xOffset+=o.minX-f.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":h.xOffset+=o.maxX-f.width-f.minX;break;default:h.xOffset+=o.minX+(o.width-f.width)/2-f.minX}switch(d){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":"Attached_Below_Left"!==d&&"Attached_Below"!==d||(o.minY+=u),h.yOffset=-o.minY-f.maxY,o.minY+=f.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":"Attached_Above"!==d&&"Attached_Above_Right"!==d||(o.maxY+=u),h.yOffset=o.maxY-f.minY,o.maxY+=f.height}h.xAdvance=h.yAdvance=0,h.xOffset+=a,h.yOffset+=s}else a-=h.xAdvance,s-=h.yAdvance}},t.prototype.getCombiningClass=function(t){var e=xt.getCombiningClass(t);if(3584==(-256&t))if("Not_Reordered"===e)switch(t){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(3642===t)return"Below_Right";switch(e){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":return"Below";case"CCC23":return"Attached_Above";case"CCC24":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":return"Above";case"CCC21":break;case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":return"Above";case"CCC29":case"CCC32":return"Below";case"CCC103":return"Below_Right";case"CCC107":return"Above_Right";case"CCC118":return"Below";case"CCC122":return"Above";case"CCC129":case"CCC132":return"Below";case"CCC130":return"Above"}return e},t}(),no=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1/0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1/0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1/0;lt(this,t),this.minX=e,this.minY=n,this.maxX=r,this.maxY=i}return t.prototype.addPoint=function(t,e){Math.abs(t)!==1/0&&(t<this.minX&&(this.minX=t),t>this.maxX&&(this.maxX=t)),Math.abs(e)!==1/0&&(e<this.minY&&(this.minY=e),e>this.maxY&&(this.maxY=e))},t.prototype.copy=function(){return new t(this.minX,this.minY,this.maxX,this.maxY)},ct(t,[{key:"width",get:function(){return this.maxX-this.minX}},{key:"height",get:function(){return this.maxY-this.minY}}]),t}(),ro={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},io={};for(var oo in ro){var ao=ro[oo];if(Array.isArray(ao))for(var so=ao,uo=Array.isArray(so),lo=0,so=uo?so:it(so);;){var co;if(uo){if(lo>=so.length)break;co=so[lo++]}else{if(lo=so.next(),lo.done)break;co=lo.value}var fo=co;io[fo]=oo}else io[ao]=oo}for(var ho={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0},po=function(){function t(e,n,r,i,o){if(lt(this,t),this.glyphs=e,this.positions=null,this.script=r,this.language=i||null,this.direction=o||v(r),this.features={},Array.isArray(n))for(var a=n,s=Array.isArray(a),u=0,a=s?a:it(a);;){var l;if(s){if(u>=a.length)break;l=a[u++]}else{if(u=a.next(),u.done)break;l=u.value}var c=l;this.features[c]=!0}else"object"===(void 0===n?"undefined":at(n))&&(this.features=n)}return ct(t,[{key:"advanceWidth",get:function(){for(var t=0,e=this.positions,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}t+=i.xAdvance}return t}},{key:"advanceHeight",get:function(){for(var t=0,e=this.positions,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}t+=i.yAdvance}return t}},{key:"bbox",get:function(){for(var t=new no,e=0,n=0,r=0;r<this.glyphs.length;r++){var i=this.glyphs[r],o=this.positions[r],a=i.bbox;t.addPoint(a.minX+e+o.xOffset,a.minY+n+o.yOffset),t.addPoint(a.maxX+e+o.xOffset,a.maxY+n+o.yOffset),e+=o.xAdvance,n+=o.yAdvance}return t}}]),t}(),go=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;lt(this,t),this.xAdvance=e,this.yAdvance=n,this.xOffset=r,this.yOffset=i},vo={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},yo=function(t,e){return[vo[t].code,vo[t][e]]},bo={rlig:yo("ligatures","requiredLigatures"),clig:yo("ligatures","contextualLigatures"),dlig:yo("ligatures","rareLigatures"),hlig:yo("ligatures","historicalLigatures"),liga:yo("ligatures","commonLigatures"),hist:yo("ligatures","historicalLigatures"),smcp:yo("lowerCase","lowerCaseSmallCaps"),pcap:yo("lowerCase","lowerCasePetiteCaps"),frac:yo("fractions","diagonalFractions"),dnom:yo("fractions","diagonalFractions"),numr:yo("fractions","diagonalFractions"),afrc:yo("fractions","verticalFractions"),case:yo("caseSensitiveLayout","caseSensitiveLayout"),ccmp:yo("unicodeDecomposition","canonicalComposition"),cpct:yo("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:yo("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:yo("contextualAlternates","swashAlternates"),cswh:yo("contextualAlternates","contextualSwashAlternates"),curs:yo("cursiveConnection","cursive"),c2pc:yo("upperCase","upperCasePetiteCaps"),c2sc:yo("upperCase","upperCaseSmallCaps"),init:yo("smartSwash","wordInitialSwashes"),fin2:yo("smartSwash","wordFinalSwashes"),medi:yo("smartSwash","nonFinalSwashes"),med2:yo("smartSwash","nonFinalSwashes"),fin3:yo("smartSwash","wordFinalSwashes"),fina:yo("smartSwash","wordFinalSwashes"),pkna:yo("kanaSpacing","proportionalKana"),half:yo("textSpacing","halfWidthText"),halt:yo("textSpacing","altHalfWidthText"),hkna:yo("alternateKana","alternateHorizKana"),vkna:yo("alternateKana","alternateVertKana"),ital:yo("italicCJKRoman","CJKItalicRoman"),lnum:yo("numberCase","upperCaseNumbers"),onum:yo("numberCase","lowerCaseNumbers"),mgrk:yo("mathematicalExtras","mathematicalGreek"),calt:yo("contextualAlternates","contextualAlternates"),vrt2:yo("verticalSubstitution","substituteVerticalForms"),vert:yo("verticalSubstitution","substituteVerticalForms"),tnum:yo("numberSpacing","monospacedNumbers"),pnum:yo("numberSpacing","proportionalNumbers"),sups:yo("verticalPosition","superiors"),subs:yo("verticalPosition","inferiors"),ordn:yo("verticalPosition","ordinals"),pwid:yo("textSpacing","proportionalText"),hwid:yo("textSpacing","halfWidthText"),qwid:yo("textSpacing","quarterWidthText"),twid:yo("textSpacing","thirdWidthText"),fwid:yo("textSpacing","proportionalText"),palt:yo("textSpacing","altProportionalText"),trad:yo("characterShape","traditionalCharacters"),smpl:yo("characterShape","simplifiedCharacters"),jp78:yo("characterShape","JIS1978Characters"),jp83:yo("characterShape","JIS1983Characters"),jp90:yo("characterShape","JIS1990Characters"),jp04:yo("characterShape","JIS2004Characters"),expt:yo("characterShape","expertCharacters"),hojo:yo("characterShape","hojoCharacters"),nlck:yo("characterShape","NLCCharacters"),tnam:yo("characterShape","traditionalNamesCharacters"),ruby:yo("rubyKana","rubyKana"),titl:yo("styleOptions","titlingCaps"),zero:yo("typographicExtras","slashedZero"),ss01:yo("stylisticAlternatives","stylisticAltOne"),ss02:yo("stylisticAlternatives","stylisticAltTwo"),ss03:yo("stylisticAlternatives","stylisticAltThree"),ss04:yo("stylisticAlternatives","stylisticAltFour"),ss05:yo("stylisticAlternatives","stylisticAltFive"),ss06:yo("stylisticAlternatives","stylisticAltSix"),ss07:yo("stylisticAlternatives","stylisticAltSeven"),ss08:yo("stylisticAlternatives","stylisticAltEight"),ss09:yo("stylisticAlternatives","stylisticAltNine"),ss10:yo("stylisticAlternatives","stylisticAltTen"),ss11:yo("stylisticAlternatives","stylisticAltEleven"),ss12:yo("stylisticAlternatives","stylisticAltTwelve"),ss13:yo("stylisticAlternatives","stylisticAltThirteen"),ss14:yo("stylisticAlternatives","stylisticAltFourteen"),ss15:yo("stylisticAlternatives","stylisticAltFifteen"),ss16:yo("stylisticAlternatives","stylisticAltSixteen"),ss17:yo("stylisticAlternatives","stylisticAltSeventeen"),ss18:yo("stylisticAlternatives","stylisticAltEighteen"),ss19:yo("stylisticAlternatives","stylisticAltNineteen"),ss20:yo("stylisticAlternatives","stylisticAltTwenty")},mo=1;mo<=99;mo++)bo["cv"+("00"+mo).slice(-2)]=[vo.characterAlternatives.code,mo];var wo={};for(var xo in bo){var _o=bo[xo];null==wo[_o[0]]&&(wo[_o[0]]={}),wo[_o[0]][_o[1]]=xo}for(var ko,So,Co,Ao,Po,Eo,Oo,To,Io,Bo,Lo=(ko=function(){function t(e){lt(this,t),this.table=e}return t.prototype.lookup=function(t){switch(this.table.version){case 0:return this.table.values.getItem(t);case 2:case 4:for(var e=0,n=this.table.binarySearchHeader.nUnits-1;e<=n;){var r=e+n>>1,i=this.table.segments[r];if(65535===i.firstGlyph)return null;if(t<i.firstGlyph)n=r-1;else{if(!(t>i.lastGlyph))return 2===this.table.version?i.value:i.values[t-i.firstGlyph];e=r+1}}return null;case 6:for(var o=0,a=this.table.binarySearchHeader.nUnits-1;o<=a;){var r=o+a>>1,i=this.table.segments[r];if(65535===i.glyph)return null;if(t<i.glyph)a=r-1;else{if(!(t>i.glyph))return i.value;o=r+1}}return null;case 8:return this.table.values[t-this.table.firstGlyph];default:throw new Error("Unknown lookup table format: "+this.table.version)}},t.prototype.glyphsForValue=function(t){var e=[];switch(this.table.version){case 2:case 4:for(var n=this.table.segments,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o;if(2===this.table.version&&a.value===t)e.push.apply(e,f(a.firstGlyph,a.lastGlyph+1));else for(var s=0;s<a.values.length;s++)a.values[s]===t&&e.push(a.firstGlyph+s)}break;case 6:for(var u=this.table.segments,l=Array.isArray(u),c=0,u=l?u:it(u);;){var h;if(l){if(c>=u.length)break;h=u[c++]}else{if(c=u.next(),c.done)break;h=c.value}var d=h;d.value===t&&e.push(d.glyph)}break;case 8:for(var p=0;p<this.table.values.length;p++)this.table.values[p]===t&&e.push(this.table.firstGlyph+p);break;default:throw new Error("Unknown lookup table format: "+this.table.version)}return e},t}(),function(t,e,n,r,i){var o={};return Object.keys(r).forEach(function(t){o[t]=r[t]}),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=n.slice().reverse().reduce(function(n,r){return r(t,e,n)||n},o),i&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(i):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(t,e,o),o=null),o}(ko.prototype,"glyphsForValue",[o],rt(ko.prototype,"glyphsForValue"),ko.prototype),ko),Ro=function(){function t(e){lt(this,t),this.stateTable=e,this.lookupTable=new Lo(e.classTable)}return t.prototype.process=function(t,e,n){for(var r=0,i=e?t.length-1:0,o=e?-1:1;1===o&&i<=t.length||-1===o&&i>=-1;){var a=null,s=1,u=!0;i===t.length||-1===i?s=0:(a=t[i],65535===a.id?s=2:null==(s=this.lookupTable.lookup(a.id))&&(s=1));var l=this.stateTable.stateArray.getItem(r),c=l[s],f=this.stateTable.entryTable.getItem(c);0!==s&&2!==s&&(n(a,f,i),u=!(16384&f.flags)),r=f.newState,u&&(i+=o)}return t},t.prototype.traverse=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new wt;if(!n.has(e)){n.add(e);for(var r=this.stateTable,i=r.nClasses,o=r.stateArray,a=r.entryTable,s=o.getItem(e),u=4;u<i;u++)for(var l=s[u],c=a.getItem(l),f=this.lookupTable.glyphsForValue(u),h=Array.isArray(f),d=0,f=h?f:it(f);;){var p;if(h){if(d>=f.length)break;p=f[d++]}else{if(d=f.next(),d.done)break;p=d.value}var g=p;t.enter&&t.enter(g,c),0!==c.newState&&this.traverse(t,c.newState,n),t.exit&&t.exit(g,c)}}},t}(),Mo=(So=function(){function t(e){lt(this,t),this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=e,this.morx=e.morx,this.inputCache=null}return t.prototype.process=function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.morx.chains,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}for(var a=o,s=a.defaultFlags,u=a.features,l=Array.isArray(u),c=0,u=l?u:it(u);;){var f;if(l){if(c>=u.length)break;f=u[c++]}else{if(c=u.next(),c.done)break;f=c.value}var h=f,d=void 0;(d=e[h.featureType])&&d[h.featureSetting]&&(s&=h.disableFlags,s|=h.enableFlags)}for(var p=a.subtables,g=Array.isArray(p),v=0,p=g?p:it(p);;){var y;if(g){if(v>=p.length)break;y=p[v++]}else{if(v=p.next(),v.done)break;y=v.value}var b=y;b.subFeatureFlags&s&&this.processSubtable(b,t)}}for(var m=t.length-1;m>=0;)65535===t[m].id&&t.splice(m,1),m--;return t},t.prototype.processSubtable=function(t,e){if(this.subtable=t,this.glyphs=e,4===this.subtable.type)return void this.processNoncontextualSubstitutions(this.subtable,this.glyphs);this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;var n=this.getStateMachine(t),r=this.getProcessor(),i=!!(4194304&this.subtable.coverage);return n.process(this.glyphs,i,r)},t.prototype.getStateMachine=function(t){return new Ro(t.table.stateTable)},t.prototype.getProcessor=function(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error("Invalid morx subtable type: "+this.subtable.type)}},t.prototype.processIndicRearragement=function(t,e,n){32768&e.flags&&(this.firstGlyph=n),8192&e.flags&&(this.lastGlyph=n),x(this.glyphs,15&e.flags,this.firstGlyph,this.lastGlyph)},t.prototype.processContextualSubstitution=function(t,e,n){var r=this.subtable.table.substitutionTable.items;if(65535!==e.markIndex){var i=r.getItem(e.markIndex),o=new Lo(i);t=this.glyphs[this.markedGlyph];var a=o.lookup(t.id);a&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(a,t.codePoints))}if(65535!==e.currentIndex){var s=r.getItem(e.currentIndex),u=new Lo(s);t=this.glyphs[n];var a=u.lookup(t.id);a&&(this.glyphs[n]=this.font.getGlyph(a,t.codePoints))}32768&e.flags&&(this.markedGlyph=n)},t.prototype.processLigature=function(t,e,n){if(32768&e.flags&&this.ligatureStack.push(n),8192&e.flags){for(var r,i=this.subtable.table.ligatureActions,o=this.subtable.table.components,a=this.subtable.table.ligatureList,s=e.action,u=!1,l=0,c=[],f=[];!u;){var h,d=this.ligatureStack.pop();(h=c).unshift.apply(h,this.glyphs[d].codePoints);var p=i.getItem(s++);u=!!(2147483648&p);var g=!!(1073741824&p),v=(1073741823&p)<<2>>2;v+=this.glyphs[d].id;if(l+=o.getItem(v),u||g){var y=a.getItem(l);this.glyphs[d]=this.font.getGlyph(y,c),f.push(d),l=0,c=[]}else this.glyphs[d]=this.font.getGlyph(65535)}(r=this.ligatureStack).push.apply(r,f)}},t.prototype.processNoncontextualSubstitutions=function(t,e,n){var r=new Lo(t.table.lookupTable);for(n=0;n<e.length;n++){var i=e[n];if(65535!==i.id){var o=r.lookup(i.id);o&&(e[n]=this.font.getGlyph(o,i.codePoints))}}},t.prototype._insertGlyphs=function(t,e,n,r){for(var i,o=[];n--;){var a=this.subtable.table.insertionActions.getItem(e++);o.push(this.font.getGlyph(a))}r||t++,(i=this.glyphs).splice.apply(i,[t,0].concat(o))},t.prototype.processGlyphInsertion=function(t,e,n){if(32768&e.flags&&(this.markedIndex=n),65535!==e.markedInsertIndex){var r=(31&e.flags)>>>5,i=!!(1024&e.flags);this._insertGlyphs(this.markedIndex,e.markedInsertIndex,r,i)}if(65535!==e.currentInsertIndex){var o=(992&e.flags)>>>5,a=!!(2048&e.flags);this._insertGlyphs(n,e.currentInsertIndex,o,a)}},t.prototype.getSupportedFeatures=function(){for(var t=[],e=this.morx.chains,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}for(var o=i,a=o.features,s=Array.isArray(a),u=0,a=s?a:it(a);;){var l;if(s){if(u>=a.length)break;l=a[u++]}else{if(u=a.next(),u.done)break;l=u.value}var c=l;t.push([c.featureType,c.featureSetting])}}return t},t.prototype.generateInputs=function(t){return this.inputCache||this.generateInputCache(),this.inputCache[t]||[]},t.prototype.generateInputCache=function(){this.inputCache={};for(var t=this.morx.chains,e=Array.isArray(t),n=0,t=e?t:it(t);;){var r;if(e){if(n>=t.length)break;r=t[n++]}else{if(n=t.next(),n.done)break;r=n.value}for(var i=r,o=i.defaultFlags,a=i.subtables,s=Array.isArray(a),u=0,a=s?a:it(a);;){var l;if(s){if(u>=a.length)break;l=a[u++]}else{if(u=a.next(),u.done)break;l=u.value}var c=l;c.subFeatureFlags&o&&this.generateInputsForSubtable(c)}}},t.prototype.generateInputsForSubtable=function(t){var e=this;if(2===t.type){if(!!(4194304&t.coverage))throw new Error("Reverse subtable, not supported.");this.subtable=t,this.ligatureStack=[];var n=this.getStateMachine(t),r=this.getProcessor(),i=[],o=[];this.glyphs=[],n.traverse({enter:function(t,n){var a=e.glyphs;o.push({glyphs:a.slice(),ligatureStack:e.ligatureStack.slice()});var s=e.font.getGlyph(t);i.push(s),a.push(i[i.length-1]),r(a[a.length-1],n,a.length-1);for(var u=0,l=0,c=0;c<a.length&&u<=1;c++)65535!==a[c].id&&(u++,l=a[c].id);if(1===u){var f=i.map(function(t){return t.id}),h=e.inputCache[l];h?h.push(f):e.inputCache[l]=[f]}},exit:function(){var t=o.pop();e.glyphs=t.glyphs,e.ligatureStack=t.ligatureStack,i.pop()}})}},t}(),function(t,e,n,r,i){var o={};return Object.keys(r).forEach(function(t){o[t]=r[t]}),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=n.slice().reverse().reduce(function(n,r){return r(t,e,n)||n},o),i&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(i):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(t,e,o),o=null),o}(So.prototype,"getStateMachine",[o],rt(So.prototype,"getStateMachine"),So.prototype),So),Fo=function(){function t(e){lt(this,t),this.font=e,this.morxProcessor=new Mo(e),this.fallbackPosition=!1}return t.prototype.substitute=function(t){"rtl"===t.direction&&t.glyphs.reverse(),this.morxProcessor.process(t.glyphs,y(t.features))},t.prototype.getAvailableFeatures=function(t,e){return m(this.morxProcessor.getSupportedFeatures())},t.prototype.stringsForGlyph=function(t){for(var e=this.morxProcessor.generateInputs(t),n=new wt,r=e,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;this._addStrings(s,0,n,"")}return n},t.prototype._addStrings=function(t,e,n,r){for(var i=this.font._cmapProcessor.codePointsForGlyph(t[e]),o=i,a=Array.isArray(o),s=0,o=a?o:it(o);;){var u;if(a){if(s>=o.length)break;u=o[s++]}else{if(s=o.next(),s.done)break;u=s.value}var l=u,c=r+bt(l);e<t.length-1?this._addStrings(t,e+1,n,c):n.add(c)}},t}(),Do=function(){function t(e,n,r){lt(this,t),this.font=e,this.script=n,this.direction=r,this.stages=[],this.globalFeatures={},this.allFeatures={}}return t.prototype._addFeatures=function(t,e){for(var n=this.stages.length-1,r=this.stages[n],i=t,o=Array.isArray(i),a=0,i=o?i:it(i);;){var s;if(o){if(a>=i.length)break;s=i[a++]}else{if(a=i.next(),a.done)break;s=a.value}var u=s;null==this.allFeatures[u]&&(r.push(u),this.allFeatures[u]=n,e&&(this.globalFeatures[u]=!0))}},t.prototype.add=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.stages.length&&this.stages.push([]),"string"==typeof t&&(t=[t]),Array.isArray(t))this._addFeatures(t,e);else{if("object"!==(void 0===t?"undefined":at(t)))throw new Error("Unsupported argument to ShapingPlan#add");this._addFeatures(t.global||[],!0),this._addFeatures(t.local||[],!1)}},t.prototype.addStage=function(t,e){"function"==typeof t?this.stages.push(t,[]):(this.stages.push([]),this.add(t,e))},t.prototype.setFeatureOverrides=function(t){if(Array.isArray(t))this.add(t);else if("object"===(void 0===t?"undefined":at(t)))for(var e in t)if(t[e])this.add(e);else if(null!=this.allFeatures[e]){var n=this.stages[this.allFeatures[e]];n.splice(n.indexOf(e),1),delete this.allFeatures[e],delete this.globalFeatures[e]}},t.prototype.assignGlobalFeatures=function(t){for(var e=t,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i;for(var a in this.globalFeatures)o.features[a]=!0}},t.prototype.process=function(t,e,n){for(var r=this.stages,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;"function"==typeof s?n||s(this.font,e,this):s.length>0&&t.applyFeatures(s,e,n)}},t}(),zo=["rvrn"],No=["ccmp","locl","rlig","mark","mkmk"],Wo=["frac","numr","dnom"],Uo=["calt","clig","liga","rclt","curs","kern"],jo={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]},Go=(Ao=Co=function(){function t(){lt(this,t)}return t.plan=function(t,e,n){this.planPreprocessing(t),this.planFeatures(t),this.planPostprocessing(t,n),t.assignGlobalFeatures(e),this.assignFeatures(t,e)},t.planPreprocessing=function(t){t.add({global:[].concat(zo,jo[t.direction]),local:Wo})},t.planFeatures=function(t){},t.planPostprocessing=function(t,e){t.add([].concat(No,Uo)),t.setFeatureOverrides(e)},t.assignFeatures=function(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(8260===r.codePoints[0]){for(var i=n,o=n+1;i>0&&xt.isDigit(e[i-1].codePoints[0]);)e[i-1].features.numr=!0,e[i-1].features.frac=!0,i--;for(;o<e.length&&xt.isDigit(e[o].codePoints[0]);)e[o].features.dnom=!0,e[o].features.frac=!0,o++;r.features.frac=!0,n=o-1}}},t}(),Co.zeroMarkWidths="AFTER_GPOS",Ao),Ho=new _t(e("AAEQAAAAAAAAADGgAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=","base64")),Vo=["isol","fina","fin2","fin3","medi","med2","init"],qo={Non_Joining:0,Left_Joining:1,Right_Joining:2,Dual_Joining:3,Join_Causing:3,ALAPH:4,"DALATH RISH":5,Transparent:6},Zo="isol",Yo="fina",Xo=[[[null,null,0],[null,Zo,2],[null,Zo,1],[null,Zo,2],[null,Zo,1],[null,Zo,6]],[[null,null,0],[null,Zo,2],[null,Zo,1],[null,Zo,2],[null,"fin2",5],[null,Zo,6]],[[null,null,0],[null,Zo,2],["init",Yo,1],["init",Yo,3],["init",Yo,4],["init",Yo,6]],[[null,null,0],[null,Zo,2],["medi",Yo,1],["medi",Yo,3],["medi",Yo,4],["medi",Yo,6]],[[null,null,0],[null,Zo,2],["med2",Zo,1],["med2",Zo,2],["med2","fin2",5],["med2",Zo,6]],[[null,null,0],[null,Zo,2],[Zo,Zo,1],[Zo,Zo,2],[Zo,"fin2",5],[Zo,Zo,6]],[[null,null,0],[null,Zo,2],[null,Zo,1],[null,Zo,2],[null,"fin3",5],[null,Zo,6]]],Ko=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.planFeatures=function(t){t.add(["ccmp","locl"]);for(var e=0;e<Vo.length;e++){var n=Vo[e];t.addStage(n,!1)}t.addStage("mset")},e.assignFeatures=function(e,n){t.assignFeatures.call(this,e,n);for(var r=-1,i=0,o=[],a=0;a<n.length;a++){var s=void 0,u=void 0,l=n[a],c=_(l.codePoints[0]);if(c!==qo.Transparent){var f=Xo[i][c];u=f[0],s=f[1],i=f[2],null!==u&&-1!==r&&(o[r]=u),o[a]=s,r=a}else o[a]=null}for(var h=0;h<n.length;h++){var d=void 0,l=n[h];(d=o[h])&&(l.features[d]=!0)}},e}(Go),Jo=function(){function t(e,n){lt(this,t),this.glyphs=e,this.reset(n)}return t.prototype.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.options=t,this.flags=t.flags||{},this.markAttachmentType=t.markAttachmentType||0,this.index=e},t.prototype.shouldIgnore=function(t){return this.flags.ignoreMarks&&t.isMark||this.flags.ignoreBaseGlyphs&&t.isBase||this.flags.ignoreLigatures&&t.isLigature||this.markAttachmentType&&t.isMark&&t.markAttachmentType!==this.markAttachmentType},t.prototype.move=function(t){for(this.index+=t;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=t;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]},t.prototype.next=function(){return this.move(1)},t.prototype.prev=function(){return this.move(-1)},t.prototype.peek=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=this.index,n=this.increment(t);return this.index=e,n},t.prototype.peekIndex=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=this.index;this.increment(t);var n=this.index;return this.index=e,n},t.prototype.increment=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=t<0?-1:1;for(t=Math.abs(t);t--;)this.move(e);return this.glyphs[this.index]},ct(t,[{key:"cur",get:function(){return this.glyphs[this.index]||null}}]),t}(),Qo=["DFLT","dflt","latn"],$o=(function(){function t(e,n){lt(this,t),this.font=e,this.table=n,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=e._variationProcessor?this.findVariationsIndex(e._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}return t.prototype.findScript=function(t){if(null==this.table.scriptList)return null;Array.isArray(t)||(t=[t]);for(var e=t,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}for(var o=i,a=this.table.scriptList,s=Array.isArray(a),u=0,a=s?a:it(a);;){var l;if(s){if(u>=a.length)break;l=a[u++]}else{if(u=a.next(),u.done)break;l=u.value}var c=l;if(c.tag===o)return c}}return null},t.prototype.selectScript=function(t,e,n){var r=!1,i=void 0;if(!this.script||t!==this.scriptTag){if(i=this.findScript(t),i||(i=this.findScript(Qo)),!i)return this.scriptTag;this.scriptTag=i.tag,this.script=i.script,this.language=null,this.languageTag=null,r=!0}if(n&&n===this.direction||(this.direction=n||v(t)),e&&e.length<4&&(e+=" ".repeat(4-e.length)),!e||e!==this.languageTag){this.language=null;for(var o=this.script.langSysRecords,a=Array.isArray(o),s=0,o=a?o:it(o);;){var u;if(a){if(s>=o.length)break;u=o[s++]}else{if(s=o.next(),s.done)break;u=s.value}var l=u;if(l.tag===e){this.language=l.langSys,this.languageTag=l.tag;break}}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),r=!0}if(r&&(this.features={},this.language))for(var c=this.language.featureIndexes,f=Array.isArray(c),h=0,c=f?c:it(c);;){var d;if(f){if(h>=c.length)break;d=c[h++]}else{if(h=c.next(),h.done)break;d=h.value}var p=d,g=this.table.featureList[p],y=this.substituteFeatureForVariations(p);this.features[g.tag]=y||g.feature}return this.scriptTag},t.prototype.lookupsForFeatures=function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments[1],n=[],r=t,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a,u=this.features[s];if(u)for(var l=u.lookupListIndexes,c=Array.isArray(l),f=0,l=c?l:it(l);;){var h;if(c){if(f>=l.length)break;h=l[f++]}else{if(f=l.next(),f.done)break;h=f.value}var d=h;e&&-1!==e.indexOf(d)||n.push({feature:s,index:d,lookup:this.table.lookupList.get(d)})}}return n.sort(function(t,e){return t.index-e.index}),n},t.prototype.substituteFeatureForVariations=function(t){if(-1===this.variationsIndex)return null;for(var e=this.table.featureVariations.featureVariationRecords[this.variationsIndex],n=e.featureTableSubstitution.substitutions,r=n,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;if(s.featureIndex===t)return s.alternateFeatureTable}return null},t.prototype.findVariationsIndex=function(t){var e=this.table.featureVariations;if(!e)return-1;for(var n=e.featureVariationRecords,r=0;r<n.length;r++){var i=n[r].conditionSet.conditionTable;if(this.variationConditionsMatch(i,t))return r}return-1},t.prototype.variationConditionsMatch=function(t,e){return t.every(function(t){var n=t.axisIndex<e.length?e[t.axisIndex]:0;return t.filterRangeMinValue<=n&&n<=t.filterRangeMaxValue})},t.prototype.applyFeatures=function(t,e,n){var r=this.lookupsForFeatures(t);this.applyLookups(r,e,n)},t.prototype.applyLookups=function(t,e,n){this.glyphs=e,this.positions=n,this.glyphIterator=new Jo(e);for(var r=t,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a,u=s.feature,l=s.lookup;for(this.currentFeature=u,this.glyphIterator.reset(l.flags);this.glyphIterator.index<e.length;)if(u in this.glyphIterator.cur.features){for(var c=l.subTables,f=Array.isArray(c),h=0,c=f?c:it(c);;){var d;if(f){if(h>=c.length)break;d=c[h++]}else{if(h=c.next(),h.done)break;d=h.value}var p=d,g=this.applyLookup(l.lookupType,p);if(g)break}this.glyphIterator.next()}else this.glyphIterator.next()}},t.prototype.applyLookup=function(t,e){throw new Error("applyLookup must be implemented by subclasses")},t.prototype.applyLookupList=function(t){for(var e=this.glyphIterator.options,n=this.glyphIterator.index,r=t,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;this.glyphIterator.reset(e,n),this.glyphIterator.increment(s.sequenceIndex);var u=this.table.lookupList.get(s.lookupListIndex);this.glyphIterator.reset(u.flags,this.glyphIterator.index);for(var l=u.subTables,c=Array.isArray(l),f=0,l=c?l:it(l);;){var h;if(c){if(f>=l.length)break;h=l[f++]}else{if(f=l.next(),f.done)break;h=f.value}var d=h;if(this.applyLookup(u.lookupType,d))break}}return this.glyphIterator.reset(e,n),!0},t.prototype.coverageIndex=function(t,e){switch(null==e&&(e=this.glyphIterator.cur.id),t.version){case 1:return t.glyphs.indexOf(e);case 2:for(var n=t.rangeRecords,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o;if(a.start<=e&&e<=a.end)return a.startCoverageIndex+e-a.start}}return-1},t.prototype.match=function(t,e,n,r){for(var i=this.glyphIterator.index,o=this.glyphIterator.increment(t),a=0;a<e.length&&o&&n(e[a],o);)r&&r.push(this.glyphIterator.index),a++,o=this.glyphIterator.next();return this.glyphIterator.index=i,!(a<e.length)&&(r||!0)},t.prototype.sequenceMatches=function(t,e){return this.match(t,e,function(t,e){return t===e.id})},t.prototype.sequenceMatchIndices=function(t,e){var n=this;return this.match(t,e,function(t,e){return n.currentFeature in e.features&&t===e.id},[])},t.prototype.coverageSequenceMatches=function(t,e){var n=this;return this.match(t,e,function(t,e){return n.coverageIndex(t,e.id)>=0})},t.prototype.getClassID=function(t,e){switch(e.version){case 1:var n=t-e.startGlyph;if(n>=0&&n<e.classValueArray.length)return e.classValueArray[n];break;case 2:for(var r=e.classRangeRecord,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;if(s.start<=t&&t<=s.end)return s.class}}return 0},t.prototype.classSequenceMatches=function(t,e,n){var r=this;return this.match(t,e,function(t,e){return t===r.getClassID(e.id,n)})},t.prototype.applyContext=function(t){switch(t.version){case 1:var e=this.coverageIndex(t.coverage);if(-1===e)return!1;for(var n=t.ruleSets[e],r=n,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;if(this.sequenceMatches(1,s.input))return this.applyLookupList(s.lookupRecords)}break;case 2:if(-1===this.coverageIndex(t.coverage))return!1;if(-1===(e=this.getClassID(this.glyphIterator.cur.id,t.classDef)))return!1;n=t.classSet[e];for(var u=n,l=Array.isArray(u),c=0,u=l?u:it(u);;){var f;if(l){if(c>=u.length)break;f=u[c++]}else{if(c=u.next(),c.done)break;f=c.value}var h=f;if(this.classSequenceMatches(1,h.classes,t.classDef))return this.applyLookupList(h.lookupRecords)}break;case 3:if(this.coverageSequenceMatches(0,t.coverages))return this.applyLookupList(t.lookupRecords)}return!1},t.prototype.applyChainingContext=function(t){switch(t.version){case 1:var e=this.coverageIndex(t.coverage);if(-1===e)return!1;for(var n=t.chainRuleSets[e],r=n,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;if(this.sequenceMatches(-s.backtrack.length,s.backtrack)&&this.sequenceMatches(1,s.input)&&this.sequenceMatches(1+s.input.length,s.lookahead))return this.applyLookupList(s.lookupRecords)}break;case 2:if(-1===this.coverageIndex(t.coverage))return!1;e=this.getClassID(this.glyphIterator.cur.id,t.inputClassDef);var u=t.chainClassSet[e];if(!u)return!1;for(var l=u,c=Array.isArray(l),f=0,l=c?l:it(l);;){var h;if(c){if(f>=l.length)break;h=l[f++]}else{if(f=l.next(),f.done)break;h=f.value}var d=h;if(this.classSequenceMatches(-d.backtrack.length,d.backtrack,t.backtrackClassDef)&&this.classSequenceMatches(1,d.input,t.inputClassDef)&&this.classSequenceMatches(1+d.input.length,d.lookahead,t.lookaheadClassDef))return this.applyLookupList(d.lookupRecords)}break;case 3:if(this.coverageSequenceMatches(-t.backtrackGlyphCount,t.backtrackCoverage)&&this.coverageSequenceMatches(0,t.inputCoverage)&&this.coverageSequenceMatches(t.inputGlyphCount,t.lookaheadCoverage))return this.applyLookupList(t.lookupRecords)}return!1},t}()),ta=function(){function t(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments[3];if(lt(this,t),this._font=e,this.codePoints=r,this.id=n,this.features={},Array.isArray(i))for(var o=0;o<i.length;o++){var a=i[o];this.features[a]=!0}else"object"===(void 0===i?"undefined":at(i))&&yt(this.features,i);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}return t.prototype.copy=function(){return new t(this._font,this.id,this.codePoints,this.features)},ct(t,[{key:"id",get:function(){return this._id},set:function(t){this._id=t,this.substituted=!0;var e=this._font.GDEF;if(e&&e.glyphClassDef){var n=$o.prototype.getClassID(t,e.glyphClassDef);this.isBase=1===n,this.isLigature=2===n,this.isMark=3===n,this.markAttachmentType=e.markAttachClassDef?$o.prototype.getClassID(t,e.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(xt.isMark),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}}]),t}(),ea=(Eo=Po=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.planFeatures=function(t){t.add(["ljmo","vjmo","tjmo"],!1)},e.assignFeatures=function(t,e){for(var n=0,r=0;r<e.length;){var i=void 0,o=e[r],a=o.codePoints[0],s=k(a),u=La[n][s];switch(i=u[0],n=u[1],i){case Oa:t.font.hasGlyphForCodePoint(a)||(r=C(e,r,t.font));break;case Ta:r=A(e,r,t.font);break;case Ia:E(e,r,t.font);break;case Ba:r=O(e,r,t.font)}r++}},e}(Go),Po.zeroMarkWidths="NONE",Eo),na=44032,ra=55204-na+1,ia=4352,oa=4449,aa=4519,sa=21,ua=28,la=ia+19-1,ca=oa+sa-1,fa=aa+ua-1,ha=9676,da=function(t){return 4352<=t&&t<=4447||43360<=t&&t<=43388},pa=function(t){return 4448<=t&&t<=4519||55216<=t&&t<=55238},ga=function(t){return 4520<=t&&t<=4607||55243<=t&&t<=55291},va=function(t){return 12334<=t&&t<=12335},ya=function(t){return na<=t&&t<=55204},ba=function(t){return t-na<ra&&(t-na)%ua==0},ma=function(t){return ia<=t&&t<=la},wa=function(t){return oa<=t&&t<=ca},xa=function(t){return aa+1&&1<=t&&t<=fa},_a=0,ka=1,Sa=2,Ca=3,Aa=4,Pa=5,Ea=6,Oa=1,Ta=2,Ia=4,Ba=5,La=[[[0,0],[0,1],[0,0],[0,0],[Oa,2],[Oa,3],[Ba,0]],[[0,0],[0,1],[Ta,2],[0,0],[Oa,2],[Oa,3],[Ba,0]],[[0,0],[0,1],[0,0],[Ta,3],[Oa,2],[Oa,3],[Ia,0]],[[0,0],[0,1],[0,0],[0,0],[Oa,2],[Oa,3],[Ia,0]]],Ra=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],Ma=[!1,!0,!0,!0,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!1,!1,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0],Fa=[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]],Da={stateTable:Ra,accepting:Ma,tags:Fa},za=["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","VS","N","HN","MAbv"],Na={2507:[2503,2494],2508:[2503,2519],2888:[2887,2902],2891:[2887,2878],2892:[2887,2903],3018:[3014,3006],3019:[3015,3006],3020:[3014,3031],3144:[3142,3158],3264:[3263,3285],3271:[3270,3285],3272:[3270,3286],3274:[3270,3266],3275:[3270,3266,3285],3402:[3398,3390],3403:[3399,3390],3404:[3398,3415],3546:[3545,3530],3548:[3545,3535],3549:[3545,3535,3530],3550:[3545,3551],3635:[3661,3634],3763:[3789,3762],3955:[3953,3954],3957:[3953,3956],3958:[4018,3968],3959:[4018,3953,3968],3960:[4019,3968],3961:[4019,3953,3968],3969:[3953,3968],6971:[6970,6965],6973:[6972,6965],6976:[6974,6965],6977:[6975,6965],6979:[6978,6965],69934:[69937,69927],69935:[69938,69927],70475:[70471,70462],70476:[70471,70487],70843:[70841,70842],70844:[70841,70832],70846:[70841,70845],71098:[71096,71087],71099:[71097,71087]},Wa=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],Ua=[!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0],ja=[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]],Ga={categories:za,decompositions:Na,stateTable:Wa,accepting:Ua,tags:ja},Ha={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,SM:256,VD:512,A:1024,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:1<<17,Symbol:1<<18},Va={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},qa=Ha.C|Ha.Ra|Ha.CM|Ha.V|Ha.Placeholder|Ha.Dotted_Circle,Za=Ha.ZWJ|Ha.ZWNJ,Ya=Ha.H|Ha.Coeng,Xa={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:Va.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:Va.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:Va.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:Va.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:Va.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:Va.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:Va.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:Va.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:Va.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:Va.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:Va.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},Ka={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},Ja=Ga.decompositions,Qa=new _t(e("ABEAAAAAAAAAAMKgAbENTvLtnX+sHUUVx/f13nd/vHf7bl+FRGL7R0OJMcWYphBrimkVCSJR2xiEaLEGQ7AkBGowbYRSgj8K2B/GkpRYE6wlQSyJKCagrSlGkmqsqUZMY7S2CWkgqQViQSkt4Hfuzrx77tyZ2fm1u+/RPcknuzs7O3PmnDOzs7N73zteS5KXwKvgDTCnniTvBfPBJeAVpP2vFr69GGUtAkvAModyr0DeT4BrwCpwPVgDbga3ga+DjYbyluLcCvBN8F2wGWwHO8Ej4DjyPIbtz0DCeZpvD4CD4E/gb+AoOAFOgtPgLKiNJkkbTIKLwALwfvAh8GGwHFwFPg2uAzeCm8Ft4E5wN7gPPAi+D34AfgR+Ap7kx8+AZ8HvwZ/BEXAMvAheAa+Bc6OpzvVGknTABY30eB62C8GlYDFYCpaDq/n5z2J7PVgDbgG3N1KbrOdbWzby/N/G9i6wlR8/wLebUNcOll7vX7PLsQ4bdpAy92B/L3gK7AO/A38EfwX/AC+AkyT/m3x7mqdtYz7Gfq2ZJOPgPc3UXu/D9uJmmmcRT1uC7TJwZTONJxFL1+J4JbgBrAG3gNv5Nev5dhO2m3l54rqtON7RNLd1V8Z5auMfI+8Wbvv12P4Ux78AvyZl/Bb7fwD34HwH/EVR/t8t6rRlrYgFlHnMsdyXIupRFP+Gzv8Bb4CklSSjrTR9bz21uZx/Nj8v+uIFOJ4HFnJo3kWtNG6WkPSzBl1YbC8jeVfx+q+R9Pg48lxN8jFdhd8+01LrLTCdq6io8GNb1a8qKioqKioqKioc2cbXGcrWQ2Ynf9a9rmV/zVua9Dc16V/gz8pfxvar4A6wAdwL7gdbwUPgh+BR8AR4qpWuLe3D9gA4CA6DI+AoOAFOtdL1nNexfYs937fxDA8ubKf1zmv3dViI/Uvb9m2sqKioqAiHrVtehrH3TK2/3l4WZduioqIiDq+Rd1Jbef9ehnHmSnCtNNf7nOPcr8PHilO8jrfBF9v996lfwf6tUpl3tPvvdSjsvcwGnLt3Gsw/kzkpK8CdYH83my3Id0iT91WkL5xMktXgIfD85OD54zjfmYu5OFgN7h1LkmdBMg5fgbvAChzv49ujfEuZ3xlOk7kReTaSfL/B/jl+fMXsJLkb7AcPj8TlHC/zsgnYcyLd3zSh1vGAJr2ioqKiIn/eKXkMjn3/cWF5t/z6y37+K5urwP2YB36vPfw8yr7zeRjpu8g8cTf2H2+n89EtivLE93fs27Ez/Br2vM2+qWPl/ZyX9StFfQxW5v724PPxzXz7XHu4Pps5Jvtmiq13szmzfP0hlHkYHGn358bHeD0vYvsy+K+kz9vt/jy8gT40G1w4Rua0PN98nnaGf/e1G+mXIO2DY8P6Xz7WPz7Ky/7omJ0PBff4+B91fAqsAp8HXwI3gR04txbbdWDDWDpP/g7Yxs6BXWAP2AueJHo+M5bOpw+Cw+AIOApOgFMW7Xkdec6AkXH1+QfgyzbOTY73jy/C/gJ+/CCOP4D9xfz4I9h+TFMWtf9SRWzZwq7f0yi/L9voWSRbDfV/clx/3TuKfjoT26/iX813URx4tiVG3ay/sfFuJenb7J50A4mr1di/CZzLKZ6y2reunup4qzT+fM0wHp0PUD9+A7bYNJ5fn3eNP/Ft5bc0+S4n9/l1Gj+K82zesd1wfj3fZ79h2YyyVvLj7djfCR4xjJEyuy1+S/FyDt/MPwodn5hB8axrxy9nSBtYjOyHrs+BQ+B58E+u+wsWbWBtpb/hYL8RuA/pJ8fT2GffX+wl+daSa08jz9nxNG2k4963XBG/ZVhpUS573mh3BtPo7x/Eb7pE2yd5XvZssY/M/RZLc9SLeDsfD5gfTidi9//pwrzWu7t9lKcN7dxynthAh8vcKrQu1frHTGKBNF662KfoOXU1FsaFxe6x2kjClkBnGvXxwX0bytZ5unK+S9n2jxabTc5M0HUaIyTrfFa+Ljmflc9Xz7JtNdPa4eKz6WAPlb5l6xfLBzopWxcfncvSf7rHRJk2KSN2bKRsvcu2UZmxVIb9qd551e8rZcTERGuQ+qwIjERkjl2+djOlhWfpibnp/qxmP92FVr1/bc9GYxxuI5o3UzdukzYpj+H6nOxra9nHiaksjhDdsasPe9ca/CvOU1GVwUT4t8P921H4T8gsnkdIh+dn/pXrU0mnOZw21CbJv1P5LP0r4jtkbLH171BbCvavnFfeZ8L8K2wv/CuQRU6n/qWSNSbr2mO8xtK/U+Mq6Y/1yQyFJHHtv8Kn2uOC/Gvbf2VEPxJ9SvhY5d+Q+y21iRxLruOzsY6MWGrOkPHZ1b+jFuPzqEX/VcmoZkyIPT53k36/DZnrMd+K/Dbjs6kv6+6VYl9OU+WT07TplvMvWWhfVo3f4t48S+rbjIZl/1b5Xyd5vJdQiTyf7tUdMlbn0J9d/cn6c7M5DO1TNF0+bmT0Z3qdKaaoXeg1Lv7NEhufzyT/6vIKEeO1jX/psdi38a889qpkStcI/u12U3zE1Re+/Yv6QNwvdTDJGi9t2ps1XtKYDJ0PmcZKcU812sRxvms7J47mZ5c+SWJD5LPRg4qqj+nWL8Q5sRVrGar1EG0sOI6ndH3DVWL7wpeuwaY6O1Nh19N+Oqs5uI7Eto3aICxNrCn5rAuZ7Cn2bdJtfZPlL/k8Ld+ki6v9E56XPUvT52mV/YVvmMj2Zz8TEuNMTxfHuFfFUJ60OLrz1utODnFG47fLbSjXy0xSy4gN63EywlhMxWcNmK71svszi5OGTvdJe3rtd8ifB6I/mKBr1ap7uU/sqqTsMb+H5fxBFyuq+yqLnd7cmj33TwyOVVOwuj3nVXRtQtUGWR9jzI6kecZrKSKPuFakU2hZmXXZMDlsS1W9jBavv6eHpf3EtfJ7mKwYV0lX2g9FVY5N+Ung9aH1590+n3KLgEredfiez6u9svisY/Suk9Jsnkli1a+C1m/T7rzqd5UY9mfiXX9R92ibdZUIawTC96b1GBn6rDG1JsPv/b392SkiXVUGmyN0LO5LYi46Zf/Adc/QMaCo8TtG/bH1Z/TsW1QfUPRjm2cZee5PRaT33lEbnhlMax4qe1o/Y8a0icdaoOv9bsh+Hj6jonueoGtHumcMlX9lxLxXq7/D84fSzznGt6rtUerXxYU47/IcPeG3vqBbJ1StETZqg9fS2Akd/0Ovp+/CxD3P+/6bQwzJtsvyh5w+XjeXH9KfXGH3/VbSX4tS4XoftPZbnvcyxX1G5QvW1wbWTkbs7c3mTco6NWODbdxk3R9lGZo/aGxhiknTmETXLVs1c90u9+mBGCf6hs6fsmTq29sxPv8d82CuhCpNjGNjg31blGHrz1i41hd6nuYzbU3XhLQzj7Jt67Otw0uXUdDoH8e4F/joMdVui2dMJc3E+Tetvr6jEtPnPhJaVwz9Y7TDVlx1qnfitlEbtzlTVD0qX/pcm1esxI65PO3mU4eNrr5SZMz46FDE+aIlb5tntb1o/WOUETsW847pvNpaZH225eUpNnrS9yDy9wTysyr9XVOe63+qd3M6e4X6Ptd1Dpc1SdV53ZqFag1hpP+bE5f4ivY74BzXilzWWW1+S0TjJng91Gd9wmbNgpMVz6W8d7GJZwWtWp8p++c8fpjW0Vzff3dJfzGuoersEtnmpjVLupY48H6o7n8/C+kvJn+Lcd6q3QHx3usvZax3W8apvP6rev+UJSHfiCYe/h2aTwTaRi5DO28ZSd9zNhTfJ8b2je7drOo9HtNNbPMW03zOpq2qNqnKFN+0huhlMye2Pe9TdzfCedfxMlRfG7xjncaJ7fiXMYZk3X+ZvuKbXCGh8y8XH8TybajPTfq4tjG2/qb0RJO3SB19ba2SMuoNbW8R/g653qa9sdsRYsssu+ZxPss+tnayFd94yjofEi+hZdvo73q9jd3yisUYbfEpQ9XmMqUIm2fFZh4xkZeE1BNDL5v+ZcqXh/90bSwjflz8U0QcFWHzPOpy0amM+stqf1ad7LltVPqWmG3p3+GiIvLJf8duYA3NcBwbWRpkDXmo7RP+z5E6+8Xswz512dbrW2aMNrpKaBt9y45VR2j9efhAQL/PF38Xadq907NYC5dpZLy3kMX6PUHgeGGS3nfoPn9rObJ9s/4uMntnSt/J5TX+2ZRhtFcB8ZgVmyZbit8GCd/7/C7EOcYK7LdyjNhIlL81nqN/Xf9mOHt/anovP4X0tyem/OUZF9TmscY2nzEulq96ZeVwv2Bxxnwk3s9njT8m/YWOKl199fe53tTXyu5DLojfKWXej6R3RAPtDf1ex/PvtdJ8Q7aP7Ht6XpdXSJf8/wMdQuS/j0/HtKny9KbT+oT2K2ETuW7Tt09Uss5nCdWhjPuMTXzrztO4FHMy+V6TJaH9I6+2C5HPq9oc8xlKRva5rF8M/7tC26/6BsNFivQ//e1pVsyP19VrNrH1D5Wi7oUDdVp8Q5HVr1ztlzXPtH2Gc30+lMX3edH3ecm3fp0+Ps/IPvWH6OpiV7meEMlbzyIkpi1jtDU0Pmm6nMd0jU8bXK7N0jWkb/joHyNebfWgtrJpc0h7QiQP24aKqcwYPnTRIUmG63fRQ5VXLsekgy5NtVXVadLfpjzV9S6xYnuNri159ZmsmLCpJ8/6XSRGOaH659H+GLYtwhd51xvq31B9Qm0UavM84qhoKaNOnfwf","base64")),$a=new kt(Da),ts=(To=Oo=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.planFeatures=function(t){t.addStage(B),t.addStage(["locl","ccmp"]),t.addStage(z),t.addStage("nukt"),t.addStage("akhn"),t.addStage("rphf",!1),t.addStage("rkrf"),t.addStage("pref",!1),t.addStage("blwf",!1),t.addStage("abvf",!1),t.addStage("half",!1),t.addStage("pstf",!1),t.addStage("vatu"),t.addStage("cjct"),t.addStage("cfar",!1),t.addStage(N),t.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),t.unicodeScript=d(t.script),t.indicConfig=Xa[t.unicodeScript]||Xa.Default,t.isOldSpec=t.indicConfig.hasOldSpec&&"2"!==t.script[t.script.length-1]},e.assignFeatures=function(t,e){for(var n=e.length-1;n>=0;n--)!function(n){var r=e[n].codePoints[0],i=Ka[r]||Ja[r];if(i){var o=i.map(function(r){var i=t.font.glyphForCodePoint(r);return new ta(t.font,i.id,[r],e[n].features)});e.splice.apply(e,[n,1].concat(o))}}(n)},e}(Go),Oo.zeroMarkWidths="NONE",To),es=function t(e,n,r,i){lt(this,t),this.category=e,this.position=n,this.syllableType=r,this.syllable=i},ns=Ga.categories,rs=Ga.decompositions,is=new _t(e("AAIAAAAAAAAAAKnQAVEMrvPtnH+oHUcVx+fd99799W5e8mx+9NkYm7YUI2KtimkVDG3FWgVTFY1Fqa2VJirYB0IaUFLBaKGJViXir6oxKCSBoi0UTKtg2yA26h+milYNtMH+0WK1VQyvtBS/487hnncyMzuzu7N7n7kHPszu7OzMmTNzdmdmfzzfUmpiUqkemAMbwSZwKbjcxM1XEL4VvB28G3zAk+56cLMlfgdYADvBbvBF8GWwH9xl+CFLfwj8BPwU/MKS38/AMfA86v9ro9ucQcdR+CjCP4CT4EnwDPg3eAFMTik1A+bAPNgINoFLwGawZSpLfzXCrWAb+AjYDm4BO8FusAfsA/vBXeAgOALuNfv3g4fAcXACPAaeAE+B58Bp8NJUpnN7WqlZsHY629+A8GLwWvAG8BZwJXinOf5ehB8EN4AdYGE6q7dmF9uugs8hvz0V58nZK/L+Kva/BX4ADoN7prP6HgUPgkfA73L0eQzHnwBPgX+Y80+DF8FUW6lBO4tbjXA9uAi8pj3sS2/E9mawBVwNtoJt5pzrTXgzwk+B7awP7sT+7nY6WxFfQBlfAl8H3wU/Anezcu/D9s/BMRN3HOEJ8EdwMkC/J5HmmXZmq2fBIjgEVEepbieLX4Fw0MnSrzRxmrVsm7MB8ReDV4vjr3ekJy7rZGVPMb196Xm6oug83oRyt4CrwDVgK9gGPtzxn3uTOD6YPDPNJ5Hm0+AznazffJ7Z4KSnXncg3VfAN8EBhx42/z/UGdbrx52sr9yH8AFTrt5+2GzfnWPbKuw7ZszZyNh/xowZM2bMmDFjxsQyZ5lPNs3h9nBNYHuAfr9ic9ffiHnsJzznU91/j3P+2snWYf6G8O/gn+A0eMnEt7vQp5ulX4NwHmwEm7rZ8UsRXg6uMPvXIHwPuK7rLl+nu9FzfMyYMWPGpGVuslmarv+YMWPSkNq/d2D8uNDNngvdivA2y3jy9m72bF9v3ymOf2MExp8fG2TsAcfA2wJYBJetWBq3i+0fwPafwLmzSl0LFmZNPMLHZ4fpnsX2AdjgcXB+T6kPge+AG7D/vXYW/tLsc9r9M+MkVyLNR1m6g9g+ZfYvmMExcHCm+ftP0+T5y/e17Uw/PYLwHnC0m80TH+zG30/3mjSDnPS2/B4pUJ4rX3n+b5H3o92l6UjfvZ7y/oJzToGnu8O66XTPYf8/Jr8XWL6TPXf9bPnHtmVs+89AnxVgDVgPLgKvAg+Y/F6H7c1gC7jKHH8XeJ/x15vAjt4wvwVs7wKfBXvAPvA18G1wsJevj36f5gjS3etIq+ft9+PYQ73h/nFsn2D7f+5l75bo/VPYftpTblFb2/Jo2pdjfL0uXOX/qxfnp8vZVk2Xv9hbmu+LxvYt3A/7/WZsPoptPkr9bdCv1ya+d4TuMO8Tre5n4XkILwSbzP4l/WHazX1//r2O/z7cFHnvSYW8R/Vm02ZXIHxHze1Xdf9bbn7p0z2kDroNr2X9WL+7937sX9fP+v9h9n6jTrfI3jG9EfsfN3G35PR/G4uRfY3eMTwdkFa/C3hrf2kcfy/xYTOmprrfZsLbEe7rDPW/U9Rrv9k/ahmTL0cWWxP/YxRkgtES+zwNhZPs+FQgMj/liEsto2HxsZBQX2pZoLZqWc5riXDaQBLSt1L3hcnE+Vct7aYVKCEhbXk2+b7NZ84mmXAwCiL14Ne85S62MYPcXi5StM/YxlJF2lfabznZsC6/C807xvZV+yFve9d1KY//d3HNO8pKUXuTDh0Gpp7B852q6QFMgdWM2dfbAxOuEPQEfcEsO5fquJLZrMfyCtWP0heZF6oSdiH9u4aQvJRIJ/eL6BBynItLp5D2JRkY5L5u3xAf6lviXHWSZcfaKO/+5zvO/c9Xtq8uRXSObd+8bS0zJrS1rxTyX7k/a0nrk5D+mHeOC90uq1Q216X57lykfqHt62uTGJ2rat+i/kttyq/RSi29PlclZf2Xxq55ZeSV34T96d5X5PqZJ9I3ZX2lnkXt3xL1Kyrav/LutbZ6uGxuS6ss6V3pXOXY4kP7EBfyJT7+4TJQS9uf74f6n+3+6ZIi9bCtieatFfCxUMx4KMYfy/pzrB30vm88q9SZ11K+n9eeNN612UFKWX8uI9TmRca7TbWvKy2JvF6naF+b/0uRupZp35cZikhZvyniY2R/CbdB3vXynIC6hbRBHf4l1xps6w4x/lVEtxRtGZMuRA8uNh/jfYV8kdpsBUszcODrD7E2JT2KrB3V6XMhbdNjcXItxzaOJWkpf976/I5glQn1sbLP86U9FQvz4l0S28/lcWUJbbrE2l+Z/TlHvi4/kvZXLMyrmy1PW7x8hl6UFgvlmNM1Jq3aJ3Se0yJcpdwS6mOp/ZgLX5N1rdFKaIzH9ztquMbqq+/qCFRk+hRoyZvrTHuO8fNd/djmEzZJ3TdisN1bNQNl7y96DV/3mVkTtwasVdk1ai6ybGlDek8nT1fXc4M5tVSPvhqOsWQeXQs8L1n3IradU8OxCeVjK7dr7Dpl0cMHnUvt18TzfVsfb/pZY56fV2GnVPVIYaOi9xcZJ8cmKcu3wcuPsVHV5cdKFfZXNZefp5sWft+wzR1cczKCxh99NRx76HvwOpWNv6YZtAajt6WPyPswtVVs/VOJ7xpYx3VR31er7gMxNuV9Q443CDlW43KuYSXblsybfKYt58trfez7A1X7Tdm+V7TcoudL+LpVGf2khN63U5OyD5Af0NoUv06l7Jc0Rte+so4xL9Ayy3Rz+SufY5Jf267xcm7J4dd3kumIOrmk7Pl549bUY1puI91Gdb8Tpu+9tjmhXFdwtfVsTv5SQvXKW0cK4eXgPBO6iJ07NNVOHH7/tF1jyJdnWbrU/Uau3VNI156QZ2ZaZFu76i6vQXy9YJ2H9QZ97aF3p1xlx1yfuYRcd0Kl7NyaX190+pUOKI0tvus5j7/nSWKLo3FER8R3LHEx8gqwge1POgi1l1yfirV3zHpISHxs3vLeFXOellcG1DFGbGP00PPkeKEOaXIsqhzbruOh9Qk5L08nW2grJ0avsvWocv0zRh/fGCG0TV35hB4v0rds5Vddjm/sFCKx+aXSt2yalPZsolxXW46CDnXp0YQ0rdso9OUYPSYT6+yzuxxzlrVfFfavQ/LKqsP+dbVzE/0qRb8pKin6V9U6Fnn24pqHufLMWy90nV+0DkXmcrb0Uq+6pU7/qcs/67SHTeTaaBk9ipyXQvLqW1U7uPKpux/ESlP9umydR8H3UjzHoXxj0/J1Yr5ubHsPrWOJqxK+hk5r+EVtH3pe1XWIXa+1vQ9YJ/oZre1bGReh3xKWeX7BxfYstwh5errGJi59be8482cSsfUPQT4Xlc9K+XMmatcY0fo2+SxYQs/4XO8M03Ng/TxujYH+FRELSdH+6mtveu8itb1Cy7C9X8GfsVOcfN86RHg56wJ0ob5qOz/E/rIdq7YhF34/0cfoeWKVftJjIbWDbDfXeXR/prBOKWJ/3dd43+sr+32TvgEIEZ6/7Zt5/l7ghMm77u+ey4gcz5xfktA5vE9C5vy2Y3lpXeX40tHcLMX42qZHS/ltZluXiSlDxillt3VdIvufbc0j75wy5aWaOxWRUZmfl5nDSh3LzoWbXJOg8uumKkndp1PnH2IPfe+U33z7vjWhdPQuWMh4raqxWMh9X89RZtSZ7/JpyXs3NWQcETN3CZHU/lmVnstZB1+ZfM5A/1VJ2V9t8wTXN1S+f27mzaulbCxJHePwC1Tz/0K1/VdPvtOsba+vL7ZxM1/jakJ/V9/yfdtNx+i7bhVRRll/rrK+sk3qLt/3T0afH+tzz1HDfxzZ/HlGDduK1y/GL21zvKptQGWFSpVlFm0z+ZxD/vdAt9EqQ971NkRHW7qytog53+cfVfeFGLStfddfYka5x6dl+yi//4z6/559aUn4/+/k2pv8BqfM/0qVCnu+If2OJPRZUcyzJF/5RQm5xtM9ln+LRN+8U9+iMQS1Veg9q2z/TlV3Ett3/rLOIXOookidy/5X3GYD+S8a1z2e0vH695T9vhEqdbY//0dU3jWZ2rYq/cvCRT8r08/NLlT5/zySdSurv1ybLiup5tAp5+NNzfPJ5r61warapajItfTQNeK610/rWEMPyb+uOo/ierRNbGU01Z+rqneIPWNsT9t1rD+OYr8rm0eKvp/Ch1P4Yepyy+hWVD/f+VWXX5X+TZdfZZ+KLb9J+S8=","base64")),os=new kt(Ga),as=(Bo=Io=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.planFeatures=function(t){t.addStage(j),t.addStage(["locl","ccmp","nukt","akhn"]),t.addStage(G),t.addStage(["rphf"],!1),t.addStage(H),t.addStage(G),t.addStage(["pref"]),t.addStage(V),t.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),t.addStage(q),t.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])},e.assignFeatures=function(t,e){for(var n=e.length-1;n>=0;n--)!function(n){var r=e[n].codePoints[0];if(rs[r]){var i=rs[r].map(function(r){var i=t.font.glyphForCodePoint(r);return new ta(t.font,i.id,[r],e[n].features)});e.splice.apply(e,[n,1].concat(i))}}(n)},e}(Go),Io.zeroMarkWidths="BEFORE_GPOS",Bo),ss=function t(e,n,r){lt(this,t),this.category=e,this.syllableType=n,this.syllable=r},us={arab:Ko,mong:Ko,syrc:Ko,"nko ":Ko,phag:Ko,mand:Ko,mani:Ko,phlp:Ko,hang:ea,bng2:ts,beng:ts,dev2:ts,deva:ts,gjr2:ts,gujr:ts,guru:ts,gur2:ts,knda:ts,knd2:ts,mlm2:ts,mlym:ts,ory2:ts,orya:ts,taml:ts,tml2:ts,telu:ts,tel2:ts,khmr:ts,bali:as,batk:as,brah:as,bugi:as,buhd:as,cakm:as,cham:as,dupl:as,egyp:as,gran:as,hano:as,java:as,kthi:as,kali:as,khar:as,khoj:as,sind:as,lepc:as,limb:as,mahj:as,mtei:as,modi:as,hmng:as,rjng:as,saur:as,shrd:as,sidd:as,sinh:as,sund:as,sylo:as,tglg:as,tagb:as,tale:as,lana:as,tavt:as,takr:as,tibt:as,tfng:as,tirh:as,latn:Go,DFLT:Go},ls=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype.applyLookup=function(t,e){var n=this;switch(t){case 1:var r=this.coverageIndex(e.coverage);if(-1===r)return!1;var i=this.glyphIterator.cur;switch(e.version){case 1:i.id=i.id+e.deltaGlyphID&65535;break;case 2:i.id=e.substitute.get(r)}return!0;case 2:var o=this.coverageIndex(e.coverage);if(-1!==o){var a,s=e.sequences.get(o);if(0===s.length)return this.glyphs.splice(this.glyphIterator.index,1),!0;this.glyphIterator.cur.id=s[0],this.glyphIterator.cur.ligatureComponent=0;var u=this.glyphIterator.cur.features,l=this.glyphIterator.cur,c=s.slice(1).map(function(t,e){var r=new ta(n.font,t,void 0,u);return r.shaperInfo=l.shaperInfo,r.isLigated=l.isLigated,r.ligatureComponent=e+1,r.substituted=!0,r.isMultiplied=!0,r});return(a=this.glyphs).splice.apply(a,[this.glyphIterator.index+1,0].concat(c)),!0}return!1;case 3:var f=this.coverageIndex(e.coverage);if(-1!==f){return this.glyphIterator.cur.id=e.alternateSet.get(f)[0],!0}return!1;case 4:var h=this.coverageIndex(e.coverage);if(-1===h)return!1;for(var d=e.ligatureSets.get(h),p=Array.isArray(d),g=0,d=p?d:it(d);;){var v;if(p){if(g>=d.length)break;v=d[g++]}else{if(g=d.next(),g.done)break;v=g.value}var y=v,b=this.sequenceMatchIndices(1,y.components);if(b){for(var m=this.glyphIterator.cur,w=m.codePoints.slice(),x=b,_=Array.isArray(x),k=0,x=_?x:it(x);;){var S;if(_){if(k>=x.length)break;S=x[k++]}else{if(k=x.next(),k.done)break;S=k.value}var C=S;w.push.apply(w,this.glyphs[C].codePoints)}var A=new ta(this.font,y.glyph,w,m.features);A.shaperInfo=m.shaperInfo,A.isLigated=!0,A.substituted=!0;for(var P=m.isMark,E=0;E<b.length&&P;E++)P=this.glyphs[b[E]].isMark;A.ligatureID=P?null:this.ligatureID++;for(var O=m.ligatureID,T=m.codePoints.length,I=T,B=this.glyphIterator.index+1,L=b,R=Array.isArray(L),M=0,L=R?L:it(L);;){var F;if(R){if(M>=L.length)break;F=L[M++]}else{if(M=L.next(),M.done)break;F=M.value}var D=F;if(P)B=D;else for(;B<D;){var z=I-T+Math.min(this.glyphs[B].ligatureComponent||1,T);this.glyphs[B].ligatureID=A.ligatureID,this.glyphs[B].ligatureComponent=z,B++}O=this.glyphs[B].ligatureID,T=this.glyphs[B].codePoints.length,I+=T,B++}if(O&&!P)for(var N=B;N<this.glyphs.length&&this.glyphs[N].ligatureID===O;N++){var z=I-T+Math.min(this.glyphs[N].ligatureComponent||1,T);this.glyphs[N].ligatureComponent=z}for(var W=b.length-1;W>=0;W--)this.glyphs.splice(b[W],1);return this.glyphs[this.glyphIterator.index]=A,!0}}return!1;case 5:return this.applyContext(e);case 6:return this.applyChainingContext(e);case 7:return this.applyLookup(e.lookupType,e.extension);default:throw new Error("GSUB lookupType "+t+" is not supported")}},e}($o),cs=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype.applyPositionValue=function(t,e){var n=this.positions[this.glyphIterator.peekIndex(t)];null!=e.xAdvance&&(n.xAdvance+=e.xAdvance),null!=e.yAdvance&&(n.yAdvance+=e.yAdvance),null!=e.xPlacement&&(n.xOffset+=e.xPlacement),null!=e.yPlacement&&(n.yOffset+=e.yPlacement);var r=this.font._variationProcessor,i=this.font.GDEF&&this.font.GDEF.itemVariationStore;r&&i&&(e.xPlaDevice&&(n.xOffset+=r.getDelta(i,e.xPlaDevice.a,e.xPlaDevice.b)),e.yPlaDevice&&(n.yOffset+=r.getDelta(i,e.yPlaDevice.a,e.yPlaDevice.b)),e.xAdvDevice&&(n.xAdvance+=r.getDelta(i,e.xAdvDevice.a,e.xAdvDevice.b)),e.yAdvDevice&&(n.yAdvance+=r.getDelta(i,e.yAdvDevice.a,e.yAdvDevice.b)))},e.prototype.applyLookup=function(t,e){switch(t){case 1:var n=this.coverageIndex(e.coverage);if(-1===n)return!1;switch(e.version){case 1:this.applyPositionValue(0,e.value);break;case 2:this.applyPositionValue(0,e.values.get(n))}return!0;case 2:var r=this.glyphIterator.peek();if(!r)return!1;var i=this.coverageIndex(e.coverage);if(-1===i)return!1;switch(e.version){case 1:for(var o=e.pairSets.get(i),a=o,s=Array.isArray(a),u=0,a=s?a:it(a);;){var l;if(s){if(u>=a.length)break;l=a[u++]}else{if(u=a.next(),u.done)break;l=u.value}var c=l;if(c.secondGlyph===r.id)return this.applyPositionValue(0,c.value1),this.applyPositionValue(1,c.value2),!0}return!1;case 2:var f=this.getClassID(this.glyphIterator.cur.id,e.classDef1),h=this.getClassID(r.id,e.classDef2);if(-1===f||-1===h)return!1;var d=e.classRecords.get(f).get(h);return this.applyPositionValue(0,d.value1),this.applyPositionValue(1,d.value2),!0}case 3:var p=this.glyphIterator.peekIndex(),g=this.glyphs[p];if(!g)return!1;var v=e.entryExitRecords[this.coverageIndex(e.coverage)];if(!v||!v.exitAnchor)return!1;var y=e.entryExitRecords[this.coverageIndex(e.coverage,g.id)];if(!y||!y.entryAnchor)return!1;var b=this.getAnchor(y.entryAnchor),m=this.getAnchor(v.exitAnchor),w=this.positions[this.glyphIterator.index],x=this.positions[p];switch(this.direction){case"ltr":w.xAdvance=m.x+w.xOffset;var _=b.x+x.xOffset;x.xAdvance-=_,x.xOffset-=_;break;case"rtl":_=m.x+w.xOffset,w.xAdvance-=_,w.xOffset-=_,x.xAdvance=b.x+x.xOffset}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=p,w.yOffset=b.y-m.y):(g.cursiveAttachment=this.glyphIterator.index,w.yOffset=m.y-b.y),!0;case 4:var k=this.coverageIndex(e.markCoverage);if(-1===k)return!1;for(var S=this.glyphIterator.index;--S>=0&&(this.glyphs[S].isMark||this.glyphs[S].ligatureComponent>0););if(S<0)return!1;var C=this.coverageIndex(e.baseCoverage,this.glyphs[S].id);if(-1===C)return!1;var A=e.markArray[k],P=e.baseArray[C][A.class];return this.applyAnchor(A,P,S),!0;case 5:var E=this.coverageIndex(e.markCoverage);if(-1===E)return!1;for(var O=this.glyphIterator.index;--O>=0&&this.glyphs[O].isMark;);if(O<0)return!1;var T=this.coverageIndex(e.ligatureCoverage,this.glyphs[O].id);if(-1===T)return!1;var I=e.ligatureArray[T],B=this.glyphIterator.cur,L=this.glyphs[O],R=L.ligatureID&&L.ligatureID===B.ligatureID&&B.ligatureComponent>0?Math.min(B.ligatureComponent,L.codePoints.length)-1:L.codePoints.length-1,M=e.markArray[E],F=I[R][M.class];return this.applyAnchor(M,F,O),!0;case 6:var D=this.coverageIndex(e.mark1Coverage);if(-1===D)return!1;var z=this.glyphIterator.peekIndex(-1),N=this.glyphs[z];if(!N||!N.isMark)return!1;var W=this.glyphIterator.cur,U=!1;if(W.ligatureID===N.ligatureID?W.ligatureID?W.ligatureComponent===N.ligatureComponent&&(U=!0):U=!0:(W.ligatureID&&!W.ligatureComponent||N.ligatureID&&!N.ligatureComponent)&&(U=!0),!U)return!1;var j=this.coverageIndex(e.mark2Coverage,N.id);if(-1===j)return!1;var G=e.mark1Array[D],H=e.mark2Array[j][G.class];return this.applyAnchor(G,H,z),!0;case 7:return this.applyContext(e);case 8:return this.applyChainingContext(e);case 9:return this.applyLookup(e.lookupType,e.extension);default:throw new Error("Unsupported GPOS table: "+t)}},e.prototype.applyAnchor=function(t,e,n){var r=this.getAnchor(e),i=this.getAnchor(t.markAnchor),o=(this.positions[n],this.positions[this.glyphIterator.index]);o.xOffset=r.x-i.x,o.yOffset=r.y-i.y,this.glyphIterator.cur.markAttachment=n},e.prototype.getAnchor=function(t){var e=t.xCoordinate,n=t.yCoordinate,r=this.font._variationProcessor,i=this.font.GDEF&&this.font.GDEF.itemVariationStore;return r&&i&&(t.xDeviceTable&&(e+=r.getDelta(i,t.xDeviceTable.a,t.xDeviceTable.b)),t.yDeviceTable&&(n+=r.getDelta(i,t.yDeviceTable.a,t.yDeviceTable.b))),{x:e,y:n}},e.prototype.applyFeatures=function(e,n,r){t.prototype.applyFeatures.call(this,e,n,r);for(var i=0;i<this.glyphs.length;i++)this.fixCursiveAttachment(i);this.fixMarkAttachment()},e.prototype.fixCursiveAttachment=function(t){var e=this.glyphs[t];if(null!=e.cursiveAttachment){var n=e.cursiveAttachment;e.cursiveAttachment=null,this.fixCursiveAttachment(n),this.positions[t].yOffset+=this.positions[n].yOffset}},e.prototype.fixMarkAttachment=function(){for(var t=0;t<this.glyphs.length;t++){var e=this.glyphs[t];if(null!=e.markAttachment){var n=e.markAttachment;if(this.positions[t].xOffset+=this.positions[n].xOffset,this.positions[t].yOffset+=this.positions[n].yOffset,"ltr"===this.direction)for(var r=n;r<t;r++)this.positions[t].xOffset-=this.positions[r].xAdvance,this.positions[t].yOffset-=this.positions[r].yAdvance;else for(var i=n+1;i<t+1;i++)this.positions[t].xOffset+=this.positions[i].xAdvance,this.positions[t].yOffset+=this.positions[i].yAdvance}}},e}($o),fs=function(){function t(e){lt(this,t),this.font=e,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,e.GSUB&&(this.GSUBProcessor=new ls(e,e.GSUB)),e.GPOS&&(this.GPOSProcessor=new cs(e,e.GPOS))}return t.prototype.setup=function(t){var e=this;this.glyphInfos=t.glyphs.map(function(t){return new ta(e.font,t.id,[].concat(t.codePoints))});var n=null;this.GPOSProcessor&&(n=this.GPOSProcessor.selectScript(t.script,t.language,t.direction)),this.GSUBProcessor&&(n=this.GSUBProcessor.selectScript(t.script,t.language,t.direction)),this.shaper=K(n),this.plan=new Do(this.font,n,t.direction),this.shaper.plan(this.plan,this.glyphInfos,t.features);for(var r in this.plan.allFeatures)t.features[r]=!0},t.prototype.substitute=function(t){var e=this;this.GSUBProcessor&&(this.plan.process(this.GSUBProcessor,this.glyphInfos),t.glyphs=this.glyphInfos.map(function(t){return e.font.getGlyph(t.id,t.codePoints)}))},t.prototype.position=function(t){return"BEFORE_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(t.positions),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,this.glyphInfos,t.positions),"AFTER_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(t.positions),"rtl"===t.direction&&(t.glyphs.reverse(),t.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features},t.prototype.zeroMarkAdvances=function(t){for(var e=0;e<this.glyphInfos.length;e++)this.glyphInfos[e].isMark&&(t[e].xAdvance=0,t[e].yAdvance=0)},t.prototype.cleanup=function(){this.glyphInfos=null,this.plan=null,this.shaper=null},t.prototype.getAvailableFeatures=function(t,e){var n=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(t,e),n.push.apply(n,st(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(t,e),n.push.apply(n,st(this.GPOSProcessor.features))),n},t}(),hs=function(){function t(e){lt(this,t),this.font=e,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new Fo(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new fs(this.font))}return t.prototype.layout=function(t,e,n,r,i){if("string"==typeof e&&(i=r,r=n,n=e,e=[]),"string"==typeof t){null==n&&(n=p(t));var o=this.font.glyphsForString(t)}else{if(null==n){for(var a=[],s=t,u=Array.isArray(s),l=0,s=u?s:it(s);;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if(l=s.next(),l.done)break;c=l.value}var f=c;a.push.apply(a,f.codePoints)}n=g(a)}var o=t}var h=new po(o,e,n,r,i);return 0===o.length?(h.positions=[],h):(this.engine&&this.engine.setup&&this.engine.setup(h),this.substitute(h),this.position(h),this.hideDefaultIgnorables(h.glyphs,h.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup(),h)},t.prototype.substitute=function(t){this.engine&&this.engine.substitute&&this.engine.substitute(t)},t.prototype.position=function(t){t.positions=t.glyphs.map(function(t){return new go(t.advanceWidth)});var e=null;this.engine&&this.engine.position&&(e=this.engine.position(t)),e||this.engine&&!this.engine.fallbackPosition||(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new eo(this.font)),this.unicodeLayoutEngine.positionGlyphs(t.glyphs,t.positions)),e&&e.kern||!1===t.features.kern||!this.font.kern||(this.kernProcessor||(this.kernProcessor=new to(this.font)),this.kernProcessor.process(t.glyphs,t.positions),t.features.kern=!0)},t.prototype.hideDefaultIgnorables=function(t,e){for(var n=this.font.glyphForCodePoint(32),r=0;r<t.length;r++)this.isDefaultIgnorable(t[r].codePoints[0])&&(t[r]=n,e[r].xAdvance=0,e[r].yAdvance=0)},t.prototype.isDefaultIgnorable=function(t){var e=t>>16;if(0===e)switch(t>>8){case 0:return 173===t;case 3:return 847===t;case 6:return 1564===t;case 23:return 6068<=t&&t<=6069;case 24:return 6155<=t&&t<=6158;case 32:return 8203<=t&&t<=8207||8234<=t&&t<=8238||8288<=t&&t<=8303;case 254:return 65024<=t&&t<=65039||65279===t;case 255:return 65520<=t&&t<=65528;default:return!1}else switch(e){case 1:return 113824<=t&&t<=113827||119155<=t&&t<=119162;case 14:return 917504<=t&&t<=921599;default:return!1}},t.prototype.getAvailableFeatures=function(t,e){var n=[];return this.engine&&n.push.apply(n,this.engine.getAvailableFeatures(t,e)),this.font.kern&&-1===n.indexOf("kern")&&n.push("kern"),n},t.prototype.stringsForGlyph=function(t){for(var e=new wt,n=this.font._cmapProcessor.codePointsForGlyph(t),r=n,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a;e.add(bt(s))}if(this.engine&&this.engine.stringsForGlyph)for(var u=this.engine.stringsForGlyph(t),l=Array.isArray(u),c=0,u=l?u:it(u);;){var f;if(l){if(c>=u.length)break;f=u[c++]}else{if(c=u.next(),c.done)break;f=c.value}var h=f;e.add(h)}return mt(e)},t}(),ds={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"},ps=function(){function t(){lt(this,t),this.commands=[],this._bbox=null,this._cbox=null}return t.prototype.toFunction=function(){var t=this.commands.map(function(t){return"  ctx."+t.command+"("+t.args.join(", ")+");"});return new Function("ctx",t.join("\n"))},t.prototype.toSVG=function(){return this.commands.map(function(t){var e=t.args.map(function(t){return Math.round(100*t)/100});return""+ds[t.command]+e.join(" ")}).join("")},t.prototype.mapPoints=function(e){for(var n=new t,r=this.commands,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}for(var s=a,u=[],l=0;l<s.args.length;l+=2){var c=e(s.args[l],s.args[l+1]),f=c[0],h=c[1];u.push(f,h)}n[s.command].apply(n,u)}return n},t.prototype.transform=function(t,e,n,r,i,o){return this.mapPoints(function(a,s){return a=t*a+n*s+i,s=e*a+r*s+o,[a,s]})},t.prototype.translate=function(t,e){return this.transform(1,0,0,1,t,e)},t.prototype.rotate=function(t){var e=Math.cos(t),n=Math.sin(t);return this.transform(e,n,-n,e,0,0)},t.prototype.scale=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t;return this.transform(t,0,0,e,0,0)},ct(t,[{key:"cbox",get:function(){if(!this._cbox){for(var t=new no,e=this.commands,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}for(var o=i,a=0;a<o.args.length;a+=2)t.addPoint(o.args[a],o.args[a+1])}this._cbox=ot(t)}return this._cbox}},{key:"bbox",get:function(){if(this._bbox)return this._bbox;for(var t=new no,e=0,n=0,r=function(t){return Math.pow(1-t,3)*_[A]+3*Math.pow(1-t,2)*t*k[A]+3*(1-t)*Math.pow(t,2)*S[A]+Math.pow(t,3)*C[A]},i=this.commands,o=Array.isArray(i),a=0,i=o?i:it(i);;){var s;if(o){if(a>=i.length)break;s=i[a++]}else{if(a=i.next(),a.done)break;s=a.value}var u=s;switch(u.command){case"moveTo":case"lineTo":var l=u.args,c=l[0],f=l[1];t.addPoint(c,f),e=c,n=f;break;case"quadraticCurveTo":case"bezierCurveTo":if("quadraticCurveTo"===u.command)var h=u.args,d=h[0],p=h[1],g=h[2],v=h[3],y=e+2/3*(d-e),b=n+2/3*(p-n),m=g+2/3*(d-g),w=v+2/3*(p-v);else var x=u.args,y=x[0],b=x[1],m=x[2],w=x[3],g=x[4],v=x[5];t.addPoint(g,v);for(var _=[e,n],k=[y,b],S=[m,w],C=[g,v],A=0;A<=1;A++){var P=6*_[A]-12*k[A]+6*S[A],E=-3*_[A]+9*k[A]-9*S[A]+3*C[A];if(u=3*k[A]-3*_[A],0!==E){var O=Math.pow(P,2)-4*u*E;if(!(O<0)){var T=(-P+Math.sqrt(O))/(2*E);0<T&&T<1&&(0===A?t.addPoint(r(T),t.maxY):1===A&&t.addPoint(t.maxX,r(T)));var I=(-P-Math.sqrt(O))/(2*E);0<I&&I<1&&(0===A?t.addPoint(r(I),t.maxY):1===A&&t.addPoint(t.maxX,r(I)))}}else{if(0===P)continue;var B=-u/P;0<B&&B<1&&(0===A?t.addPoint(r(B),t.maxY):1===A&&t.addPoint(t.maxX,r(B)))}}e=g,n=v}}return this._bbox=ot(t)}}]),t}(),gs=["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"],vs=0;vs<gs.length;vs++)!function(){var t=gs[vs];ps.prototype[t]=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return this._bbox=this._cbox=null,this.commands.push({command:t,args:n}),this}}();var ys,bs,ms=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"],ws=(ys=function(){function t(e,n,r){lt(this,t),this.id=e,this.codePoints=n,this._font=r,this.isMark=this.codePoints.length>0&&this.codePoints.every(xt.isMark),this.isLigature=this.codePoints.length>1}return t.prototype._getPath=function(){return new ps},t.prototype._getCBox=function(){return this.path.cbox},t.prototype._getBBox=function(){return this.path.bbox},t.prototype._getTableMetrics=function(t){if(this.id<t.metrics.length)return t.metrics.get(this.id);var e=t.metrics.get(t.metrics.length-1);return{advance:e?e.advance:0,bearing:t.bearings.get(this.id-t.metrics.length)||0}},t.prototype._getMetrics=function(t){if(this._metrics)return this._metrics;var e=this._getTableMetrics(this._font.hmtx),n=e.advance,r=e.bearing;if(this._font.vmtx)var i=this._getTableMetrics(this._font.vmtx),o=i.advance,a=i.bearing;else{var s=void 0;if(void 0!==t&&null!==t||(t=this.cbox),(s=this._font["OS/2"])&&s.version>0)var o=Math.abs(s.typoAscender-s.typoDescender),a=s.typoAscender-t.maxY;else var u=this._font.hhea,o=Math.abs(u.ascent-u.descent),a=u.ascent-t.maxY}return this._font._variationProcessor&&this._font.HVAR&&(n+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:n,advanceHeight:o,leftBearing:r,topBearing:a}},t.prototype.getScaledPath=function(t){var e=1/this._font.unitsPerEm*t;return this.path.scale(e)},t.prototype._getName=function(){var t=this._font.post;if(!t)return null;switch(t.version){case 1:return ms[this.id];case 2:var e=t.glyphNameIndex[this.id];return e<ms.length?ms[e]:t.names[e-ms.length];case 2.5:return ms[this.id+t.offsets[this.id]];case 4:return String.fromCharCode(t.map[this.id])}},t.prototype.render=function(t,e){t.save();var n=1/this._font.head.unitsPerEm*e;t.scale(n,n),this.path.toFunction()(t),t.fill(),t.restore()},ct(t,[{key:"cbox",get:function(){return this._getCBox()}},{key:"bbox",get:function(){return this._getBBox()}},{key:"path",get:function(){return this._getPath()}},{key:"advanceWidth",get:function(){return this._getMetrics().advanceWidth}},{key:"advanceHeight",get:function(){return this._getMetrics().advanceHeight}},{key:"ligatureCaretPositions",get:function(){}},{key:"name",get:function(){return this._getName()}}]),t}(),J(ys.prototype,"cbox",[o],rt(ys.prototype,"cbox"),ys.prototype),J(ys.prototype,"bbox",[o],rt(ys.prototype,"bbox"),ys.prototype),J(ys.prototype,"path",[o],rt(ys.prototype,"path"),ys.prototype),J(ys.prototype,"advanceWidth",[o],rt(ys.prototype,"advanceWidth"),ys.prototype),J(ys.prototype,"advanceHeight",[o],rt(ys.prototype,"advanceHeight"),ys.prototype),J(ys.prototype,"name",[o],rt(ys.prototype,"name"),ys.prototype),ys),xs=new nt.Struct({numberOfContours:nt.int16,xMin:nt.int16,yMin:nt.int16,xMax:nt.int16,yMax:nt.int16}),_s=function(){function t(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;lt(this,t),this.onCurve=e,this.endContour=n,this.x=r,this.y=i}return t.prototype.copy=function(){return new t(this.onCurve,this.endContour,this.x,this.y)},t}(),ks=function t(e,n,r){lt(this,t),this.glyphID=e,this.dx=n,this.dy=r,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0},Ss=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype._getCBox=function(t){if(this._font._variationProcessor&&!t)return this.path.cbox;var e=this._font._getTableStream("glyf");e.pos+=this._font.loca.offsets[this.id];var n=xs.decode(e),r=new no(n.xMin,n.yMin,n.xMax,n.yMax);return ot(r)},e.prototype._parseGlyphCoord=function(t,e,n,r){if(n){var i=t.readUInt8();r||(i=-i),i+=e}else if(r)var i=e;else var i=e+t.readInt16BE();return i},e.prototype._decode=function(){var t=this._font.loca.offsets[this.id];if(t===this._font.loca.offsets[this.id+1])return null;var e=this._font._getTableStream("glyf");e.pos+=t;var n=e.pos,r=xs.decode(e);return r.numberOfContours>0?this._decodeSimple(r,e):r.numberOfContours<0&&this._decodeComposite(r,e,n),r},e.prototype._decodeSimple=function(t,e){t.points=[];var n=new nt.Array(nt.uint16,t.numberOfContours).decode(e);t.instructions=new nt.Array(nt.uint8,nt.uint16).decode(e);for(var r=[],i=n[n.length-1]+1;r.length<i;){var o=e.readUInt8();if(r.push(o),8&o)for(var a=e.readUInt8(),s=0;s<a;s++)r.push(o)}for(var u=0;u<r.length;u++){var o=r[u],l=new _s(!!(1&o),n.indexOf(u)>=0,0,0);t.points.push(l)}for(var c=0,u=0;u<r.length;u++){var o=r[u];t.points[u].x=c=this._parseGlyphCoord(e,c,2&o,16&o)}for(var f=0,u=0;u<r.length;u++){var o=r[u];t.points[u].y=f=this._parseGlyphCoord(e,f,4&o,32&o)}if(this._font._variationProcessor){var h=t.points.slice();h.push.apply(h,this._getPhantomPoints(t)),this._font._variationProcessor.transformPoints(this.id,h),t.phantomPoints=h.slice(-4)}},e.prototype._decodeComposite=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;t.components=[];for(var r=!1,i=32;32&i;){i=e.readUInt16BE();var o=e.pos-n,a=e.readUInt16BE();if(r||(r=0!=(256&i)),1&i)var s=e.readInt16BE(),u=e.readInt16BE();else var s=e.readInt8(),u=e.readInt8();var l=new ks(a,s,u);l.pos=o,8&i?l.scaleX=l.scaleY=(e.readUInt8()<<24|e.readUInt8()<<16)/1073741824:64&i?(l.scaleX=(e.readUInt8()<<24|e.readUInt8()<<16)/1073741824,l.scaleY=(e.readUInt8()<<24|e.readUInt8()<<16)/1073741824):128&i&&(l.scaleX=(e.readUInt8()<<24|e.readUInt8()<<16)/1073741824,l.scale01=(e.readUInt8()<<24|e.readUInt8()<<16)/1073741824,l.scale10=(e.readUInt8()<<24|e.readUInt8()<<16)/1073741824,l.scaleY=(e.readUInt8()<<24|e.readUInt8()<<16)/1073741824),t.components.push(l)}if(this._font._variationProcessor){for(var c=[],f=0;f<t.components.length;f++){var l=t.components[f];c.push(new _s(!0,!0,l.dx,l.dy))}c.push.apply(c,this._getPhantomPoints(t)),this._font._variationProcessor.transformPoints(this.id,c),t.phantomPoints=c.splice(-4,4);for(var h=0;h<c.length;h++){var d=c[h];t.components[h].dx=d.x,t.components[h].dy=d.y}}return r},e.prototype._getPhantomPoints=function(t){var e=this._getCBox(!0);null==this._metrics&&(this._metrics=ws.prototype._getMetrics.call(this,e));var n=this._metrics,r=n.advanceWidth,i=n.advanceHeight,o=n.leftBearing,a=n.topBearing;return[new _s(!1,!0,t.xMin-o,0),new _s(!1,!0,t.xMin-o+r,0),new _s(!1,!0,0,t.yMax+a),new _s(!1,!0,0,t.yMax+a+i)]},e.prototype._getContours=function(){var t=this._decode();if(!t)return[];var e=[];if(t.numberOfContours<0)for(var n=t.components,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}for(var a=o,s=this._font.getGlyph(a.glyphID)._getContours(),u=0;u<s.length;u++)for(var l=s[u],c=0;c<l.length;c++){var f=l[c],h=f.x*a.scaleX+f.y*a.scale01+a.dx,d=f.y*a.scaleY+f.x*a.scale10+a.dy;e.push(new _s(f.onCurve,f.endContour,h,d))}}else e=t.points||[];t.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=t.phantomPoints[1].x-t.phantomPoints[0].x,this._metrics.advanceHeight=t.phantomPoints[3].y-t.phantomPoints[2].y,this._metrics.leftBearing=t.xMin-t.phantomPoints[0].x,this._metrics.topBearing=t.phantomPoints[2].y-t.yMax);for(var p=[],g=[],v=0;v<e.length;v++){var y=e[v];g.push(y),y.endContour&&(p.push(g),g=[])}return p},e.prototype._getMetrics=function(){if(this._metrics)return this._metrics;var e=this._getCBox(!0);return t.prototype._getMetrics.call(this,e),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics},e.prototype._getPath=function(){for(var t=this._getContours(),e=new ps,n=0;n<t.length;n++){var r=t[n],i=r[0],o=r[r.length-1],a=0;if(i.onCurve){var s=null;a=1}else{i=o.onCurve?o:new _s(!1,!1,(i.x+o.x)/2,(i.y+o.y)/2);var s=i}e.moveTo(i.x,i.y);for(var u=a;u<r.length;u++){var l=r[u],c=0===u?i:r[u-1];if(c.onCurve&&l.onCurve)e.lineTo(l.x,l.y);else if(c.onCurve&&!l.onCurve)var s=l;else if(c.onCurve||l.onCurve){if(c.onCurve||!l.onCurve)throw new Error("Unknown TTF path state");e.quadraticCurveTo(s.x,s.y,l.x,l.y);var s=null}else{var f=(c.x+l.x)/2,h=(c.y+l.y)/2;e.quadraticCurveTo(c.x,c.y,f,h);var s=l}}s&&e.quadraticCurveTo(s.x,s.y,i.x,i.y),e.closePath()}return e},e}(ws),Cs=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype._getName=function(){return this._font.CFF2?t.prototype._getName.call(this):this._font["CFF "].getGlyphName(this.id)},e.prototype.bias=function(t){return t.length<1240?107:t.length<33900?1131:32768},e.prototype._getPath=function(){function t(){null==c&&(c=u.shift()+m.nominalWidthX)}function e(){return u.length%2!=0&&t(),f+=u.length>>1,u.length=0}function n(t,e){v&&s.closePath(),s.moveTo(t,e),v=!0}var r=this._font.stream,i=(r.pos,this._font.CFF2||this._font["CFF "]),o=i.topDict.CharStrings[this.id],a=o.offset+o.length;r.pos=o.offset;var s=new ps,u=[],l=[],c=null,f=0,h=0,d=0,p=void 0,g=void 0,v=!1;this._usedGsubrs=p={},this._usedSubrs=g={};var y=i.globalSubrIndex||[],b=this.bias(y),m=i.privateDictForGlyph(this.id)||{},w=m.Subrs||[],x=this.bias(w),_=i.topDict.vstore&&i.topDict.vstore.itemVariationStore,k=m.vsindex,S=this._font._variationProcessor;return function o(){for(;r.pos<a;){var c=r.readUInt8();if(c<32)switch(c){case 1:case 3:case 18:case 23:e();break;case 4:u.length>1&&t(),d+=u.shift(),n(h,d);break;case 5:for(;u.length>=2;)h+=u.shift(),d+=u.shift(),s.lineTo(h,d);break;case 6:case 7:for(var m=6===c;u.length>=1;)m?h+=u.shift():d+=u.shift(),s.lineTo(h,d),m=!m;break;case 8:for(;u.length>0;){var C=h+u.shift(),A=d+u.shift(),P=C+u.shift(),E=A+u.shift();h=P+u.shift(),d=E+u.shift(),s.bezierCurveTo(C,A,P,E,h,d)}break;case 10:var O=u.pop()+x,T=w[O];if(T){g[O]=!0;var I=r.pos,B=a;r.pos=T.offset,a=T.offset+T.length,o(),r.pos=I,a=B}break;case 11:if(i.version>=2)break;return;case 14:if(i.version>=2)break;u.length>0&&t(),v&&(s.closePath(),v=!1);break;case 15:if(i.version<2)throw new Error("vsindex operator not supported in CFF v1");k=u.pop();break;case 16:if(i.version<2)throw new Error("blend operator not supported in CFF v1");if(!S)throw new Error("blend operator in non-variation font");for(var L=S.getBlendVector(_,k),R=u.pop(),M=R*L.length,F=u.length-M,D=F-R,z=0;z<R;z++){for(var N=u[D+z],W=0;W<L.length;W++)N+=L[W]*u[F++];u[D+z]=N}for(;M--;)u.pop();break;case 19:case 20:e(),r.pos+=f+7>>3;break;case 21:u.length>2&&t(),h+=u.shift(),d+=u.shift(),n(h,d);break;case 22:u.length>1&&t(),h+=u.shift(),n(h,d);break;case 24:for(;u.length>=8;){var C=h+u.shift(),A=d+u.shift(),P=C+u.shift(),E=A+u.shift();h=P+u.shift(),d=E+u.shift(),s.bezierCurveTo(C,A,P,E,h,d)}h+=u.shift(),d+=u.shift(),s.lineTo(h,d);break;case 25:for(;u.length>=8;)h+=u.shift(),d+=u.shift(),s.lineTo(h,d);var C=h+u.shift(),A=d+u.shift(),P=C+u.shift(),E=A+u.shift();h=P+u.shift(),d=E+u.shift(),s.bezierCurveTo(C,A,P,E,h,d);break;case 26:for(u.length%2&&(h+=u.shift());u.length>=4;)C=h,A=d+u.shift(),P=C+u.shift(),E=A+u.shift(),h=P,d=E+u.shift(),s.bezierCurveTo(C,A,P,E,h,d);break;case 27:for(u.length%2&&(d+=u.shift());u.length>=4;)C=h+u.shift(),A=d,P=C+u.shift(),E=A+u.shift(),h=P+u.shift(),d=E,s.bezierCurveTo(C,A,P,E,h,d);break;case 28:u.push(r.readInt16BE());break;case 29:if(O=u.pop()+b,T=y[O]){p[O]=!0;var I=r.pos,B=a;r.pos=T.offset,a=T.offset+T.length,o(),r.pos=I,a=B}break;case 30:case 31:for(m=31===c;u.length>=4;)m?(C=h+u.shift(),A=d,P=C+u.shift(),E=A+u.shift(),d=E+u.shift(),h=P+(1===u.length?u.shift():0)):(C=h,A=d+u.shift(),P=C+u.shift(),E=A+u.shift(),h=P+u.shift(),d=E+(1===u.length?u.shift():0)),s.bezierCurveTo(C,A,P,E,h,d),m=!m;break;case 12:switch(c=r.readUInt8()){case 3:var U=u.pop(),j=u.pop();u.push(U&&j?1:0);break;case 4:U=u.pop(),j=u.pop(),u.push(U||j?1:0);break;case 5:U=u.pop(),u.push(U?0:1);break;case 9:U=u.pop(),u.push(Math.abs(U));break;case 10:U=u.pop(),j=u.pop(),u.push(U+j);break;case 11:U=u.pop(),j=u.pop(),u.push(U-j);break;case 12:U=u.pop(),j=u.pop(),u.push(U/j);break;case 14:U=u.pop(),u.push(-U);break;case 15:U=u.pop(),j=u.pop(),u.push(U===j?1:0);break;case 18:u.pop();break;case 20:var G=u.pop(),H=u.pop();l[H]=G;break;case 21:H=u.pop(),u.push(l[H]||0);break;case 22:var V=u.pop(),q=u.pop(),Z=u.pop(),Y=u.pop();u.push(Z<=Y?V:q);break;case 23:u.push(Math.random());break;case 24:U=u.pop(),j=u.pop(),u.push(U*j);break;case 26:U=u.pop(),u.push(Math.sqrt(U));break;case 27:U=u.pop(),u.push(U,U);break;case 28:U=u.pop(),j=u.pop(),u.push(j,U);break;case 29:H=u.pop(),H<0?H=0:H>u.length-1&&(H=u.length-1),u.push(u[H]);break;case 30:var X=u.pop(),K=u.pop();if(K>=0)for(;K>0;){for(var J=u[X-1],Q=X-2;Q>=0;Q--)u[Q+1]=u[Q];u[0]=J,K--}else for(;K<0;){for(var J=u[0],$=0;$<=X;$++)u[$]=u[$+1];u[X-1]=J,K++}break;case 34:C=h+u.shift(),A=d,P=C+u.shift(),E=A+u.shift();var tt=P+u.shift(),et=E,nt=tt+u.shift(),rt=et,it=nt+u.shift(),ot=rt,at=it+u.shift(),st=ot;h=at,d=st,s.bezierCurveTo(C,A,P,E,tt,et),s.bezierCurveTo(nt,rt,it,ot,at,st);break;case 35:for(var ut=[],lt=0;lt<=5;lt++)h+=u.shift(),d+=u.shift(),ut.push(h,d);s.bezierCurveTo.apply(s,ut.slice(0,6)),s.bezierCurveTo.apply(s,ut.slice(6)),u.shift();break;case 36:C=h+u.shift(),A=d+u.shift(),P=C+u.shift(),E=A+u.shift(),tt=P+u.shift(),et=E,nt=tt+u.shift(),rt=et,it=nt+u.shift(),ot=rt+u.shift(),at=it+u.shift(),st=ot,h=at,d=st,s.bezierCurveTo(C,A,P,E,tt,et),s.bezierCurveTo(nt,rt,it,ot,at,st);break;case 37:var ct=h,ft=d;ut=[];for(var ht=0;ht<=4;ht++)h+=u.shift(),d+=u.shift(),ut.push(h,d);Math.abs(h-ct)>Math.abs(d-ft)?(h+=u.shift(),d=ft):(h=ct,d+=u.shift()),ut.push(h,d),s.bezierCurveTo.apply(s,ut.slice(0,6)),s.bezierCurveTo.apply(s,ut.slice(6));break;default:throw new Error("Unknown op: 12 "+c)}break;default:throw new Error("Unknown op: "+c)}else if(c<247)u.push(c-139);else if(c<251){var dt=r.readUInt8();u.push(256*(c-247)+dt+108)}else if(c<255){var dt=r.readUInt8();u.push(256*-(c-251)-dt-108)}else u.push(r.readInt32BE()/65536)}}(),v&&s.closePath(),s},e}(ws),As=new nt.Struct({originX:nt.uint16,originY:nt.uint16,type:new nt.String(4),data:new nt.Buffer(function(t){return t.parent.buflen-t._currentOffset})}),Ps=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype.getImageForSize=function(t){for(var e=0;e<this._font.sbix.imageTables.length;e++){var n=this._font.sbix.imageTables[e];if(n.ppem>=t)break}var r=n.imageOffsets,i=r[this.id],o=r[this.id+1];return i===o?null:(this._font.stream.pos=i,As.decode(this._font.stream,{buflen:o-i}))},e.prototype.render=function(e,n){var r=this.getImageForSize(n);if(null!=r){var i=n/this._font.unitsPerEm;e.image(r.data,{height:n,x:r.originX,y:(this.bbox.minY-r.originY)*i})}this._font.sbix.flags.renderOutlines&&t.prototype.render.call(this,e,n)},e}(Ss),Es=function t(e,n){lt(this,t),this.glyph=e,this.color=n},Os=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype._getBBox=function(){for(var t=new no,e=0;e<this.layers.length;e++){var n=this.layers[e],r=n.glyph.bbox;t.addPoint(r.minX,r.minY),t.addPoint(r.maxX,r.maxY)}return t},e.prototype.render=function(t,e){for(var n=this.layers,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o,s=a.glyph,u=a.color;t.fillColor([u.red,u.green,u.blue],u.alpha/255*100),s.render(t,e)}},ct(e,[{key:"layers",get:function(){for(var t=this._font.CPAL,e=this._font.COLR,n=0,r=e.baseGlyphRecord.length-1;n<=r;){var i=n+r>>1,o=e.baseGlyphRecord[i];if(this.id<o.gid)r=i-1;else{if(!(this.id>o.gid)){var a=o;break}n=i+1}}if(null==a){var s=this._font._getBaseGlyph(this.id),u={red:0,green:0,blue:0,alpha:255};return[new Es(s,u)]}for(var l=[],c=a.firstLayerIndex;c<a.firstLayerIndex+a.numLayers;c++){var o=e.layerRecords[c],u=t.colorRecords[o.paletteIndex],s=this._font._getBaseGlyph(o.gid);l.push(new Es(s,u))}return l}}]),e}(ws),Ts=function(){function t(e,n){lt(this,t),this.font=e,this.normalizedCoords=this.normalizeCoords(n),this.blendVectors=new ft}return t.prototype.normalizeCoords=function(t){for(var e=[],n=0;n<this.font.fvar.axis.length;n++){var r=this.font.fvar.axis[n];t[n]<r.defaultValue?e.push((t[n]-r.defaultValue+St)/(r.defaultValue-r.minValue+St)):e.push((t[n]-r.defaultValue+St)/(r.maxValue-r.defaultValue+St))}if(this.font.avar)for(var n=0;n<this.font.avar.segment.length;n++)for(var i=this.font.avar.segment[n],o=0;o<i.correspondence.length;o++){var a=i.correspondence[o];if(o>=1&&e[n]<a.fromCoord){var s=i.correspondence[o-1];e[n]=((e[n]-s.fromCoord)*(a.toCoord-s.toCoord)+St)/(a.fromCoord-s.fromCoord+St)+s.toCoord;break}}return e},t.prototype.transformPoints=function(t,e){if(this.font.fvar&&this.font.gvar){var n=this.font.gvar;if(!(t>=n.glyphCount)){var r=n.offsets[t];if(r!==n.offsets[t+1]){var i=this.font.stream;if(i.pos=r,!(i.pos>=i.length)){var o=i.readUInt16BE(),a=r+i.readUInt16BE();if(32768&o){var s=i.pos;i.pos=a;var u=this.decodePoints();a=i.pos,i.pos=s}var l=e.map(function(t){return t.copy()});o&=4095;for(var c=0;c<o;c++){var f=i.readUInt16BE(),h=i.readUInt16BE();if(32768&h)for(var d=[],p=0;p<n.axisCount;p++)d.push(i.readInt16BE()/16384);else{if((4095&h)>=n.globalCoordCount)throw new Error("Invalid gvar table");var d=n.globalCoords[4095&h]}if(16384&h){for(var g=[],v=0;v<n.axisCount;v++)g.push(i.readInt16BE()/16384);for(var y=[],b=0;b<n.axisCount;b++)y.push(i.readInt16BE()/16384)}var m=this.tupleFactor(h,d,g,y);if(0!==m){var s=i.pos;if(i.pos=a,8192&h)var w=this.decodePoints();else var w=u;var x=0===w.length?e.length:w.length,_=this.decodeDeltas(x),k=this.decodeDeltas(x);if(0===w.length)for(var S=0;S<e.length;S++){var C=e[S];C.x+=Math.round(_[S]*m),C.y+=Math.round(k[S]*m)}else{for(var A=l.map(function(t){return t.copy()}),P=e.map(function(){return!1}),E=0;E<w.length;E++){var O=w[E];if(O<e.length){var T=A[O];P[O]=!0,T.x+=Math.round(_[E]*m),T.y+=Math.round(k[E]*m)}}this.interpolateMissingDeltas(A,l,P);for(var I=0;I<e.length;I++){var B=A[I].x-l[I].x,L=A[I].y-l[I].y;e[I].x+=B,e[I].y+=L}}a+=f,i.pos=s}else a+=f}}}}}},t.prototype.decodePoints=function(){var t=this.font.stream,e=t.readUInt8();128&e&&(e=(127&e)<<8|t.readUInt8());for(var n=new Uint16Array(e),r=0,i=0;r<e;)for(var o=t.readUInt8(),a=1+(127&o),s=128&o?t.readUInt16:t.readUInt8,u=0;u<a&&r<e;u++)i+=s.call(t),n[r++]=i;return n},t.prototype.decodeDeltas=function(t){for(var e=this.font.stream,n=0,r=new Int16Array(t);n<t;){var i=e.readUInt8(),o=1+(63&i);if(128&i)n+=o;else for(var a=64&i?e.readInt16BE:e.readInt8,s=0;s<o&&n<t;s++)r[n++]=a.call(e)}return r},t.prototype.tupleFactor=function(t,e,n,r){for(var i=this.normalizedCoords,o=this.font.gvar,a=1,s=0;s<o.axisCount;s++)if(0!==e[s]){if(0===i[s])return 0;if(0==(16384&t)){if(i[s]<Math.min(0,e[s])||i[s]>Math.max(0,e[s]))return 0;a=(a*i[s]+St)/(e[s]+St)}else{if(i[s]<n[s]||i[s]>r[s])return 0;a=i[s]<e[s]?a*(i[s]-n[s]+St)/(e[s]-n[s]+St):a*(r[s]-i[s]+St)/(r[s]-e[s]+St)}}return a},t.prototype.interpolateMissingDeltas=function(t,e,n){if(0!==t.length)for(var r=0;r<t.length;){for(var i=r,o=r,a=t[o];!a.endContour;)a=t[++o];for(;r<=o&&!n[r];)r++;if(!(r>o)){var s=r,u=r;for(r++;r<=o;)n[r]&&(this.deltaInterpolate(u+1,r-1,u,r,e,t),u=r),r++;u===s?this.deltaShift(i,o,u,e,t):(this.deltaInterpolate(u+1,o,u,s,e,t),s>0&&this.deltaInterpolate(i,s-1,u,s,e,t)),r=o+1}}},t.prototype.deltaInterpolate=function(t,e,n,r,i,o){if(!(t>e))for(var a=["x","y"],s=0;s<a.length;s++){var u=a[s];if(i[n][u]>i[r][u]){var l=n;n=r,r=l}var c=i[n][u],f=i[r][u],h=o[n][u],d=o[r][u];if(c!==f||h===d)for(var p=c===f?0:(d-h)/(f-c),g=t;g<=e;g++){var v=i[g][u];v<=c?v+=h-c:v>=f?v+=d-f:v=h+(v-c)*p,o[g][u]=v}}},t.prototype.deltaShift=function(t,e,n,r,i){var o=i[n].x-r[n].x,a=i[n].y-r[n].y;if(0!==o||0!==a)for(var s=t;s<=e;s++)s!==n&&(i[s].x+=o,i[s].y+=a)},t.prototype.getAdvanceAdjustment=function(t,e){var n=void 0,r=void 0;if(e.advanceWidthMapping){var i=t;i>=e.advanceWidthMapping.mapCount&&(i=e.advanceWidthMapping.mapCount-1);var o=(e.advanceWidthMapping.entryFormat,e.advanceWidthMapping.mapData[i]);n=o.outerIndex,r=o.innerIndex}else n=0,r=t;return this.getDelta(e.itemVariationStore,n,r)},t.prototype.getDelta=function(t,e,n){if(e>=t.itemVariationData.length)return 0;var r=t.itemVariationData[e];if(n>=r.deltaSets.length)return 0;for(var i=r.deltaSets[n],o=this.getBlendVector(t,e),a=0,s=0;s<r.regionIndexCount;s++)a+=i.deltas[s]*o[s];return a},t.prototype.getBlendVector=function(t,e){var n=t.itemVariationData[e];if(this.blendVectors.has(n))return this.blendVectors.get(n);for(var r=this.normalizedCoords,i=[],o=0;o<n.regionIndexCount;o++){for(var a=1,s=n.regionIndexes[o],u=t.variationRegionList.variationRegions[s],l=0;l<u.length;l++){var c=u[l],f=void 0;f=c.startCoord>c.peakCoord||c.peakCoord>c.endCoord?1:c.startCoord<0&&c.endCoord>0&&0!==c.peakCoord?1:0===c.peakCoord?1:r[l]<c.startCoord||r[l]>c.endCoord?0:r[l]===c.peakCoord?1:r[l]<c.peakCoord?(r[l]-c.startCoord+St)/(c.peakCoord-c.startCoord+St):(c.endCoord-r[l]+St)/(c.endCoord-c.peakCoord+St),a*=f}i[o]=a}return this.blendVectors.set(n,i),i},t}(),Is=function(){function t(e){lt(this,t),this.font=e,this.glyphs=[],this.mapping={},this.includeGlyph(0)}return t.prototype.includeGlyph=function(t){return"object"===(void 0===t?"undefined":at(t))&&(t=t.id),null==this.mapping[t]&&(this.glyphs.push(t),this.mapping[t]=this.glyphs.length-1),this.mapping[t]},t.prototype.encodeStream=function(){var t=this,e=new nt.EncodeStream;return r.nextTick(function(){return t.encode(e),e.end()}),e},t}(),Bs=function(){function t(){lt(this,t)}return t.size=function(t){return t>=0&&t<=255?1:2},t.encode=function(t,e){e>=0&&e<=255?t.writeUInt8(e):t.writeInt16BE(e)},t}(),Ls=new nt.Struct({numberOfContours:nt.int16,xMin:nt.int16,yMin:nt.int16,xMax:nt.int16,yMax:nt.int16,endPtsOfContours:new nt.Array(nt.uint16,"numberOfContours"),instructions:new nt.Array(nt.uint8,nt.uint16),flags:new nt.Array(nt.uint8,0),xPoints:new nt.Array(Bs,0),yPoints:new nt.Array(Bs,0)}),Rs=function(){function t(){lt(this,t)}return t.prototype.encodeSimple=function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=[],r=[],i=[],o=[],a=0,s=0,u=0,l=0,c=0,f=0;f<t.commands.length;f++){for(var h=t.commands[f],d=0;d<h.args.length;d+=2){var p=h.args[d],g=h.args[d+1],v=0;if("quadraticCurveTo"===h.command&&2===d){var y=t.commands[f+1];if(y&&"quadraticCurveTo"===y.command){var b=(s+y.args[0])/2,m=(u+y.args[1])/2;if(p===b&&g===m)continue}}"quadraticCurveTo"===h.command&&0===d||(v|=1),v=this._encodePoint(p,s,r,v,2,16),v=this._encodePoint(g,u,i,v,4,32),v===l&&a<255?(o[o.length-1]|=8,a++):(a>0&&(o.push(a),a=0),o.push(v),l=v),s=p,u=g,c++}"closePath"===h.command&&n.push(c-1)}t.commands.length>1&&"closePath"!==t.commands[t.commands.length-1].command&&n.push(c-1);var w=t.bbox,x={numberOfContours:n.length,xMin:w.minX,yMin:w.minY,xMax:w.maxX,yMax:w.maxY,endPtsOfContours:n,instructions:e,flags:o,xPoints:r,yPoints:i},_=Ls.size(x),k=4-_%4,S=new nt.EncodeStream(_+k);return Ls.encode(S,x),0!==k&&S.fill(0,k),S.buffer},t.prototype._encodePoint=function(t,e,n,r,i,o){var a=t-e;return t===e?r|=o:(-255<=a&&a<=255&&(r|=i,a<0?a=-a:r|=o),n.push(a)),r},t}(),Ms=function(t){function n(e){lt(this,n);var r=ht(this,t.call(this,e));return r.glyphEncoder=new Rs,r}return dt(n,t),n.prototype._addGlyph=function(t){var n=this.font.getGlyph(t),r=n._decode(),i=this.font.loca.offsets[t],o=this.font.loca.offsets[t+1],a=this.font._getTableStream("glyf");a.pos+=i;var s=a.readBuffer(o-i);if(r&&r.numberOfContours<0){s=new e(s);for(var u=r.components,l=Array.isArray(u),c=0,u=l?u:it(u);;){var f;if(l){if(c>=u.length)break;f=u[c++]}else{if(c=u.next(),c.done)break;f=c.value}var h=f;t=this.includeGlyph(h.glyphID),s.writeUInt16BE(t,h.pos)}}else r&&this.font._variationProcessor&&(s=this.glyphEncoder.encodeSimple(n.path,r.instructions));return this.glyf.push(s),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:n.advanceWidth,bearing:n._getMetrics().leftBearing}),this.offset+=s.length,this.glyf.length-1},n.prototype.encode=function(t){this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};for(var e=0;e<this.glyphs.length;)this._addGlyph(this.glyphs[e++]);var n=Ct(this.font.maxp);n.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);var r=Ct(this.font.head);r.indexToLocFormat=this.loca.version;var i=Ct(this.font.hhea);i.numberOfMetrics=this.hmtx.metrics.length,Ki.encode(t,{tables:{head:r,hhea:i,loca:this.loca,maxp:n,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})},n}(Is),Fs=function(t){function n(e){lt(this,n);var r=ht(this,t.call(this,e));if(r.cff=r.font["CFF "],!r.cff)throw new Error("Not a CFF Font");return r}return dt(n,t),n.prototype.subsetCharstrings=function(){this.charstrings=[];for(var t={},e=this.glyphs,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i;this.charstrings.push(this.cff.getCharString(o));var a=this.font.getGlyph(o);a.path;for(var s in a._usedGsubrs)t[s]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,t)},n.prototype.subsetSubrs=function(t,n){for(var r=[],i=0;i<t.length;i++){var o=t[i];n[i]?(this.cff.stream.pos=o.offset,r.push(this.cff.stream.readBuffer(o.length))):r.push(new e([11]))}return r},n.prototype.subsetFontdict=function(t){t.FDArray=[],t.FDSelect={version:0,fds:[]};for(var e={},n=[],r=this.glyphs,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}var s=a,u=this.cff.fdForGlyph(s);if(null!=u){e[u]||(t.FDArray.push(yt({},this.cff.topDict.FDArray[u])),n.push({})),e[u]=!0,t.FDSelect.fds.push(t.FDArray.length-1);var l=this.font.getGlyph(s);l.path;for(var c in l._usedSubrs)n[n.length-1][c]=!0}}for(var f=0;f<t.FDArray.length;f++){var h=t.FDArray[f];delete h.FontName,h.Private&&h.Private.Subrs&&(h.Private=yt({},h.Private),h.Private.Subrs=this.subsetSubrs(h.Private.Subrs,n[f]))}},n.prototype.createCIDFontdict=function(t){for(var e={},n=this.glyphs,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o,s=this.font.getGlyph(a);s.path;for(var u in s._usedSubrs)e[u]=!0}var l=yt({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(l.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,e)),t.FDArray=[{Private:l}],t.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}},n.prototype.addString=function(t){return t?(this.strings||(this.strings=[]),this.strings.push(t),ve.length+this.strings.length-1):null},n.prototype.encode=function(t){this.subsetCharstrings();var e={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},n=yt({},this.cff.topDict);n.Private=null,n.charset=e,n.Encoding=null,n.CharStrings=this.charstrings;for(var r=["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"],i=0;i<r.length;i++){var o=r[i];n[o]=this.addString(this.cff.string(n[o]))}n.ROS=[this.addString("Adobe"),this.addString("Identity"),0],n.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(n):this.createCIDFontdict(n);var a={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[n],stringIndex:this.strings,globalSubrIndex:this.gsubrs};_n.encode(t,a)},n}(Is),Ds=(bs=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;lt(this,t),this.defaultLanguage=null,this.stream=e,this.variationCoords=n,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory();for(var r in this.directory.tables){var i=this.directory.tables[r];Yi[r]&&i.length>0&&ut(this,r,{get:this._getTable.bind(this,i)})}}return t.probe=function(t){var e=t.toString("ascii",0,4);return"true"===e||"OTTO"===e||e===String.fromCharCode(0,1,0,0)},t.prototype.setDefaultLanguage=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.defaultLanguage=t},t.prototype._getTable=function(t){if(!(t.tag in this._tables))try{this._tables[t.tag]=this._decodeTable(t)}catch(e){Et.logErrors&&(console.error("Error decoding table "+t.tag),console.error(e.stack))}return this._tables[t.tag]},t.prototype._getTableStream=function(t){var e=this.directory.tables[t];return e?(this.stream.pos=e.offset,this.stream):null},t.prototype._decodeDirectory=function(){return this.directory=Ki.decode(this.stream,{_startOffset:0})},t.prototype._decodeTable=function(t){var e=this.stream.pos,n=this._getTableStream(t.tag),r=Yi[t.tag].decode(n,this,t.length);return this.stream.pos=e,r},t.prototype.getName=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defaultLanguage||Et.defaultLanguage,n=this.name&&this.name.records[t];return n?n[e]||n[this.defaultLanguage]||n[Et.defaultLanguage]||n.en||n[st(n)[0]]||null:null},t.prototype.hasGlyphForCodePoint=function(t){return!!this._cmapProcessor.lookup(t)},t.prototype.glyphForCodePoint=function(t){return this.getGlyph(this._cmapProcessor.lookup(t),[t])},t.prototype.glyphsForString=function(t){for(var e=[],n=t.length,r=0,i=-1,o=-1;r<=n;){var a=0,s=0;if(r<n){if(55296<=(a=t.charCodeAt(r++))&&a<=56319&&r<n){var u=t.charCodeAt(r);56320<=u&&u<=57343&&(r++,a=((1023&a)<<10)+(1023&u)+65536)}s=65024<=a&&a<=65039||917760<=a&&a<=917999?1:0}else r++;0===o&&1===s?e.push(this.getGlyph(this._cmapProcessor.lookup(i,a),[i,a])):0===o&&0===s&&e.push(this.glyphForCodePoint(i)),i=a,o=s}return e},t.prototype.layout=function(t,e,n,r,i){return this._layoutEngine.layout(t,e,n,r,i)},t.prototype.stringsForGlyph=function(t){return this._layoutEngine.stringsForGlyph(t)},t.prototype.getAvailableFeatures=function(t,e){return this._layoutEngine.getAvailableFeatures(t,e)},t.prototype._getBaseGlyph=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[t]||(this.directory.tables.glyf?this._glyphs[t]=new Ss(t,e,this):(this.directory.tables["CFF "]||this.directory.tables.CFF2)&&(this._glyphs[t]=new Cs(t,e,this))),this._glyphs[t]||null},t.prototype.getGlyph=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[t]||(this.directory.tables.sbix?this._glyphs[t]=new Ps(t,e,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[t]=new Os(t,e,this):this._getBaseGlyph(t,e)),this._glyphs[t]||null},t.prototype.createSubset=function(){return this.directory.tables["CFF "]?new Fs(this):new Ms(this)},t.prototype.getVariation=function(e){if(!this.directory.tables.fvar||!(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if("string"==typeof e&&(e=this.namedVariations[e]),"object"!==(void 0===e?"undefined":at(e)))throw new Error("Variation settings must be either a variation name or settings object.");var n=this.fvar.axis.map(function(t,n){var r=t.axisTag.trim();return r in e?Math.max(t.minValue,Math.min(t.maxValue,e[r])):t.defaultValue}),r=new nt.DecodeStream(this.stream.buffer);r.pos=this._directoryPos;var i=new t(r,n);return i._tables=this._tables,i},t.prototype.getFont=function(t){return this.getVariation(t)},ct(t,[{key:"postscriptName",get:function(){return this.getName("postscriptName")}},{key:"fullName",get:function(){return this.getName("fullName")}},{key:"familyName",get:function(){return this.getName("fontFamily")}},{key:"subfamilyName",get:function(){return this.getName("fontSubfamily")}},{key:"copyright",get:function(){return this.getName("copyright")}},{key:"version",get:function(){return this.getName("version")}},{key:"ascent",get:function(){return this.hhea.ascent}},{key:"descent",get:function(){return this.hhea.descent}},{key:"lineGap",get:function(){return this.hhea.lineGap}},{key:"underlinePosition",get:function(){return this.post.underlinePosition}},{key:"underlineThickness",get:function(){return this.post.underlineThickness}},{key:"italicAngle",get:function(){return this.post.italicAngle}},{key:"capHeight",get:function(){var t=this["OS/2"];return t?t.capHeight:this.ascent}},{key:"xHeight",get:function(){var t=this["OS/2"];return t?t.xHeight:0}},{key:"numGlyphs",get:function(){return this.maxp.numGlyphs}},{key:"unitsPerEm",get:function(){return this.head.unitsPerEm}},{key:"bbox",get:function(){return ot(new no(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}},{key:"_cmapProcessor",get:function(){return new $i(this.cmap)}},{key:"characterSet",get:function(){return this._cmapProcessor.getCharacterSet()}},{key:"_layoutEngine",get:function(){return new hs(this)}},{key:"availableFeatures",get:function(){return this._layoutEngine.getAvailableFeatures()}},{key:"variationAxes",get:function(){var t={};if(!this.fvar)return t;for(var e=this.fvar.axis,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i;t[o.axisTag.trim()]={name:o.name.en,min:o.minValue,default:o.defaultValue,max:o.maxValue}}return t}},{key:"namedVariations",get:function(){var t={};if(!this.fvar)return t;for(var e=this.fvar.instance,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}for(var o=i,a={},s=0;s<this.fvar.axis.length;s++){a[this.fvar.axis[s].axisTag.trim()]=o.coord[s]}t[o.name.en]=a}return t}},{key:"_variationProcessor",get:function(){if(!this.fvar)return null;var t=this.variationCoords;return t||this.CFF2?(t||(t=this.fvar.axis.map(function(t){return t.defaultValue})),new Ts(this,t)):null}}]),t}(),Q(bs.prototype,"bbox",[o],rt(bs.prototype,"bbox"),bs.prototype),Q(bs.prototype,"_cmapProcessor",[o],rt(bs.prototype,"_cmapProcessor"),bs.prototype),Q(bs.prototype,"characterSet",[o],rt(bs.prototype,"characterSet"),bs.prototype),Q(bs.prototype,"_layoutEngine",[o],rt(bs.prototype,"_layoutEngine"),bs.prototype),Q(bs.prototype,"variationAxes",[o],rt(bs.prototype,"variationAxes"),bs.prototype),Q(bs.prototype,"namedVariations",[o],rt(bs.prototype,"namedVariations"),bs.prototype),Q(bs.prototype,"_variationProcessor",[o],rt(bs.prototype,"_variationProcessor"),bs.prototype),bs),zs=new nt.Struct({tag:new nt.String(4),offset:new nt.Pointer(nt.uint32,"void",{type:"global"}),compLength:nt.uint32,length:nt.uint32,origChecksum:nt.uint32}),Ns=new nt.Struct({tag:new nt.String(4),flavor:nt.uint32,length:nt.uint32,numTables:nt.uint16,reserved:new nt.Reserved(nt.uint16),totalSfntSize:nt.uint32,majorVersion:nt.uint16,minorVersion:nt.uint16,metaOffset:nt.uint32,metaLength:nt.uint32,metaOrigLength:nt.uint32,privOffset:nt.uint32,privLength:nt.uint32,tables:new nt.Array(zs,"numTables")});Ns.process=function(){for(var t={},e=this.tables,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i;t[o.tag]=o}this.tables=t};var Ws=function(t){function n(){return lt(this,n),ht(this,t.apply(this,arguments))}return dt(n,t),n.probe=function(t){return"wOFF"===t.toString("ascii",0,4)},n.prototype._decodeDirectory=function(){this.directory=Ns.decode(this.stream,{_startOffset:0})},n.prototype._getTableStream=function(t){var n=this.directory.tables[t];if(n){if(this.stream.pos=n.offset,n.compLength<n.length){this.stream.pos+=2;var r=new e(n.length),i=At(this.stream.readBuffer(n.compLength-2),r);return new nt.DecodeStream(i)}return this.stream}return null},n}(Ds),Us=function(t){function e(){return lt(this,e),ht(this,t.apply(this,arguments))}return dt(e,t),e.prototype._decode=function(){return this._font._transformedGlyphs[this.id]},e.prototype._getCBox=function(){return this.path.bbox},e}(Ss),js={decode:function(t){for(var e=0,n=[0,1,2,3,4],r=0;r<n.length;r++){var i=t.readUInt8();if(3758096384&e)throw new Error("Overflow");if(e=e<<7|127&i,0==(128&i))return e}throw new Error("Bad base 128 number")}},Gs=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],Hs=new nt.Struct({flags:nt.uint8,customTag:new nt.Optional(new nt.String(4),function(t){return 63==(63&t.flags)}),tag:function(t){return t.customTag||Gs[63&t.flags]},length:js,transformVersion:function(t){return t.flags>>>6&3},transformed:function(t){return"glyf"===t.tag||"loca"===t.tag?0===t.transformVersion:0!==t.transformVersion},transformLength:new nt.Optional(js,function(t){return t.transformed})}),Vs=new nt.Struct({tag:new nt.String(4),flavor:nt.uint32,length:nt.uint32,numTables:nt.uint16,reserved:new nt.Reserved(nt.uint16),totalSfntSize:nt.uint32,totalCompressedSize:nt.uint32,majorVersion:nt.uint16,minorVersion:nt.uint16,metaOffset:nt.uint32,metaLength:nt.uint32,metaOrigLength:nt.uint32,privOffset:nt.uint32,privLength:nt.uint32,tables:new nt.Array(Hs,"numTables")});Vs.process=function(){for(var t={},e=0;e<this.tables.length;e++){var n=this.tables[e];t[n.tag]=n}return this.tables=t};var qs=function(t){function n(){return lt(this,n),ht(this,t.apply(this,arguments))}return dt(n,t),n.probe=function(t){return"wOF2"===t.toString("ascii",0,4)},n.prototype._decodeDirectory=function(){this.directory=Vs.decode(this.stream),this._dataPos=this.stream.pos},n.prototype._decompress=function(){if(!this._decompressed){this.stream.pos=this._dataPos;var t=this.stream.readBuffer(this.directory.totalCompressedSize),n=0;for(var r in this.directory.tables){var i=this.directory.tables[r];i.offset=n,n+=null!=i.transformLength?i.transformLength:i.length}var o=Pt(t,n);if(!o)throw new Error("Error decoding compressed data in WOFF2");this.stream=new nt.DecodeStream(new e(o)),this._decompressed=!0}},n.prototype._decodeTable=function(e){return this._decompress(),t.prototype._decodeTable.call(this,e)},n.prototype._getBaseGlyph=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(!this._glyphs[e])return this.directory.tables.glyf&&this.directory.tables.glyf.transformed?(this._transformedGlyphs||this._transformGlyfTable(),this._glyphs[e]=new Us(e,n,this)):t.prototype._getBaseGlyph.call(this,e,n)},n.prototype._transformGlyfTable=function(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;for(var t=Ys.decode(this.stream),e=[],n=0;n<t.numGlyphs;n++){var r={},i=t.nContours.readInt16BE();if(r.numberOfContours=i,i>0){for(var o=[],a=0,s=0;s<i;s++){a+=$(t.nPoints),o.push(a)}r.points=et(t.flags,t.glyphs,a);for(var u=0;u<i;u++)r.points[o[u]-1].endContour=!0;$(t.glyphs)}else if(i<0){var l=Ss.prototype._decodeComposite.call({_font:this},r,t.composites);if(l){$(t.glyphs)}}e.push(r)}this._transformedGlyphs=e},n}(Ds),Zs=function(){function t(e){lt(this,t),this.length=e,this._buf=new nt.Buffer(e)}return t.prototype.decode=function(t,e){return new nt.DecodeStream(this._buf.decode(t,e))},t}(),Ys=new nt.Struct({version:nt.uint32,numGlyphs:nt.uint16,indexFormat:nt.uint16,nContourStreamSize:nt.uint32,nPointsStreamSize:nt.uint32,flagStreamSize:nt.uint32,glyphStreamSize:nt.uint32,compositeStreamSize:nt.uint32,bboxStreamSize:nt.uint32,instructionStreamSize:nt.uint32,nContours:new Zs("nContourStreamSize"),nPoints:new Zs("nPointsStreamSize"),flags:new Zs("flagStreamSize"),glyphs:new Zs("glyphStreamSize"),composites:new Zs("compositeStreamSize"),bboxes:new Zs("bboxStreamSize"),instructions:new Zs("instructionStreamSize")}),Xs=253,Ks=254,Js=255,Qs=253,$s=new nt.VersionedStruct(nt.uint32,{65536:{numFonts:nt.uint32,offsets:new nt.Array(nt.uint32,"numFonts")},131072:{numFonts:nt.uint32,offsets:new nt.Array(nt.uint32,"numFonts"),dsigTag:nt.uint32,dsigLength:nt.uint32,dsigOffset:nt.uint32}}),tu=function(){function t(e){if(lt(this,t),this.stream=e,"ttcf"!==e.readString(4))throw new Error("Not a TrueType collection");this.header=$s.decode(e)}return t.probe=function(t){return"ttcf"===t.toString("ascii",0,4)},t.prototype.getFont=function(t){for(var e=this.header.offsets,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i,a=new nt.DecodeStream(this.stream.buffer);a.pos=o;var s=new Ds(a);if(s.postscriptName===t)return s}return null},ct(t,[{key:"fonts",get:function(){for(var t=[],e=this.header.offsets,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i,a=new nt.DecodeStream(this.stream.buffer);a.pos=o,t.push(new Ds(a))}return t}}]),t}(),eu=new nt.String(nt.uint8),nu=(new nt.Struct({len:nt.uint32,buf:new nt.Buffer("len")}),new nt.Struct({id:nt.uint16,nameOffset:nt.int16,attr:nt.uint8,dataOffset:nt.uint24,handle:nt.uint32})),ru=new nt.Struct({name:new nt.String(4),maxTypeIndex:nt.uint16,refList:new nt.Pointer(nt.uint16,new nt.Array(nu,function(t){return t.maxTypeIndex+1}),{type:"parent"})}),iu=new nt.Struct({length:nt.uint16,types:new nt.Array(ru,function(t){return t.length+1})}),ou=new nt.Struct({reserved:new nt.Reserved(nt.uint8,24),typeList:new nt.Pointer(nt.uint16,iu),nameListOffset:new nt.Pointer(nt.uint16,"void")}),au=new nt.Struct({dataOffset:nt.uint32,map:new nt.Pointer(nt.uint32,ou),dataLength:nt.uint32,mapLength:nt.uint32}),su=function(){function t(e){lt(this,t),this.stream=e,this.header=au.decode(this.stream);for(var n=this.header.map.typeList.types,r=Array.isArray(n),i=0,n=r?n:it(n);;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}for(var a=o,s=a.refList,u=Array.isArray(s),l=0,s=u?s:it(s);;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if(l=s.next(),l.done)break;c=l.value}var f=c;f.nameOffset>=0?(this.stream.pos=f.nameOffset+this.header.map.nameListOffset,f.name=eu.decode(this.stream)):f.name=null}"sfnt"===a.name&&(this.sfnt=a)}}return t.probe=function(t){var e=new nt.DecodeStream(t);try{var n=au.decode(e)}catch(t){return!1}for(var r=n.map.typeList.types,i=Array.isArray(r),o=0,r=i?r:it(r);;){var a;if(i){if(o>=r.length)break;a=r[o++]}else{if(o=r.next(),o.done)break;a=o.value}if("sfnt"===a.name)return!0}return!1},t.prototype.getFont=function(t){if(!this.sfnt)return null;for(var e=this.sfnt.refList,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i,a=this.header.dataOffset+o.dataOffset+4,s=new nt.DecodeStream(this.stream.buffer.slice(a)),u=new Ds(s);if(u.postscriptName===t)return u}return null},ct(t,[{key:"fonts",get:function(){for(var t=[],e=this.sfnt.refList,n=Array.isArray(e),r=0,e=n?e:it(e);;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if(r=e.next(),r.done)break;i=r.value}var o=i,a=this.header.dataOffset+o.dataOffset+4,s=new nt.DecodeStream(this.stream.buffer.slice(a));t.push(new Ds(s))}return t}}]),t}();Et.registerFormat(Ds),Et.registerFormat(Ws),Et.registerFormat(qs),Et.registerFormat(tu),Et.registerFormat(su),t.exports=Et}).call(e,n(3).Buffer,n(21))},function(t,e,n){(function(){var t,r,i,o;e.EncodeStream=n(300),e.DecodeStream=n(109),e.Array=n(171),e.LazyArray=n(318),e.Bitfield=n(319),e.Boolean=n(320),e.Buffer=n(321),e.Enum=n(322),e.Optional=n(323),e.Reserved=n(324),e.String=n(325),e.Struct=n(172),e.VersionedStruct=n(326),i=n(47);for(t in i)r=i[t],e[t]=r;o=n(327);for(t in o)r=o[t],e[t]=r}).call(this)},function(t,e,n){(function(e){(function(){var r,i,o,a,s={}.hasOwnProperty,u=function(t,e){function n(){this.constructor=t}for(var r in e)s.call(e,r)&&(t[r]=e[r]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t};a=n(102),r=n(109);try{o=n(110)}catch(t){}i=function(t){function n(t){null==t&&(t=65536),n.__super__.constructor.apply(this,arguments),this.buffer=new e(t),this.bufferOffset=0,this.pos=0}var i;u(n,t);for(i in e.prototype)"write"===i.slice(0,5)&&function(t){var e;e=+r.TYPES[t.replace(/write|[BL]E/g,"")],n.prototype[t]=function(n){return this.ensure(e),this.buffer[t](n,this.bufferOffset),this.bufferOffset+=e,this.pos+=e}}(i);return n.prototype._read=function(){},n.prototype.ensure=function(t){if(this.bufferOffset+t>this.buffer.length)return this.flush()},n.prototype.flush=function(){if(this.bufferOffset>0)return this.push(new e(this.buffer.slice(0,this.bufferOffset))),this.bufferOffset=0},n.prototype.writeBuffer=function(t){return this.flush(),this.push(t),this.pos+=t.length},n.prototype.writeString=function(t,n){var r,i,a,s,u;switch(null==n&&(n="ascii"),n){case"utf16le":case"ucs2":case"utf8":case"ascii":return this.writeBuffer(new e(t,n));case"utf16be":for(r=new e(t,"utf16le"),a=s=0,u=r.length-1;s<u;a=s+=2)i=r[a],r[a]=r[a+1],r[a+1]=i;return this.writeBuffer(r);default:if(o)return this.writeBuffer(o.encode(t,n));throw new Error("Install iconv-lite to enable additional string encodings.")}},n.prototype.writeUInt24BE=function(t){return this.ensure(3),this.buffer[this.bufferOffset++]=t>>>16&255,this.buffer[this.bufferOffset++]=t>>>8&255,this.buffer[this.bufferOffset++]=255&t,this.pos+=3},n.prototype.writeUInt24LE=function(t){return this.ensure(3),this.buffer[this.bufferOffset++]=255&t,this.buffer[this.bufferOffset++]=t>>>8&255,this.buffer[this.bufferOffset++]=t>>>16&255,this.pos+=3},n.prototype.writeInt24BE=function(t){return t>=0?this.writeUInt24BE(t):this.writeUInt24BE(t+16777215+1)},n.prototype.writeInt24LE=function(t){return t>=0?this.writeUInt24LE(t):this.writeUInt24LE(t+16777215+1)},n.prototype.fill=function(t,n){var r;return n<this.buffer.length?(this.ensure(n),this.buffer.fill(t,this.bufferOffset,this.bufferOffset+n),this.bufferOffset+=n,this.pos+=n):(r=new e(n),r.fill(t),this.writeBuffer(r))},n.prototype.end=function(){return this.flush(),this.push(null)},n}(a.Readable),t.exports=i}).call(this)}).call(e,n(3).Buffer)},function(t,e,n){"use strict";function r(t,e){this.encoder=t,this.addBOM=!0}function i(t,e){this.decoder=t,this.pass=!1,this.options=e||{}}e.PrependBOM=r,r.prototype.write=function(t){return this.addBOM&&(t="\ufeff"+t,this.addBOM=!1),this.encoder.write(t)},r.prototype.end=function(){return this.encoder.end()},e.StripBOM=i,i.prototype.write=function(t){var e=this.decoder.write(t);return this.pass||!e?e:("\ufeff"===e[0]&&(e=e.slice(1),"function"==typeof this.options.stripBOM&&this.options.stripBOM()),this.pass=!0,e)},i.prototype.end=function(){return this.decoder.end()}},function(t,e,n){"use strict";for(var r=[n(303),n(304),n(305),n(306),n(307),n(308),n(309),n(310)],i=0;i<r.length;i++){var t=r[i];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}},function(t,e,n){"use strict";function r(t,e){this.enc=t.encodingName,this.bomAware=t.bomAware,"base64"===this.enc?this.encoder=a:"cesu8"===this.enc&&(this.enc="utf8",this.encoder=s,"ð©"!==l.from("eda0bdedb2a9","hex").toString()&&(this.decoder=u,this.defaultCharUnicode=e.defaultCharUnicode))}function i(t,e){c.call(this,e.enc)}function o(t,e){this.enc=e.enc}function a(t,e){this.prevStr=""}function s(t,e){}function u(t,e){this.acc=0,this.contBytes=0,this.accBytes=0,this.defaultCharUnicode=e.defaultCharUnicode}var l=n(46).Buffer;t.exports={utf8:{type:"_internal",bomAware:!0},cesu8:{type:"_internal",bomAware:!0},unicode11utf8:"utf8",ucs2:{type:"_internal",bomAware:!0},utf16le:"ucs2",binary:{type:"_internal"},base64:{type:"_internal"},hex:{type:"_internal"},_internal:r},r.prototype.encoder=o,r.prototype.decoder=i;var c=n(105).StringDecoder;c.prototype.end||(c.prototype.end=function(){}),i.prototype=c.prototype,o.prototype.write=function(t){return l.from(t,this.enc)},o.prototype.end=function(){},a.prototype.write=function(t){t=this.prevStr+t;var e=t.length-t.length%4;return this.prevStr=t.slice(e),t=t.slice(0,e),l.from(t,"base64")},a.prototype.end=function(){return l.from(this.prevStr,"base64")},s.prototype.write=function(t){for(var e=l.alloc(3*t.length),n=0,r=0;r<t.length;r++){var i=t.charCodeAt(r);i<128?e[n++]=i:i<2048?(e[n++]=192+(i>>>6),e[n++]=128+(63&i)):(e[n++]=224+(i>>>12),e[n++]=128+(i>>>6&63),e[n++]=128+(63&i))}return e.slice(0,n)},s.prototype.end=function(){},u.prototype.write=function(t){for(var e=this.acc,n=this.contBytes,r=this.accBytes,i="",o=0;o<t.length;o++){var a=t[o];128!=(192&a)?(n>0&&(i+=this.defaultCharUnicode,n=0),a<128?i+=String.fromCharCode(a):a<224?(e=31&a,n=1,r=1):a<240?(e=15&a,n=2,r=1):i+=this.defaultCharUnicode):n>0?(e=e<<6|63&a,n--,r++,0===n&&(i+=2===r&&e<128&&e>0?this.defaultCharUnicode:3===r&&e<2048?this.defaultCharUnicode:String.fromCharCode(e))):i+=this.defaultCharUnicode}return this.acc=e,this.contBytes=n,this.accBytes=r,i},u.prototype.end=function(){var t=0;return this.contBytes>0&&(t+=this.defaultCharUnicode),t}},function(t,e,n){"use strict";function r(){}function i(){}function o(){this.overflowByte=-1}function a(t,e){this.iconv=e}function s(t,e){t=t||{},void 0===t.addBOM&&(t.addBOM=!0),this.encoder=e.iconv.getEncoder("utf-16le",t)}function u(t,e){this.decoder=null,this.initialBytes=[],this.initialBytesLen=0,this.options=t||{},this.iconv=e.iconv}function l(t,e){var n=e||"utf-16le";if(t.length>=2)if(254==t[0]&&255==t[1])n="utf-16be";else if(255==t[0]&&254==t[1])n="utf-16le";else{for(var r=0,i=0,o=Math.min(t.length-t.length%2,64),a=0;a<o;a+=2)0===t[a]&&0!==t[a+1]&&i++,0!==t[a]&&0===t[a+1]&&r++;i>r?n="utf-16be":i<r&&(n="utf-16le")}return n}var c=n(46).Buffer;e.utf16be=r,r.prototype.encoder=i,r.prototype.decoder=o,r.prototype.bomAware=!0,i.prototype.write=function(t){for(var e=c.from(t,"ucs2"),n=0;n<e.length;n+=2){var r=e[n];e[n]=e[n+1],e[n+1]=r}return e},i.prototype.end=function(){},o.prototype.write=function(t){if(0==t.length)return"";var e=c.alloc(t.length+1),n=0,r=0;for(-1!==this.overflowByte&&(e[0]=t[0],e[1]=this.overflowByte,n=1,r=2);n<t.length-1;n+=2,r+=2)e[r]=t[n+1],e[r+1]=t[n];return this.overflowByte=n==t.length-1?t[t.length-1]:-1,e.slice(0,r).toString("ucs2")},o.prototype.end=function(){},e.utf16=a,a.prototype.encoder=s,a.prototype.decoder=u,s.prototype.write=function(t){return this.encoder.write(t)},s.prototype.end=function(){return this.encoder.end()},u.prototype.write=function(t){if(!this.decoder){if(this.initialBytes.push(t),this.initialBytesLen+=t.length,this.initialBytesLen<16)return"";var t=c.concat(this.initialBytes),e=l(t,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options),this.initialBytes.length=this.initialBytesLen=0}return this.decoder.write(t)},u.prototype.end=function(){if(!this.decoder){var t=c.concat(this.initialBytes),e=l(t,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options);var n=this.decoder.write(t),r=this.decoder.end();return r?n+r:n}return this.decoder.end()}},function(t,e,n){"use strict";function r(t,e){this.iconv=e}function i(t,e){this.iconv=e.iconv}function o(t,e){this.iconv=e.iconv,this.inBase64=!1,this.base64Accum=""}function a(t,e){this.iconv=e}function s(t,e){this.iconv=e.iconv,this.inBase64=!1,this.base64Accum=l.alloc(6),this.base64AccumIdx=0}function u(t,e){this.iconv=e.iconv,this.inBase64=!1,this.base64Accum=""}var l=n(46).Buffer;e.utf7=r,e.unicode11utf7="utf7",r.prototype.encoder=i,r.prototype.decoder=o,r.prototype.bomAware=!0;var c=/[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;i.prototype.write=function(t){return l.from(t.replace(c,function(t){return"+"+("+"===t?"":this.iconv.encode(t,"utf16-be").toString("base64").replace(/=+$/,""))+"-"}.bind(this)))},i.prototype.end=function(){};for(var f=/[A-Za-z0-9\/+]/,h=[],d=0;d<256;d++)h[d]=f.test(String.fromCharCode(d));var p="+".charCodeAt(0),g="-".charCodeAt(0),v="&".charCodeAt(0);o.prototype.write=function(t){for(var e="",n=0,r=this.inBase64,i=this.base64Accum,o=0;o<t.length;o++)if(r){if(!h[t[o]]){if(o==n&&t[o]==g)e+="+";else{var a=i+t.slice(n,o).toString();e+=this.iconv.decode(l.from(a,"base64"),"utf16-be")}t[o]!=g&&o--,n=o+1,r=!1,i=""}}else t[o]==p&&(e+=this.iconv.decode(t.slice(n,o),"ascii"),n=o+1,r=!0);if(r){var a=i+t.slice(n).toString(),s=a.length-a.length%8;i=a.slice(s),a=a.slice(0,s),e+=this.iconv.decode(l.from(a,"base64"),"utf16-be")}else e+=this.iconv.decode(t.slice(n),"ascii");return this.inBase64=r,this.base64Accum=i,e},o.prototype.end=function(){var t="";return this.inBase64&&this.base64Accum.length>0&&(t=this.iconv.decode(l.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",t},e.utf7imap=a,a.prototype.encoder=s,a.prototype.decoder=u,a.prototype.bomAware=!0,s.prototype.write=function(t){for(var e=this.inBase64,n=this.base64Accum,r=this.base64AccumIdx,i=l.alloc(5*t.length+10),o=0,a=0;a<t.length;a++){var s=t.charCodeAt(a);32<=s&&s<=126?(e&&(r>0&&(o+=i.write(n.slice(0,r).toString("base64").replace(/\//g,",").replace(/=+$/,""),o),r=0),i[o++]=g,e=!1),e||(i[o++]=s,s===v&&(i[o++]=g))):(e||(i[o++]=v,e=!0),e&&(n[r++]=s>>8,n[r++]=255&s,r==n.length&&(o+=i.write(n.toString("base64").replace(/\//g,","),o),r=0)))}return this.inBase64=e,this.base64AccumIdx=r,i.slice(0,o)},s.prototype.end=function(){var t=l.alloc(10),e=0;return this.inBase64&&(this.base64AccumIdx>0&&(e+=t.write(this.base64Accum.slice(0,this.base64AccumIdx).toString("base64").replace(/\//g,",").replace(/=+$/,""),e),this.base64AccumIdx=0),t[e++]=g,this.inBase64=!1),t.slice(0,e)};var y=h.slice();y[",".charCodeAt(0)]=!0,u.prototype.write=function(t){for(var e="",n=0,r=this.inBase64,i=this.base64Accum,o=0;o<t.length;o++)if(r){if(!y[t[o]]){if(o==n&&t[o]==g)e+="&";else{var a=i+t.slice(n,o).toString().replace(/,/g,"/");e+=this.iconv.decode(l.from(a,"base64"),"utf16-be")}t[o]!=g&&o--,n=o+1,r=!1,i=""}}else t[o]==v&&(e+=this.iconv.decode(t.slice(n,o),"ascii"),n=o+1,r=!0);if(r){var a=i+t.slice(n).toString().replace(/,/g,"/"),s=a.length-a.length%8;i=a.slice(s),a=a.slice(0,s),e+=this.iconv.decode(l.from(a,"base64"),"utf16-be")}else e+=this.iconv.decode(t.slice(n),"ascii");return this.inBase64=r,this.base64Accum=i,e},u.prototype.end=function(){var t="";return this.inBase64&&this.base64Accum.length>0&&(t=this.iconv.decode(l.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",t}},function(t,e,n){"use strict";function r(t,e){if(!t)throw new Error("SBCS codec is called without the data.");if(!t.chars||128!==t.chars.length&&256!==t.chars.length)throw new Error("Encoding '"+t.type+"' has incorrect 'chars' (must be of len 128 or 256)");if(128===t.chars.length){for(var n="",r=0;r<128;r++)n+=String.fromCharCode(r);t.chars=n+t.chars}this.decodeBuf=a.from(t.chars,"ucs2");for(var i=a.alloc(65536,e.defaultCharSingleByte.charCodeAt(0)),r=0;r<t.chars.length;r++)i[t.chars.charCodeAt(r)]=r;this.encodeBuf=i}function i(t,e){this.encodeBuf=e.encodeBuf}function o(t,e){this.decodeBuf=e.decodeBuf}var a=n(46).Buffer;e._sbcs=r,r.prototype.encoder=i,r.prototype.decoder=o,i.prototype.write=function(t){for(var e=a.alloc(t.length),n=0;n<t.length;n++)e[n]=this.encodeBuf[t.charCodeAt(n)];return e},i.prototype.end=function(){},o.prototype.write=function(t){for(var e=this.decodeBuf,n=a.alloc(2*t.length),r=0,i=0,o=0;o<t.length;o++)r=2*t[o],i=2*o,n[i]=e[r],n[i+1]=e[r+1];return n.toString("ucs2")},o.prototype.end=function(){}},function(t,e,n){"use strict";t.exports={10029:"maccenteuro",maccenteuro:{type:"_sbcs",chars:"ÃÄÄÃÄÃÃÃ¡ÄÄÃ¤ÄÄÄÃ©Å¹ÅºÄÃ­ÄÄÄÄÃ³ÄÃ´Ã¶ÃµÃºÄÄÃ¼â Â°ÄÂ£Â§â¢Â¶ÃÂ®Â©â¢ÄÂ¨â Ä£Ä®Ä¯Äªâ¤â¥Ä«Ä¶ââÅÄ»Ä¼Ä½Ä¾Ä¹ÄºÅÅÅÂ¬âÅÅâÂ«Â»â¦Â ÅÅÃÅÅââââââÃ·âÅÅÅÅâ¹âºÅÅÅÅ ââÅ¡ÅÅÃÅ¤Å¥ÃÅ½Å¾ÅªÃÃÅ«Å®ÃÅ¯Å°Å±Å²Å³ÃÃ½Ä·Å»ÅÅ¼Ä¢Ë"},808:"cp808",ibm808:"cp808",cp808:{type:"_sbcs",chars:"ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·âââ¬â Â "},mik:{type:"_sbcs",chars:"ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑââ´â¬âââ¼â£ââââ©â¦â ââ¬ââââââ¤âÂ§âââââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "},ascii8bit:"ascii",usascii:"ascii",ansix34:"ascii",ansix341968:"ascii",ansix341986:"ascii",csascii:"ascii",cp367:"ascii",ibm367:"ascii",isoir6:"ascii",iso646us:"ascii",iso646irv:"ascii",us:"ascii",latin1:"iso88591",latin2:"iso88592",latin3:"iso88593",latin4:"iso88594",latin5:"iso88599",latin6:"iso885910",latin7:"iso885913",latin8:"iso885914",latin9:"iso885915",latin10:"iso885916",csisolatin1:"iso88591",csisolatin2:"iso88592",csisolatin3:"iso88593",csisolatin4:"iso88594",csisolatincyrillic:"iso88595",csisolatinarabic:"iso88596",csisolatingreek:"iso88597",csisolatinhebrew:"iso88598",csisolatin5:"iso88599",csisolatin6:"iso885910",l1:"iso88591",l2:"iso88592",l3:"iso88593",l4:"iso88594",l5:"iso88599",l6:"iso885910",l7:"iso885913",l8:"iso885914",l9:"iso885915",l10:"iso885916",isoir14:"iso646jp",isoir57:"iso646cn",isoir100:"iso88591",isoir101:"iso88592",isoir109:"iso88593",isoir110:"iso88594",isoir144:"iso88595",isoir127:"iso88596",isoir126:"iso88597",isoir138:"iso88598",isoir148:"iso88599",isoir157:"iso885910",isoir166:"tis620",isoir179:"iso885913",isoir199:"iso885914",isoir203:"iso885915",isoir226:"iso885916",cp819:"iso88591",ibm819:"iso88591",cyrillic:"iso88595",arabic:"iso88596",arabic8:"iso88596",ecma114:"iso88596",asmo708:"iso88596",greek:"iso88597",greek8:"iso88597",ecma118:"iso88597",elot928:"iso88597",hebrew:"iso88598",hebrew8:"iso88598",turkish:"iso88599",turkish8:"iso88599",thai:"iso885911",thai8:"iso885911",celtic:"iso885914",celtic8:"iso885914",isoceltic:"iso885914",tis6200:"tis620",tis62025291:"tis620",tis62025330:"tis620",10000:"macroman",10006:"macgreek",10007:"maccyrillic",10079:"maciceland",10081:"macturkish",cspc8codepage437:"cp437",cspc775baltic:"cp775",cspc850multilingual:"cp850",cspcp852:"cp852",cspc862latinhebrew:"cp862",cpgr:"cp869",msee:"cp1250",mscyrl:"cp1251",msansi:"cp1252",msgreek:"cp1253",msturk:"cp1254",mshebr:"cp1255",msarab:"cp1256",winbaltrim:"cp1257",cp20866:"koi8r",20866:"koi8r",ibm878:"koi8r",cskoi8r:"koi8r",cp21866:"koi8u",21866:"koi8u",ibm1168:"koi8u",strk10482002:"rk1048",tcvn5712:"tcvn",tcvn57121:"tcvn",gb198880:"iso646cn",cn:"iso646cn",csiso14jisc6220ro:"iso646jp",jisc62201969ro:"iso646jp",jp:"iso646jp",cshproman8:"hproman8",r8:"hproman8",roman8:"hproman8",xroman8:"hproman8",ibm1051:"hproman8",mac:"macintosh",csmacintosh:"macintosh"}},function(t,e,n){"use strict";t.exports={437:"cp437",737:"cp737",775:"cp775",850:"cp850",852:"cp852",855:"cp855",856:"cp856",857:"cp857",858:"cp858",860:"cp860",861:"cp861",862:"cp862",863:"cp863",864:"cp864",865:"cp865",866:"cp866",869:"cp869",874:"windows874",922:"cp922",1046:"cp1046",1124:"cp1124",1125:"cp1125",1129:"cp1129",1133:"cp1133",1161:"cp1161",1162:"cp1162",1163:"cp1163",1250:"windows1250",1251:"windows1251",1252:"windows1252",1253:"windows1253",1254:"windows1254",1255:"windows1255",1256:"windows1256",1257:"windows1257",1258:"windows1258",28591:"iso88591",28592:"iso88592",28593:"iso88593",28594:"iso88594",28595:"iso88595",28596:"iso88596",28597:"iso88597",28598:"iso88598",28599:"iso88599",28600:"iso885910",28601:"iso885911",28603:"iso885913",28604:"iso885914",28605:"iso885915",28606:"iso885916",windows874:{type:"_sbcs",chars:"â¬ï¿½ï¿½ï¿½ï¿½â¦ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"},win874:"windows874",cp874:"windows874",windows1250:{type:"_sbcs",chars:"â¬ï¿½âï¿½ââ¦â â¡ï¿½â°Å â¹ÅÅ¤Å½Å¹ï¿½âââââ¢ââï¿½â¢Å¡âºÅÅ¥Å¾ÅºÂ ËËÅÂ¤ÄÂ¦Â§Â¨Â©ÅÂ«Â¬Â­Â®Å»Â°Â±ËÅÂ´ÂµÂ¶Â·Â¸ÄÅÂ»Ä½ËÄ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"},win1250:"windows1250",cp1250:"windows1250",windows1251:{type:"_sbcs",chars:"ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÐÐÐÑâââââ¢ââï¿½â¢ÑâºÑÑÑÑÂ ÐÑÐÂ¤ÒÂ¦Â§ÐÂ©ÐÂ«Â¬Â­Â®ÐÂ°Â±ÐÑÒÂµÂ¶Â·ÑâÑÂ»ÑÐÑÑÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"},win1251:"windows1251",cp1251:"windows1251",windows1252:{type:"_sbcs",chars:"â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½Å½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½Å¾Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"},win1252:"windows1252",cp1252:"windows1252",windows1253:{type:"_sbcs",chars:"â¬ï¿½âÆââ¦â â¡ï¿½â°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â ÎÎÂ£Â¤Â¥Â¦Â§Â¨Â©ï¿½Â«Â¬Â­Â®âÂ°Â±Â²Â³ÎÂµÂ¶Â·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"},win1253:"windows1253",cp1253:"windows1253",windows1254:{type:"_sbcs",chars:"â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"},win1254:"windows1254",cp1254:"windows1254",windows1255:{type:"_sbcs",chars:"â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â Â¡Â¢Â£âªÂ¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾Â¿Ö°Ö±Ö²Ö³Ö´ÖµÖ¶Ö·Ö¸Ö¹ÖºÖ»Ö¼Ö½Ö¾Ö¿×××××°×±×²×³×´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"},win1255:"windows1255",cp1255:"windows1255",windows1256:{type:"_sbcs",chars:"â¬Ù¾âÆââ¦â â¡Ëâ°Ù¹â¹ÅÚÚÚÚ¯âââââ¢ââÚ©â¢ÚâºÅââÚºÂ ØÂ¢Â£Â¤Â¥Â¦Â§Â¨Â©Ú¾Â«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ØÂ»Â¼Â½Â¾ØÛØ¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶ÃØ·Ø¸Ø¹ØºÙÙÙÙÃ ÙÃ¢ÙÙÙÙÃ§Ã¨Ã©ÃªÃ«ÙÙÃ®Ã¯ÙÙÙÙÃ´ÙÙÃ·ÙÃ¹ÙÃ»Ã¼ââÛ"},win1256:"windows1256",cp1256:"windows1256",windows1257:{type:"_sbcs",chars:"â¬ï¿½âï¿½ââ¦â â¡ï¿½â°ï¿½â¹ï¿½Â¨ËÂ¸ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½Â¯Ëï¿½Â ï¿½Â¢Â£Â¤ï¿½Â¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³Â´ÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾Ë"},win1257:"windows1257",cp1257:"windows1257",windows1258:{type:"_sbcs",chars:"â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"},win1258:"windows1258",cp1258:"windows1258",iso88591:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"},cp28591:"iso88591",iso88592:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄËÅÂ¤Ä½ÅÂ§Â¨Å ÅÅ¤Å¹Â­Å½Å»Â°ÄËÅÂ´Ä¾ÅËÂ¸Å¡ÅÅ¥ÅºËÅ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"},cp28592:"iso88592",iso88593:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Ä¦ËÂ£Â¤ï¿½Ä¤Â§Â¨Ä°ÅÄÄ´Â­ï¿½Å»Â°Ä§Â²Â³Â´ÂµÄ¥Â·Â¸Ä±ÅÄÄµÂ½ï¿½Å¼ÃÃÃï¿½ÃÄÄÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ ÃÃÄÃÃÃÃÅ¬ÅÃÃ Ã¡Ã¢ï¿½Ã¤ÄÄÃ§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ï¿½Ã±Ã²Ã³Ã´Ä¡Ã¶Ã·ÄÃ¹ÃºÃ»Ã¼Å­ÅË"},cp28593:"iso88593",iso88594:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄ¸ÅÂ¤Ä¨Ä»Â§Â¨Å ÄÄ¢Å¦Â­Å½Â¯Â°ÄËÅÂ´Ä©Ä¼ËÂ¸Å¡ÄÄ£Å§ÅÅ¾ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÄªÄÅÅÄ¶ÃÃÃÃÃÅ²ÃÃÃÅ¨ÅªÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ä«ÄÅÅÄ·Ã´ÃµÃ¶Ã·Ã¸Å³ÃºÃ»Ã¼Å©Å«Ë"},cp28594:"iso88594",iso88595:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÐÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÂ§ÑÑ"},cp28595:"iso88595",iso88596:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ï¿½ï¿½Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ØÂ­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Øï¿½ï¿½ï¿½Øï¿½Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·Ø¸Ø¹Øºï¿½ï¿½ï¿½ï¿½ï¿½ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"},cp28596:"iso88596",iso88597:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ââÂ£â¬â¯Â¦Â§Â¨Â©ÍºÂ«Â¬Â­ï¿½âÂ°Â±Â²Â³ÎÎÎÂ·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"},cp28597:"iso88597",iso88598:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½â××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"},cp28598:"iso88598",iso88599:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"},cp28599:"iso88599",iso885910:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÄ¢ÄªÄ¨Ä¶Â§Ä»ÄÅ Å¦Å½Â­ÅªÅÂ°ÄÄÄ£Ä«Ä©Ä·Â·Ä¼ÄÅ¡Å§Å¾âÅ«ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÃÃÅÅÃÃÃÃÅ¨ÃÅ²ÃÃÃÃÃÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ã¯Ã°ÅÅÃ³Ã´ÃµÃ¶Å©Ã¸Å³ÃºÃ»Ã¼Ã½Ã¾Ä¸"},cp28600:"iso885910",iso885911:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"},cp28601:"iso885911",iso885913:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ âÂ¢Â£Â¤âÂ¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³âÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾â"},cp28603:"iso885913",iso885914:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ á¸á¸Â£ÄÄá¸Â§áºÂ©áºá¸á»²Â­Â®Å¸á¸á¸Ä Ä¡á¹á¹Â¶á¹áºá¹áºá¹ á»³áºáºá¹¡ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ´ÃÃÃÃÃÃá¹ªÃÃÃÃÃÃÅ¶ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÅµÃ±Ã²Ã³Ã´ÃµÃ¶á¹«Ã¸Ã¹ÃºÃ»Ã¼Ã½Å·Ã¿"},cp28604:"iso885914",iso885915:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Å Â§Å¡Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å½ÂµÂ¶Â·Å¾Â¹ÂºÂ»ÅÅÅ¸Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"},cp28605:"iso885915",iso885916:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÅâ¬âÅ Â§Å¡Â©ÈÂ«Å¹Â­ÅºÅ»Â°Â±ÄÅÅ½âÂ¶Â·Å¾ÄÈÂ»ÅÅÅ¸Å¼ÃÃÃÄÃÄÃÃÃÃÃÃÃÃÃÃÄÅÃÃÃÅÃÅÅ°ÃÃÃÃÄÈÃÃ Ã¡Ã¢ÄÃ¤ÄÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÅÃ²Ã³Ã´ÅÃ¶ÅÅ±Ã¹ÃºÃ»Ã¼ÄÈÃ¿"},cp28606:"iso885916",cp437:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "},ibm437:"cp437",csibm437:"cp437",cp737:{type:"_sbcs",chars:"ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏâââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÏÎ¬Î­Î®ÏÎ¯ÏÏÏÏÎÎÎÎÎÎÎÂ±â¥â¤ÎªÎ«Ã·âÂ°âÂ·ââ¿Â²â Â "},ibm737:"cp737",csibm737:"cp737",cp775:{type:"_sbcs",chars:"ÄÃ¼Ã©ÄÃ¤Ä£Ã¥ÄÅÄÅÅÄ«Å¹ÃÃÃÃ¦ÃÅÃ¶Ä¢Â¢ÅÅÃÃÃ¸Â£ÃÃÂ¤ÄÄªÃ³Å»Å¼ÅºâÂ¦Â©Â®Â¬Â½Â¼ÅÂ«Â»âââââ¤ÄÄÄÄâ£âââÄ®Å âââ´â¬âââ¼Å²Åªâââ©â¦â ââ¬Å½ÄÄÄÄÄ¯Å¡Å³Å«Å¾âââââââÃÃÅÅÃµÃÂµÅÄ¶Ä·Ä»Ä¼ÅÄÅâÂ­Â±âÂ¾Â¶Â§Ã·âÂ°âÂ·Â¹Â³Â²â Â "},ibm775:"cp775",csibm775:"cp775",cp850:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃÄ±ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "},ibm850:"cp850",csibm850:"cp850",cp852:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã¤Å¯ÄÃ§ÅÃ«ÅÅÃ®Å¹ÃÄÃÄ¹ÄºÃ´Ã¶Ä½Ä¾ÅÅÃÃÅ¤Å¥ÅÃÄÃ¡Ã­Ã³ÃºÄÄÅ½Å¾ÄÄÂ¬ÅºÄÅÂ«Â»âââââ¤ÃÃÄÅâ£âââÅ»Å¼âââ´â¬âââ¼ÄÄâââ©â¦â ââ¬Â¤ÄÄÄÃÄÅÃÃÄââââÅ¢Å®âÃÃÃÅÅÅÅ Å¡ÅÃÅÅ°Ã½ÃÅ£Â´Â­ËËËËÂ§Ã·Â¸Â°Â¨ËÅ±ÅÅâ Â "},ibm852:"cp852",csibm852:"cp852",cp855:{type:"_sbcs",chars:"ÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐ®ÑÐªÐ°ÐÐ±ÐÑÐ¦Ð´ÐÐµÐÑÐ¤Ð³ÐÂ«Â»âââââ¤ÑÐ¥Ð¸Ðâ£âââÐ¹Ðâââ´â¬âââ¼ÐºÐâââ©â¦â ââ¬Â¤Ð»ÐÐ¼ÐÐ½ÐÐ¾ÐÐ¿ââââÐÑâÐ¯ÑÐ ÑÐ¡ÑÐ¢ÑÐ£Ð¶ÐÐ²ÐÑÐ¬âÂ­ÑÐ«Ð·ÐÑÐ¨ÑÐ­ÑÐ©ÑÐ§Â§â Â "},ibm855:"cp855",csibm855:"cp855",cp856:{type:"_sbcs",chars:"××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½Â£ï¿½Ãï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â®Â¬Â½Â¼ï¿½Â«Â»âââââ¤ï¿½ï¿½ï¿½Â©â£âââÂ¢Â¥âââ´â¬âââ¼ï¿½ï¿½âââ©â¦â ââ¬Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ââââÂ¦ï¿½âï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "},ibm856:"cp856",csibm856:"cp856",cp857:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ä±ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ä°ÃÃÃ¸Â£ÃÅÅÃ¡Ã­Ã³ÃºÃ±ÃÄÄÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤ÂºÂªÃÃÃï¿½ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµï¿½ÃÃÃÃÃ¬Ã¿Â¯Â´Â­Â±ï¿½Â¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "},ibm857:"cp857",csibm857:"cp857",cp858:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃâ¬ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "},ibm858:"cp858",csibm858:"cp858",cp860:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã£Ã ÃÃ§ÃªÃÃ¨ÃÃÃ¬ÃÃÃÃÃÃ´ÃµÃ²ÃÃ¹ÃÃÃÂ¢Â£Ãâ§ÃÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿ÃÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "},ibm860:"cp860",csibm860:"cp860",cp861:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨ÃÃ°ÃÃÃÃÃ¦ÃÃ´Ã¶Ã¾Ã»ÃÃ½ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃÃÃÃÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "},ibm861:"cp861",csibm861:"cp861",cp862:{type:"_sbcs",chars:"××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "},ibm862:"cp862",csibm862:"cp862",cp863:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢ÃÃ Â¶Ã§ÃªÃ«Ã¨Ã¯Ã®âÃÂ§ÃÃÃÃ´ÃÃÃ»Ã¹Â¤ÃÃÂ¢Â£ÃÃÆÂ¦Â´Ã³ÃºÂ¨Â¸Â³Â¯ÃâÂ¬Â½Â¼Â¾Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "},ibm863:"cp863",csibm863:"cp863",cp864:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$Ùª&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~Â°Â·ââââââ¼â¤â¬ââ´ââââÎ²âÏÂ±Â½Â¼âÂ«Â»ï»·ï»¸ï¿½ï¿½ï»»ï»¼ï¿½Â Â­ïºÂ£Â¤ïºï¿½ï¿½ïºïºïºïºØïºïº¡ïº¥Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ï»Øïº±ïºµïº¹ØÂ¢ïºïºïºïºï»ïºïºïºïºïºïºïºïº£ïº§ïº©ïº«ïº­ïº¯ïº³ïº·ïº»ïº¿ï»ï»ï»ï»Â¦Â¬Ã·Ãï»Ùï»ï»ï»ï»ï»£ï»§ï»«ï»­ï»¯ï»³ïº½ï»ï»ï»ï»¡ï¹½Ùï»¥ï»©ï»¬ï»°ï»²ï»ï»ï»µï»¶ï»ï»ï»±â ï¿½"},ibm864:"cp864",csibm864:"cp864",cp865:{type:"_sbcs",chars:"ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â¤âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "},ibm865:"cp865",csibm865:"cp865",cp866:{type:"_sbcs",chars:"ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·ââÂ¤â Â "},ibm866:"cp866",csibm866:"cp866",cp869:{type:"_sbcs",chars:"ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îï¿½Â·Â¬Â¦ââÎâÎÎÎªÎï¿½ï¿½ÎÎ«Â©ÎÂ²Â³Î¬Â£Î­Î®Î¯ÏÎÏÏÎÎÎÎÎÎÎÂ½ÎÎÂ«Â»âââââ¤ÎÎÎÎâ£âââÎÎâââ´â¬âââ¼Î Î¡âââ©â¦â ââ¬Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³ââââÎ´ÎµâÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÎÂ­Â±ÏÏÏÂ§ÏÎÂ°Â¨ÏÏÎ°Ïâ Â "},ibm869:"cp869",csibm869:"cp869",cp922:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®â¾Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ ÃÃÃÃÃÃÃÃÃÃÃÃÃÅ½ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Å¡Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Å¾Ã¿"},ibm922:"cp922",csibm922:"cp922",cp1046:{type:"_sbcs",chars:"ïºÃÃ·ï£¶ï£µï£´ï£·ï¹±Ââ ââââââï¹¹ï¹»ï¹½ï¹¿ï¹·ïºï»°ï»³ï»²ï»ï»ï»ï»¶ï»¸ï»ºï»¼Â ï£ºï£¹ï£¸Â¤ï£»ïºïºïºïºïºïº£ØÂ­ïº§ïº³Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ïº·Øïº»ïº¿ï»Øï»Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·ï»Ø¹Øºï»ïºïºïºï»ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï»ï»ï»ï£¼ï»µï»·ï»¹ï»»ï»£ï»§ï»¬ï»©ï¿½"},ibm1046:"cp1046",csibm1046:"cp1046",cp1124:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÒÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÒÑÑÑÑÑÑÑÑÑÂ§ÑÑ"},ibm1124:"cp1124",csibm1124:"cp1124",cp1125:{type:"_sbcs",chars:"ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÒÒÐÑÐÑÐÑÂ·ââÂ¤â Â "},ibm1125:"cp1125",csibm1125:"cp1125",cp1129:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"},ibm1129:"cp1129",csibm1129:"cp1129",cp1133:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ àºàºàºàºàºàºªàºàºàºàºàºàºàºàºàºàºàºàºàºàº¡àº¢àº£àº¥àº§àº«àº­àº®ï¿½ï¿½ï¿½àº¯àº°àº²àº³àº´àºµàº¶àº·àº¸àº¹àº¼àº±àº»àº½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»à»à»ï¿½à»à»â­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»ï¿½ï¿½Â¢Â¬Â¦ï¿½"},ibm1133:"cp1133",csibm1133:"cp1133",cp1161:{type:"_sbcs",chars:"ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¹à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºà¹à¹à¹â¬à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â¢Â¬Â¦Â "},ibm1161:"cp1161",csibm1161:"cp1161",cp1162:{type:"_sbcs",chars:"â¬ÂÂÂÂâ¦ÂÂÂÂÂÂÂÂÂÂÂâââââ¢ââÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"},ibm1162:"cp1162",csibm1162:"cp1162",cp1163:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"},ibm1163:"cp1163",csibm1163:"cp1163",maccroatian:{type:"_sbcs",chars:"ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Å â¢Â´Â¨â Å½ÃâÂ±â¤â¥âÂµâââÅ¡â«ÂªÂºâ¦Å¾Ã¸Â¿Â¡Â¬âÆâÄÂ«Äâ¦Â ÃÃÃÅÅÄâââââÃ·âï¿½Â©âÂ¤â¹âºÃÂ»âÂ·âââ°ÃÄÃÄÃÃÃÃÃÃÃÄÃÃÃÃÄ±ËËÂ¯ÏÃËÂ¸ÃÃ¦Ë"},maccyrillic:{type:"_sbcs",chars:"ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°Â¢Â£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµâÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"},macgreek:{type:"_sbcs",chars:"ÃÂ¹Â²ÃÂ³ÃÃÎÃ Ã¢Ã¤ÎÂ¨Ã§Ã©Ã¨ÃªÃ«Â£â¢Ã®Ã¯â¢Â½â°Ã´Ã¶Â¦Â­Ã¹Ã»Ã¼â ÎÎÎÎÎÎ ÃÂ®Â©Î£ÎªÂ§â Â°ÎÎÂ±â¤â¥Â¥ÎÎÎÎÎÎÎÎ¦Î«Î¨Î©Î¬ÎÂ¬ÎÎ¡âÎ¤Â«Â»â¦Â Î¥Î§ÎÎÅââââââÃ·ÎÎÎÎÎ­Î®Î¯ÏÎÏÎ±Î²ÏÎ´ÎµÏÎ³Î·Î¹Î¾ÎºÎ»Î¼Î½Î¿ÏÏÏÏÏÎ¸ÏÏÏÏÎ¶ÏÏÎÎ°ï¿½"},maciceland:{type:"_sbcs",chars:"ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÃÂ°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤ÃÃ°ÃÃ¾Ã½Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"},macroman:{type:"_sbcs",chars:"ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"},macromania:{type:"_sbcs",chars:"ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÄÅâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦ÄÅÂ¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºÅ¢Å£â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"},macthai:{type:"_sbcs",chars:"Â«Â»â¦ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¢ï¿½â¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸º\ufeffâââà¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹â¢à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â®Â©ï¿½ï¿½ï¿½ï¿½"},macturkish:{type:"_sbcs",chars:"ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ÄÄÄ°Ä±ÅÅâ¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃï¿½ËËÂ¯ËËËÂ¸ËËË"},macukraine:{type:"_sbcs",chars:"ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°ÒÂ£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµÒÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"},koi8r:{type:"_sbcs",chars:"ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑââââââââââââââ â¡Ðâ¢â£â¤â¥â¦â§â¨â©âªâ«â¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"},koi8u:{type:"_sbcs",chars:"ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒââââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒâ¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"},koi8ru:{type:"_sbcs",chars:"ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒÑâââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒÐÂ©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"},koi8t:{type:"_sbcs",chars:"ÒÒâÒââ¦â â¡ï¿½â°Ò³â¹Ò²Ò·Ò¶ï¿½Òâââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½ï¿½Ó¯Ó®ÑÂ¤Ó£Â¦Â§ï¿½ï¿½ï¿½Â«Â¬Â­Â®ï¿½Â°Â±Â²Ðï¿½Ó¢Â¶Â·ï¿½âï¿½Â»ï¿½ï¿½ï¿½Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"},armscii8:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ÖÖ)(Â»Â«â.Õ,-Öâ¦ÕÕÕÔ±Õ¡Ô²Õ¢Ô³Õ£Ô´Õ¤ÔµÕ¥Ô¶Õ¦Ô·Õ§Ô¸Õ¨Ô¹Õ©ÔºÕªÔ»Õ«Ô¼Õ¬Ô½Õ­Ô¾Õ®Ô¿Õ¯ÕÕ°ÕÕ±ÕÕ²ÕÕ³ÕÕ´ÕÕµÕÕ¶ÕÕ·ÕÕ¸ÕÕ¹ÕÕºÕÕ»ÕÕ¼ÕÕ½ÕÕ¾ÕÕ¿ÕÖÕÖÕÖÕÖÕÖÕÖÕÖÕï¿½"},rk1048:{type:"_sbcs",chars:"ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÒÒºÐÑâââââ¢ââï¿½â¢ÑâºÑÒÒ»ÑÂ Ò°Ò±ÓÂ¤Ó¨Â¦Â§ÐÂ©ÒÂ«Â¬Â­Â®Ò®Â°Â±ÐÑÓ©ÂµÂ¶Â·ÑâÒÂ»ÓÒ¢Ò£Ò¯ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"},tcvn:{type:"_sbcs",chars:"\0Ãá»¤á»ªá»¬á»®\b\t\n\v\f\rá»¨á»°á»²á»¶á»¸Ãá»´ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~Ãáº¢ÃÃáº áº¶áº¬Ãáººáº¼Ãáº¸á»Ãá»Ä¨Ãá»Ãá»ÃÃá»á»á»á»á» á»á»¢Ãá»¦Å¨Â ÄÃÃÃÆ Æ¯ÄÄÃ¢ÃªÃ´Æ¡Æ°Äáº°ÌÌÌÌÌ£Ã áº£Ã£Ã¡áº¡áº²áº±áº³áºµáº¯áº´áº®áº¦áº¨áºªáº¤á»áº·áº§áº©áº«áº¥áº­Ã¨á»áº»áº½Ã©áº¹á»á»á»áº¿á»Ã¬á»á»áº¾á»Ä©Ã­á»Ã²á»á»ÃµÃ³á»á»á»á»á»á»á»á»á»¡á»á»£Ã¹á»á»§Å©Ãºá»¥á»«á»­á»¯á»©á»±á»³á»·á»¹Ã½á»µá»"},georgianacademy:{type:"_sbcs",chars:"ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ááááááááááááááááá á¡á¢á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á¯á°á±á²á³á´áµá¶Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"},georgianps:{type:"_sbcs",chars:"ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿áááááááá±ááááááá²áááá á¡á¢á³á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á´á¯á°áµÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"},pt154:{type:"_sbcs",chars:"ÒÒÓ®Òââ¦Ò¶Ò®Ò²Ò¯Ò Ó¢Ò¢ÒÒºÒ¸Òâââââ¢ââÒ³Ò·Ò¡Ó£Ò£ÒÒ»Ò¹Â ÐÑÐÓ¨ÒÒ°Â§ÐÂ©ÓÂ«Â¬Ó¯Â®ÒÂ°Ò±ÐÑÒÓ©Â¶Â·ÑâÓÂ»ÑÒªÒ«ÒÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"},viscii:{type:"_sbcs",chars:"\0áº²áº´áºª\b\t\n\v\f\rá»¶á»¸á»´ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~áº áº®áº°áº¶áº¤áº¦áº¨áº¬áº¼áº¸áº¾á»á»á»á»á»á»á»á»á»á»¢á»á»á»á»á»á»á»á»¦Å¨á»¤á»²Ãáº¯áº±áº·áº¥áº§áº©áº­áº½áº¹áº¿á»á»á»á»á»á»á»á»á» Æ á»á»á»á»á»°á»¨á»ªá»¬Æ¡á»Æ¯ÃÃÃÃáº¢Äáº³áºµÃÃÃáººÃÃÄ¨á»³Äá»©ÃÃÃáº¡á»·á»«á»­ÃÃá»¹á»µÃá»¡Æ°Ã Ã¡Ã¢Ã£áº£Äá»¯áº«Ã¨Ã©Ãªáº»Ã¬Ã­Ä©á»Äá»±Ã²Ã³Ã´Ãµá»á»á»¥Ã¹ÃºÅ©á»§Ã½á»£á»®"},iso646cn:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#Â¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"},iso646jp:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[Â¥]^_`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"},hproman8:{type:"_sbcs",chars:"ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÃÃÃÃÃÃÃÂ´ËËÂ¨ËÃÃâ¤Â¯ÃÃ½Â°ÃÃ§ÃÃ±Â¡Â¿Â¤Â£Â¥Â§ÆÂ¢Ã¢ÃªÃ´Ã»Ã¡Ã©Ã³ÃºÃ Ã¨Ã²Ã¹Ã¤Ã«Ã¶Ã¼ÃÃ®ÃÃÃ¥Ã­Ã¸Ã¦ÃÃ¬ÃÃÃÃ¯ÃÃÃÃÃ£ÃÃ°ÃÃÃÃÃÃµÅ Å¡ÃÅ¸Ã¿ÃÃ¾Â·ÂµÂ¶Â¾âÂ¼Â½ÂªÂºÂ«â Â»Â±ï¿½"},macintosh:{type:"_sbcs",chars:"ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"},ascii:{type:"_sbcs",chars:"ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"},tis620:{type:"_sbcs",chars:"ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"}}},function(t,e,n){"use strict";function r(t,e){if(this.encodingName=t.encodingName,!t)throw new Error("DBCS codec is called without the data.");if(!t.table)throw new Error("Encoding '"+this.encodingName+"' has no data.");var n=t.table();this.decodeTables=[],this.decodeTables[0]=f.slice(0),this.decodeTableSeq=[];for(var r=0;r<n.length;r++)this._addDecodeChunk(n[r]);this.defaultCharUnicode=e.defaultCharUnicode,this.encodeTable=[],this.encodeTableSeq=[];var i={};if(t.encodeSkipVals)for(var r=0;r<t.encodeSkipVals.length;r++){var o=t.encodeSkipVals[r];if("number"==typeof o)i[o]=!0;else for(var a=o.from;a<=o.to;a++)i[a]=!0}if(this._fillEncodeTable(0,0,i),t.encodeAdd)for(var s in t.encodeAdd)Object.prototype.hasOwnProperty.call(t.encodeAdd,s)&&this._setEncodeChar(s.charCodeAt(0),t.encodeAdd[s]);if(this.defCharSB=this.encodeTable[0][e.defaultCharSingleByte.charCodeAt(0)],this.defCharSB===u&&(this.defCharSB=this.encodeTable[0]["?"]),this.defCharSB===u&&(this.defCharSB="?".charCodeAt(0)),"function"==typeof t.gb18030){this.gb18030=t.gb18030();for(var h=this.decodeTables.length,d=this.decodeTables[h]=f.slice(0),p=this.decodeTables.length,g=this.decodeTables[p]=f.slice(0),r=129;r<=254;r++)for(var v=c-this.decodeTables[0][r],y=this.decodeTables[v],a=48;a<=57;a++)y[a]=c-h;for(var r=129;r<=254;r++)d[r]=c-p;for(var r=48;r<=57;r++)g[r]=l}}function i(t,e){this.leadSurrogate=-1,this.seqObj=void 0,this.encodeTable=e.encodeTable,this.encodeTableSeq=e.encodeTableSeq,this.defaultCharSingleByte=e.defCharSB,this.gb18030=e.gb18030}function o(t,e){this.nodeIdx=0,this.prevBuf=s.alloc(0),this.decodeTables=e.decodeTables,this.decodeTableSeq=e.decodeTableSeq,this.defaultCharUnicode=e.defaultCharUnicode,this.gb18030=e.gb18030}function a(t,e){if(t[0]>e)return-1;for(var n=0,r=t.length;n<r-1;){var i=n+Math.floor((r-n+1)/2);t[i]<=e?n=i:r=i}return n}var s=n(46).Buffer;e._dbcs=r;for(var u=-1,l=-2,c=-1e3,f=new Array(256),h=0;h<256;h++)f[h]=u;r.prototype.encoder=i,r.prototype.decoder=o,r.prototype._getDecodeTrieNode=function(t){for(var e=[];t>0;t>>=8)e.push(255&t);0==e.length&&e.push(0);for(var n=this.decodeTables[0],r=e.length-1;r>0;r--){var i=n[e[r]];if(i==u)n[e[r]]=c-this.decodeTables.length,this.decodeTables.push(n=f.slice(0));else{if(!(i<=c))throw new Error("Overwrite byte in "+this.encodingName+", addr: "+t.toString(16));n=this.decodeTables[c-i]}}return n},r.prototype._addDecodeChunk=function(t){var e=parseInt(t[0],16),n=this._getDecodeTrieNode(e);e&=255;for(var r=1;r<t.length;r++){var i=t[r];if("string"==typeof i)for(var o=0;o<i.length;){var a=i.charCodeAt(o++);if(55296<=a&&a<56320){var s=i.charCodeAt(o++);if(!(56320<=s&&s<57344))throw new Error("Incorrect surrogate pair in "+this.encodingName+" at chunk "+t[0]);n[e++]=65536+1024*(a-55296)+(s-56320)}else if(4080<a&&a<=4095){for(var u=4095-a+2,l=[],c=0;c<u;c++)l.push(i.charCodeAt(o++));n[e++]=-10-this.decodeTableSeq.length,this.decodeTableSeq.push(l)}else n[e++]=a}else{if("number"!=typeof i)throw new Error("Incorrect type '"+typeof i+"' given in "+this.encodingName+" at chunk "+t[0]);for(var f=n[e-1]+1,o=0;o<i;o++)n[e++]=f++}}if(e>255)throw new Error("Incorrect chunk in "+this.encodingName+" at addr "+t[0]+": too long"+e)},r.prototype._getEncodeBucket=function(t){var e=t>>8;return void 0===this.encodeTable[e]&&(this.encodeTable[e]=f.slice(0)),this.encodeTable[e]},r.prototype._setEncodeChar=function(t,e){var n=this._getEncodeBucket(t),r=255&t;n[r]<=-10?this.encodeTableSeq[-10-n[r]][-1]=e:n[r]==u&&(n[r]=e)},r.prototype._setEncodeSequence=function(t,e){var n,r=t[0],i=this._getEncodeBucket(r),o=255&r;i[o]<=-10?n=this.encodeTableSeq[-10-i[o]]:(n={},i[o]!==u&&(n[-1]=i[o]),i[o]=-10-this.encodeTableSeq.length,this.encodeTableSeq.push(n));for(var a=1;a<t.length-1;a++){var s=n[r];"object"==typeof s?n=s:(n=n[r]={},void 0!==s&&(n[-1]=s))}r=t[t.length-1],n[r]=e},r.prototype._fillEncodeTable=function(t,e,n){for(var r=this.decodeTables[t],i=0;i<256;i++){var o=r[i],a=e+i;n[a]||(o>=0?this._setEncodeChar(o,a):o<=c?this._fillEncodeTable(c-o,a<<8,n):o<=-10&&this._setEncodeSequence(this.decodeTableSeq[-10-o],a))}},i.prototype.write=function(t){for(var e=s.alloc(t.length*(this.gb18030?4:3)),n=this.leadSurrogate,r=this.seqObj,i=-1,o=0,l=0;;){if(-1===i){if(o==t.length)break;var c=t.charCodeAt(o++)}else{var c=i;i=-1}if(55296<=c&&c<57344)if(c<56320){if(-1===n){n=c;continue}n=c,c=u}else-1!==n?(c=65536+1024*(n-55296)+(c-56320),n=-1):c=u;else-1!==n&&(i=c,c=u,n=-1);var f=u;if(void 0!==r&&c!=u){var h=r[c];if("object"==typeof h){r=h;continue}"number"==typeof h?f=h:void 0==h&&void 0!==(h=r[-1])&&(f=h,i=c),r=void 0}else if(c>=0){var d=this.encodeTable[c>>8];if(void 0!==d&&(f=d[255&c]),f<=-10){r=this.encodeTableSeq[-10-f];continue}if(f==u&&this.gb18030){var p=a(this.gb18030.uChars,c);if(-1!=p){var f=this.gb18030.gbChars[p]+(c-this.gb18030.uChars[p]);e[l++]=129+Math.floor(f/12600),f%=12600,e[l++]=48+Math.floor(f/1260),f%=1260,e[l++]=129+Math.floor(f/10),f%=10,e[l++]=48+f;continue}}}f===u&&(f=this.defaultCharSingleByte),f<256?e[l++]=f:f<65536?(e[l++]=f>>8,e[l++]=255&f):(e[l++]=f>>16,e[l++]=f>>8&255,e[l++]=255&f)}return this.seqObj=r,this.leadSurrogate=n,e.slice(0,l)},i.prototype.end=function(){if(-1!==this.leadSurrogate||void 0!==this.seqObj){var t=s.alloc(10),e=0;if(this.seqObj){var n=this.seqObj[-1];void 0!==n&&(n<256?t[e++]=n:(t[e++]=n>>8,t[e++]=255&n)),this.seqObj=void 0}return-1!==this.leadSurrogate&&(t[e++]=this.defaultCharSingleByte,this.leadSurrogate=-1),t.slice(0,e)}},i.prototype.findIdx=a,o.prototype.write=function(t){var e,n=s.alloc(2*t.length),r=this.nodeIdx,i=this.prevBuf,o=this.prevBuf.length,f=-this.prevBuf.length;o>0&&(i=s.concat([i,t.slice(0,10)]));for(var h=0,d=0;h<t.length;h++){var p=h>=0?t[h]:i[h+o],e=this.decodeTables[r][p];if(e>=0);else if(e===u)h=f,e=this.defaultCharUnicode.charCodeAt(0);else if(e===l){var g=f>=0?t.slice(f,h+1):i.slice(f+o,h+1+o),v=12600*(g[0]-129)+1260*(g[1]-48)+10*(g[2]-129)+(g[3]-48),y=a(this.gb18030.gbChars,v);e=this.gb18030.uChars[y]+v-this.gb18030.gbChars[y]}else{if(e<=c){r=c-e;continue}if(!(e<=-10))throw new Error("iconv-lite internal error: invalid decoding table value "+e+" at "+r+"/"+p);for(var b=this.decodeTableSeq[-10-e],m=0;m<b.length-1;m++)e=b[m],n[d++]=255&e,n[d++]=e>>8;e=b[b.length-1]}if(e>65535){e-=65536;var w=55296+Math.floor(e/1024);n[d++]=255&w,n[d++]=w>>8,e=56320+e%1024}n[d++]=255&e,n[d++]=e>>8,r=0,f=h+1}return this.nodeIdx=r,this.prevBuf=f>=0?t.slice(f):i.slice(f+o),n.slice(0,d).toString("ucs2")},o.prototype.end=function(){for(var t="";this.prevBuf.length>0;){t+=this.defaultCharUnicode;var e=this.prevBuf.slice(1);this.prevBuf=s.alloc(0),this.nodeIdx=0,e.length>0&&(t+=this.write(e))}return this.nodeIdx=0,t}},function(t,e,n){"use strict";t.exports={shiftjis:{type:"_dbcs",table:function(){return n(311)},encodeAdd:{"Â¥":92,"â¾":126},encodeSkipVals:[{from:60736,to:63808}]},csshiftjis:"shiftjis",mskanji:"shiftjis",sjis:"shiftjis",windows31j:"shiftjis",ms31j:"shiftjis",xsjis:"shiftjis",windows932:"shiftjis",ms932:"shiftjis",932:"shiftjis",cp932:"shiftjis",eucjp:{type:"_dbcs",table:function(){return n(312)},encodeAdd:{"Â¥":92,"â¾":126}},gb2312:"cp936",gb231280:"cp936",gb23121980:"cp936",csgb2312:"cp936",csiso58gb231280:"cp936",euccn:"cp936",windows936:"cp936",ms936:"cp936",936:"cp936",cp936:{type:"_dbcs",table:function(){return n(111)}},gbk:{type:"_dbcs",table:function(){return n(111).concat(n(169))}},xgbk:"gbk",isoir58:"gbk",gb18030:{type:"_dbcs",table:function(){return n(111).concat(n(169))},gb18030:function(){return n(313)},encodeSkipVals:[128],encodeAdd:{"â¬":41699}},chinese:"gb18030",windows949:"cp949",ms949:"cp949",949:"cp949",cp949:{type:"_dbcs",table:function(){return n(314)}},cseuckr:"cp949",csksc56011987:"cp949",euckr:"cp949",isoir149:"cp949",korean:"cp949",ksc56011987:"cp949",ksc56011989:"cp949",ksc5601:"cp949",windows950:"cp950",ms950:"cp950",950:"cp950",cp950:{type:"_dbcs",table:function(){return n(170)}},big5:"big5hkscs",big5hkscs:{type:"_dbcs",table:function(){return n(170).concat(n(315))},encodeSkipVals:[41676]},cnbig5:"big5hkscs",csbig5:"big5hkscs",xxbig5:"big5hkscs"}},function(t,e){t.exports=[["0","\0",128],["a1","ï½¡",62],["8140","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±Ã"],["8180","Ã·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââââ¡â â³â²â½â¼â»ãââââã"],["81b8","âââââââªâ©"],["81c8","â§â¨ï¿¢ââââ"],["81da","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["81f0","â«â°â¯â­âªâ â¡Â¶"],["81fc","â¯"],["824f","ï¼",9],["8260","ï¼¡",25],["8281","ï½",25],["829f","ã",82],["8340","ã¡",62],["8380","ã ",22],["839f","Î",16,"Î£",6],["83bf","Î±",16,"Ï",6],["8440","Ð",5,"ÐÐ",25],["8470","Ð°",5,"ÑÐ¶",7],["8480","Ð¾",17],["849f","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["8740","â ",19,"â ",9],["875f","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["877e","ã»"],["8780","ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["889f","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["8940","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­å"],["8980","åå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["8a40","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«"],["8a80","æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["8b40","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥æ"],["8b80","æ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["8c40","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨"],["8c80","åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["8d40","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤é"],["8d80","é é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["8e40","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢"],["8e80","æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºææææ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["8f40","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³"],["8f80","æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·ååå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["9040","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨"],["9080","éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["9140","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»"],["9180","ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æèèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["9240","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­è"],["9280","éç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µå¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["9340","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬"],["9380","åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["9440","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢"],["9480","æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["9540","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·"],["9580","æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["9640","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡ç"],["9680","æ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æºæ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["9740","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²"],["9780","æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨ççç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["9840","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["989f","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["9940","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­"],["9980","å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["9a40","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸"],["9a80","å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿ååååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["9b40","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®"],["9b80","å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["9c40","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ "],["9c80","æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["9d40","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«"],["9d80","æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["9e40","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡"],["9e80","æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["9f40","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯"],["9f80","éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["e040","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®ççç"],["e080","ççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e140","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿"],["e180","ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e240","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°"],["e280","çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e340","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·"],["e380","ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼ºç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e440","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤"],["e480","è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèèèµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e540","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬"],["e580","èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®èèè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["e640","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§"],["e680","è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["e740","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½"],["e780","è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["e840","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿ééééééé"],["e880","é é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·ééééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["e940","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©"],["e980","é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["ea40","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯"],["ea80","é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ å ¯æ§éç¤åç"],["ed40","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨"],["ed80","ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["ee40","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èè"],["ee80","è«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["eeef","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["f040","î",62],["f080","î¿",124],["f140","î¼",62],["f180","î»",124],["f240","î¸",62],["f280","î·",124],["f340","î´",62],["f380","î³",124],["f440","î°",62],["f480","î¯",124],["f540","î¬",62],["f580","î«",124],["f640","î¨",62],["f680","î§",124],["f740","î¤",62],["f780","î£",124],["f840","î ",62],["f880","î",124],["f940","î"],["fa40","â°",9,"â ",9,"ï¿¢ï¿¤ï¼ï¼ã±ââ¡âµçºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´åå"],["fa80","å¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯"],["fb40","æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨"],["fb80","ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«"],["fc40","é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"]]},function(t,e){t.exports=[["0","\0",127],["8ea1","ï½¡",62],["a1a1","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±ÃÃ·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââ"],["a2a1","ââ¡â â³â²â½â¼â»ãââââã"],["a2ba","âââââââªâ©"],["a2ca","â§â¨ï¿¢ââââ"],["a2dc","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["a2f2","â«â°â¯â­âªâ â¡Â¶"],["a2fe","â¯"],["a3b0","ï¼",9],["a3c1","ï¼¡",25],["a3e1","ï½",25],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a8a1","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["ada1","â ",19,"â ",9],["adc0","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["addf","ã»ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["b0a1","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["b1a1","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­ååå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿"],["b2a1","æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["b3a1","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±"],["b4a1","ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["b5a1","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥ææ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬"],["b6a1","ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["b7a1","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²"],["b8a1","æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["b9a1","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤éé é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼"],["baa1","æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["bba1","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºæææ"],["bca1","æ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["bda1","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·å"],["bea1","åå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["bfa1","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾"],["c0a1","æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["c1a1","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æ"],["c2a1","èèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["c3a1","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­èéç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µ"],["c4a1","å¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["c5a1","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°"],["c6a1","è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["c7a1","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦"],["c8a1","å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["c9a1","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æ"],["caa1","ç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["cba1","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡çæ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æº"],["cca1","æ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["cda1","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨çç"],["cea1","ç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["cfa1","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["d0a1","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["d1a1","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨"],["d2a1","è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["d3a1","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿åå"],["d4a1","ååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["d5a1","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±"],["d6a1","å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["d7a1","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææ"],["d8a1","ææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["d9a1","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼"],["daa1","æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["dba1","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£"],["dca1","æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["dda1","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾"],["dea1","æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["dfa1","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®çççççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼"],["e0a1","ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e1a1","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°"],["e2a1","ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e3a1","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­"],["e4a1","ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e5a1","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼º"],["e6a1","ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e7a1","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèè"],["e8a1","èµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e9a1","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®è"],["eaa1","èè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["eba1","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«"],["eca1","è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["eda1","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸"],["eea1","ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["efa1","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿éééééééé é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·éé"],["f0a1","ééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["f1a1","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·"],["f2a1","é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["f3a1","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ "],["f4a1","å ¯æ§éç¤åç"],["f9a1","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·"],["faa1","å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["fba1","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§é"],["fca1","ééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["fcf1","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["8fa2af","ËËÂ¸ËËÂ¯ËËï½ÎÎ"],["8fa2c2","Â¡Â¦Â¿"],["8fa2eb","ÂºÂªÂ©Â®â¢Â¤â"],["8fa6e1","ÎÎÎÎÎª"],["8fa6e7","Î"],["8fa6e9","ÎÎ«"],["8fa6ec","Î"],["8fa6f1","Î¬Î­Î®Î¯ÏÎÏÏÏÏÎ°Ï"],["8fa7c2","Ð",10,"ÐÐ"],["8fa7f2","Ñ",10,"ÑÑ"],["8fa9a1","ÃÄ"],["8fa9a4","Ä¦"],["8fa9a6","Ä²"],["8fa9a8","ÅÄ¿"],["8fa9ab","ÅÃÅ"],["8fa9af","Å¦Ã"],["8fa9c1","Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÅÅÃ¸ÅÃÅ§Ã¾"],["8faaa1","ÃÃÃÃÄÇÄÄÃÃÄÄÄÃÄÄÃÃÃÃÄÄÄÄ"],["8faaba","ÄÄÄ¢Ä Ä¤ÃÃÃÃÇÄ°ÄªÄ®Ä¨Ä´Ä¶Ä¹Ä½Ä»ÅÅÅÃÃÃÃÃÇÅÅÃÅÅÅÅÅÅ ÅÅ¤Å¢ÃÃÃÃÅ¬ÇÅ°ÅªÅ²Å®Å¨ÇÇÇÇÅ´ÃÅ¸Å¶Å¹Å½Å»"],["8faba1","Ã¡Ã Ã¤Ã¢ÄÇÄÄÃ¥Ã£ÄÄÄÃ§ÄÄÃ©Ã¨Ã«ÃªÄÄÄÄÇµÄÄ"],["8fabbd","Ä¡Ä¥Ã­Ã¬Ã¯Ã®Ç"],["8fabc5","Ä«Ä¯Ä©ÄµÄ·ÄºÄ¾Ä¼ÅÅÅÃ±Ã³Ã²Ã¶Ã´ÇÅÅÃµÅÅÅÅÅÅ¡ÅÅ¥Å£ÃºÃ¹Ã¼Ã»Å­ÇÅ±Å«Å³Å¯Å©ÇÇÇÇÅµÃ½Ã¿Å·ÅºÅ¾Å¼"],["8fb0a1","ä¸ä¸ä¸ä¸ä¸ä¸ä¸£ä¸¤ä¸¨ä¸«ä¸®ä¸¯ä¸°ä¸µä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹£ä¹¨ä¹©ä¹´ä¹µä¹¹ä¹¿äºäºäºäºäº¯äº¹ä»ä»ä»ä»ä» ä»¡ä»¢ä»¨ä»¯ä»±ä»³ä»µä»½ä»¾ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼®ä¼±ä½ ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½£ä½ªä½¬ä½®ä½±ä½·ä½¸ä½¹ä½ºä½½ä½¾ä¾ä¾ä¾"],["8fb1a1","ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾²ä¾·ä¾¹ä¾»ä¾¼ä¾½ä¾¾ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ ä¿¢ä¿°ä¿²ä¿¼ä¿½ä¿¿åååååååååååååååå¢å§å®å°å²å³åµååååååååååååååå å¢å£å¦å§åªå­å°å±å»åååååååå"],["8fb2a1","ååååååå",4,"åªå¯å°å¹åºå½åååååååååååååå¢å¤å¦å¨å©å¯å±å¶åºå¾ååååååååå²åååååååå£å§å¨å¬å­å¯å±å³å´åµå¸å¹ååååååååå¤å¦å¾ååååååå¡å£å­å¸åºå¼å¾å¿å"],["8fb3a1","ååååååååå¢å¥å®å²å³å´å·ååååååååå¢å¨å±å²åµå¼ååååååååå å¡å¦å®å·å¸å¹ååååååååååååå¤å¥å¦å§å¯å°å¶å·å¸åºå»å½åååååååååååå¡å¥å¨å©åªå¬å°å±å´å¶å·åååå"],["8fb4a1","ååååååååå¥å§å¨å©å«å¬å­å°å²åµå¼å½å¾åååååå¡å£å¥å¬å­å²å¹å¾ååååååååå¡å¤åªå«å¯å²å´åµå·å¸åºå½åååååååååå å¦å§åµåååå¡å§å¨åªå¯å±å´åµååååååå¢å¤å¦å§å©å«å­å®å´å¿"],["8fb5a1","åååååååååååå¡å¦å§å©åªå­å®å±å·å¹åºå»å¿ååååå åªå¬å¯å¶å¼å¾å¿ååååååååååªå«å²åµå¶å»å¼å½åååååååååååå å¡å¤å¦å¿åååååååååååå£å¤å­å²å¿ååååååååå"],["8fb6a1","åååååå¢å©å¶å¿åååå",5,"åå¬å°å³åµå·å¹å»å¼å½å¿åååååååååååå å¡å¢å£å¦å©å­å¯å±å²åµåååååååååååå¦å§å¨å©å«å¬å­å±å³å·å¾ååååååååååååå¡å¤",4,"å±å«å­"],["8fb7a1","å¶å·ååååååååååå å¢å£å¤å¥å©åªå¬å®å¯å³å´å½å¾å¿åååååå¢å¥å§å¨å«å­",4,"å³å´åµå·å¹åºå»å¼å¾åååååååååååå¡åå§å¨å©å¬å¸å½åååååååå¤å¦å§å©å­å°åµå¶å¸å½å¾å¿å å å å å¡"],["8fb8a1","å å å å å å  å ¦å §å ­å ²å ¹å ¿å¡å¡å¡å¡å¡å¡å¡å¡¡å¡¤å¡§å¡¨å¡¸å¡¼å¡¿å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢ å¢¡å¢¢å¢¦å¢©å¢±å¢²å£å¢¼å£å£å£å£å£å£å£å£å£å£å£¡å£¢å£©å£³å¤å¤å¤å¤å¤å¤å¤èå¤å¤¡å¤£å¤¤å¤¨å¤¯å¤°å¤³å¤µå¤¶å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥¡å¥£å¥«å¥­"],["8fb9a1","å¥¯å¥²å¥µå¥¶å¥¹å¥»å¥¼å¦å¦å¦å¦å¦å¦å¦å¦¤å¦§å¦­å¦®å¦¯å¦°å¦³å¦·å¦ºå¦¼å§å§å§å§å§å§å§å§å§å§å§£å§¤å§§å§®å§¯å§±å§²å§´å§·å¨å¨å¨å¨å¨å¨å¨å¨å¨£å¨¤å¨§å¨¨å¨ªå¨­å¨°å©å©å©å©å©å©å©å©å©£å©¥å©§å©­å©·å©ºå©»å©¾åªåªåªåªåªåªåªåªåª åª¢åª§åª¬åª±åª²åª³åªµåª¸åªºåª»åª¿"],["8fbaa1","å«å«å«å«å«å«å« å«¥å«ªå«®å«µå«¶å«½å¬å¬å¬å¬å¬´å¬å¬å¬å¬¡å¬¥å¬­å¬¸å­å­å­å­å­å­å­¨å­®å­¯å­¼å­½å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®¨å®©å®¬å®­å®¯å®±å®²å®·å®ºå®¼å¯å¯å¯å¯å¯",4,"å¯ å¯¯å¯±å¯´å¯½å°å°å°å°å°£å°¦å°©å°«å°¬å°®å°°å°²å°µå°¶å±å±å±å±¢å±£å±§å±¨å±©"],["8fbba1","å±­å±°å±´å±µå±ºå±»å±¼å±½å²å²å²å²å²å²å²å² å²¢å²£å²¦å²ªå²²å²´å²µå²ºå³å³å³å³å³å³®å³±å³²å³´å´å´å´å´å´«å´£å´¤å´¦å´§å´±å´´å´¹å´½å´¿åµåµåµåµåµåµåµåµåµåµ åµ¡åµ¢åµ¤åµªåµ­åµ°åµ¹åµºåµ¾åµ¿å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶ å¶§å¶«å¶°å¶´å¶¸å¶¹å·å·å·å·å·å·å·å· å·¤"],["8fbca1","å·©å·¸å·¹å¸å¸å¸å¸å¸å¸å¸å¸å¸ å¸®å¸¨å¸²å¸µå¸¾å¹å¹å¹å¹å¹å¹å¹å¹å¹å¹¨å¹ª",4,"å¹°åºåºåºåº¢åº¤åº¥åº¨åºªåº¬åº±åº³åº½åº¾åº¿å»å»å»å»å»å»å»å»å»å»å»¥å»«å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤å¼¨å¼«å¼¬å¼®å¼°å¼´å¼¶å¼»å¼½å¼¿å½å½å½å½å½å½å½å½å½å½ å½£å½¤å½§"],["8fbda1","å½¯å½²å½´å½µå½¸å½ºå½½å½¾å¾å¾å¾å¾å¾å¾å¾¢å¾§å¾«å¾¤å¾¬å¾¯å¾°å¾±å¾¸å¿å¿å¿å¿å¿å¿",4,"å¿å¿¡å¿¢å¿¨å¿©å¿ªå¿¬å¿­å¿®å¿¯å¿²å¿³å¿¶å¿ºå¿¼ææææææææææ¤æ­æ³æµæææææææææææ¡æ§æ±æ¾æ¿ææææææææææææ¢æ¤æ¥æ¨æ°æ±æ·"],["8fbea1","æ»æ¾æææææææææææææææ¢æ¥æ²æµæ¸æ¼æ½æææææ",4,"ææææææ¢æªæ«æ°æ±æµæ¶æ·æ¹ææææææ æ¬æ²æ¸æ»æ¼æ¿ææææææææææææææ æ¥æ¨æªæ­æ¸æ¹æ¼æææææææææææ¡æ¢æ§æ©æ¥"],["8fbfa1","æ¬æ­æ¯ææææææææ æ¢æ£æ§æ©æ«æ¹æ½æææææææææææææ¤æ­æ¯æ³æºæ½æææææ¦æ¨æ³æ¶æ·æºæ¾æ¿ææææææªæ²æ´æ¼æ½ææææææææææ©æªæ­æµæ¶æ¹æ¼ææææææææææææææ¥æ¦æ¬æ­æ±æ´æµ"],["8fc0a1","æ¸æ¼æ½æ¿æææææææææææ¤æ¦æ­æ®æ¯æ½ææææææææææ æ¥æªæ¬æ²æ³æµæ¸æ¹ææææææææ æ¢æ¤æ¥æ©æªæ¯æ°æµæ½æ¿ææææææææææææ æ¡æ£æ­æ³æ´æ»æ½æææææææææææ¡æ£æ¦æ¨æ¬æ³æ½æ¾æ¿"],["8fc1a1","æææææææææææ¤æ¥æ©æªæ­æ°æµæ·æ»æ¿ææææææææææææææ¢æ¦æ©æ®æ±æºæ¼æ½ææææææææ æ§æ«æºæ½ææææææææ æ£æ¦æ®æ²æ³æ´æ¿ææææææææææ°æ²æ´æµæ¹æ¾æ¿ææææææææææ"],["8fc2a1","ææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ±æ³æ¹æ·æææææææææææææ æ¡æ»æªæ«æ¬æ¾æ³æµæ¿æ·æ¸æ¹æ»ææ¼æææææææææææ æ¤æ­æ±æ²æµæ»æ¿æææææææææææ¨æ«æ¬æ®æºæææææææ æ¢æ³æ¾æææææææ"],["8fc3a1","æ¦æ¬æ®æ´æ¶æ»æææææææææææ°æ±æ²æµæ»æ¼æ½æ¹æææææææææææ¡æ¦æ°æ²æ¶æ·æ¡æ æ æ æ æ ¨æ §æ ¬æ ­æ ¯æ °æ ±æ ³æ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡«æ¡®",4,"æ¡µæ¡¹æ¡ºæ¡»æ¡¼æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢¡æ¢£æ¢¥æ¢©æ¢ªæ¢®æ¢²æ¢»æ£æ£æ£æ£"],["8fc4a1","æ£æ£æ£æ£æ£æ£æ£æ£¥æ£¨æ£ªæ£«æ£¬æ£­æ£°æ£±æ£µæ£¶æ£»æ£¼æ£½æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤±æ¤³æ¤µæ¤¸æ¤»æ¥æ¥æ¥æ¥æ¥æ¥æ¥£æ¥¤æ¥¥æ¥¦æ¥¨æ¥©æ¥¬æ¥°æ¥±æ¥²æ¥ºæ¥»æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦¡æ¦¥æ¦¦æ¦¨æ¦«æ¦­æ¦¯æ¦·æ¦¸æ¦ºæ¦¼æ§æ§æ§æ§æ§æ§¢æ§¥æ§®æ§¯æ§±æ§³æ§µæ§¾æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨ æ¨¤æ¨¨æ¨°æ¨²"],["8fc5a1","æ¨´æ¨·æ¨»æ¨¾æ¨¿æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©¤æ©§æ©ªæ©±æ©³æ©¾æªæªæªæªæªæªæªæªæªæªæªæª¥æª«æª¯æª°æª±æª´æª½æª¾æª¿æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«¤æ«§æ«¬æ«°æ«±æ«²æ«¼æ«½æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬¤æ¬¨æ¬«æ¬¬æ¬¯æ¬µæ¬¶æ¬»æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­ æ­§æ­«æ­®æ­°æ­µæ­½"],["8fc6a1","æ­¾æ®æ®æ®æ®æ®æ® æ®¢æ®£æ®¨æ®©æ®¬æ®­æ®®æ®°æ®¸æ®¹æ®½æ®¾æ¯æ¯æ¯æ¯æ¯æ¯æ¯¡æ¯£æ¯¦æ¯§æ¯®æ¯±æ¯·æ¯¹æ¯¿æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°¦æ°§æ°¨æ°¬æ°®æ°³æ°µæ°¶æ°ºæ°»æ°¿æ±æ±æ±æ±æ±æ±æ±æ±æ±æ±«æ±­æ±¯æ±´æ±¶æ±¸æ±¹æ±»æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²°æ²²æ²´æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["8fc7a1","æ³æ³æ³ æ³§æ³©æ³«æ³¬æ³®æ³²æ³´æ´æ´æ´æ´æ´æ´æ´æ´æ´¦æ´§æ´¨æ±§æ´®æ´¯æ´±æ´¹æ´¼æ´¿æµæµæµæµ¡æµ¥æµ§æµ¯æµ°æµ¼æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶ªæ¶¬æ¶´æ¶·æ¶¹æ¶½æ¶¿æ·æ·æ·æ·æ·æ·æ·æ·æ·æ· æ·¢æ·¥æ·©æ·¯æ·°æ·´æ·¶æ·¼æ¸æ¸æ¸æ¸¢æ¸§æ¸²æ¸¶æ¸¹æ¸»æ¸¼æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹"],["8fc8a1","æ¹¢æ¹£æ¹¨æ¹³æ¹»æ¹½æºæºæºæº æº§æº­æº®æº±æº³æº»æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»«æ»­æ»®æ»¹æ»»æ»½æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼¦æ¼©æ¼ªæ¼¯æ¼°æ¼³æ¼¶æ¼»æ¼¼æ¼­æ½æ½æ½æ½æ½æ½æ½æ½æ½æ½¡æ½¢æ½¨æ½¬æ½½æ½¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾ æ¾¥æ¾¦æ¾§æ¾¨æ¾®æ¾¯æ¾°æ¾µæ¾¶æ¾¼æ¿æ¿æ¿æ¿"],["8fc9a1","æ¿æ¿æ¿¨æ¿©æ¿°æ¿µæ¿¹æ¿¼æ¿½ççççççç ç£ç¯ç´ç·ç¹ç¼çççççççççççç¤ç¥ç¬ç®çµç¶ç¾çççç",4,"çç¤ç«ç°ç±ç´ç·ççççççççç¤çºç",4,"ççççç ç«ç­ç¯ç°ç±ç¸ççççççççççççç "],["8fcaa1","ç¨ç¹çççççççç ç¢ç¯ç°ç²ç³çºç¿ççççççççççç¸ç¾çççççççççç¤ç«ç¯ç´ç¸ç¹çççççççççççççç ç£ç¨ç«ç®ç¯ç±ç·ç¸ç»ç¼ç¿ççççççç¨ç­ç®ç±ç´ç¾ççççççççç¥ç³ç´çºç»"],["8fcba1","ç¾çççççççççççç¢ç¤ç§ç¨ç¬ç±ç²çµçºç»ç½çççççççççç ç¦ç§ç©ç«ç¬ç®ç¯ç±ç·ç¹ç¼ççççççççççççççç ç¢ç¥ç¦çªç«ç­çµç·ç¹ç¼ç½ç¿çççççççççççç¡ç£ç¦ç§ç©ç´çµç·ç¹çºç»ç½"],["8fcca1","ç¿ççççççççç¤ç¦ç¨",9,"ç¹çççççççççççç¢ç¦ç§ç¨ç«ç­ç®ç±ç²çççççççççççççççç ç¡ç£ç¦ç¨ç©çªç«ç®ç¯ç±ç²çµç¹ç»ç¿ççççççççççç¤ç¨çªç«ç¯ç´çºç»ç¼ç¿ç"],["8fcda1","çççç ç¡ç¤ç§ç©çªç¯ç¶ç¹ç½ç¾ç¿ççççççççççç¡ç¯ç±ç¹",5,"ççççççççç¢ç¤ç´çºç¿ççççççççççç ç¡ç¤ç§ç¬ç®ç¯ç±ç¹ççççççççççççççççççç£ç¥ç¦ç©ç­ç²ç³çµç¸ç¹"],["8fcea1","çºç¼çççççççççççç¤ç¥ç­ç®ç¯ç±ç´çççççççççç ç¢",6,"çªç­ç½ççççççççç ç¦ç¨ç¬ç°ç±ç¶ç¹ç¼çççççççççççç¢ç¨ç­ç®ç¯ç´çµç¶ç¹ç½ç¾çççççççççççççç ç¢"],["8fcfa1","ç¤ç§çªç¬ç°ç²ç³ç´çºç½çççççççççç¢ç§çªç®ç¯ç±çµç¾ççççççççç ç¤ç¦çªç¬ç°ç±ç´ç¸ç»ç ç ç ç ç ç ç ç ¡ç ¢ç £ç ­ç ®ç °ç µç ·ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ ç¡¡ç¡£ç¡¤ç¡¨ç¡ªç¡®ç¡ºç¡¾ç¢ç¢ç¢ç¢ç¢¡ç¢ç¢ç¢ç¢¤ç¢¨ç¢¬ç¢­ç¢°ç¢±ç¢²ç¢³"],["8fd0a1","ç¢»ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£¤ç£ç£ç£ ç£¡ç£¦ç£ªç£²ç£³ç¤ç£¶ç£·ç£ºç£»ç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¤ ç¤¥ç¤§ç¤©ç¤­ç¤±ç¤´ç¤µç¤»ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥§ç¥©ç¥«ç¥²ç¥¹ç¥»ç¥¼ç¥¾ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦¡ç¦¨ç¦©ç¦«ç¦¯ç¦±ç¦´ç¦¸ç¦»ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§"],["8fd1a1","ç§ ç§¢ç§¥ç§ªç§«ç§­ç§±ç§¸ç§¼ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨¡ç¨§ç¨«ç¨­ç¨¯ç¨°ç¨´ç¨µç¨¸ç¨¹ç¨ºç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç© ç©¥ç©§ç©ªç©­ç©µç©¸ç©¾çªçªçªçªçªçªçªçªçªçªçª çª£çª¬çª³çªµçª¹çª»çª¼ç«ç«ç«ç«ç«ç«ç«¨ç«©ç««ç«¬ç«±ç«´ç«»ç«½ç«¾ç¬ç¬ç¬ç¬£ç¬§ç¬©ç¬ªç¬«ç¬­ç¬®ç¬¯ç¬°"],["8fd2a1","ç¬±ç¬´ç¬½ç¬¿ç­ç­ç­ç­ç­ç­ ç­¤ç­¦ç­©ç­ªç­­ç­¯ç­²ç­³ç­·ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®¥ç®¬ç®¯ç®°ç®²ç®µç®¶ç®ºç®»ç®¼ç®½ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯¨ç¯ªç¯²ç¯´ç¯µç¯¸ç¯¹ç¯ºç¯¼ç¯¾ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç° ç°¥ç°¦ç°¨ç°¬ç°±ç°³ç°´ç°¶ç°¹ç°ºç±ç±ç±ç±ç±ç±ç±",5],["8fd3a1","ç±¡ç±£ç±§ç±©ç±­ç±®ç±°ç±²ç±¹ç±¼ç±½ç²ç²ç²ç²ç²ç² ç²¦ç²°ç²¶ç²·ç²ºç²»ç²¼ç²¿ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³¦ç³©ç³«ç³µç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´£ç´¦ç´ªç´­ç´±ç´¼ç´½ç´¾çµçµçµçµçµçµçµçµçµçµçµçµçµ¥çµ§çµªçµ°çµ¸çµºçµ»çµ¿ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶"],["8fd4a1","ç¶ç¶¦ç¶§ç¶ªç¶³ç¶¶ç¶·ç¶¹ç·",4,"ç·ç·ç·ç·ç·ç¸ç·¢ç·¥ç·¦ç·ªç·«ç·­ç·±ç·µç·¶ç·¹ç·ºç¸ç¸ç¸ç¸ç¸ç¸ç¸ç¸ ç¸§ç¸¨ç¸¬ç¸­ç¸¯ç¸³ç¸¶ç¸¿ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹¡ç¹¢ç¹¥ç¹«ç¹®ç¹¯ç¹³ç¹¸ç¹¾çºçºçºçºçºçºçºçºçºçºçºç¼¼ç¼»ç¼½ç¼¾ç¼¿ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½¡ç½£ç½¤ç½¥ç½¦ç½­"],["8fd5a1","ç½±ç½½ç½¾ç½¿ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾¡ç¾¢ç¾¦ç¾ªç¾­ç¾´ç¾¼ç¾¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿£ç¿¥ç¿¨ç¿¬ç¿®ç¿¯ç¿²ç¿ºç¿½ç¿¾ç¿¿èèèèèèèèèèèèèè è¤è¦è¬è®è°è´èµè·è¹èºè¼è¾èèè è¤è¦è­è±èµèèèèèè¦è§è«è¸è¹èèèèèèèèè è­è®"],["8fd6a1","è°è²è³è¶è¹èºè¾èèèèèèèè è¤è§è¬è°èµèºè¼èèèèèèè è¡è§è¨è©è­è¯è·èèèèèèèèèèèè¢è®è²è´è»èèèèèèèèèèèè¡è¤è«è¬è°è±è²èµè¶è¸è¹è½è¿èèèèèèèèè¡è¢è¨è²è´èºèèèè"],["8fd7a1","èèèèèèè è£è§è­è´è»è½è¿èèèèèèèèèèèèèèè è¡è£è¤è§è¨è©èªè®è°è²è´è·èºè¼è¾è¿èèèèè è¢è¤è¨èªè­è¯è¶è·è½è¾èèèèèèèèèèèè¡è¢è¬è­è®è°è³è·èºè¼è½èèèèèèèèèèè°è¸"],["8fd8a1","è½è¿èèèèèèèèèèèèèè¦è§è©è¬è¾è¿èèèèèèèèèè¨èªè¶è¸è¹è¼èèèèèèèè­è¯è¹èèèèèèèèèèèèèè è¤è¥è§èªè°è³è´è¶è¸è¼è½èèèèèèè¦è¨è©èªè¯è±è´èºè½è¾èèèèèèè"],["8fd9a1","èè§èªè¯è°è±è²è·è²èºè»è½èèèèèèèèè¢è£è¤è¥è§èªè«è¯è³è´è¶è¿èè",4,"èèè",6,"è¤è«è¯è¹èºè»è½è¿èèèèèèèèèèèè è¢è¥è§è´è¶è·è¸è¼è½è¾è¿èèèèèè­èèèè è¦è¨è­è³è¶è¼"],["8fdaa1","è¿èèèèèèèèèèèèè¡è§è©è¶è¸èºè¼è½èèèèèèèèèèè ",4,"è©è¬è¯èµè¶è·èºèèèèèèè¡è¦è§è¨è­è±è³è´èµè·è¸è¹è¿èèèèèèèèèèè è£è¥è§èèºè¼è½èèèèèèèèèèèèè¡è£"],["8fdba1","è¨è®è¯è±è²è¹èºè¼è½è¾èèèèèèè¡è¤è¥è¯è±è²è»è",6,"èèèèèèèèèè è£è§è¬è­è®è±èµè¾è¿èèèèèèèèèèèè¢è£è¤èªè«è­è±è³è¸èºè¿è è è è è è è è è è è è è è è è è è ¨è ­è ®è °è ²è µ"],["8fdca1","è ºè ¼è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡ è¡¤è¡©è¡±è¡¹è¡»è¢è¢è¢è¢è¢è¢è¢ è¢¨è¢ªè¢ºè¢½è¢¾è£è£",4,"è£è£è£è£è£è£§è£¯è£°è£±è£µè£·è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤ è¤¦è¤§è¤¨è¤°è¤±è¤²è¤µè¤¹è¤ºè¤¾è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥¡è¥¢è¥£è¥«è¥®è¥°è¥³è¥µè¥º"],["8fdda1","è¥»è¥¼è¥½è¦è¦è¦è¦è¦è¦è¦è¦è¦ è¦¥è¦°è¦´è¦µè¦¶è¦·è¦¼è§",4,"è§¥è§©è§«è§­è§±è§³è§¶è§¹è§½è§¿è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨ è¨¢è¨¤è¨¦è¨«è¨¬è¨¯è¨µè¨·è¨½è¨¾è©è©è©è©è©è©è©è©è©è©è©è©è©è©¡è©¥è©§è©µè©¶è©·è©¹è©ºè©»è©¾è©¿èªèªèªèªèªèªèªèªèªèªèªèª§èª©èª®èª¯èª³"],["8fdea1","èª¶èª·èª»èª¾è«è«è«è«è«è«è«è«è«è«è«è«è«¬è«°è«´è«µè«¶è«¼è«¿è¬è¬è¬è¬è¬è¬è¬è¬è¬­è¬°è¬·è¬¼è­",4,"è­è­è­è­è­è­è­è­£è­­è­¶è­¸è­¹è­¼è­¾è®è®è®è®è®è®è®è®è®è®è®è°¸è°¹è°½è°¾è±è±è±è±è±è±è±è±è±è±è±è±è±è±£è±¤è±¦è±¨è±©è±­è±³è±µè±¶è±»è±¾è²"],["8fdfa1","è²è²è²è²è²è²è²è²è²¤è²¹è²ºè³è³è³è³è³è³è³è³è³è³¡è³¨è³¬è³¯è³°è³²è³µè³·è³¸è³¾è³¿è´è´è´è´è´è´èµ¥èµ©èµ¬èµ®èµ¿è¶è¶è¶è¶è¶è¶è¶è¶è¶è¶ è¶¦è¶«è¶¬è¶¯è¶²è¶µè¶·è¶¹è¶»è·è·è·è·è·è·è·è·è·è·è·è·è·¤è·¥è·§è·¬è·°è¶¼è·±è·²è·´è·½è¸è¸è¸è¸è¸è¸è¸è¸è¸ è¸¡è¸¢"],["8fe0a1","è¸£è¸¦è¸§è¸±è¸³è¸¶è¸·è¸¸è¸¹è¸½è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹¡è¹¢è¹©è¹¬è¹­è¹¯è¹°è¹±è¹¹è¹ºè¹»èºèºèºèºèºèºèºèºèºèºèº¢èº§èº©èº­èº®èº³èºµèººèº»è»è»è»è»è»è»è»è»è»è»¨è»®è»°è»±è»·è»¹è»ºè»­è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼ è¼¡è¼£è¼¥è¼§è¼¨è¼¬è¼­è¼®è¼´è¼µè¼¶è¼·è¼ºè½è½"],["8fe1a1","è½è½è½è½",4,"è½è½è½è½¥è¾è¾ è¾¡è¾¤è¾¥è¾¦è¾µè¾¶è¾¸è¾¾è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿ è¿£è¿¤è¿¨è¿®è¿±è¿µè¿¶è¿»è¿¾ééééééé¨é©é¯éªé¬é­é³é´é·é¿éééééé¢é¦é§é¬é°é´é¹éééééééééééé é¡é¢é¥é°é²é³é´é¶é½éé¾é"],["8fe2a1","éééééééééééé¥éé¶é«é¯é°é´é¾é¿ééééééééééééééé é¥é¢é£é§é©é®é¯é±é´é¶é·é¹éºé¼é½éééééééééé¡é¤é§é­é´é¹éºé»ééééééééééééé¡é¦é¨é¬é­é®é°é±é²é³é¶é»é¼é½é¿"],["8fe3a1","éééééééééé¤é¥é©éªé¬",5,"é·é¹é»é½ééééééééééééééééé£é¤é¥é¦é¨é®é¯é°é³éµé¶é¸é¹éºé¼é¾ééééééééééééééé é¡é¥é§é¨é©é®é¯é°éµ",4,"é»é¼é½é¿ééééééé"],["8fe4a1","ééé é¤é¥é§é¨é«é¯é²é¶é¸éºé»é¼é½é¿",4,"éééééééééééééééééé é¡é£é¥é§é¨é¬é®é°é¹é»é¿éééééééééééé¡é¤é¥é§é©éªé³é´é¶é·éééééééééééé¤é¥é§é©éªé­é¯é°é±é³é´é¶"],["8fe5a1","éºé½é¿éééééééééééééé¡é£é¤é¦é¨é«é´éµé¶éºé©éééééé",4,"éééééé¢é¦é§é¹é·é¸éºé»é½ééééééééééééé®é¯é±é²é³é´é»é¿é½éééééééééé¡é£é¨é«é­é®é¯é±é²ééé¸é¹"],["8fe6a1","é¾ééééééééé¡é¦é©é«é¬é´é¶éºé½é¿éééééééééééééé é¤é¦ééé¢é¤é¥é¦é¬é±é³é·é¸é¹éºé¼é½ééééééé¡é®é´é»é¼é¾é¿ééééééééééé¤é¥é¦é©é®é¯é³éºééå¶²éééééé©é¯é±éºé"],["8fe7a1","ééééééé¡é¢é£é¨é±é³ééééééééééé£é§éªé®é³é¶é·é¸é»é½é¿éééééééééé¢é¬é®é±é²éµé¶é¸é¹éºé¼é¾é¿éééééééééééééééééé éé¡é¤é¯é±é´é·é¸éºé é é é é é é é é é  é £é ¦"],["8fe8a1","é «é ®é ¯é °é ²é ³é µé ¥é ¾é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡¢é¡£é¡¥é¡¦é¡ªé¡¬é¢«é¢­é¢®é¢°é¢´é¢·é¢¸é¢ºé¢»é¢¿é£é£é£é£é£¡é££é£¥é£¦é£§é£ªé£³é£¶é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤¢é¤¦é¤§é¤«é¤±",4,"é¤¹é¤ºé¤»é¤¼é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥ é¦é¦é¦é¦¦é¦°é¦±é¦²é¦µ"],["8fe9a1","é¦¹é¦ºé¦½é¦¿é§é§é§é§é§é§é§é§é§§é§ªé§«é§¬é§°é§´é§µé§¹é§½é§¾é¨é¨é¨é¨é¨é¨é¨é¨é¨é¨ é¨¢é¨£é¨¤é¨§é¨­é¨®é¨³é¨µé¨¶é¨¸é©é©é©é©é©é©é©é©é©é©é©éªªéª¬éª®éª¯éª²éª´éªµéª¶éª¹éª»éª¾éª¿é«é«é«é«é«é«é«é«é«é«é«é«é« é«¤é«¥é«§é«©é«¬é«²é«³é«µé«¹é«ºé«½é«¿",4],["8feaa1","é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬ é¬¦é¬«é¬­é¬³é¬´é¬µé¬·é¬¹é¬ºé¬½é­é­é­é­é­é­é­é­é­¡é­£é­¥é­¦é­¨é­ª",4,"é­³é­µé­·é­¸é­¹é­¿é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®¦é®§é®©é®¬é®°é®±é®²é®·é®¸é®»é®¼é®¾é®¿é¯é¯é¯é¯é¯é¯é¯é¯é¯é¯¥é¯§é¯ªé¯«é¯¯é¯³é¯·é¯¸"],["8feba1","é¯¹é¯ºé¯½é¯¿é°é°é°é°é°é°é°é°é°é°é°é°¢é°£é°¦",4,"é°±é°µé°¶é°·é°½é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±£é±©é±ªé±é±«é±¨é±®é±°é±²é±µé±·é±»é³¦é³²é³·é³¹é´é´é´é´é´é´é´é´é´¯é´°é´²é´³é´´é´ºé´¼éµé´½éµéµéµéµéµéµéµéµ£éµ¢éµ¥éµ©éµªéµ«éµ°éµ¶éµ·éµ»"],["8feca1","éµ¼éµ¾é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶¡é¶ªé¶¬é¶®é¶±é¶µé¶¹é¶¼é¶¿é·é·é·é·é·é·é·é·é·é·é·é· é·¥é·§é·©é·«é·®é·°é·³é·´é·¾é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¹ºé¹»é¹¼éºéºéºéºéºéºéºéºéºéºéºéºéº¤éº¨éº¬éº®éº¯éº°éº³éº´éºµé»é»é»é»é»é»¤é»§é»¬é»­é»®é»°é»±é»²é»µ"],["8feda1","é»¸é»¿é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼¢é¼¦é¼ªé¼«é¼¯é¼±é¼²é¼´é¼·é¼¹é¼ºé¼¼é¼½é¼¿é½é½",4,"é½é½é½é½é½é½é½é½é½¨é½©é½­",4,"é½³é½µé½ºé½½é¾é¾é¾é¾é¾é¾é¾é¾é¾¡é¾¢é¾£é¾¥"]]},function(t,e){t.exports={uChars:[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],gbChars:[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189e3]}},function(t,e){t.exports=[["0","\0",127],["8141","ê°ê°ê°ê°ê°",4,"ê°ê°ê°ê°¡ê°¢ê°£ê°¥",6,"ê°®ê°²ê°³ê°´"],["8161","ê°µê°¶ê°·ê°ºê°»ê°½ê°¾ê°¿ê±",9,"ê±ê±",5,"ê±"],["8181","ê±ê±ê±ê±ê±ê±",18,"ê±²ê±³ê±µê±¶ê±¹ê±»",4,"ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²",6,"ê²ê²¢",5,"ê²«ê²­ê²®ê²±",6,"ê²ºê²¾ê²¿ê³ê³ê³ê³ê³ê³ê³ê³ê³ê³",7,"ê³ê³",7,"ê³¢ê³£ê³¥ê³¦ê³©ê³«ê³­ê³®ê³²ê³´ê³·",4,"ê³¾ê³¿ê´ê´ê´ê´ê´",4,"ê´ê´ê´ê´"],["8241","ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´¡",7,"ê´ªê´«ê´®",5],["8261","ê´¶ê´·ê´¹ê´ºê´»ê´½",6,"êµêµêµ",5,"êµêµêµêµêµêµ"],["8281","êµ",7,"êµ¢êµ¤",7,"êµ®êµ¯êµ±êµ²êµ·êµ¸êµ¹êµºêµ¾ê¶ê¶",4,"ê¶ê¶ê¶ê¶ê¶ê¶",10,"ê¶",5,"ê¶¥",17,"ê¶¸",7,"ê·ê·ê·ê·ê·ê·",6,"ê·ê·",7,"ê·ê·ê·ê·¡ê·¢ê·£ê·¥",18],["8341","ê·ºê·»ê·½ê·¾ê¸",5,"ê¸ê¸ê¸",5,"ê¸",7],["8361","ê¸",18,"ê¸²ê¸³ê¸µê¸¶ê¸¹ê¸»ê¸¼"],["8381","ê¸½ê¸¾ê¸¿ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹",4,"ê¹ê¹¢ê¹£ê¹¤ê¹¦ê¹§ê¹ªê¹«ê¹­ê¹®ê¹¯ê¹±",6,"ê¹ºê¹¾",5,"êº",5,"êº",46,"êº¿ê»ê»ê»ê»",6,"ê»ê»",5,"ê»ê»ê»",8],["8441","ê»¦ê»§ê»©ê»ªê»¬ê»®",5,"ê»µê»¶ê»·ê»¹ê»ºê»»ê»½",8],["8461","ê¼ê¼ê¼ê¼ê¼ê¼ê¼ê¼",18],["8481","ê¼¤",7,"ê¼®ê¼¯ê¼±ê¼³ê¼µ",6,"ê¼¾ê½ê½ê½ê½ê½ê½",5,"ê½",10,"ê½",5,"ê½¦",18,"ê½º",5,"ê¾ê¾ê¾ê¾ê¾ê¾ê¾",6,"ê¾ê¾ê¾ê¾",5,"ê¾",26,"ê¾ºê¾»ê¾½ê¾¾"],["8541","ê¾¿ê¿",5,"ê¿ê¿ê¿",4,"ê¿",6,"ê¿",4],["8561","ê¿¢",5,"ê¿ª",5,"ê¿²ê¿³ê¿µê¿¶ê¿·ê¿¹",6,"ëë"],["8581","ë",6,"ëëëëëëë",6,"ë",9,"ë©",26,"ëëëëëëëëëëëëëëë",29,"ë¾ë¿ëëëë",6,"ëëë",5,"ëëëë£ë¤"],["8641","ë¥ë¦ë§ëªë°ë²ë¶ë·ë¹ëºë»ë½",6,"ëë",5,"ë"],["8661","ëëëëë",6,"ë¡ë¢ë£ë¤ë¦",10],["8681","ë±",22,"ëëëëëëëëëëë",4,"ë¦ë§ë©ëªë«ë­",6,"ë¶ëº",5,"ëëëëëë",6,"ëëëëëëëëëëë¡",22,"ëºë»ë½ë¾ë¿ëë",4,"ëëëëëëëëëëëëë"],["8741","ë",9,"ë©",15],["8761","ë¹",18,"ëëëëëëë"],["8781","ë",5,"ëë ",7,"ëªë«ë­ë®ë¯ë±",7,"ëºë¼ë¾",5,"ëëëëë",6,"ëëë",5,"ë¡",18,"ëµ",6,"ë½",26,"ëëëëëëë¡",6,"ëª",4],["8841","ë¯",4,"ë¶",5,"ë½",6,"ëëëë",4],["8861","ëëëëëëë",4,"ë¢ë¤ë§ë¨ë©ë«ë­ë®ë¯ë±ë²ë³ëµë¶ë·"],["8881","ë¸",15,"ëëëëëëë",4,"ëëëëë ë¡ë£ë§ë©ëªë°ë±ë²ë¶ë¼ë½ë¾ëëëëëë",6,"ëë",5,"ë",54,"ëëëëë ë¡ë¢ë£"],["8941","ë¦ë¨ëªë¬ë­ë¯ë²ë³ëµë¶ë·ë¹",6,"ëë",5,"ë"],["8961","ëëëëëë",10,"ë¢",5,"ë©ëªë«ë­"],["8981","ë®",21,"ëëëëëëëëëëëëëëëë¡ë¢ë£ë¥ë¦ë§ë©",18,"ë½",18,"ë",6,"ëëëëëëë¡",6,"ëªë¬",7,"ëµ",15],["8a41","ë",10,"ëëëëëë",6,"ë¢ë¤ë¦"],["8a61","ë§",4,"ë­",18,"ëë"],["8a81","ë",4,"ë",19,"ë",5,"ë¥ë¦ë§ë©ëªë«ë­",7,"ë¶ë¸ëº",5,"ëëëëëëë",6,"ëëëëë",5,"ëëë¡ë¢ë¥ë§",4,"ë®ë°ë²",5,"ë¹",26,"ëëëëë"],["8b41","ë",5,"ë¦ë«",4,"ë²ë³ëµë¶ë·ë¹",6,"ëë"],["8b61","ëëëëëëëëëë",6,"ëë¢",8],["8b81","ë«",52,"ë¢ë£ë¥ë¦ë§ë©ë¬ë­ë®ë¯ë²ë¶",4,"ë¾ë¿ëëëë",6,"ëë",5,"ë",18,"ë­",18],["8c41","ë",15,"ëëëëëë",4],["8c61","ë",6,"ë¦",5,"ë­",6,"ëµ",5],["8c81","ë»",12,"ë",26,"ë¥ë¦ë§ë©",50,"ëëë¡ë¢ë£ë¥",5,"ë­ë®ë¯ë°ë²",16],["8d41","ë",16,"ë",8],["8d61","ë",17,"ë±ë²ë³ëµë¶ë·ë¹ëº"],["8d81","ë»",4,"ëëëë",33,"ëªë«ë­ë®ë±",6,"ëºë¼",7,"ëëëëëëë",6,"ë",9,"ë¡ë¢ë£ë¥ë¦ë§ë©",6,"ë²ë´ë¶",5,"ë¾ë¿ëëëë",6,"ëëëëëëëë"],["8e41","ëë¡",6,"ëªë®",5,"ë¶ë·ë¹",8],["8e61","ë",4,"ëë",19],["8e81","ë",13,"ë®ë¯ë±ë²ë³ëµ",6,"ë¾ë ",4,"ë ë ë ë ë ë ",6,"ë ë ë ",5,"ë ¦ë §ë ©ë ªë «ë ­",6,"ë ¶ë º",5,"ë¡ë¡ë¡ë¡",11,"ë¡ë¡",7,"ë¡ë¡ë¡¡ë¡¢ë¡£ë¡¥",6,"ë¡®ë¡°ë¡²",5,"ë¡¹ë¡ºë¡»ë¡½",7],["8f41","ë¢",7,"ë¢",17],["8f61","ë¢ ",7,"ë¢©",6,"ë¢±ë¢²ë¢³ë¢µë¢¶ë¢·ë¢¹",4],["8f81","ë¢¾ë¢¿ë£ë£ë£",5,"ë£ë£ë£ë£ë£ë£ë£",7,"ë£ë£ ë£¢",5,"ë£ªë£«ë£­ë£®ë£¯ë£±",6,"ë£ºë£¼ë£¾",5,"ë¤",18,"ë¤",6,"ë¤¡",26,"ë¤¾ë¤¿ë¥ë¥ë¥ë¥",6,"ë¥ë¥ë¥ë¥",5],["9041","ë¥ë¥ë¥ë¥ë¥ë¥¡",6,"ë¥ªë¥¬ë¥®",5,"ë¥¶ë¥·ë¥¹ë¥ºë¥»ë¥½"],["9061","ë¥¾",5,"ë¦ë¦ë¦ë¦ë¦",15],["9081","ë¦",12,"ë¦®ë¦¯ë¦±ë¦²ë¦³ë¦µ",6,"ë¦¾ë§ë§",5,"ë§ë§ë§ë§",4,"ë§ë§ë§ë§ ë§¢ë§¦ë§§ë§©ë§ªë§«ë§­",6,"ë§¶ë§»",4,"ë¨",5,"ë¨",11,"ë¨",33,"ë¨ºë¨»ë¨½ë¨¾ë¨¿ë©ë©ë©ë©ë©"],["9141","ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©",6,"ë©¦ë©ª",5],["9161","ë©²ë©³ë©µë©¶ë©·ë©¹",9,"ëªëªëªëªëªëª",5],["9181","ëª",20,"ëªªëª­ëª®ëª¯ëª±ëª³",4,"ëªºëª¼ëª¾",5,"ë«ë«ë«ë«",14,"ë«",33,"ë«½ë«¾ë«¿ë¬ë¬ë¬ë¬",7,"ë¬ë¬ë¬",5,"ë¬ë¬ë¬ë¬ë¬ë¬ë¬¡",6],["9241","ë¬¨ë¬ªë¬¬",7,"ë¬·ë¬¹ë¬ºë¬¿",4,"ë­ë­ë­ë­ë­ë­ë­ë­"],["9261","ë­ë­ë­ë­ë­",7,"ë­¢ë­¤",7,"ë­­",4],["9281","ë­²",21,"ë®ë®ë®ë®ë®ë®ë®",18,"ë®¥ë®¦ë®§ë®©ë®ªë®«ë®­",6,"ë®µë®¶ë®¸",7,"ë¯ë¯ë¯ë¯ë¯ë¯ë¯",6,"ë¯ë¯ë¯",35,"ë¯ºë¯»ë¯½ë¯¾ë°"],["9341","ë°",4,"ë°ë°ë°ë°ë°ë°ë°ë° ë°¡ë°¢ë°£ë°¦ë°¨ë°ªë°«ë°¬ë°®ë°¯ë°²ë°³ë°µ"],["9361","ë°¶ë°·ë°¹",6,"ë±ë±ë±ë±ë±ë±ë±ë±ë±",8],["9381","ë±ë±ë±ë±",37,"ë²ë²ë²ë²ë²ë²",4,"ë²ë²ë²",4,"ë²¢ë²£ë²¥ë²¦ë²©",6,"ë²²ë²¶",5,"ë²¾ë²¿ë³ë³ë³ë³",7,"ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³",22,"ë³·ë³¹ë³ºë³»ë³½"],["9441","ë³¾",5,"ë´ë´ë´",5,"ë´ë´ë´ë´",8],["9461","ë´",5,"ë´¥",6,"ë´­",12],["9481","ë´º",5,"ëµ",6,"ëµëµëµëµëµëµ",6,"ëµ",9,"ëµ¥ëµ¦ëµ§ëµ©",22,"ë¶ë¶ë¶ë¶ë¶",4,"ë¶ë¶ë¶ë¶ë¶ë¶ë¶",6,"ë¶¥",10,"ë¶±",6,"ë¶¹",24],["9541","ë·ë·ë·ë·ë·ë·ë·ë·",11,"ë·ª",5,"ë·±"],["9561","ë·²ë·³ë·µë·¶ë··ë·¹",6,"ë¸ë¸ë¸ë¸",5,"ë¸ë¸ë¸ë¸ë¸"],["9581","ë¸",6,"ë¸ë¸ ",35,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹",4,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹¢ë¹£ë¹¥ë¹¦ë¹§ë¹©ë¹«",4,"ë¹²ë¹¶",4,"ë¹¾ë¹¿ëºëºëºëº",6,"ëºëº",5,"ëº",13,"ëº©",14],["9641","ëº¸",23,"ë»ë»"],["9661","ë»ë»ë»",6,"ë»¡ë»¢ë»¦",5,"ë»­",8],["9681","ë»¶",10,"ë¼",5,"ë¼",13,"ë¼ë¼",33,"ë½ë½ë½ë½ë½ë½",6,"ë½ë½ë½ë½",44],["9741","ë¾",16,"ë¾",8],["9761","ë¾",17,"ë¾±",7],["9781","ë¾¹",11,"ë¿",5,"ë¿ë¿ë¿ë¿ë¿ë¿",6,"ë¿ë¿ë¿ ë¿¢",89,"ì½ì¾ì¿"],["9841","ì",16,"ì",5,"ììì"],["9861","ìììì¡",6,"ìª",15],["9881","ìº",21,"ìììììì",6,"ì¢ì¤ì¦",5,"ì®ì±ì²ì·",4,"ì¾ììììììììììì",6,"ìì",5,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì¸ìº",5,"ììììììì",6,"ììììì",5,"ì¡ì¢ì¥ì¨ì©ìªì«ì®"],["9941","ì²ì³ì´ìµì·ìºì»ì½ì¾ì¿ì",6,"ìì",5,"ìì"],["9961","ìììì",6,"ì¦ìª",5,"ì±ì²ì³ìµì¶ì·ì¹ìºì»"],["9981","ì¼",8,"ì",5,"ìììììì",4,"ìì ì¢ì£ì¤ì¦ì§ìªì«ì­ì®ì¯ì±",11,"ì¾",5,"ììììììì",6,"ììì",6,"ì¡ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´",7,"ì¾ì¿ìììì",6,"ììì",5,"ììììì¡ì¢ì£"],["9a41","ì¤ì¥ì¦ì§ìªì¬ì®ì°ì³ìµ",16],["9a61","ììì",6,"ìììììì",6,"ì¡ì¢ì£ì¤ì¦"],["9a81","ì§",4,"ì®ì¯ì±ì²ì³ìµ",6,"ì¾ìì",5,"ì",5,"ì",6,"ìììì",5,"ì¦ì§ì©ìªì«ì®",5,"ì¶ì¸ìº",33,"ììì¡ì¢ì¥",5,"ì®ì°ì²ì³ì´ìµì·ìºì½ì¾ì¿ì",6,"ìììì"],["9b41","ììììììììì",6,"ì¦ì§ìª",8],["9b61","ì³",17,"ì",7],["9b81","ì",25,"ìªì«ì­ì®ì¯ì±ì³",4,"ìºì»ì¾",5,"ììììììì",50,"ì",22,"ì"],["9c41","ìììì¡ì£",4,"ìªì«ì¬ì®",5,"ì¶ì·ì¹",5],["9c61","ì¿",8,"ì",6,"ì",9],["9c81","ì",8,"ì¥",6,"ì­ì®ì¯ì±ì²ì³ìµ",6,"ì¾",9,"ì",26,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì·ì¸ìº",5,"ì",18,"ì",6,"ì",12],["9d41","ìª",13,"ì¹ìºì»ì½",8],["9d61","ì",25],["9d81","ì ",8,"ìª",5,"ì²ì³ìµì¶ì·ì¹ì»ì¼ì½ì¾ì",9,"ììììììì",6,"ì",10,"ìªì«ì­ì®ì¯ì±",6,"ìºì¼ì¾",5,"ììììììììììììì¢ì£ì¥ì¦ì§ì©",6,"ì²ì¶",5,"ì¾ì¿ìììììììììììììì"],["9e41","ìììììììì¡",7,"ìª",9,"ì¶"],["9e61","ì·ìºì¿",4,"ììììììììì",6,"ì¢ì¤ì¦ì§"],["9e81","ì¨ì©ìªì«ì¯ì±ì²ì³ìµì¸ì¹ìºì»ìììììììììì",6,"ìì",6,"ì¦ì§ì©ìªì«ì¯ì±ì²ì¶ì¸ìºì¼ì½ì¾ì¿ìììììì",6,"ìì",5,"ììì¡",10,"ì­ì®ì°ì²",5,"ìºì»ì½ì¾ì¿ì",6,"ììì",5,"ìììììì",6,"ì¦"],["9f41","ì¨ìª",5,"ì²ì³ìµì¶ì·ì»",4,"ììì",5,"ì"],["9f61","ììììì",6,"ììì¢",5,"ìªì«ì­ì®ì¯ì±ì²"],["9f81","ì³",4,"ìºì»ì¼ì¾",5,"ìììììì",6,"ììì",5,"ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´ì¶ì¸ì¹ìºì»ì¾ì¿ìììì",4,"ìììììììììì¡",6,"ì©ìªì¬",7,"ì¶ì·ì¹ìºì»ì¿ììììììììììììì",4,"ì¢ì§",4,"ì®ì¯ì±ì²ì³ìµì¶ì·"],["a041","ì¸ì¹ìºì»ì¾ì",5,"ììììì",6,"ìììì"],["a061","ì",5,"ì¥ì¦ì§ì©ìªì«ì­",13],["a081","ì»",4,"ì ì ì ì ì ì ì ",4,"ì ì ì ",4,"ì ì ì ¡ì ¢ì £ì ¥",6,"ì ®ì °ì ²",5,"ì ¹ì ºì »ì ½ì ¾ì ¿ì¡",6,"ì¡ì¡ì¡",5,"ì¡",26,"ì¡²ì¡³ì¡µì¡¶ì¡·ì¡¹ì¡»",4,"ì¢ì¢ì¢ì¢ì¢ì¢",5,"ì¢",7,"ì¢ì¢ ì¢¢ì¢£ì¢¤"],["a141","ì¢¥ì¢¦ì¢§ì¢©",18,"ì¢¾ì¢¿ì£ì£"],["a161","ì£ì£ì£ì£ì£ì£ì£ì£ì£",6,"ì£ì£ì£",5,"ì£¢ì££ì£¥"],["a181","ì£¦",14,"ì£¶",5,"ì£¾ì£¿ì¤ì¤ì¤ì¤",4,"ì¤ãããÂ·â¥â¦Â¨ãÂ­ââ¥ï¼¼â¼ââââããã",9,"Â±ÃÃ·â â¤â¥ââ´Â°â²â³ââ«ï¿ ï¿¡ï¿¥âââ â¥ââââ¡âÂ§â»ââââââââ¡â â³â²â½â¼âââââãâªâ«ââ½ââµâ«â¬âââââââªâ©â§â¨ï¿¢"],["a241","ì¤ì¤",5,"ì¤",18],["a261","ì¤­",6,"ì¤µ",18],["a281","ì¥",7,"ì¥ì¥ì¥ì¥ì¥ì¥",6,"ì¥¢ì¥¤",7,"ì¥­ì¥®ì¥¯ââââÂ´ï½ËËËËËÂ¸ËÂ¡Â¿Ëâ®ââÂ¤ââ°âââ·â¶â¤â â¡â¥â§â£âââ£ââââ¤â¥â¨â§â¦â©â¨ââââÂ¶â â¡ââââââ­â©âªâ¬ã¿ãâãâ¢ããâ¡â¬Â®"],["a341","ì¥±ì¥²ì¥³ì¥µ",6,"ì¥½",10,"ì¦ì¦ì¦ì¦ì¦"],["a361","ì¦",6,"ì¦ì¦ì¦",16],["a381","ì¦¯",16,"ì§ì§ì§ì§ì§ì§",4,"ì§ì§ì§ì§ì§ï¼",58,"ï¿¦ï¼½",32,"ï¿£"],["a441","ì§ì§ì§¡ì§£ì§¥ì§¦ì§¨ì§©ì§ªì§«ì§®ì§²",5,"ì§ºì§»ì§½ì§¾ì§¿ì¨ì¨ì¨ì¨"],["a461","ì¨ì¨ì¨ì¨ì¨",5,"ì¨ì¨ì¨ì¨",12],["a481","ì¨¦ì¨§ì¨¨ì¨ª",28,"ã±",93],["a541","ì©",4,"ì©ì©ì©ì©ì©ì©",6,"ì©ì©¢",5,"ì©©ì©ª"],["a561","ì©«",17,"ì©¾",5,"ìªìª"],["a581","ìª",16,"ìª",14,"â°",9],["a5b0","â ",9],["a5c1","Î",16,"Î£",6],["a5e1","Î±",16,"Ï",6],["a641","ìª¨",19,"ìª¾ìª¿ì«ì«ì«ì«"],["a661","ì«",5,"ì«ì«ì«ì«ì«ì«ì«ì«",5,"ì«¡",6],["a681","ì«¨ì«©ì«ªì««ì«­",6,"ì«µ",18,"ì¬ì¬ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸ââââââââââââ¡â¢â¦â§â©âªâ­â®â±â²âµâ¶â¹âºâ½â¾âââ",7],["a741","ì¬",4,"ì¬ì¬ì¬ì¬ì¬ì¬ì¬",6,"ì¬¢",7],["a761","ì¬ª",22,"ì­ì­ì­"],["a781","ì­ì­ì­ì­ì­ì­ì­ì­ì­",6,"ì­ì­ì­ì­",5,"ì­¥",7,"ãããâããã£ã¤ã¥ã¦ã",9,"ããããããããã§ã¨ã°",9,"ã",4,"ãº",5,"ã",4,"â¦ãããããããã­ã®ã¯ãã©ãªã«ã¬ããããããã"],["a841","ì­­",10,"ì­º",14],["a861","ì®",18,"ì®",6],["a881","ì®¤",19,"ì®¹",11,"ÃÃÂªÄ¦"],["a8a6","Ä²"],["a8a8","Ä¿ÅÃÅÂºÃÅ¦Å"],["a8b1","ã ",27,"â",25,"â ",14,"Â½ââÂ¼Â¾ââââ"],["a941","ì¯",14,"ì¯",10],["a961","ì¯ ì¯¡ì¯¢ì¯£ì¯¥ì¯¦ì¯¨ì¯ª",18],["a981","ì¯½",14,"ì°ì°ì°ì°ì°ì°",6,"ì°ì°ì° ì°£ì°¤Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÃ¸ÅÃÃ¾Å§ÅÅã",27,"â",25,"â´",14,"Â¹Â²Â³â´â¿ââââ"],["aa41","ì°¥ì°¦ì°ªì°«ì°­ì°¯ì°±",6,"ì°ºì°¿",4,"ì±ì±ì±ì±ì±ì±ì±"],["aa61","ì±",4,"ì±ì±",5,"ì±¡ì±¢ì±£ì±¥ì±§ì±©",6,"ì±±ì±²"],["aa81","ì±³ì±´ì±¶",29,"ã",82],["ab41","ì²ì²ì²ì²ì²ì²ì²ì²ì²ì²¡",6,"ì²ªì²®",5,"ì²¶ì²·ì²¹"],["ab61","ì²ºì²»ì²½",6,"ì³ì³ì³",5,"ì³ì³ì³ì³",5],["ab81","ì³",8,"ì³¥",6,"ì³­ì³®ì³¯ì³±",12,"ã¡",85],["ac41","ì³¾ì³¿ì´ì´",5,"ì´ì´ì´ì´ì´ì´",6,"ì´ì´ì´ì´ì´ "],["ac61","ì´¡ì´¢ì´£ì´¥ì´¦ì´§ì´©ì´ªì´«ì´­",11,"ì´º",4],["ac81","ì´¿",28,"ìµìµìµÐ",5,"ÐÐ",25],["acd1","Ð°",5,"ÑÐ¶",25],["ad41","ìµ¡ìµ¢ìµ£ìµ¥",6,"ìµ®ìµ°ìµ²",5,"ìµ¹",7],["ad61","ì¶",6,"ì¶",10,"ì¶ì¶ì¶ì¶ì¶ì¶ì¶ì¶"],["ad81","ì¶ ì¶¡ì¶¢ì¶£ì¶¦ì¶¨ì¶ª",5,"ì¶±",18,"ì·"],["ae41","ì·",5,"ì·ì·ì·ì·",16],["ae61","ì·¢",5,"ì·©ì·ªì·«ì·­ì·®ì·¯ì·±",6,"ì·ºì·¼ì·¾",4],["ae81","ì¸ì¸ì¸ì¸ì¸ì¸ì¸ì¸",6,"ì¸ì¸ì¸ì¸ì¸",5,"ì¸¢ì¸£ì¸¥ì¸¦ì¸§ì¸©ì¸ªì¸«"],["af41","ì¸¬ì¸­ì¸®ì¸¯ì¸²ì¸´ì¸¶",19],["af61","ì¹",13,"ì¹ì¹ì¹ì¹ì¹¢",5,"ì¹ªì¹¬"],["af81","ì¹®",5,"ì¹¶ì¹·ì¹¹ì¹ºì¹»ì¹½",6,"ìºìºìº",5,"ìºìºìºìºìºìº"],["b041","ìº",5,"ìº¢ìº¦",5,"ìº®",12],["b061","ìº»",5,"ì»",19],["b081","ì»",13,"ì»¦ì»§ì»©ì»ªì»­",6,"ì»¶ì»º",5,"ê°ê°ê°ê°ê°ê°ê°ê°",7,"ê°",4,"ê° ê°¤ê°¬ê°­ê°¯ê°°ê°±ê°¸ê°¹ê°¼ê±ê±ê±ê±ê±ê±ê±°ê±±ê±´ê±·ê±¸ê±ºê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê² ê²¡ê²¨ê²©ê²ªê²¬ê²¯ê²°ê²¸ê²¹ê²»ê²¼ê²½ê³ê³ê³ê³ê³ê³ê³ ê³¡ê³¤ê³§ê³¨ê³ªê³¬ê³¯ê³°ê³±ê³³ê³µê³¶ê³¼ê³½ê´ê´ê´"],["b141","ì¼ì¼ì¼ì¼ì¼ì¼",6,"ì¼ì¼ì¼",5,"ì¼ì¼ì¼ì¼¡ì¼¢ì¼£"],["b161","ì¼¥",6,"ì¼®ì¼²",5,"ì¼¹",11],["b181","ì½",14,"ì½ì½ì½ì½ì½ì½",6,"ì½¦ì½¨ì½ªì½«ì½¬ê´ê´ê´ê´ê´ê´ê´ ê´©ê´¬ê´­ê´´ê´µê´¸ê´¼êµêµêµêµêµêµêµêµ¡êµ£êµ¬êµ­êµ°êµ³êµ´êµµêµ¶êµ»êµ¼êµ½êµ¿ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶¤ê¶·ê·ê·ê·ê·ê·ê·ê·ê·ê· ê·¤ê·¸ê·¹ê·¼ê·¿ê¸ê¸ê¸ê¸ê¸ê¸ê¸ê¸°ê¸±ê¸´ê¸·ê¸¸ê¸ºê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ ê¹¡ê¹¥ê¹¨ê¹©ê¹¬ê¹°ê¹¸"],["b241","ì½­ì½®ì½¯ì½²ì½³ì½µì½¶ì½·ì½¹",6,"ì¾ì¾ì¾ì¾ì¾",5,"ì¾"],["b261","ì¾",18,"ì¾¢",5,"ì¾©"],["b281","ì¾ª",5,"ì¾±",18,"ì¿",6,"ê¹¹ê¹»ê¹¼ê¹½êºêºêºêº¼êº½êº¾ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»¨ê»«ê»­ê»´ê»¸ê»¼ê¼ê¼ê¼ê¼ê¼¬ê¼­ê¼°ê¼²ê¼´ê¼¼ê¼½ê¼¿ê½ê½ê½ê½ê½ê½ê½ê½ê½¤ê½¥ê½¹ê¾ê¾ê¾ê¾ê¾ê¾ê¾ê¾¸ê¾¹ê¾¼ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿¨ê¿©ê¿°ê¿±ê¿´ê¿¸ëëëëëëëëë¨ëëëëëëëëëëë"],["b341","ì¿",19,"ì¿¢ì¿£ì¿¥ì¿¦ì¿§ì¿©"],["b361","ì¿ª",5,"ì¿²ì¿´ì¿¶",5,"ì¿½ì¿¾ì¿¿íííí",5],["b381","í",5,"í",5,"í",19,"ëë¼ë½ëëëëëëëëëëëë ë¡ë¢ë¨ë©ë«",4,"ë±ë³ë´ëµë¸ë¼ëëëëëëëëëë ë¥ëëëëëëëëëëëëë£ë¤ë¥ë¨ë¬ë´ëµë·ë¸ë¹ëëëëëëëëëëë ë¸ë¹ë¼ëëëëëëëëëëëë¨ëëëëë"],["b441","í®",5,"í¶í·í¹íºí»í½",6,"ííí",5],["b461","ííííííí",6,"í¡",10,"í®í¯"],["b481","í±í²í³íµ",6,"í¾í¿íí",18,"ëë¨ë©ë¬ë°ë¹ë»ë½ëëëëëëëëëë ë´ë¼ëëë ë¨ë©ë´ëµë¼ëëëëëëëëëë ë¡ë£ë¥ë¦ëªë¬ë°ë´ëëëëëëëëëë¢ë¤ë¥ë¦ë¨ë«",4,"ë³ë´ëµë·",4,"ë¿ëëëëëëëëëëëëëëëëëëë¤ë¥"],["b541","í",14,"í¦í§í©íªí«í­",5],["b561","í³í¶í¸íº",5,"íííííí",5,"íí",4],["b581","íííí¡í¢í£í¥",6,"í®í²",5,"í¹",11,"ë§ë©ë«ë®ë°ë±ë´ë¸ëëëëëëëëë ë¡ë¨ë¬ëëëëëëëëëëëëëë ë¤ë¨ë¼ëëëë ë¨ë©ë«ë´ëëëëë ë¡ë£ë¥ë¬ëëëë¤ë¨ë¬ëµë·ë¹ëëëëëëëë ë£ë¤ë¦ë¬ë­ë¯ë±ë¸ëëëëëë¤ë¥ë§ë¨ë©ëªë°ë±ë´ë¸"],["b641","í",7,"í",17],["b661","í ",15,"í²í³íµí¶í·í¹í»í¼í½í¾"],["b681","í¿íí",5,"íííííí",6,"íí í¢",5,"í©íªí«í­ëëëëëëëëëëëëëë ë¡ë ë¡ë¤ë¨ëªë«ë°ë±ë³ë´ëµë»ë¼ë½ëëëëëëëëë¬ëëëëë¥ë¬ë´ëë¤ë¨ëëë ë¤ë«ë¬ë±ëë°ë´ë¸ëëëë¨ë©ë¬ë¯ë°ë¸ë¹ë»ëëëëëë ë¤ë¨ë°ë±ë³ëµë¼ë½ëëëëëëëëëë"],["b741","í®",13,"í½",6,"ííííí"],["b761","í",20,"í¢í£í¥í¦í§"],["b781","í©",6,"í²í´í¶í·í¸í¹í»í½í¾í¿í",14,"ëëëë ë¨ë©ë«ë¬ë­ë´ëµë¸ëëë¬ë­ë°ë´ë¼ë½ë¿ë ë ë ë ë ë ë ë ë ë ë ë ¤ë ¥ë ¨ë ¬ë ´ë µë ·ë ¸ë ¹ë¡ë¡ë¡ë¡ë¡ë¡ë¡ ë¡¤ë¡¬ë¡­ë¡¯ë¡±ë¡¸ë¡¼ë¢ë¢¨ë¢°ë¢´ë¢¸ë£ë£ë£ë£ë£ë£ë£ë£ë£ë£¡ë£¨ë£©ë£¬ë£°ë£¸ë£¹ë£»ë£½ë¤ë¤ë¤ ë¤¼ë¤½ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ ë¥¨ë¥©"],["b841","í",7,"í",17],["b861","í«",8,"íµí¶í·í¹",13],["b881","íí",5,"í",24,"ë¥«ë¥­ë¥´ë¥µë¥¸ë¥¼ë¦ë¦ë¦ë¦ë¦ë¦ë¦ë¦¬ë¦­ë¦°ë¦´ë¦¼ë¦½ë¦¿ë§ë§ë§ë§ë§",4,"ë§ë§ë§ë§ë§ë§¡ë§£ë§¤ë§¥ë§¨ë§¬ë§´ë§µë§·ë§¸ë§¹ë§ºë¨ë¨ë¨ë¨ë¨¸ë¨¹ë¨¼ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©¤ë©¥ë©§ë©¨ë©©ë©°ë©±ë©´ë©¸ëªëªëªëªëªëª¨ëª©ëª«ëª¬ëª°ëª²ëª¸ëª¹ëª»ëª½ë«ë«ë«ë«ë«¼"],["b941","íªí«í®í¯í±í²í³íµ",6,"í¾íí",5,"íííí"],["b961","í",14,"í",6,"í¥í¦í§í¨"],["b981","í©",22,"íííííííííë¬ë¬ë¬ë¬ë¬ë¬ë¬ë¬ ë¬©ë¬«ë¬´ë¬µë¬¶ë¬¸ë¬»ë¬¼ë¬½ë¬¾ë­ë­ë­ë­ë­ë­ë­ë­ë­ë­¡ë­£ë­¬ë®ë®ë®ë®¤ë®¨ë®¬ë®´ë®·ë¯ë¯ë¯ë¯ë¯ë¯¸ë¯¹ë¯¼ë¯¿ë°ë°ë°ë°ë°ë°ë°ë°ë°ë°",4,"ë°",4,"ë°¤ë°¥ë°§ë°©ë°­ë°°ë°±ë°´ë°¸ë±ë±ë±ë±ë±ë±ë±ë±ë±ë±ë²ë²ë²ë²ë²ë²ë²ë²ë²"],["ba41","ííííííí",5,"íííí¡í¢í£í¥",6,"í­"],["ba61","í®í¯í°í²",5,"íºí»í½í¾íí",4,"íí",5],["ba81","ííííííííí",6,"í¦",9,"í²í³íµí¶í·í¹íºë²ë²ë² ë²¡ë²¤ë²§ë²¨ë²°ë²±ë²³ë²´ë²µë²¼ë²½ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³´ë³µë³¶ë³¸ë³¼ë´ë´ë´ë´ë´ë´ë´¤ë´¬ëµëµëµëµëµëµëµëµ¤ëµ¨ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶¤ë¶°ë¶¸ë·ë·ë·ë·ë·©ë·°ë·´ë·¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ ë¹¡ë¹¤"],["bb41","í»",4,"ííí",5,"íííííí",4,"íí¢í£"],["bb61","í¤í¦í§íªí«í­í®í¯í±",6,"íºí¾",5,"íííí"],["bb81","í",31,"ë¹¨ë¹ªë¹°ë¹±ë¹³ë¹´ë¹µë¹»ë¹¼ë¹½ëºëºëºëºëºëºëºëºëºëº¨ë»ë»ë»ë»ë»ë» ë»£ë»¤ë»¥ë»¬ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë½ë½ë½ë½ë½ë½ë½ë¾ë¾°ë¿ë¿ë¿ë¿ë¿ë¿ë¿ë¿¡ì¼ìììì ì¨ì©ììììì ì¡ì£ì¥ì¬ì­ì¯ì°ì³ì´ìµì¶ì¼ì½ì¿ììììììììììììì¤"],["bc41","íª",17,"í¾í¿íííííí"],["bc61","íííííí",5,"íííííí¡",6,"íªí¬í®"],["bc81","í¯",4,"íµí¶í·í¹íºí»í½",6,"ííí",5,"í",5,"ì¥ì¨ì¬ì´ìµì·ì¹ìììììì",4,"ì£ì¤ì¦ì§ì¬ì­ì¯ì°ì±ì¶ì¸ì¹ì¼ììììììììììì¤ì¥ì§ì¨ì©ì°ì´ì¸ììììììììììì¡ì¥ì¨ì©ì¬ì°ì½ììììììì ì¤ì¨ì°ì±ì³ì¼ì½ììììììììììì ì¨ì©ì«ì­"],["bd41","íí",7,"í¢í¤",7,"í®í¯í±í²í³íµí¶í·"],["bd61","í¸í¹íºí»í¾íí",5,"í",13],["bd81","í",5,"í",25,"ì¯ì±ì²ì´ìììììì ì¥ì¬ì­ì°ì´ì¼ì½ì¿ìììììììì¤ì¥ì¨ì¬ì­ì´ìµì·ì¹ììì ì£ì¤ì«ì¬ì­ì¯ì±ì¶ì¸ì¹ì»ì¼ììììììììììì¤ì¥ì¨ì©ìì¨ì©ì¬ì°ì²ì¸ì¹ì¼ì½ììììììììì ì¢ì¨ì©ì­ì´ìµì¸ììì¤ì¬ì°"],["be41","í¸",7,"íííí",14],["be61","í",7,"íííí¡í¢í£í¥",7,"í®í°í±í²"],["be81","í³",4,"íºí»í½í¾íí",4,"ííí",5,"í",8,"ì´ì¼ì½ìì¤ì¥ì¨ì¬ì´ìµì¹ìììì¸ì¼ì©ì°ì±ì´ì¸ìºì¿ììììììì¨ì©ì¬ì°ì¸ì¹ì»ì½ììììììììììììììììì ì¡ì¤ì¨ì°ì±ì³ì´ìµì¼ì½ìììììììììììì ì©ì´ìµì¸ì¹ì»ì¼ì½ì¾ì",6,"ìì"],["bf41","í",10,"íª",14],["bf61","í¹",18,"ííííííí"],["bf81","í",5,"ííí ",7,"í©íªí«í­í®í¯í±",6,"í¹íºí¼ììììì ì¡ì£ì¥ì¬ì­ì®ì°ì´ì¶ì·ì¼",5,"ììììììììììì¤ì¥ì¨ì¬ì­ì®ì°ì³ì´ìµì·ì¹ì»ìììììììììììì ì¬ì¯ì±ì¸ì¹ì¼ìììììììììì¤ì¥ì§ì©ì°ì±ì´ì¸ì¹ìºììììììììììì ì¡ì¨"],["c041","í¾",5,"ííííííí",6,"íí",5],["c061","í",25],["c081","í¸í¹íºí»í¾í¿íííí",6,"ííí",5,"íííííí¡í¢í£ì©ì¬ì°ì¸ì¹ì½ììììììììì ì¡ì¤ì¨ì°ì±ì³ìµì·ì¼ì½ììììììì",7,"ìì ì¨ì«ì´ìµì¸ì¼ì½ì¾ìììììììììììììììì ì¡ì£ì¤ì¥ì¦ì¬ì­ì°ì´ì¼ì½ì¿ìììììììììì¤ì¨ì¬ì ì ì ì ì "],["c141","í¤í¦í§íªí¬í®",5,"í¶í·í¹íºí»í½",6,"ííí"],["c161","ííííí",19,"í¦í§"],["c181","í¨",31,"ì ì ì ì ì ì ì ì  ì ¤ì ¬ì ­ì ¯ì ±ì ¸ì ¼ì¡ì¡ì¡ì¡ì¡ì¡ì¡°ì¡±ì¡´ì¡¸ì¡ºì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢¡ì¢¨ì¢¼ì¢½ì£ì£ì£ì£ì£ì£ì£ì£ ì£¡ì£¤ì£µì£¼ì£½ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤¬ì¤´ì¥ì¥ì¥ì¥ì¥ ì¥¡ì¥£ì¥¬ì¥°ì¥´ì¥¼ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì§ì§ì§ì§ì§ì§ì§ì§ì§"],["c241","ííííííí",4,"ííí",5,"í¦í§í©íªí«í­í®"],["c261","í¯",4,"í¶í¸íº",5,"íííííí",6,"í"],["c281","í",5,"íííí¡í¢í£í¥",7,"í®",9,"íºí»ì§ì§ì§ì§ì§ì§ì§ ì§¢ì§¤ì§§ì§¬ì§­ì§¯ì§°ì§±ì§¸ì§¹ì§¼ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨©ì©ì©ì©ì©ì©ì©ì©ì© ì©¡ì©¨ì©½ìªìªìª¼ìª½ì«ì«ì«ì«ì«ì«ì«ì«ì«ì« ì«¬ì«´ì¬ì¬ì¬ì¬ì¬ ì¬¡ì­ì­ì­ì­ì­ì­ì­ì­ì­¤ì­¸ì­¹ì®ì®¸ì¯ì¯¤ì¯§ì¯©ì°ì°ì°ì°ì°ì°ì°¡ì°¢ì°§ì°¨ì°©ì°¬ì°®ì°°ì°¸ì°¹ì°»"],["c341","í½í¾í¿ííííííííííííííííííí",4],["c361","í¢",4,"í¨íª",5,"í²í³íµ",11],["c381","íííí",5,"íííííí",7,"íí í¢",5,"í©íªì°¼ì°½ì°¾ì±ì±ì±ì±ì±ì±ì±ì±ì±ì± ì±¤ì±¦ì±¨ì±°ì±µì²ì²ì²ì² ì²¨ì²©ì²«ì²¬ì²­ì²´ì²µì²¸ì²¼ì³ì³ì³ì³ì³ì³ì³¤ì³¬ì³°ì´ì´ì´ì´ì´ì´ì´ì´ì´ì´¤ì´¨ì´¬ì´¹ìµìµ ìµ¤ìµ¬ìµ­ìµ¯ìµ±ìµ¸ì¶ì¶ì¶ì¶ì¶ì¶¤ì¶¥ì¶§ì¶©ì¶°ì·ì·ì·ì·¨ì·¬ì·°ì·¸ì·¹ì·»ì·½ì¸ì¸ì¸ì¸ì¸ì¸ ì¸¡ì¸¤ì¸¨ì¸°ì¸±ì¸³ì¸µ"],["c441","í«í­í®í¯í±",7,"íºí¼",7,"ííííí"],["c461","íííííííííí",5,"í¡í¢í£í¥í¦í§í©",4],["c481","í®í¯í±í²í³í´í¶",5,"í¾í¿íííí",11,"íííì¹ì¹ì¹ì¹ì¹ ì¹¡ì¹¨ì¹©ì¹«ì¹­ì¹´ì¹µì¹¸ì¹¼ìºìºìºìºìºìºìºìºìº ìº¡ìº£ìº¤ìº¥ìº¬ìº­ì»ì»¤ì»¥ì»¨ì»«ì»¬ì»´ì»µì»·ì»¸ì»¹ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ ì¼¤ì¼¬ì¼­ì¼¯ì¼°ì¼±ì¼¸ì½ì½ì½ì½ì½¤ì½¥ì½§ì½©ì½°ì½±ì½´ì½¸ì¾ì¾ì¾ì¾¡ì¾¨ì¾°ì¿ì¿ ì¿¡ì¿¤ì¿¨ì¿°ì¿±ì¿³ì¿µì¿¼ííííí­í´íµí¸í¼"],["c541","ííííííííí¡",6,"íªí¬í®",5,"í¶í·í¹"],["c561","íºí»í½",6,"íííí",5,"íííí",4],["c581","íí¢í¤í¦í§í¨íªí«í­í®í¯í±í²í³íµ",6,"í¾í¿íí",5,"íííííííííí í¬í­í°í´í¼í½íí¤í¥í¨í¬í´íµí·í¹ííííííííííííí í¤í¬í­í¯í°í±í¸íí°í±í´í¸íºííííííííííííí¡í¨í¬í¼ííí í¡í¤í¨í°í±í³íµíºí¼ííí´í¸íííí¬í­í°í´í¼í½í¿ííí"],["c641","íííí",6,"ííí",5],["c6a1","í¤ííííííííí í¤í¬í±í¸í¹í¼í¿ííííííííí¤í¥í°í±í´í¸íííííííííííííí í¡í¥í¨í©í¬í°í¸í¹í»í¼í½ííí¼í½ííííííííííí í¨í©í«í­í´í¸í¼ííííííí¡í£í¬í­í°í´í¼í½í¿í"],["c7a1","íííííí í¤í­í¯í¸í¹í¼í¿íííííííí©íííííí¨í¬í°í¸í»í½ííííííí¼í½íííííííííí í¥í¨í©í«í­í´íµí¸í¼ííííííí¥íííííííííí¤í¥í¨í¬í´íµí·í¹ííííííííííí "],["c8a1","í¤í­í¸í¹í¼íííííííííííí§í©í°í±í´ííííííííí¡í¨í¬í°í¹í»ííííííííí í¤í¨í°íµí¼í½ííííííí í¨í©í«í­í´íµí¸í¼ííííííííííí í¡í£í¥í©í¬í°í´í¼í½ííííííííí"],["caa1","ä¼½ä½³åå¹å å¯åµå¥åå«å®¶ææ¶æ·æ¯æ­ççç¨¼èèè¡è¢è¨¶è³è·è»»è¿¦é§å»å´åæªæ¤æ®¼çèè¦ºè§é£ä¾åå¢¾å¥¸å§¦å¹²å¹¹ææææ¬æ¡¿æ¾ççç£µç¨ç«¿ç°¡èè®è±è««éä¹«åæ·æ¸´ç¢£ç«­èè¤èé¨ååå ªåµææ¾æ¡æ¢ææ©æ¸çç³ç£ç°ç´ºé¯ééé¾"],["cba1","å£å²¬ç²èééåå å§å²¡å´åº·å¼ºå½æ·æ±çºçç³ çµ³ç¶±ç¾èè¡èè¥è¬é¼éé±ä»ä»·åå±å¡æ·æ¾æ¨æ¹æ§ªæ¼ç¥ççç®è¥èï¤é§éåå®¢åï¤ç²³ç¾¹éµå¨å»å±å·¨ææ®ææ§æ¸ ç¬ç¥è·è¸ï¤é½éé¸ä¹¾ä»¶å¥å·¾å»ºææ¥è±èè¹éµé¨«ä¹åæ°æ¡åååæª¢"],["cca1","ç¼éé»å«æ¯è¿²åæ©æ­ææ ¼æªæ¿èè¦¡éå ç½ç¬ççµ¹ç¹­è©è¦è­´é£éµææ±ºæ½çµç¼ºè¨£å¼æç®è¬ééäº¬ä¿åå¾åååå¿å°å¢åºå¾æ¶æ¬ææ¬æ¯æ»æ´æ¢æ¶çç±çç¥ççç¡¬ç£¬ç«ç«¶çµç¶èè¿èèè­¦è¼éé¡é é ¸é©é¯¨ä¿åå ºå¥å­£å±æ¸ææ¡æ¢°"],["cda1","æ£¨æºªçç¸ç£ç¨½ç³»ç¹«ç¹¼è¨èª¡è°¿éé·å¤å©åå±åºå§å­¤å°»åº«æ·æ·ææ²æ æ¯æ§æ²½ç¼çç¾ç¨¿ç¾èè¡èè¦è½è°èè ±è¢´èª¥ï¤è¾é®éé¡§é«é¼å­ææ²æ¢ç©è°·éµ å°å¤å´ææ¢±æ£æ»¾ç¨è¢é¯¤æ±¨ï¤éª¨ä¾å¬å±åå­å·¥ææ­æ±æ§æ»çç©ºè£è²¢éä¸²å¯¡ææç"],["cea1","ç§èèªèª²è·¨ééé¡å»æ§¨è¿é­ï¤å å®å¯¬æ£æ£ºæ¬¾çç¯çç®¡ç½èè§è²«éé¤¨å®ææ¬éä¾åå¡å£å»£æ æ´¸çççç­è±éå¦æç½«ä¹åå¡å£æªæ§ææ§é­å®ç´è±è½äº¤åå¬å¬å¬å¶ å·§æªææ ¡æ©ç¡çç¯çµç¿¹è èèè¼è½éé¤é©é®«ä¸ä¹ä¹ä»ä¿±å·å¾"],["cfa1","åå£å¥åååµå¢å¯å¶å»æ¼æææ¸æ©æ§æ­æ¯æ¯¬æ±æºç¸çççç¿ç©ç©¶çµ¿èè¼èèèè¡¢è¬³è³¼è»éé±é¤é¶é§é©é³©é·é¾åå±èé é«éº´åçªç¾¤è£è»é¡å å±æçªå®®å¼ç©¹çª®èèº¬å¦å¸å¸å·åæ³æ²æ¬æ·ç·å¥çè¨è¹¶éæºæ«æ½°è©­è»é¥ï¤æ·æ­¸è²´"],["d0a1","é¬¼ï¤å«å­å¥ææ§»çªç¡çªºç«ç³¾èµè¦èµ³éµé¨å»åçç­ èéï¤æ©åååææ£æ¥µéåå¤å¤ææ¤æ ¹æ§¿ç¾ç­è¹è«è¦²è¬¹è¿é¥ï¤ä»å¦æææªç´ç¦ç¦½è©è¡¾è¡¿è¥ï¤é¦ä¼åæ¥æ±æ±²ç´çµ¦äºå¢çè¯ä¼ä¼å¶ååå¨å»åºå¼å¤å¥å¦å¯å²å´å·±å¹¾å¿æææ£"],["d1a1","ææææ£æ£æ©æ¬ºæ°£æ±½æ²æ·çç¦çªçç£ç¸ç¿ç¢ç£¯ç¥ç¥ç¥ç¥ºç®ç´ç¶ºç¾èè­èè¨è­è±èµ·é¡é¤é£¢é¥é¨é¨é©¥éºç·ä½¶åæ®æ¡éå«åºï¤ï¤å¨æ¦ï¤ææ¿ï¤",5,"é£ï¤",4,"è«¾ï¤ï¤ï¤ï¤æï¤çï¤ï¤é£ï¤ ææºåï¤¡ææ¥ æ¹³ï¤¢ç·ï¤£ï¤¤ï¤¥"],["d2a1","ç´ï¤¦ï¤§è¡²åå¨ï¤¨",4,"ä¹ï¤­å§å¥æ°èï¤®å¥³å¹´æç§å¿µæ¬ææ»å¯§å¯åªï¤¯å¥´å¼©æï¤°ï¤±ï¤²çï¤³",5,"é§ï¤¹",10,"æ¿ï¥ï¥è¿è¾²æ±ï¥ï¥è¦ï¥ï¥å°¿ï¥",7,"å«©è¨¥æ»ç´ï¥",5,"è½ï¥ï¥å°¼æ³¥å¿æººå¤è¶"],["d3a1","ä¸¹äº¶ä½å®åå£å½æ·æ¦æªæ®µæ¹ç­ç«¯ç°ç·èè¢é²éæ»æ¾¾çºç¸éååæºæææ·¡æ¹æ½­æ¾¹ç°èè½èè¦è«è­éæ²çç­è¸éåå å¡å¹¢æææ£ ç¶ç³è³é»¨ä»£åå®å¤§å°å²±å¸¶å¾æ´æ¡ç³èºè¢è²¸éé»å®å¾·æ³ååå°åå µå¡å°å± å³¶å¶åº¦å¾æ¼ææææ¡"],["d4a1","æ£¹æ«æ·æ¸¡æ»æ¿¤ç¾çç¹ç¦±ç¨»èè¦©è³­è·³è¹éééé½éé¶éæ¯ççç¢ç¨ç£ç¦¿ç¯¤çºè®å¢©ææ¦æ½æ¾æ²ççè±é ä¹­çªä»å¬åååæ§æ±æ¡æ£æ´æ½¼ç¼ç³ç«¥è´è£éåæææçç«è³ï¥è±éé ­å±¯èèéé¯éå¾å¶æ©çç»ç­è¤è¬é§é¨°åæ¶ï¥ç©ç¾"],["d5a1","è¿èºè£¸éï¥æ´çççµ¡è½ï¥éªé§±ï¥äºåµæ¬æ¬ç¾çè­é¸åè¾£åµæ¥æ¬æ¬æ¿«ç±çºèè¥¤è¦½æèè å»ææµªç¼çç¯èéä¾å´å¾ èå·æ ç¥äº®åå©åæ¢æ¨ç²®ç²±ç³§è¯è«è¼éä¾¶å·åµåå»¬æ®æ¾ææ«æ¿¾ç¤ªèè £é­é©¢é©ªéºé»åææ­·çç¤«è½¢éæææ£æ¼£"],["d6a1","ççç·´è¯è®è¼¦é£éå½åå£æ´çè£å»ææ®®æ¿ç°¾çµä»¤ä¼¶å¹ï¥å²ºå¶ºæç²ç¬­ç¾ç¿èéé´é¶éé é½¡ä¾æ¾§ç¦®é´é·åï¥ æææ«æ½ççç§èèèè·¯è¼é²é­¯é·ºé¹µç¢ç¥¿ç¶ èéé¹¿éºè«å£å¼æ§ç§çç± è¾å¡ç¨ç¢ç£è³è³è³´é·äºåå¯®å»æççç­èè¼"],["d7a1","é¼é¬§é¾å£å©å±¢æ¨æ·æ¼ç»ç´¯ç¸·èè¤¸é¤éåææ³æ¦´æµæºççç çç¤ç¡«è¬¬é¡å­æ®é¸ä¾å«å´æ·ªç¶¸è¼ªå¾ææ ï¥¡éåèååæ¥ç¨ç¶¾è±éµä¿å©åååå±¥æ§ææ¢¨æµ¬çç¸ççï¥¢ç¢ç±¬ç½¹ç¾¸èè£è£¡ééé¢é¯åæ½¾ççèºèºªé£é±éºææ·ç³è¨éç ¬"],["d8a1","ç«ç¬ ç²æ©çªç²ç¢¼ç£¨é¦¬é­éº»å¯å¹æ¼ èè«éä¸åå¨©å·å½æ¢æ½æ©æ¼æ»¿æ¼«ç£çè¬èè »è¼é¥é°»åæ¹æ«æ²«èè¥ªéºäº¡å¦å¿å¿æç¶²ç½èè«è½è¼éåå¦¹åªå¯æ§ææ¢æ¯ç¤ç½µè²·è³£éé­èè²éé©éº¥å­æ°çç²çèåªè¦åååæ£æ²çç ç¶¿ç·¬é¢éºµæ»"],["d9a1","èå¥åå½æææ¤§æºç¿çèèèé©éé³´è¢ä¾®ååå§å¸½ææ¸æ¹æ®ææ¨¡æ¯æ¯çç¡çç¸çèè¼èè¬è¬¨è²æ¨æ²ç§ç®ç¦ç©é¶©æ­¿æ²å¤¢æ¦èå¯å¢å¦å»ææ´æ³æ¸ºç«ç«èé¨åå·«æ®ææææ«æ æ¥æ­¦æ¯ç¡ç·çç¹èèèªèª£è²¿é§éµ¡å¢¨é»ååå»åæ"],["daa1","æ±¶ç´ç´èèéé¯å¿æ²ç©å³åªå°¾åµå½å¾®æªæ¢¶æ¥£æ¸¼æ¹çç±³ç¾èè¬è¿·é¡é»´å²·æ¶ææ«ææ»æ¼æ°æ³¯ççç·¡éå¯èè¬ååæææ²æ´æ¨¸æ³ççç®ç²ç¸èè¶èè¿«é¹é§ä¼´åååææ¬æææ§æ³®æ½ç­çç¢ç¤ç¼ç£ç£»ç¤¬çµè¬è è¿é é£¯åææ¥æ¸¤æ½"],["dba1","ç¼è·é±é¢é«®é­å£ååå¦¨å°¨å¹å½·æ¿æ¾æ¹ææææ¦æ»ç£ç´¡èªèè«è³è¡èè¨ªè¬é¦é²é¾åä¿³ï¥£å¹å¾æææ¯æ¹ççèèè£´è£µè¤è³ è¼©ééªä¼¯ä½°å¸ææ ¢ç½ç¾é­å¹¡æ¨ç©ççªï¥¤ç¹èè©é£ä¼ç­ç½°é¥å¡å¸æ¢µæ°¾æ±æ³ç¯ç¯èæ³çºå»åå£ææªç§ç"],["dca1","ç¢§èé¢é¹ï¥¥åå¼è®è¾¨è¾¯éå¥ç¥é±é¼ä¸ååµå±å¹·ææºææ£ç³ççç§ç«è¼§é¤ é¨ä¿å ¡å ±å¯¶æ®æ­¥æ´æ¹ºæ½½ç¤ç«è©è£è¤è­è¼ä¼åååå®å¾©æç¦è¹è¯èè¤è¦è¼¹è¼»é¦¥é°æ¬ä¹¶ä¿¸å¥å°å³¯å³°æ§æ£ç½ç¢ç«ç¸«è¬èé¢éé³³ä¸ä»ä¿¯ååå¯å¦åå å¤«å©¦"],["dda1","å­å­µå¯åºï¥¦æ¶æ·æ§æµ®æº¥ç¶ç¬¦ç°¿ç¼¶èèèèèè©è¨è² è³¦è³»èµ´è¶ºé¨éééé§é³§ååå©å´å¢³å¥å¥®å¿¿æ¤æ®ææ±¾ççç²ç³ç´è¬è³é°ï¥§ä½å¼å½¿æå´©ææ£ç¡¼ç¹éµ¬ä¸åååªåå¦å©¢åºæ²æææ¹æææ¦§æ¯æ¯æ¯æ¯æ²¸ï¥¨çµçºç ç¢ç§ç§ç²ç·ç¿¡è¥"],["dea1","è¾èè²èè£¨èª¹è­¬è²»ééé£é¼»å¬å¬ªå½¬ææª³æ®¯æµæ¿±ççç­è²§è³é »ææ°·èé¨ä¹äºäºä»ä¼ºä¼¼ä½¿ä¿å¿å²å¸åå£åå£«å¥¢å¨å¯«å¯ºå°å·³å¸«å¾ææ¨ææ¯æ¶æ»æ¢­æ­»æ²æ³æ¸£ççç ç¤¾ç¥ç¥ ç§ç¯©ç´çµ²èèèèèè£è©è©è¬è³èµ¦è¾­éªé£¼é§éºåï¥©æï¥ª"],["dfa1","ååªå±±æ£æ±çç£çç®èé¸é°ä¹·ææ®ºçè©ä¸ï¥«ææ£®æ¸èèè¡«æ·æ¾éé¢¯ä¸å·ååååªåå­å°å³ å¸¸åºåº å»æ³æ¡æ©¡æ¹ç½ççç¸ç¥¥ç®±ç¿è£³è§´è©³è±¡è³éå¡ç½è³½åï¥¬ç©¡ç´¢è²ç²çç¥ï¥­ç¬å¢å£»å¶¼åºåº¶å¾æææ¿ææææ¸æ æ£²ççç­®çµ®ç·ç½²"],["e0a1","è¥èè¯è¥¿èªéé¤é»é¼ å¤å¥­å¸­æææ³ææ±æ·æ½ç³ç¢©èéé«ä»åååå¬å®£ææ¾ææ¸²ç½çççç¿ç¬ç¦ªç·ç¹ç¾¨èºè³è¹èè¬è©µè·£é¸éé¥é¥é®®å¨å±æ¥æ³æ´©æ¸«èèè¤»è¨­èªªéªé½§å¡æ¹æ®²çºè¾è´ééææ¶ç®ï¥®åå§å®¬æ§æºæææç©ç¹ççç­¬"],["e1a1","èè²è¥èª éä¸å¢æ­²æ´ç¨ç¬¹ç´°ï¥¯è²°å¬å¯å¡å®µå°å°å·¢ææææ­æ¢³æ²¼æ¶æº¯çç¤çç¦çççç¬ç¯ ç°«ç´ ç´¹è¬è­èè¨´éé¡éµé·é¶é¨·ä¿å±¬ææ¶ç²çºè¬è´éå­«å·½æèéé£¡çå®ææ¾æ·è¨èª¦éé å·ï¥°çç¢éè¡°éä¿®åå½ååå£½å«å®å²«å³å¸¥æ"],["e2a1","æææææ¶æ¸æ¨¹æ®æ°´æ´æ¼±ç§ç©ç¸çç²ç¦ç¡ç§ç©ç«ªç²¹ç¶ç¶¬ç¹¡ç¾è©è±èèèªè¢èª°è®è¼¸ééé¬éé¹éé§é¨ééé é¦é«é¬åå¡¾å¤å­°å®¿æ·æ½çç¡ç¹èè½å·¡å¾å¾ªææ¬æ æ¥¯æ©æ®æ´µæ·³ç£ç¾ç¬ç­ç´è£èèè´è£è©¢è«ééé é¦´æè¡è¿°é¥å´å´§"],["e3a1","åµ©çèè¨æ¿æ¾ç¿è¤¶è¥²ä¸ä¹å§ååæ¿æç¹©è éä¾åå¶å§åª¤å°¸å±å±å¸å¼ææ½æ¯ææ¾æ´çç¢ç¤ºç¿èèè¦è©¦è©©è«¡è±è±ºå´å¯å¼æ¯æ­æ¤æ®æ¹çç¯èè­è»¾é£é£¾ä¼¸ä¾ä¿¡å»å¨ å®¸æ¼æ°æ¨ç¼ç³ç¥ç´³èè£èèªèèè¨èº«è¾ï¥±è¿å¤±å®¤å¯¦æå¯©å°å¿æ²"],["e4a1","ï¥²æ·±ççè¯è«¶ä»åï¥³éæ°äºä¿ååå¨¥å³¨æçè½èªè¾è¡è¨é¿éé¤é´éµå å²³å¶½å¹æ¡ææ¡æ¨æ¸¥ééé¡é°é½·å®å²¸æææ¡ç¼ééé¡é®æ¡è¬è»é¼åµå²©å·åºµæçè´éå£æ¼çé´¨ä»°å¤®ææ»æ®ç§§é´¦åååå´æææ¶¯ç¢è¾ééåæ¼ææ¶²ç¸èé¡"],["e5a1","æ«»ç½é¶¯é¸ä¹å»å¶å¤æ¹æ¶æ¤°çºè¶ï¥´éå¼±ï¥µï¥¶ç´è¥è¯è»è¥èºï¥·ä½¯ï¥¸ï¥¹å£¤å­ææææ­æï¥ºæ¥æ¨£æ´çç¬ççç¦³ç©°ï¥»ç¾ï¥¼è¥ï¥½è®éé½ï¥¾é¤åå¾¡æ¼æ¼çç¦¦èªé¦­é­é½¬åæ¶ææªèåå °å½¦çè¨è«ºå­¼èä¿ºå¼å´å¥æ©æ·¹å¶ªæ¥­åäºä½ï¥¿ï¦ï¦å¦ï¦"],["e6a1","ï¦æ­æ±ï¦çµç¤ï¦èèè¹è¼¿è½ï¦é¤ï¦ï¦ï¦äº¦ï¦åå½¹æï¦ï¦ç«ç¹¹è­¯ï¦éé©å¥å §å§¸å¨å®´ï¦å»¶ï¦ï¦ææ»ï¦æ¤½æ²æ²¿æ¶æ¶æ·µæ¼ï¦çç¶çï¦ççï¦ç¡ç¡¯ï¦ç­µç·£ï¦ç¸¯ï¦è¡è»ï¦ï¦ï¦éï¦é³¶ï¦ï¦ï¦ææ¶ï¦ç±ï¦ ï¦¡é±å­ï¦¢ï¦£ï¦¤æï¦¥çç°ç°è¶è"],["e7a1","ï¦¦é»é«¥é¹½æï¦§çèï¦¨ï¦©å¡ï¦ªï¦«å¶¸å½±ï¦¬æ ææ¥¹æ¦®æ°¸æ³³æ¸¶æ½æ¿çç¯ççç°ï¦­çï¦®ççç©çºï¦¯ï¦°è±è© è¿ï¦±éï¦²éï¦³ï¦´ä¹åªï¦µåå¡æ³æ±­æ¿çç¿ç©¢è®èèï¦¶è£è©£è­½è±«ï¦·é³ï¦¸éé äºä¼ä¿å²åå¾å³åå¡¢å¢ºå¥§å¨å¯¤æï¦¹æææ¿æ¤æ¢§æ±æ¾³"],["e8a1","çç¬çç­½èèª¤é°²é¼å±æ²ççéºæº«ç¥çç©©ç¸èåå£æç®çç°ç¿ééé¥æ¸¦ç¦çª©çªªè¥èè¸è¨å©å®å®æ¢¡æ¤æµ£ç©çç¬ç¢ç·©ç¿«èèèè±é®é æ°å¾æºææ±ªçå­å¨æ­ªç®å¤åµ¬å·ç¥çï¦ºï¦»å¥å¹å ¯å¤­å¦å§å¯¥ï¦¼ï¦½å¶¢ææææ¾ï¦¾æï¦¿æ©ï§ç¿ç¤ï§"],["e9a1","çªçª¯ç¹ç¹èè°ï§è¯è¦è¬ éï§éé¥æ¾æ¬²æµ´ç¸è¤¥è¾±ä¿å­åååå¢å®¹åº¸ææ¦æ¶æ¹§æº¶çç¢ç¨ç¬è³è¸èè¸ééï§äºä½å¶åªååå³å®å¯å°¤æææ´ççççç¥ç¦ç¦¹ç´ç¾½èèèè¿ééµéªéé¨é©åå½§æ­æ±æ ¯çç¨¶éé äºï§æ©æ®æ¾çèè¸è"],["eaa1","ééé²é»èé¬±äºçéååå¡ååå£åªå«å¯æ¨æ¿æ´æ²æ´¹æ¹²æºç°ç¿çèè¢è½é ï§é¢é¡é´æè¶éä½ååå±åå§å¨å°æ°ææ¸­ç²çç·¯èèè¦è¿èè¡è¤è¬ééé­ä¹³ä¾ååªï§å¯å©å­ºå®¥å¹¼å¹½åº¾æ æææææ¸æï§ææï§æ¥¡æ¥¢æ²¹æ´§ï§æ¸¸ï§"],["eba1","æ¿¡ç¶ç·ï§çç±ï§çï§ï§ç¶­è¾è¸è£èªè«è«­è¸°è¹éé¾éºééé®ï§ï§å ï§æ¯èè²ï§ï§åå¥«å°¹ï§ï§æ½¤ç§è¤è´ï§ééï§ï§ï§ï§è¿æççµ¨èï§å æ©ææ®·èª¾éé±ä¹åæ·«è­é°é³é£®ææ³£éåæèºé·¹ä¾ååå®ææ¿æ¬æ¤æ¯çç£ç¾©è¤èè»è¡£èª¼"],["eca1","è­°é«äºä»¥ä¼ï§ï§å¤·å§¨ï§å·²å¼å½æ¡ï§ ï§¡ï§¢ï§£ç¾ç¥ï§¤ç°çï§¥ç§»ï§¦èè³èè¡èï§§ï§¨è²½è²³éï§©ï§ªé£´é¤ï§«ï§¬ç·çç¿ç¿ç¿¼è¬äººä»åå°ï§­å½å å§»å¯å¼å¿æ¹®ï§®ï§¯çµªèµï§°èèªï§±é­é·ï§²ï§³ä¸ä½ä½¾å£¹æ¥æº¢é¸é°é¦¹ä»»å£¬å¦å§æï§´ï§µç¨ï§¶èè³å¥å"],["eda1","ï§·ï§¸ï§¹ä»å©å­è¿ä»åºå¨å§å§¿å­å­å­æ£ææ»çç®çç·çµç£ç´«èèªè¨èèè«®è³éä½åºå¼æ«æ¨ç¼ç¸çµç¶½èéééµ²å­±æ£§æ®æ½ºçå²æ«æ½ç®´ç°ªè ¶éä¸ä»å å ´å¢»å£¯å¥¬å°å¸³åºå¼µææ²ææ¨æª£æ¬æ¼¿çï§ºççç« ç²§è¸èè§èè¬è£èèè£è´é¬é·"],["eea1","éååå¨å®°æææ ½æ¢æ¸½æ»ç½ç¸¡è£è²¡è¼é½é½ç­ç®è«éä½ä½å²åå§åºæµæµæ¥®æ¨æ²®æ¸ççªç½ç®¸ç´µè§è¹èè·è©è²¯èºéé¸éé½å£åå«¡å¯ææµæ»´çï§»çç©ç¬ç±ç¸¾ç¿è»è¬«è³èµ¤è·¡è¹è¿ªè¿¹é©éä½ä½ºå³å¨å¸ååªå¡¡å¡¼å¥ å°å±å»ææ°æ æ®¿æ°æ¾±"],["efa1","çç ç°ç¸çç²ç­ç®ç®­ç¯çºè©®è¼¾è½é¿éé¢é«é»é¡é¡«é¤åæªææµç¤ç«ç¯çµ¶å å²¾åºæ¼¸ç¹ç²éé®é»æ¥æºè¶ä¸äºäº­ååµåå§å®å¹åº­å»·å¾ææºæ¿æ´ææ¶æ¸æ¾æ¥¨æªæ­£æ±æ·æ·¨æ¸æ¹çç¡çç½çºçç¢ç¦ç¨ç©½ç²¾ç¶èè¨è«ªè²é­ééé¦éé éé"],["f0a1","éé é¼å¶åå¼å ¤å¸å¼æææ¢¯æ¿ç¥­ç¬¬èèºè£½è«¸è¹éé¤éé½é¡é½ä¿ååå©å²å¼å½«æªææ©ææºæ¹ææ¢æ£æ§½æ¼æ½®ç§ç¥çªçªçºç¥ç¥ç§ç¨ çªç²ç³çµç¹°èè»è¤è©èª¿è¶èºé é­é£é»éé³¥æç°è¶³éå­å°åæçå§å®å¾æ°æ«æ£æ·ç®ç¨®çµç¶ç¸±è«"],["f1a1","è¸ªè¸µé¾éä½åå·¦åº§æ«ç½ªä¸»ä½ä¾åå§èåªå¨å¾å¥å®å·å»ææ±æ±æ ªæ³¨æ´²æ¹æ¾ç·ç çç±ç´ç´¬ç¶¢èèè¨»èªèµ°èºè¼³é±éééé§ç«¹ç²¥ä¿åååå¯¯å³»ææ¨½æµæºæ¿¬çç¯ç«£è ¢é¡éµéé§¿èä¸­ä»²è¡éå½æ«æ¥«æ±èºå¢ææ¾æ¯çççç¹è¸è­è´ä¹åª"],["f2a1","å«å°åå¿æææ¯æ¯æ¨æºææ³æ­¢æ± æ²æ¼¬ç¥ç ¥ç¥ç¥ç´è¢èè³èè·èèªï§¼è´è¶¾é²ç´ç¨ç¨·ç¹è·ååå¡µæ¯æ¢æææ¡­æ¦æ®æ´¥æº±çç¨ç¡çç¹ç¡ççç§¦ç¸ç¸è»è¯è¢è¨ºè³è»«è¾°é²é­é£é³éä¾å±å§ªå«å¸æ¡çç¾ç§©çªè£è­è³ªè·è¿­ææï§½å·æ½ç·è¼¯"],["f3a1","é¶éå¾µæ²æ¾ä¸ä¾ååååµ¯å·®æ¬¡æ­¤ç£ç®ï§¾è¹è»é®ææ¾ççªé¯é¿é½ªæ°æ¾¯ç¦ç¨çç«ç°çºç²²çºè®è´é½é¤é¥å¹å¯æ¦æ­ç´®å­åå¡¹æææºæ¬ç«è®è®åå¡åµå±å¨¼å» å½°æ´æææ¶æ¢æ§æ»æ¼²çç¡çªè¹èèè¼åµå°å¯å¯¨å½©æ¡ç ¦ç¶µèè¡ééµåæµç­"],["f4a1","è²¬åå¦»æ½èåï§¿åå°ºæ½æææ²æ¥æ»ç èè¹ éé»ä»ååå¤©å·ææ³æ·ºçç©¿èè¦è³¤è¸é·é§é¡é¡éå¸å²åå¾¹æ¤æ¾ç¶´è¼è½éµåå°æ²¾æ·»çç»ç°½ç±¤è©¹è«å å¦¾å¸æ·ççç«è«è²¼è¼å»³æ´æ·¸è½èè«éé¯ï¨åæ¿æ¶æ»¯ç· è«¦é®éé«åå¿å¨ææææ¢¢"],["f5a1","æ¤æ¥æ¨µçç¦ç¡ç¤ç¤ç§ç¨èè¸èèèè²è¶é¢éé®ä¿åç­çèè§¸å¯¸å¿æé¨å¢å¡å¯µæ¤ææ ç¸½è°è¥éæ®å¬å´æå¢æ½æ¨æ¤æ¥¸æ¨æ¹«çºç§è»è©è«è¶¨è¿½éééééééé¨¶é°ä¸çç¥ç«ºç­ç¯ç¸®èè¹è¹´è»¸éæ¥æ¤¿çåºæ®é»åå¿ æ²è²è¡è¡·æ´èµè"],["f6a1","è´åå¹å´å¨¶å°±çç¿ èèè­è¶£éé©é·²å´ä»å æ»æ¸¬å±¤ä¾å¤å¤å³å¹æ¥æ¢æ²»æ·ç¾çç´ç¡ç¨ç©ç·ç·»ç½®è´è©è¼éé¦³é½ååé£­è¦ªä¸ææ¼ä¾µå¯¢ææ²æµ¸çç §éé¼èç§¤ç¨±å¿«ä»å¤å¾å¢®å¦¥æ°æææ¶æ¥èµéé¦±é§å¬ååå¼ï¨æï¨æ¢æ«ææ¿æ¿¯ç¢ç¸è¨"],["f7a1","é¸ååå¦å½ææ­çç­ç¶»èªå¥ªè«æ¢çè½è²ªå¡æ­æ¦»å®å¸æ¹¯ï¨è©åå°å¤ªæ ææ®æ±°æ³°ç¬èèè·é°é¢±ï¨ææ¾¤ææåååè¨ææ¡¶ï¨çç­çµ±éå æ§è¿è¤ªéé ¹å¸å¥å¦¬æéé¬ªæç¹éå¡å©å·´ææ­æºæ·æ³¢æ´¾ç¬ç¶ç ´ç½·è­è·é å¤åæ¿çç£è²©è¾¦é"],["f8a1","éªå«å­æä½©åæææ²æµ¿çç½ç¨è¦è²å½­æ¾ç¹è¨æä¾¿åæçç¯ç·¨ç¿©éé­é¨è²¶åªå¹³æ°èè©å å¬å¹£å»¢å¼æèºè½ééä½åååååºåå¸æææ±æï¨æ³¡æµ¦ç±ç ²èè¯èè¡è²è¢è¤ééªé£½é®å¹æ´æççï¨ä¿µå½å½ªæææ¨æ¼ç¢ç¥¨è¡¨è±¹é£é£é©"],["f9a1","åç¨æ¥è«·è±é¢¨é¦®å½¼æ«ç²ç®è¢«é¿éå¹å¼¼å¿æ³çç¢çç­è¾é¦ä¹é¼ä¸ä½å¦å¤å»æ°æ²³çè·è¦è³ééé°å£å­¸èè¬é¶´å¯æ¨ææ±æ±æ¼¢æ¾£çç½ç¿°ééééå²è½å½å«å¸å£åæª»æ¶µç·è¦éé·é¹¹ååçè¤é¤ééäº¢ä¼å§®å«¦å··æææ­æ¡æ²æ¸¯ç¼¸èèª"],["faa1","ï¨ï¨é äº¥åå³åå¥å­©å®³ææ¥·æµ·ç£è¹è§£è©²è«§éé§­éª¸å¾æ ¸åå¹¸æèè¡äº«åå®ç¦éé¿é¤é¥é¦åå¢èè¨±æ²æ«¶ç»è»æ­éªé©å¥çèµ«é©ä¿å³´å¼¦æ¸ææ³«ç«çç¹ç¾ç©ççµçµ¢ç¸£è·è¡ï¨è³¢éé¡¯å­ç©´è¡é å«ä¿ åå¤¾å³½æ¾æµ¹ç¹èèè¢éé °äº¨ååå"],["fba1","å½¢æ³æ»ççç¯çç©ç©èè¢è¡¡éé¢é£é¦¨å®å½æ æ§æ³èè¹é¯éä¹äºå¼å£å£ºå¥½å²µå¼§æ¶æææ§æ¯«æµ©æ·æ¹æ»¸æ¾æ¿ æ¿©ççç¥çç çç¥ç³ç¸è¡è¦è«è¿èèè´è­·è±ªé¬é é¡¥ææé·å©ææ··æ¸¾ç¿é­å¿½æç¬åå¼æ±æ³æ´ªçç´è¹è¨é´»ååå¬æ¨ºç«çµ"],["fca1","ç¦ç¦¾è±è¯è©±è­è²¨é´ï¨æ´æ«ç¢ºç¢»ç©«ä¸¸åå¥å®¦å¹»æ£ææ­¡æ¥æ¡æ¸ç¥ç°ç´éé©©é°¥æ´»æ»ç¾è±éå°å¹å¾¨ææ¶æ°ææææ¦¥æ³æ¹æ»æ½¢çççç¯ç°§èèééé»å¯åå»»å¾æ¢ææ·æ¦ææªæ·®æ¾®ç°çªç¹ªè¾è´èèª¨è³åç²å®æ©«éå®åå­ææææ¢æ¶æ·"],["fda1","ç»è´éµé©ä¾¯åååå¼ååå¸¿å¾æ½ç¦çéåå³å¡¤å£ççç»è°è¨æè¨å§æçè±ååæ¯å½å¾½æ®æçè«±è¼éº¾ä¼æºçç¦è§æ¤è­é·¸åå¶åæ´¶è¸é»ææ¬£ççåå±¹ç´è¨æ¬ æ¬½æ­å¸æ°æ´½ç¿èåååå«åå§¬å¬å¸æææ±ææ¦çç¹çºç§ç¦§ç¨ç¾²è©°"]]},function(t,e){t.exports=[["8740","ä°ä°²ää¦ä¸ð§§äµ·ä³ð§²±ä³¢ð§³ã®ä¶ää±ä±ð¤¿ð£ð§ð¦ºð§ä±ðªäää²ð§±¬ä´äª¤ä¡ð¦¬£ç¥ð¥©ð¡©£ð£¸ð£½¡æå»"],["8767","ç¶å¤ð¨®¹ã·´é´ð§¯¯å¯ð¡µåª¤ã¥ð©º°å«å®·å³¼æ®èð©¥ç¡çã¡µð¡µð£ð¦¡ã»¬"],["87a1","ð¥£ã«µç«¼é¾ð¤¡ð¨¤ð£ªð ªð£äèé¾é¯ä¤°èå¢ééç§ç¨²æ æ¨©è¢çç¯æç¨¬åéã¦çð¥¶¹çé¿å³ä¤¯åä±ð£å ç©²ð§­¥è®ä®ð¦ºäð¥¶ç®®ð¢¼é¿ð¢ð¢ð¢é¿èð£»ä´é¿ä¡ðª·¿æç®é¿"],["8840","ã",4,"ð ãð ð ããð ð¡¿¨ãð ããããð ããÄÃÇÃÄÃÄÃÅÃÇÃà¿¿ÃÌáº¾à¿¿ÃÌá»ÃÄÃ¡ÇÃ ÉÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇ"],["88a1","ÇÃ¼à¿¿ÃªÌáº¿à¿¿ÃªÌá»ÃªÉ¡ââ"],["8940","ðª©ð¡"],["8943","æ"],["8946","ä¸½æ»éµé"],["894c","ð§µæä¼ä¼¨ä¾¨åå´åå¤å¡å¨å»åååå¢å£°å¤å¤å¤²å¤´å­¦å®å®å²åºæ»ææ¾æ æ¡¥æµç¼çµçº¤çº¬çººç»ç»ç»ç¼ç¼·èºèè¯è§è®¾è¯¢è½¦è½§è½®"],["89a1","çç³¼ç·æ¥ç«å§"],["89ab","éç¢¸éè¼"],["89b0","è´è¶ð §§"],["89b5","èé»ä³é·é¸ä°¾ð©·¶ð§é¸ðª³ã"],["89c1","æºè¾ç"],["89c5","ä¤é©¬éªé¾ç¦ð¨¬ð¡·ð ð¢«¦ä¸¤äºäºäºäº¿ä»«ä¼·ãä¾½ã¹ååã½ãã¥åå¤åå¼åäºå¹åå§ãå©ãå°ãåå£ã­ã²ãåå£å´å¹åå¯åå£å¨ãå¿ã¥ã¿åã"],["8a40","ð§¶å¥"],["8a43","ð ±ð ´ð¥«åð¢³ã§¬ð è¹ð¤¶¸ð©¥äð¨¾çºð¢°¸ã¨´äð¨ð¦§²ð¤·ªæð µ¼ð ¾´ð ³ð¡´æè¹¾ð ºð °ð ½¤ð¢²©ð¨ð¤"],["8a64","ð µð©©ð¨©ä´ð¤º§ð¢³éª²ã©§ð©´ã¿­ãð¥ð©ð§£ð¢µéµ®é "],["8a76","äð¦¥æ´å£ð¢µð¢¯ð¡·ã§»ð¡¯"],["8aa1","ð¦ð¦ð§¦ æªð¥ð ±è¹¨ð¢¡ð¨­ð ±"],["8aac","ä ð ©ã¿ºå¡³ð¢¶"],["8ab2","ð¤ð ¼ð¦ð ½ð ¶å¹ä»äº"],["8abb","äª´ð¢©¦ð¡èªé£µð ¶æ¹ã§¾ð¢µè·å¡æ¼ã¹"],["8ac9","ðªð ¸ð¢«ð¢³"],["8ace","ð¡ð£§ã¦ã¨ð¨ã¸ð¥¹ð¢åð ¼±ð¢²²ð© ã¼æ°½ð¤¸»"],["8adf","ð§´ð¢ºð¢ðªð¨³ð ¹ºð °´ð¦ ç¾ð¡ð¢ ð¢¤¹ã»ð¥£ð ºð ¾ð ºªã¾ð ¼°ð µð¡ð ¹"],["8af6","ð º«ð ®©ð µð¡ð¡½ã¿¹ð¢æ²ð ¾­"],["8b40","ð£´ð§¹ð¢¯ð µ¾ð µ¿ð¢±ð¢±ã¨ð ºð¡ð ¼®ðª²ð¦­ð¨³ð¨¶ð¨³éªåèå¹"],["8b55","ð©»é°¦éª¶ð§ð¢·®çè­è¬å°ð¦²è´ãåð¨½é¶ð »ºð ¸ð ¹·ð »»ãð¤·«ãð ³å¯ð¢µð¡ð ¸ð ¹¸ð¡¸ð¡ð¨ð¡ð ¹¹ð¤¹ð¢¶¤å©ð¡ð¡ð¡µð¡¶åð ¸"],["8ba1","ð§ð¨ð ¾µð ¹»ð¥¾ãð ¾¶ð¡ð¥ðª½ð¤§ð¡ ºð¤·ð¨¼å¢å¨ãð¥½ç®²å­¨ä ä¬¬é¼§ä§§é°é®ð¥­´ð£½å»ã²åä¸¨å¤ð¡¯ð¯¡¸éð ä¹äº»ã¾å°£å½å¿ã£ºææµæ­ºæ°µæ°ºç¬ç«ä¸¬ç­ð¤£©ç½ç¤»ç³¹ç½ð¦ªã"],["8bde","ð¦èèð¦ð¦¥åè¡¤è§ð§¢²è® è´éé¸é¿é¨ð¨¸é¦é¡µé£é£é¥£ð© é±¼é¸é»æ­¯ï¤ä¸·ð éæ·é¢"],["8c40","å»æ·¾ð©±³é¾¦ã·è¢ð¤ç·å³µä¬ ð¥ãð¥´°æ¢ð¨¨²è¾§é¶çæçºð£ðªã²ð¡¦ä¬ç£¤çå®ð¨äæ©£ðªºä£èð ©¯ç¨ªð©¥ð¨«ªéçå¤ð¢¾é´çð¨§£é¾§çäº£ä¿°å¼ä¸¯ä¼é¾¨å´ç¶å¢å£ð¡¶¶åºåºå¿ð¢æ"],["8ca1","ð£¹æ¤æ©ð£±£æ³¿"],["8ca7","çð¤çã»ð¤¨å¬ç¹è®ð¥²¤ð¥çªç¯¬ç³ç¹¬è¸èé¾©è¢é¾ªèº¹é¾«è¿èé§ é¡é¾¬ð¨¶¹ð¡¿ä±ä¢å¨"],["8cc9","é¡¨æ«ä¶å½"],["8cce","èð¤¥»è¿ð§ä²ð¦µ´åµ»ð¦¬ð¦¾¾é¾­é¾®å®é¾¯æ§ç¹æ¹ç§ã¶äð£ð¢ää¶"],["8ce6","å³ð£¬è«¹å±¸ã´ð£åµ¸é¾²çäð¤¬ð¡¸£ä±·ã¥¸ãð ¤ð¦±è«ä¾´ð ¹å¦¿è¬é¡ð©£ºå¼»"],["8d40","ð ®"],["8d42","ð¢ð¨¥­ää»ð©¹ã¼é¾³ðªµä¸ãä·ð¦±ä¼ð¨²ð§¿ä­ã£ð¥ä¡ää¶ä±»äµ¶äªã¿ð¤¬ã¡ää½ä­å´¾åµåµã·¼ã å¶¤å¶¹ã  ã ¸å¹åº½å¼¥å¾ã¤ã¤ã¤¿ã¥ææ½å³¥ã¦æ·æ¹æã¦¸æ¬ææ¥æã§¸å±"],["8da1","ã¨æ¢æ»ææã©æå´å¡é¾ãªæãª½æ¿æã«²æã¬¢æã­æ¤æ ã­æ¡æ¢ã­²ã­±ã­»æ¤æ¥çæ¥¤æ¦æ¦ã®¼æ§ã¯æ©¥æ©´æ©±æªã¯¬æªã¯²æª«æªµæ«æ«¶æ®æ¯æ¯ªæ±µæ²ªã³æ´æ´æ´¦æ¶ã³¯æ¶¤æ¶±æ¸æ¸æ¸©æºð¨§æº»æ»¢æ»é½¿æ»¨æ»©æ¼¤æ¼´ãµð£½æ¾æ¾¾ãµªãµµç·å²ã¶ç¬ã¶ççç¯ç¿çð ¥äã±ð »"],["8e40","ð£»å¾ð¦»ç¾ð¥ ãæ¦¢ð¨¯©å­´ç©ð¥£¡ð©ç©¥ç©½ð¥¦¬çª»çª°ç«ç«çð¦äç«ç«ç«ªä¯å²ð¥°ç¬ç­ç¬©ð¥ð¥³¾ç®¢ç­¯èð¥®´ð¦±¿ç¯è¡ç®ç®¸ð¥´ ã¶­ð¥±¥èç¯ºç°ç°µð¥³ç±ç²ð¤¢ç²¦æ½ð¤¸ç³ç³ç³¦ç±´ç³³ç³µç³"],["8ea1","ç¹§äð¦¹çµð¦»çç¶ç¶«çµç¶³ç·ð¤ð¦©ç·¤ã´ç·µð¡¹ç·¥ð¨­ç¸ð¦¡ð¦ç¹®çºä«é¬ç¸§ç½ç½ç½ç¤¶ð¦é§¡ç¾ð¦ç¾£ð¡¡ð ¨äð£¦äð¨ºç¿ºð¦èèèè¨è¯ðªð¦³è»è¼è¡ð¢ä¦ð¦¦ð£·£ð¦¨æ¥è§ð¨©èèå¢°ð¢¶æ±¿ð¦ð¤¾¸æ§ð¡èð¡¡æ©ð¤©¥ð¤ªäºè©ð ¬ð¦©ð£µ¾ä¿¹ð¡½è¢è¢ð¦¬ð¤¦§ð£°ð¡³ð£·¸èªæ¤ð¯¦ä"],["8f40","èèèð ¸ð¡´ãð£½ð£è»è¢èð£ºð¦¶£ð¦¬ð¦®ð£ã¶¿èå¬èäð¦¶¥è¬èèã¾ð¦»æ©èãð¦¹ð¢»¯èð¥¯¤è±ã·ä¤æª§èð£²µç¥è¨ð¦®ð¦¹·ð¦¹èèèä èè¤ð¥²äð¥³äè´å«²ð¦ºä§è³äæ¿è"],["8fa1","ð¨¥ð¨»èð§èð¡ð§ð¯¦²äªè¨ãð¡¢¢å·ð§è¾è±ðª¸è®ð¢°§è±èè å¡è¬æ¡äè¡è¡ð§ ð£¶¹ð§¤è¡è¢äè¢´è¢µæè£ç·ð§è¦è¦è¦¦è¦©è¦§è¦¼ð¨¨¥è§§ð§¤¤ð§ª½èªçé¾èªð§©ç«©ð§¬ºð£¾äð§¬¸ç¼è¬è¬ð¥°ð¥¥è¬¿è­è­èª©ð¤©ºè®è®èª¯ð¡äè¡è²ð§µð§¶ð¯§ã¥ð§µè³ð§¶ð§¶½è´è´ð¡¤è³çè´ð¤³ã»èµ·"],["9040","è¶©ð¨ð¡ð¤¦ã­¼ð¨¼ð§ç«§èº­èº¶è»éè¼è¼­ð¨¥ð¨è¾¥éðªð ©è¾³ä¤ªð¨§ð¨½ð£¶»å»¸ð£¢è¿¹ðªð¨¼ð¨ð¢¥ã¦ð¦»é·ð¨¼ð§ª¾é¡ð¨¬ð¨é¨ð¨éð¨¦é®é½é§ã«°é©éç²¬ð¨¤³ð¡ºéæ²éé¢ð¥¹é¹ð¨«ð£²ð¨¬ð¥"],["90a1","ð ´±é¬é«ð¨«¡ð¨¯«çå«ð¨«¢ð¨«¥ä¥¥éð¨¯¬ð¨°¹ð¨¯¿é³éèº¼éé¦é¦é æ¿¶ä¹ð¢ºð¨ð¡¼ð£¸®ä§æ°é»éä¬é£ð¦»æé¶ç£µð¨« é½åä¦¡ð¦²¸ð ´ð¦ð©¯ð©¥ð¤«ð¡¤ð£é±èé¶ä¨ä½äð¤«©çµå­ééð©éå­ð©«éé¥åð£·ð£¼ééé±é¾ééé ð¥¬é®çð©³é¿éµð©ð§¥ºä«é ´é ³é¡é¡¦ã¬ð§µãµð °ð¤"],["9140","ð¥é£é¢·é£é£ä«¿ð¦´§ð¡å°é£¡é£¦é£¬é¸é¤¹ð¤¨©ä­²ð©¡ð©¤é§µé¨é¨»é¨é©ð¥¥ãð©±ð©¯é« é«¢ð©¬é«´ä°é¬é¬­ð¨å´é¬´ð¦¦¨ã£ð£½é­é­ð©´¾å©ð¡¡£é®ð¤é°é¯¿é°ð©¹¨é·ð©¾·ðªðª«ðª¡ðª£ðªéµ¾é¶ðª´é¸æ¢"],["91a1","é·ð¢ðªðª ð¡¤»ðª³é´¹ðª¹ðª´éºéºéºéº¢ä´´éºªéº¯ð¤¤é»ã­ ã§¥ã´ä¼²ã¾ð¨°«é¼é¼ä®é¤ð¦¶¢é¼é¼é¼¹ååé½é¦¸ð©é²è¿é½¢é½©ç«é¾çä®¾ð¤¥µð¤¦»ç·ð¤§¸ð¤ð¤©çð¨¯ð¡£ºç¦ð¨¥¾ð¨¸¶é©é³ð¨©é¬ééð¨¥¬ð¤¹çã»«ç²ç©çð¤³ð¤¸ç¾ð¡¯ç£ð¡¢¾ð£ã»ð¡¢ð¥¯ð¡¸ã¢ð¡»ð¡ ¹ã¡ð¡´ð¡£ð¥½ã£ð¡åð¤¨¥ð¡¾ð¡¨"],["9240","ð¡ð¡¶èð£¦èèð¤¦ð§¥ð£¸±ð¥ð£»»ð§ä´ð£®ð©¦ð¦¼¦æ¹ã³ã°ã·§å¡¬ð¡¤¢æ äð£¿ð¤¡ð¤ð¤ð¦°¡ååð¦±åð ¿ð ®¨ð ¸éð¨¬éä»¸å«ã ð¤¶äº¼ð ¥ð ¿ä½ä¾ð¥å©¨ð «ð ã¦ð ð ãµä¼©ð ð¨º³ð µè«ð äº"],["92a1","ååä¾¢ä¼ð¤¨ð£ºä½å®å¬åä¿ä¿¥åå¼ååååæ¹¶ð£ð£¸¹ð£º¿æµ²ð¡¢ð£ºå¨åð  äð £ð ð èµºð¨ªð åå¤ð ¡³å¡é®äºçð¤ð ° ð¤¦¬ð¡¤æ§ð ¸ç¹ã»ççççä®ð¤ª¼ð¤åãçð¤å´ð åð ¯åéé´é¦ååå¿ã¾å£åªð¨©ð¡ºð¡¯ð¡å¨¬å¦¸éå©¾å«å¨ð¥¥ð¡§³ð¡¡¡ð¤ãµæ´çå¨¡ð¥º"],["9340","åªð¨¯ð é çð¡çä¥²éð¨§»é½ã å°å²å¹å¹ð¡¦ð¡¥¼ð£«®å»å­ð¡¤ð¡¤ãð¡¢ ãð¡¾ãèªð¨©ð¡¶ºð£²ð¨¦¨å¼å¼ð¡¤§ð¡«å©«ð¡»å­èð§½è¡ æ¾ð¢¡ ð¢«å¿ãº¸ð¢¯ð¢¾ð©ð¦½³æð ¾ð ð¢æææµð¢²ð¢´ð¤ð©"],["93a1","æ±ð¤¥ð¢­ªã¨©ð¢¬¢ð£ð©£ªð¢¹¸æ·ðªæ¶æ±æð¤§£ð¢µ§æ¤ð¢²¡æ»æ«æ¥²ã¯´ð£ð£­ð¤¦ð£«åð£ ð¡£ð©¿æð£ð£³ã« äð¥ð¨¬¢ð¥ð¡¼ð¥ð¥¥ç£®ð£ð¡ ªð£´ã¤ð£ð£ð¤æð¦´¤æ«ä®æ°ð§¡°ð¡·«æ£ð£ð£¡æð¥¡²ã£ð£ ºð£¼ã®ð£¢ð£¾çã®æð¤ªæ¢¶æ ã¯æª¾ã¡£ð£ð¤æ¨³æ©æ«æ¬ð¡¤ææ¢æ©ã¯æ©ºæ­ð£¿ð£²é é²ð¨¯ªð¨«"],["9440","éð¨ð¨§é§æ¶¥æ¼ð¤§¬æµ§ð£½¿ã¶æ¸ð¤¼å¨½æ¸å¡æ´¤ç¡ç»ð¤ð¤¶ç±çççð¤ð¤¥å¹ð¤ª¤ð «çºð£»¸ð£ð¤©ð¤¤ð¥¿¡ã¼ãº±ð¤«ð¨°£ð£¼µæ§ã»³çç¼éç·äð¦·ªäçã½£ð¤³ð¤´ã½çç³ðªã¬ç¨ð¨«ð¤¦«ð¤¦ã«»"],["94a1","ã·ð¤©ã»¿ð¤§ð¤£³éºå²éð¨«£ð¡¡¤åð¥¡ð¥§ç¸ð£²ççç»ð¤ð£ã©ð¤£°ç¸çãº¿ð¤ªºð¤«äð¤ªð¦®éð¥ç ç¢ç¢ç£çç¥ð§ð¥£äç¦èç¦¥æ¨­ð£»ºç¨ºç§´ä®ð¡¦ä²éµç§±ð µð¤¦ð ð£¶ºð¡®ãå«ã°ãªð ð °ç«¢å©ð¢µð¥ª¯ð¥ªå¨ð ç£°å¨ªð¥¯ç«¾ä¹ç±ç±­äð¥®³ð¥º¼ð¥º¦ç³ð¤§¹ð¡°ç²ç±¼ç²®æª²ç·ç¸ç·ç½ð¦¡"],["9540","ð¦ð§­ç¶ð¥ºäªð¦­µð ¤æð ð£åð¦ð¦¸ð¤¥¢ç¿ç¬§ð  ¬ð¥«©ð¥µç¬ð¥¸é§¦èé©£æ¨ð£¿ã§¢ð¤§·ð¦­é¨ð¦ èð§§ð¦³äªè·äèèèð¦´é£ð¦©è¢è¥ð¦©èð¦¶§èð§åªä¿ð¡¡å¬«ð¡¢¡å«¤ð¡£è ð¯¦¼ð£¶è ­ð§¢å¨"],["95a1","è¡®ä½è¢è¢¿è£¦è¥¥è¥ð¥è¥ð§ð§ð¨¯µð¨¯ð¨®ð¨§¹ãº­è£äµäã²è¨½è¨ð©å½é«ð¤æç©çð¡¡éµ­è²è³©ð§·å¦çå§°ä®ãè¸ªèº§ð¤°è¼°è½ä´æ±æ¾»ð¢¡ä¢æ½¹æºð¡é¯©ãµð¤¤¯é»éå±ä¤é»éð¨©ä¢ð¨«¼é§ð¨°ð¨°»è¥è¨«éé§ééð¨´´çã»ð¤£¿ð¤©ð¤ªã»§ð£¥éð¨»§ð¨¹¦ð¨¹¥ã»ð¤§­ð¤©¸ð£¿®çç«ã»¼éð©°"],["9640","æ¡ä¨ð©ð¥éé¨ð¨¦ð¨°¦ð¨¬¯ð¦¾éºå¬è­©ä¤¼ç¹ð¤éé±é¤¸ð ¼¦å·ð¨¯ð¤ª²é ð©é¶ð©é¥äð¨­ð¤©§ð¨­¤é£ð¨©ã¼éªä¤¥èé¤»é¥ð§¬ã·½é¦ä­¯é¦ªé©ð¨­¥ð¥£æªé¨¡å«¾é¨¯ð©£±ä®ð©¥é¦¼ä®½ä®é½å¡²ð¡å ¢ð¤¦¸"],["96a1","ð¡¨ç¡ð¢ð£¶¸æ£ãµ½éã¤§æð¢ð¢¥«æé±é±é±»é°µé°é­¿é¯ð©¸­é®ðªµðª¾é´¡ä²®ð¤é¸ä²°é´ðª´ðª­ðª³ð©¤¯é¶¥è½ð¦¸ð¦¿ð¦®è¼ä³ð¦¶¤ð¦ºð¦·°è è®ð¦¸ð£ð¦¤ç§¢ð£ð£ä¤­ð¤§ãµ¢éé¾éð ¿ç¢¹é·éä¿¤ãé¤ð¥ç ½ç¡ç¢¶ç¡ð¡ð£ð¤¥ãä½²æ¿æ¿ççåð¤µå»å£³åé´åç´ã¯ð¤¬ç«ð¦±ð¤¾å¬¨ð¡µð¨©"],["9740","æå«å¨ä¼ð¤ã¬ä­»ð¨§¼é»é¸ð¡£ð ¼è²ð¦³ð¡ð¤ºð¢°¦ð¤å¦ð£¶·ð¦ç¶¨ð¦ð¦¤ð¤¦¹ð¤¦ð¨§ºé¥ç¢ã»©ç´ð¨­£ð¡¢ã»¡ð¤ª³æ«ç³ç»ã»ð¤¨¾ð¤ªð¡ð¤©¦ð §ð¡¤ð¤§¥çð¤¤ç¥ð¤¥¶éç¦éð ¾é±ð¨«ð¨¨éð¨¯§ð¥ä¤µð¨ªç«"],["97a1","ð¤¥ð ³¿å¤ð ð ¯«ð ²¸åç§ð¡ºç·¾ð¡ð¤©ð¡¡ä®éãð¨«ð¤¦­å¦°ð¡¢¿ð¡¢ð§åª¡ã¢ð£µã°éå©¹ð¨ªð¡¡¢é´ã³ð ª´äªã¦å´ãµ©ãµð¡çµä»ð¨æ¸ð©¤ä«æµð§¹ç§æ²¯ã³ð£¿­ð£¸­æ¸æ¼ãµ¯ð µçã¼ãäã»ä¡±å§é®ä¤¾è½ð¨°ð¦¯å åãð¡ç¾ð¤¢ð¤©±ð¢¿£ð¡°ð¢½æ¢¹æ¥§ð¡ð£¥ð§¯´ð£ð¨ªð£ð£ºð¤²æ¨ð£­ð¦²·è¾ää"],["9840","ð¦´¦ð¦µð¦²ð¦¿æ¼ð§è½ð¡ºè­ð¦²ð§ð¡å¦åªð¡³å©¡å©±ð¡¤ð¤¼ã­å§¯ð¡¼ãçéæð¤¥å©®å¨«ð¤æ¨«ð£»¹ð§¶ð¤ð¤çð¤ð¨§¡ä¾°ð¦´¨å³ð¤ð§¹ð¤½æ¨ð¤ð¡ç¦ç³ð¤©ã¶¥æ³ð¯ ¥ð¤©ç¹¥å§«å´¯ã·³å½ð¤©ð¡ç¶¤è¦"],["98a1","åð£«ºð£ð å¾ð £ð ã¿¥ð¡¾ðª¶çð©åµ°çç³ð¨©ð© ä¿ç¿§ççð§«´ç¸ç¹ð¥¶ççãº©ð§¬é¬çµð¤£²ç¡è¶ã»çã»æ²¢å½çççã»¢ã»°ã»´ã»ºçã¼ã½çç­ç²çã½¼ççã¿çã¿ç´ã¿çºð¤½çå£è¦å¡©äçä¹æ¡äãçäªä¯å±ç¾çå£²ç ç¹ç ä¨ç ¹ç¡ç¡ç¡¦èð¥µç¤³æ ç¤²ä"],["9940","äç¦ç¦è¾»ç¨è¾¼ä§çªä²çª¼è¹äç«ç«ää¸¡ç­¢ç­¬ç­»ç°ç°ä äºç±»ç²äç²¸äç³­è¾çð ³ç·ç·ç·ç·½ç¾®ç¾´çäè è¥ç¬¹è®è±èã·å´ç è·è©ä­èçªèèç èäã¬¹èèè"],["99a1","äå ºè¼èä¥èä­è¥å¯èè¤èäè¦è¶èèè¿ä°èé©æ¦èçµè¤æ£èäè¾è¡è¸èè¸èä»è¯è°è ä·è²èè²è¯éèääè¢®è£¿è¤¤è¥è¦ð§¥§è¨©è¨¸èªèª´è±è³è³²è´äå¡è·ä­ä»®è¸ºååè¹±åµèº°ä ·è»è»¢è»¤è»­è»²è¾·è¿è¿è¿é³é§ä¢­é£ éä¤é¨éé«é±é®é¿"],["9a40","é£é«é³é´é½ééé­ä¥ä¥éº¿éåéé­é¾ä¥ªéé¹é­é¢ä¦§é´é³ä§¥æ ä¨¤éä¨µé²éåä«¤æ¨é¢¹ä¬é£±å¡é¤é¤å´é¤é¤·é¥é¥é¥¢ä­°é§ä®é¨¼é¬çªé­©é®é¯é¯±é¯´ä±­é° ã¯ð¡¯éµé°º"],["9aa1","é»¾åé¶é¶½é·é·¼é¶è¾¶é¹»éº¬éº±éº½é»éé»¢é»±é»¸ç«é½ð ð ·ð  æ¤éå¦¬ð å¡éã¹ð ð ð ¶ð¡ºåç³ð «ð «ð ®¿åªð¯ »ð ¯åð ¯»ð °»ð ±ð ±¥ð ±¼æ§ð ²åºð ²µð ³ð ³­ð µ¯ð ¶²ð ·æ¥é°¯è¥ð ¸ð ¸ð »ð ¾ð ¼­ð ¹³å° ð ¾¼å¸ð¡ð¡ð¡¶æð¡»ð¡ð¡ãð¡¿ð¡ð¡¯ð¡»å¤è­ð¡£ð¡µð¡¶è®ð¡·ð¡ð¡ð¡ä¹¸ç»ð¡ ­ð¡¥ª"],["9b40","ð¡¨­ð¡©ð¡°ªð¡±°ð¡²¬ð¡»æð¡»ð¡¼çæ¡ð¢æ§©ãð¢¼ð¢ð¢ºð¢ªð¢¡±ð¢¥è½ð¢¥§ð¢¦ð¢«è¦¥ð¢«¨è¾ ð¢¬é¸ð¢¬¿é¡éª½ð¢±"],["9b62","ð¢²ð¢²·ð¥¯¨ð¢´ð¢´ð¢¶·ð¢¶ð¢¹ð¢½´ð¢¿ð£³ð£¦ð£ð£å¾±ææ¿ð§©¹ð£§ð£³çð¤¦ºçð£ð£çºð å¢µæ"],["9ba1","æ¤ð£ª§ð§ð¥¿¢ð£¸ð£º¹ð§¾ð¢ä£äª¸ð¤ð¨ªð¤®ð¤ð¤»ð¤´ð¤ð¤©ð åð å¦ð¡º¨ã®¾ð£³¿ð¤ð¤åð¤´ã¦ð¤¯ð¨¨ð©§ã¢ð¢è­ð¨­é§ð¤ ð¤£»ð¤¨çð¤«ð ±¸å¥¥ð¤º¥ð¤¾ð ¹è»ð¥¬åå¿ç±ð¥ð¥ð£½ð¤ª§å¼ð¥ð¥®ð¦­éã³ð¥¿ð§²ð¥äð¥¢ð¥¦ð¥ð¤¤¿ð¥¡å¦ã»ð£æð¥¤ä¼ð¨¥ð¥ª®ð¥®ð¥°ð¡¶å¡çæ¾¶ð¦ð§°éð¦²ð¤¾è­¢ð¦ð¦"],["9c40","åµð¦¯·è¼¶ð¦ð¡¤è«ªð¤§¶ð¦ð£¿¯ð¦ä¯ð¦¿ð¦µð¢é¥ð¥¡æå¨§ð¯£ä¾»å¹ð¤¡ð¦¼ä¹ªð¤¤´éæ¶ð¦²½ãè¥·ð¦ð¦¡®ð¦ð¦¡çð¦£ç­ð©ð ¨ð¦¤¦éð¦¤¹ç©é·°ð¦§ºé¨¦ð¦¨­ãð¦©ð ¡ç¦ð¦¨´ð¦­å´¬ð£èð¦®äð¦²¤ç»è¡¥ð¦¶®å¢¶"],["9ca1","ãð¢ð§ð§ã±ð§ð§éð¢ºð§é°ð§¦ð¤§æ°¹éð§ð »¸è §è£µð¢¤¦ð¨³ð¡±æº¸ð¤¨ªð¡  ã¦¤ã¹å°ç§£ä¿æ¶ð©²­ð©¢¤è¥ð§ð§¡åäð¡ã¦¡ð£¯ð¨¨ð¡ç­è¦ð§§ð©¨å©§ä²·ð§¯ð¨¦«ð§§½ð§¨ð§¬ð§µ¦ð¤ºç­ç¥¾ð¨æ¾µðªæ¨ð¨å¢ð¦¸é¿æ ¶éð¨¯ð¨£ð¦¦µð¡­ð£¯ð¨å¶ð¨°°ð¨åé £ð¨¥å¶«ð¤¦æ¾æ§åð¤ª¥ð£¾ã°æ¶ð¨ð¨´ð¨®ð¡¾¡ð¨"],["9d40","ð¨ð¨¯ð¨ð¨ð¨¯ð¨ãð¨¨ð¨ªä£ºæ¦ð¨¥ç éð¨¦¸ä²ð¨§§äð¨§¨ð¨­ð¨¯å§¸ð¨°è¼ð¨¿ð©¬ç­ð©ð©¼ã··ð©ð¤«è¿çåð©§ð©©ð©°ð©¸ð©²ð©£ð©¥ð©¥ªð©§ð©¨¨ð©¬ð©µð©¶çºð©»¸ð©¼£ä²¤éðªç¢ðª¿ä¶éðªä¶ð ²è¾¾å"],["9da1","è¾ºð¢°è¾¹ð¤ªäç¹¿æ½æª±ä»ªã¤ð¨¬¬ð§¢ãºèºð¡µð¨¤ð¨­¬ð¨®ð§¨¾ð¦¯ã·«ð§ð£²·ð¥µð¥¥äºð¥ºð¦å¿ð ¹­è¸å­­ð£ºð¤²ææð¡¶ð¡¡»æ°å­ð¥±åð¥ã·ð©¶ä±½å¢åç½ð¥»å¥µð£µè°ä¸ð ¿ªð µð£ºèéµè´ç»é±çç¹éå²èè·å¥è²èè½åªç¥¢ååð ºãåå±æ±ð¨¢ã­ç´å°åºåå²ð ±ð ²å»ð¥ð ¹¶ð¢±¢"],["9e40","ð º¢éº«çµåð¡µæé­åè³ç¶é¶æ¼æ¹æ¾å©ð¢­é±²ð¢º³åãð ¶§å§åååç¦è¸­ð¦¢ç±è¶è èè£è¶èð¡ä¬çð¤å®èð¦¢å»ð¢´ð§´¯ð¤£ð§µ³ð¦»ð§¶é°ð¡éð£³¼ðª©ð º¬ð »¹ç¦ð¡²¢äð¤¿ð§¿¹ð ¿«äº"],["9ea1","é±æð¢¶ ä£³ð¤ ð©µ¼ð ¿¬ð ¸æ¢ð§£ð ¿­"],["9ead","ð¦ð¡ç£çºéµä¸ä¸ã·å¬æ²²å§ã¬ã§å½ã¥ð¤å¢ð¤­®è­ååªð¥ªð ¥¹"],["9ec5","ã©ð¢¥ç´ð©º¬ä´é¯­ð£³¾ð©¼°ä±ð¤¾©ð©ð©¿èð£¶¶ð§²ð¦³ð£ æ®ç´¥ð£»·ð£¸¬ã¨ªéåã¹´ãºä©ð çå«°ð º¶ç¡ºð§¼®å¢§ä¿å¼é®åµ´çðª´éºä³¡ç¹ã»æð£ð¤²"],["9ef5","åð¡©å§ð¤¥£ð©¸å´ð§®ã­æ±éµ¼"],["9f40","ç±é¬¹åð¡¬å±æð©ð¦µð§¤è­ð ´¨ð¦´¢ð¤«¢ð µ±"],["9f4f","å¾ð¡¼å¶éð¡·éºéç¬é¬å³ç®£æ¨æµé«¿ç¯é¬ªç±¾é¬®ç±ç²é°ç¯¼é¬é¼é°ð¤¤¾é½å³å¯ä¿½éºä¿²å ã¸åå§åå¦·å¸éé¶«è½å©é´é¥éºå¬æ°"],["9fa1","æ¤¬åé°é´ä°»éæ¦å¦çð¡­é§å³"],["9fae","ééé"],["9fb2","éð¨ºæ¿ð¦´£æ«åéçºæð ¼çç±°ð¥°¡ð£³½"],["9fc1","ð¤¤çé®ä¸ªð ³è¾è¡"],["9fc9","å±æ§å­åºåå·µä»æ°±ð ²ä¼¹åååè¶ã¾å¼ã³"],["9fdb","æ­é¼é¾¥é®é ®é¢´éªºéº¨éºçºç¬"],["9fe7","æ¯ºè ç½¸"],["9feb","å ðªè¹·é½"],["9ff0","è·è¹é¸è¸æð¨½è¸¨è¹µç«ð¤©·ç¨¾ç£æ³ªè©§ç"],["a040","ð¨©é¼¦æ³èçðª²ç¡ð¯¡è´ç¢ç±è¬­çç±è³«ð¤ª»è¯å¾ºè¢ ä·"],["a055","ð¡ »ð¦¸"],["a058","è©¾ð¢"],["a05b","æ½ç§é«éµé®é®èµ"],["a063","è è³·ç¬é¡é®°ãç²ä°ç±é¥ð¦æä°éºæ½"],["a073","åæ¯æ¦æ¹æã©æ¢åªð£µæ¤æ ã"],["a0a1","åµð¨¯è¿ð¨¸¹"],["a0a6","åð¡µç¤å²é¸ð ¼»ä¥"],["a0ae","ç¾"],["a0b0","ç³ð¥¼ç³ç¨­è¦è£çµçç²è¦èæè¢ð§èç°èç¤è¦ð¦çð¦»è©èèèè©è²­è­ç«ç¸èãµæ¦²è¶¦"],["a0d4","è¦©ç¨æ¶¹èð¤ç§ã·ç¶æ¤æã³ç¢æ·"],["a0e2","ç½±ð¨¬­çæ©ä­¾å ã°ð£³ð¥»ð§ð¥±ð¡¥ð¡¾ð©¤ð¦·ð§­å³ð¦­ð¨¨ð£·ð ®ð¦¡ð¤¼ä¢å¬ð¦é½éº¦ð¦«"],["a3c0","â",31,"â¡"],["c6a1","â ",9,"â´",9,"â°",9,"ä¸¶ä¸¿äºäº ååå«å¹å¸å©å¶å¤å®å·â¼³å¹¿å»´å½å½¡æ´æ çç¶è¾µé¶Â¨Ëã½ã¾ãããä»ãããã¼ï¼»ï¼½â½ã",23],["c740","ã",58,"ã¡ã¢ã£ã¤"],["c7a1","ã¥",81,"Ð",5,"ÐÐ",4],["c840","Ð",26,"ÑÐ¶",25,"â§â¸â¹ãð ä¹ð åä"],["c8a1","é¾°åé¾±ð§"],["c8cd","ï¿¢ï¿¤ï¼ï¼ã±ââ¡ããâºâºâºâºâºâºâºâºâºâºâºâº¥âº§âºªâº¬âº®âº¶âº¼âº¾â»â»â»â»â»â»â»â»â»£"],["c8f5","ÊÉÉÉÉµÅÃ¸ÅÊÉª"],["f9fe","ï¿­"],["fa40","ð éð ð£¿èäµç¯åµãð¤¥ð¨§¤éð¡§è®ð£³ç ¼ææð¤¤³ð¨¦ªð  ð¦®³ð¡ä¾«ð¢­åð¦´©ð§ªð£ð¤ª±ð¢å©ð ¾å¾¤ð ð æ»ð å½åãºåé¡¬ãèð¤¦¤ð å ð£´åªð ¯¿ð¢¼ð ¥ð¢°ð ð£³ð¡¦å®è½ð ³ð£²å²å¸"],["faa1","é´´åååã³åð¤ª¦å³å¢åå­èæ¤¾ð£­å½»åå¦å¼åµååå¹åç°èå èð¦¬åð¨«åæ»ð£¾ð ¥ð£¿¬å³åð ¯¢æ³ð¡¦æ çæãºªã£ð¡¨çä¢å­å´ð¨«å¾å¿ð¡ð¡ç¦åð¨ªå å«å®ç§ð¥²ã½çååæ±ä¹å¾åãª«ð ®å ð£¿«ð¢¶£å¶ð ±·åç¹å«ææµå­ð¦­ð µ´ååå¤ä¦ð¡ð »ã¶´ð µ"],["fb40","ð¨¦¼ð¢åä³­å¯çåå©åð¡£ð¤ºäð¤µæ³ð¡´å·æð£æ¤æ­ååç£±å±éå¾åå¯å­ð¨­¦ã£ð¡åð¤¥æ±®çåã±ð¦±¾å¦ð¡å ð¡ð¤£å ¦ð¤¯µå¡å¢ªã¡å£ å£ð¡¼å£»å¯¿åðªð¤¸éã¡å¤æ¢¦ãæ¹"],["fba1","ð¡¾å¨¤åð¡èå§ð µð¦²ð¦´ªð¡å§ð¡»ð¡²ð¦¶¦æµ±ð¡ ¨ð¡å§¹ð¦¹åª«å©£ã¦ð¤¦©å©·ãåªç¥å«ð¦¾¡ð¢ã¶ð¡¤ã²ð¡¸åºåå­¶æå­¼ð§¨ää¡ð å¯æ ð¡¨´ð¥§ð ¥å¯³å®ä´å°ð¡­å°çå°ð¡²¥ð¦¬¨å±ä£å²å³©å³¯å¶ð¡·¹ð¡¸·å´å´åµð¡º¤å²ºå·è¼ã ­ð¤¤ð¢ð¢³èã ¶ã¯å¸®æªå¹µå¹ºð¤¼ð ³å¦äº·å»å¨ð¡±å¸å»´ð¨"],["fc40","å»¹å»»ã¢ å»¼æ ¾éå¼ð ð¯¢ã«ä¢®ð¡ºå¼ºð¦¢ð¢å½ð¢±å½£é½ð¦¹®å½²éð¨¨¶å¾§å¶¶ãµð¥ð¡½ªð§¸ð¢¨éð ð¨¨©æ±æð¡¡·ã¥£ã·ã¹åð¢´ç¥±ã¹ææ¤æ³ð¤¦ð¤¦ð§©ç¤å¡åª æ¤è¤æð¯¢¦ð¦»æå´ð æå®ªð£¾·"],["fca1","ð¢¡æð¨®ð©¥æã¤²ð¢¦ð¢£æ£æææð æð¡°æð¢¸æ¬ð¤§ã¨æ¸æ¸ð¡ð¡¼ææ¾ð¢¸¶é ð¤ð¥æ¡æ¥é»ã©¦æºã©ææ¼ð¤¨¨ð¤¨£ææ­æð£¾æµð¤¥ä¬·æäð¡ ©æ æ£å¿ð£æð£·ð£¸æð£¤ð£¥æð ¹µæ§ð¥¦æ³æ´ð¡¸½ð£±ð¨´ð£ð¥çð¢£·é¦¤æð¤ð¤¨¡ã¬«æ§ºð£ææ§æ¢ð¤ð©­æä©æ ¢æ¹é¼æ ð£¦ð¦¶ æ¡"],["fd40","ð£¯æ§¡æ¨ð¨«æ¥³æ£ð£æ¤æ¤ã´²ã¨ð£¼ã®æ¬æ¥¡ð¨©ä¼æ¤¶æ¦ã®¡ð è£åæ§¹ð£ð¢ªæ©ð£æªã¯³æ±æ«ð©ã°æ¬ð ¤£ææ¬µæ­´ð¢æºµð£«ð µð¡¥ãå¡ð£­æ¯¡ð£»¼æ¯æ°·ð¢ð¤£±ð¦­æ±è¦æ±¹ð£¶¼äð£¶½ð¤¤ð¤¤ð¤¤"],["fda1","ð£³ã¥ã³«ð ´²é®ð£¹ð¢ç¾æ ·ð¦´¥ð¦¶¡ð¦·«æ¶æµæ¹¼æ¼ð¤¥¿ð¤ð¦¹²è³ð¦½´åæ²æ¸è®ð¨¬¡æ¸¯ð£¸¯çð£¾ç§æ¹åªð£æ¿¸ãæ¾ð£¸°æ»ºð¡ð¤½äé°æ½æ½ãµæ½´ð©°ã´»æ¾ð¤æ¿ð¤ð¤ð¤¹ð£¿°ð£¾´ð¤¿åð¤ð¤ð¤ð¦çç¾ç§çççççäã·¨ç´çð¤·ç«çåªçç®å²ð¤¥çé¢ð¤ç¬ð¤ð¤¨§ð¤¨¢çºð¨¯¨ç½ç"],["fe40","éçå¤éç¤éð¥ç®çð¤¥´æ¢½ççã¹ð£æ æ¼½ççªç«ð¤ £ð¨ «ä£­ð¨ ç¨ç®ççªð °ºð¦¨®ççð¤¢ð¡§ð¤¨¤æ£ãð¤¦·ð¤¦ð¤§»ç·çæ¤ð¤¨¦ç¹ð ã»çð¢¢­ç ð¨º²çç¤ç¶è¹ç¬ã°ç´é±æ¨¬çä¥ð¤ª"],["fea1","ð¤ð¤©¹ð¨®å­ð¨°ð¡¢çð¡¦çç©çð¨»ð¡©å¯ð¨º¬éççç§ç®ð¤¾ã¼ð¤´çççç´çç¬ççç¯ç¶ð¦µçè¯ã¸ð¦¤ð¦¤ç¡ç¥ç·çð¦¾è¢ð¥ð¥½ð¡¸çç¦çæ¯ð¥ çð£¬ç¯ð¨¥¤ð¨¥¨ð¡ç´ç ð¡¶ð¤¨æ£ç¢¯ç£ç£é¥ç¤®ð¥ ç£ç¤´ç¢±ð§è¾¸è¢ð¨¬«ð¦ð¢ç¦è¤æ¤ç¦ð¥¡ç¦ð§¬¹ç¤¼ç¦©æ¸ªð§¦ãº¨ç§ð©ç§"]]},function(t,e){},function(t,e){},function(t,e,n){(function(){var e,r,i,o,a,s,u={}.hasOwnProperty,l=function(t,e){function n(){this.constructor=t}for(var r in e)u.call(e,r)&&(t[r]=e[r]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t};e=n(171),o=n(47).Number,s=n(26),a=n(106).inspect,i=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return l(e,t),e.prototype.decode=function(t,e){var n,i,a;return i=t.pos,n=s.resolveLength(this.length,t,e),this.length instanceof o&&(e={parent:e,_startOffset:i,_currentOffset:0,_length:n}),a=new r(this.type,n,t,e),t.pos+=n*this.type.size(null,e),a},e.prototype.size=function(t,n){return t instanceof r&&(t=t.toArray()),e.__super__.size.call(this,t,n)},e.prototype.encode=function(t,n,i){return n instanceof r&&(n=n.toArray()),e.__super__.encode.call(this,t,n,i)},e}(e),r=function(){function t(t,e,n,r){this.type=t,this.length=e,this.stream=n,this.ctx=r,this.base=this.stream.pos,this.items=[]}return t.prototype.get=function(t){var e;if(!(t<0||t>=this.length))return null==this.items[t]&&(e=this.stream.pos,this.stream.pos=this.base+this.type.size(null,this.ctx)*t,this.items[t]=this.type.decode(this.stream,this.ctx),this.stream.pos=e),this.items[t]},t.prototype.toArray=function(){var t,e,n,r;for(r=[],t=e=0,n=this.length;e<n;t=e+=1)r.push(this.get(t));return r},t.prototype.inspect=function(){return a(this.toArray())},t}(),t.exports=i}).call(this)},function(t,e){(function(){var e;e=function(){function t(t,e){this.type=t,this.flags=null!=e?e:[]}return t.prototype.decode=function(t){var e,n,r,i,o,a,s;for(i=this.type.decode(t),r={},s=this.flags,n=o=0,a=s.length;o<a;n=++o)null!=(e=s[n])&&(r[e]=!!(i&1<<n));return r},t.prototype.size=function(){return this.type.size()},t.prototype.encode=function(t,e){var n,r,i,o,a,s;for(i=0,s=this.flags,r=o=0,a=s.length;o<a;r=++o)null!=(n=s[r])&&e[n]&&(i|=1<<r);return this.type.encode(t,i)},t}(),t.exports=e}).call(this)},function(t,e){(function(){var e;e=function(){function t(t){this.type=t}return t.prototype.decode=function(t,e){return!!this.type.decode(t,e)},t.prototype.size=function(t,e){return this.type.size(t,e)},t.prototype.encode=function(t,e,n){return this.type.encode(t,+e,n)},t}(),t.exports=e}).call(this)},function(t,e,n){(function(){var e,r,i;i=n(26),r=n(47).Number,e=function(){function t(t){this.length=t}return t.prototype.decode=function(t,e){var n;return n=i.resolveLength(this.length,t,e),t.readBuffer(n)},t.prototype.size=function(t,e){return t?t.length:i.resolveLength(this.length,null,e)},t.prototype.encode=function(t,e,n){return this.length instanceof r&&this.length.encode(t,e.length),t.writeBuffer(e)},t}(),t.exports=e}).call(this)},function(t,e){(function(){var e;e=function(){function t(t,e){this.type=t,this.options=null!=e?e:[]}return t.prototype.decode=function(t){var e;return e=this.type.decode(t),this.options[e]||e},t.prototype.size=function(){return this.type.size()},t.prototype.encode=function(t,e){var n;if(-1===(n=this.options.indexOf(e)))throw new Error("Unknown option in enum: "+e);return this.type.encode(t,n)},t}(),t.exports=e}).call(this)},function(t,e){(function(){var e;e=function(){function t(t,e){this.type=t,this.condition=null==e||e}return t.prototype.decode=function(t,e){var n;if(n=this.condition,"function"==typeof n&&(n=n.call(e,e)),n)return this.type.decode(t,e)},t.prototype.size=function(t,e){var n;return n=this.condition,"function"==typeof n&&(n=n.call(e,e)),n?this.type.size(t,e):0},t.prototype.encode=function(t,e,n){var r;if(r=this.condition,"function"==typeof r&&(r=r.call(n,n)),r)return this.type.encode(t,e,n)},t}(),t.exports=e}).call(this)},function(t,e,n){(function(){var e,r;r=n(26),e=function(){function t(t,e){this.type=t,this.count=null!=e?e:1}return t.prototype.decode=function(t,e){t.pos+=this.size(null,e)},t.prototype.size=function(t,e){var n;return n=r.resolveLength(this.count,null,e),this.type.size()*n},t.prototype.encode=function(t,e,n){return t.fill(0,this.size(e,n))},t}(),t.exports=e}).call(this)},function(t,e,n){(function(e){(function(){var r,i,o;r=n(47).Number,o=n(26),i=function(){function t(t,e){this.length=t,this.encoding=null!=e?e:"ascii"}return t.prototype.decode=function(t,e){var n,r,i,a,s;return i=function(){if(null!=this.length)return o.resolveLength(this.length,t,e);for(n=t.buffer,i=t.length,a=t.pos;a<i&&0!==n[a];)++a;return a-t.pos}.call(this),r=this.encoding,"function"==typeof r&&(r=r.call(e,e)||"ascii"),s=t.readString(i,r),null==this.length&&t.pos<t.length&&t.pos++,s},t.prototype.size=function(t,n){var i,a;return t?(i=this.encoding,"function"==typeof i&&(i=i.call(null!=n?n.val:void 0,null!=n?n.val:void 0)||"ascii"),"utf16be"===i&&(i="utf16le"),a=e.byteLength(t,i),this.length instanceof r&&(a+=this.length.size()),null==this.length&&a++,a):o.resolveLength(this.length,null,n)},t.prototype.encode=function(t,n,i){var o;if(o=this.encoding,"function"==typeof o&&(o=o.call(null!=i?i.val:void 0,null!=i?i.val:void 0)||"ascii"),this.length instanceof r&&this.length.encode(t,e.byteLength(n,o)),t.writeString(n,o),null==this.length)return t.writeUInt8(0)},t}(),t.exports=i}).call(this)}).call(e,n(3).Buffer)},function(t,e,n){(function(){var e,r,i={}.hasOwnProperty,o=function(t,e){function n(){this.constructor=t}for(var r in e)i.call(e,r)&&(t[r]=e[r]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t};e=n(172),r=function(t){function e(t,e){this.type=t,this.versions=null!=e?e:{},"string"==typeof this.type&&(this.versionGetter=new Function("parent","return parent."+this.type),this.versionSetter=new Function("parent","version","return parent."+this.type+" = version"))}return o(e,t),e.prototype.decode=function(t,n,r){var i,o,a;if(null==r&&(r=0),o=this._setup(t,n,r),"string"==typeof this.type?o.version=this.versionGetter(n):o.version=this.type.decode(t),this.versions.header&&this._parseFields(t,o,this.versions.header),null==(i=this.versions[o.version]))throw new Error("Unknown version "+o.version);return i instanceof e?i.decode(t,n):(this._parseFields(t,o,i),null!=(a=this.process)&&a.call(o,t),o)},e.prototype.size=function(t,e,n){var r,i,o,a,s,u;if(null==n&&(n=!0),!t)throw new Error("Not a fixed size");if(r={parent:e,val:t,pointerSize:0},a=0,"string"!=typeof this.type&&(a+=this.type.size(t.version,r)),this.versions.header){u=this.versions.header;for(o in u)s=u[o],null!=s.size&&(a+=s.size(t[o],r))}if(null==(i=this.versions[t.version]))throw new Error("Unknown version "+t.version);for(o in i)s=i[o],null!=s.size&&(a+=s.size(t[o],r));return n&&(a+=r.pointerSize),a},e.prototype.encode=function(t,e,n){var r,i,o,a,s,u,l,c;if(null!=(l=this.preEncode)&&l.call(e,t),r={pointers:[],startOffset:t.pos,parent:n,val:e,pointerSize:0},r.pointerOffset=t.pos+this.size(e,r,!1),"string"!=typeof this.type&&this.type.encode(t,e.version),this.versions.header){c=this.versions.header;for(a in c)u=c[a],null!=u.encode&&u.encode(t,e[a],r)}i=this.versions[e.version];for(a in i)u=i[a],null!=u.encode&&u.encode(t,e[a],r);for(o=0;o<r.pointers.length;)s=r.pointers[o++],s.type.encode(t,s.val,s.parent)},e}(e),t.exports=r}).call(this)},function(t,e,n){(function(){var t,r,i;i=n(26),t=function(){function t(t,e,n){var r,i,o,a;this.offsetType=t,this.type=e,this.options=null!=n?n:{},"void"===this.type&&(this.type=null),null==(r=this.options).type&&(r.type="local"),null==(i=this.options).allowNull&&(i.allowNull=!0),null==(o=this.options).nullValue&&(o.nullValue=0),null==(a=this.options).lazy&&(a.lazy=!1),this.options.relativeTo&&(this.relativeToGetter=new Function("ctx","return ctx."+this.options.relativeTo))}return t.prototype.decode=function(t,e){var n,r,o,a,s,u;return(o=this.offsetType.decode(t,e))===this.options.nullValue&&this.options.allowNull?null:(s=function(){switch(this.options.type){case"local":return e._startOffset;case"immediate":return t.pos-this.offsetType.size();case"parent":return e.parent._startOffset;default:for(n=e;n.parent;)n=n.parent;return n._startOffset||0}}.call(this),this.options.relativeTo&&(s+=this.relativeToGetter(e)),a=o+s,null!=this.type?(u=null,r=function(n){return function(){var r;return null!=u?u:(r=t.pos,t.pos=a,u=n.type.decode(t,e),t.pos=r,u)}}(this),this.options.lazy?new i.PropertyDescriptor({get:r}):r()):a)},t.prototype.size=function(t,e){var n,i;switch(n=e,this.options.type){case"local":case"immediate":break;case"parent":e=e.parent;break;default:for(;e.parent;)e=e.parent}if(null==(i=this.type)){if(!(t instanceof r))throw new Error("Must be a VoidPointer");i=t.type,t=t.value}return t&&e&&(e.pointerSize+=i.size(t,n)),this.offsetType.size()},t.prototype.encode=function(t,e,n){var i,o,a;if(i=n,null==e)return void this.offsetType.encode(t,this.options.nullValue);switch(this.options.type){case"local":o=n.startOffset;break;case"immediate":o=t.pos+this.offsetType.size(e,i);break;case"parent":n=n.parent,o=n.startOffset;break;default:for(o=0;n.parent;)n=n.parent}if(this.options.relativeTo&&(o+=this.relativeToGetter(i.val)),this.offsetType.encode(t,n.pointerOffset-o),null==(a=this.type)){if(!(e instanceof r))throw new Error("Must be a VoidPointer");a=e.type,e=e.value}return n.pointers.push({type:a,val:e,parent:i}),n.pointerOffset+=a.size(e,i)},t}(),r=function(){function t(t,e){this.type=t,this.value=e}return t}(),e.Pointer=t,e.VoidPointer=r}).call(this)},function(t,e,n){t.exports={default:n(329),__esModule:!0}},function(t,e,n){n(330);var r=n(2).Object;t.exports=function(t,e){return r.getOwnPropertyDescriptor(t,e)}},function(t,e,n){var r=n(35),i=n(115).f;n(117)("getOwnPropertyDescriptor",function(){return function(t,e){return i(r(t),e)}})},function(t,e,n){n(57),n(49),t.exports=n(339)},function(t,e,n){"use strict";var r=n(333),i=n(176),o=n(48),a=n(35);t.exports=n(119)(Array,"Array",function(t,e){this._t=a(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,i(1)):"keys"==e?i(0,n):"values"==e?i(0,t[n]):i(0,[n,t[n]])},"values"),o.Arguments=o.Array,r("keys"),r("values"),r("entries")},function(t,e){t.exports=function(){}},function(t,e,n){"use strict";var r=n(75),i=n(56),o=n(78),a={};n(27)(a,n(12)("iterator"),function(){return this}),t.exports=function(t,e,n){t.prototype=r(a,{next:i(1,n)}),o(t,e+" Iterator")}},function(t,e,n){var r=n(35),i=n(76),o=n(180);t.exports=function(t){return function(e,n,a){var s,u=r(e),l=i(u.length),c=o(a,l);if(t&&n!=n){for(;l>c;)if((s=u[c++])!=s)return!0}else for(;l>c;c++)if((t||c in u)&&u[c]===n)return t||c||0;return!t&&-1}}},function(t,e,n){var r=n(20).document;t.exports=r&&r.documentElement},function(t,e,n){var r=n(36),i=n(59),o=n(121)("IE_PROTO"),a=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=i(t),r(t,o)?t[o]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},function(t,e,n){var r=n(120),i=n(114);t.exports=function(t){return function(e,n){var o,a,s=String(i(e)),u=r(n),l=s.length;return u<0||u>=l?t?"":void 0:(o=s.charCodeAt(u),o<55296||o>56319||u+1===l||(a=s.charCodeAt(u+1))<56320||a>57343?t?s.charAt(u):o:t?s.slice(u,u+2):a-56320+(o-55296<<10)+65536)}}},function(t,e,n){var r=n(28),i=n(124);t.exports=n(2).getIterator=function(t){var e=i(t);if("function"!=typeof e)throw TypeError(t+" is not iterable!");return r(e.call(t))}},function(t,e,n){t.exports={default:n(341),__esModule:!0}},function(t,e,n){n(342),t.exports=n(2).Object.freeze},function(t,e,n){var r=n(19),i=n(79).onFreeze;n(117)("freeze",function(t){return function(e){return t&&r(e)?t(i(e)):e}})},function(t,e,n){n(49),n(57),t.exports=n(127).f("iterator")},function(t,e,n){t.exports={default:n(345),__esModule:!0}},function(t,e,n){n(346),n(130),n(349),n(350),t.exports=n(2).Symbol},function(t,e,n){"use strict";var r=n(20),i=n(36),o=n(17),a=n(6),s=n(177),u=n(79).KEY,l=n(37),c=n(122),f=n(78),h=n(77),d=n(12),p=n(127),g=n(128),v=n(347),y=n(182),b=n(28),m=n(19),w=n(35),x=n(116),_=n(56),k=n(75),S=n(348),C=n(115),A=n(18),P=n(58),E=C.f,O=A.f,T=S.f,I=r.Symbol,B=r.JSON,L=B&&B.stringify,R=d("_hidden"),M=d("toPrimitive"),F={}.propertyIsEnumerable,D=c("symbol-registry"),z=c("symbols"),N=c("op-symbols"),W=Object.prototype,U="function"==typeof I,j=r.QObject,G=!j||!j.prototype||!j.prototype.findChild,H=o&&l(function(){return 7!=k(O({},"a",{get:function(){return O(this,"a",{value:7}).a}})).a})?function(t,e,n){var r=E(W,e);r&&delete W[e],O(t,e,n),r&&t!==W&&O(W,e,r)}:O,V=function(t){var e=z[t]=k(I.prototype);return e._k=t,e},q=U&&"symbol"==typeof I.iterator?function(t){return"symbol"==typeof t}:function(t){return t instanceof I},Z=function(t,e,n){return t===W&&Z(N,e,n),b(t),e=x(e,!0),b(n),i(z,e)?(n.enumerable?(i(t,R)&&t[R][e]&&(t[R][e]=!1),n=k(n,{enumerable:_(0,!1)})):(i(t,R)||O(t,R,_(1,{})),t[R][e]=!0),H(t,e,n)):O(t,e,n)},Y=function(t,e){b(t);for(var n,r=v(e=w(e)),i=0,o=r.length;o>i;)Z(t,n=r[i++],e[n]);return t},X=function(t,e){return void 0===e?k(t):Y(k(t),e)},K=function(t){var e=F.call(this,t=x(t,!0));return!(this===W&&i(z,t)&&!i(N,t))&&(!(e||!i(this,t)||!i(z,t)||i(this,R)&&this[R][t])||e)},J=function(t,e){if(t=w(t),e=x(e,!0),t!==W||!i(z,e)||i(N,e)){var n=E(t,e);return!n||!i(z,e)||i(t,R)&&t[R][e]||(n.enumerable=!0),n}},Q=function(t){for(var e,n=T(w(t)),r=[],o=0;n.length>o;)i(z,e=n[o++])||e==R||e==u||r.push(e);return r},$=function(t){for(var e,n=t===W,r=T(n?N:w(t)),o=[],a=0;r.length>a;)!i(z,e=r[a++])||n&&!i(W,e)||o.push(z[e]);return o};U||(I=function(){if(this instanceof I)throw TypeError("Symbol is not a constructor!");var t=h(arguments.length>0?arguments[0]:void 0),e=function(n){this===W&&e.call(N,n),i(this,R)&&i(this[R],t)&&(this[R][t]=!1),H(this,t,_(1,n))};return o&&G&&H(W,t,{configurable:!0,set:e}),V(t)},s(I.prototype,"toString",function(){return this._k}),C.f=J,A.f=Z,n(183).f=S.f=Q,n(73).f=K,n(129).f=$,o&&!n(74)&&s(W,"propertyIsEnumerable",K,!0),p.f=function(t){return V(d(t))}),a(a.G+a.W+a.F*!U,{Symbol:I});for(var tt="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),et=0;tt.length>et;)d(tt[et++]);for(var nt=P(d.store),rt=0;nt.length>rt;)g(nt[rt++]);a(a.S+a.F*!U,"Symbol",{for:function(t){return i(D,t+="")?D[t]:D[t]=I(t)},keyFor:function(t){if(!q(t))throw TypeError(t+" is not a symbol!");for(var e in D)if(D[e]===t)return e},useSetter:function(){G=!0},useSimple:function(){G=!1}}),a(a.S+a.F*!U,"Object",{create:X,defineProperty:Z,defineProperties:Y,getOwnPropertyDescriptor:J,getOwnPropertyNames:Q,getOwnPropertySymbols:$}),B&&a(a.S+a.F*(!U||l(function(){var t=I();return"[null]"!=L([t])||"{}"!=L({a:t})||"{}"!=L(Object(t))})),"JSON",{stringify:function(t){for(var e,n,r=[t],i=1;arguments.length>i;)r.push(arguments[i++]);if(n=e=r[1],(m(e)||void 0!==t)&&!q(t))return y(e)||(e=function(t,e){if("function"==typeof n&&(e=n.call(this,t,e)),!q(e))return e}),r[1]=e,L.apply(B,r)}}),I.prototype[M]||n(27)(I.prototype,M,I.prototype.valueOf),f(I,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(t,e,n){var r=n(58),i=n(129),o=n(73);t.exports=function(t){var e=r(t),n=i.f;if(n)for(var a,s=n(t),u=o.f,l=0;s.length>l;)u.call(t,a=s[l++])&&e.push(a);return e}},function(t,e,n){var r=n(35),i=n(183).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(t){try{return i(t)}catch(t){return a.slice()}};t.exports.f=function(t){return a&&"[object Window]"==o.call(t)?s(t):i(r(t))}},function(t,e,n){n(128)("asyncIterator")},function(t,e,n){n(128)("observable")},function(t,e,n){t.exports={default:n(352),__esModule:!0}},function(t,e,n){n(353),t.exports=n(2).Object.keys},function(t,e,n){var r=n(59),i=n(58);n(117)("keys",function(){return function(t){return i(r(t))}})},function(t,e,n){n(355);var r=n(2).Object;t.exports=function(t,e,n){return r.defineProperty(t,e,n)}},function(t,e,n){var r=n(6);r(r.S+r.F*!n(17),"Object",{defineProperty:n(18).f})},function(t,e,n){t.exports={default:n(357),__esModule:!0}},function(t,e,n){n(130),n(49),n(57),n(358),n(363),n(365),n(366),t.exports=n(2).Map},function(t,e,n){"use strict";var r=n(186),i=n(132);t.exports=n(191)("Map",function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}},{get:function(t){var e=r.getEntry(i(this,"Map"),t);return e&&e.v},set:function(t,e){return r.def(i(this,"Map"),0===t?0:t,e)}},r,!0)},function(t,e,n){"use strict";var r=n(20),i=n(2),o=n(18),a=n(17),s=n(12)("species");t.exports=function(t){var e="function"==typeof i[t]?i[t]:r[t];a&&e&&!e[s]&&o.f(e,s,{configurable:!0,get:function(){return this}})}},function(t,e,n){var r=n(38),i=n(112),o=n(59),a=n(76),s=n(361);t.exports=function(t,e){var n=1==t,u=2==t,l=3==t,c=4==t,f=6==t,h=5==t||f,d=e||s;return function(e,s,p){for(var g,v,y=o(e),b=i(y),m=r(s,p,3),w=a(b.length),x=0,_=n?d(e,w):u?d(e,0):void 0;w>x;x++)if((h||x in b)&&(g=b[x],v=m(g,x,y),t))if(n)_[x]=v;else if(v)switch(t){case 3:return!0;case 5:return g;case 6:return x;case 2:_.push(g)}else if(c)return!1;return f?-1:l||c?c:_}}},function(t,e,n){var r=n(362);t.exports=function(t,e){return new(r(t))(e)}},function(t,e,n){var r=n(19),i=n(182),o=n(12)("species");t.exports=function(t){var e;return i(t)&&(e=t.constructor,"function"!=typeof e||e!==Array&&!i(e.prototype)||(e=void 0),r(e)&&null===(e=e[o])&&(e=void 0)),void 0===e?Array:e}},function(t,e,n){var r=n(6);r(r.P+r.R,"Map",{toJSON:n(192)("Map")})},function(t,e,n){var r=n(80);t.exports=function(t,e){var n=[];return r(t,!1,n.push,n,e),n}},function(t,e,n){n(193)("Map")},function(t,e,n){n(194)("Map")},function(t,e,n){"use strict";e.__esModule=!0;var r=n(126),i=function(t){return t&&t.__esModule?t:{default:t}}(r);e.default=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!==(void 0===e?"undefined":(0,i.default)(e))&&"function"!=typeof e?t:e}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var i=n(369),o=r(i),a=n(373),s=r(a),u=n(126),l=r(u);e.default=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+(void 0===e?"undefined":(0,l.default)(e)));t.prototype=(0,s.default)(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(o.default?(0,o.default)(t,e):t.__proto__=e)}},function(t,e,n){t.exports={default:n(370),__esModule:!0}},function(t,e,n){n(371),t.exports=n(2).Object.setPrototypeOf},function(t,e,n){var r=n(6);r(r.S,"Object",{setPrototypeOf:n(372).set})},function(t,e,n){var r=n(19),i=n(28),o=function(t,e){if(i(t),!r(e)&&null!==e)throw TypeError(e+": can't set as prototype!")};t.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(t,e,r){try{r=n(38)(Function.call,n(115).f(Object.prototype,"__proto__").set,2),r(t,[]),e=!(t instanceof Array)}catch(t){e=!0}return function(t,n){return o(t,n),e?t.__proto__=n:r(t,n),t}}({},!1):void 0),check:o}},function(t,e,n){t.exports={default:n(374),__esModule:!0}},function(t,e,n){n(375);var r=n(2).Object;t.exports=function(t,e){return r.create(t,e)}},function(t,e,n){var r=n(6);r(r.S,"Object",{create:n(75)})},function(t,e,n){t.exports={default:n(377),__esModule:!0}},function(t,e,n){n(378);var r=n(2).Object;t.exports=function(t,e){return r.defineProperties(t,e)}},function(t,e,n){var r=n(6);r(r.S+r.F*!n(17),"Object",{defineProperties:n(178)})},function(t,e,n){function r(t){return null===t||void 0===t}function i(t){return!(!t||"object"!=typeof t||"number"!=typeof t.length)&&("function"==typeof t.copy&&"function"==typeof t.slice&&!(t.length>0&&"number"!=typeof t[0]))}function o(t,e,n){var o,c;if(r(t)||r(e))return!1;if(t.prototype!==e.prototype)return!1;if(u(t))return!!u(e)&&(t=a.call(t),e=a.call(e),l(t,e,n));if(i(t)){if(!i(e))return!1;if(t.length!==e.length)return!1;for(o=0;o<t.length;o++)if(t[o]!==e[o])return!1;return!0}try{var f=s(t),h=s(e)}catch(t){return!1}if(f.length!=h.length)return!1;for(f.sort(),h.sort(),o=f.length-1;o>=0;o--)if(f[o]!=h[o])return!1;for(o=f.length-1;o>=0;o--)if(c=f[o],!l(t[c],e[c],n))return!1;return typeof t==typeof e}var a=Array.prototype.slice,s=n(380),u=n(381),l=t.exports=function(t,e,n){return n||(n={}),t===e||(t instanceof Date&&e instanceof Date?t.getTime()===e.getTime():!t||!e||"object"!=typeof t&&"object"!=typeof e?n.strict?t===e:t==e:o(t,e,n))}},function(t,e){function n(t){var e=[];for(var n in t)e.push(n);return e}e=t.exports="function"==typeof Object.keys?Object.keys:n,e.shim=n},function(t,e){function n(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function r(t){return t&&"object"==typeof t&&"number"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,"callee")&&!Object.prototype.propertyIsEnumerable.call(t,"callee")||!1}var i="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();e=t.exports=i?n:r,e.supported=n,e.unsupported=r},function(t,e,n){t.exports={default:n(383),__esModule:!0}},function(t,e,n){n(384),t.exports=n(2).Object.assign},function(t,e,n){var r=n(6);r(r.S+r.F,"Object",{assign:n(385)})},function(t,e,n){"use strict";var r=n(58),i=n(129),o=n(73),a=n(59),s=n(112),u=Object.assign;t.exports=!u||n(37)(function(){var t={},e={},n=Symbol(),r="abcdefghijklmnopqrst";return t[n]=7,r.split("").forEach(function(t){e[t]=t}),7!=u({},t)[n]||Object.keys(u({},e)).join("")!=r})?function(t,e){for(var n=a(t),u=arguments.length,l=1,c=i.f,f=o.f;u>l;)for(var h,d=s(arguments[l++]),p=c?r(d).concat(c(d)):r(d),g=p.length,v=0;g>v;)f.call(d,h=p[v++])&&(n[h]=d[h]);return n}:u},function(t,e,n){t.exports={default:n(387),__esModule:!0}},function(t,e,n){n(388),t.exports=n(2).String.fromCodePoint},function(t,e,n){var r=n(6),i=n(180),o=String.fromCharCode,a=String.fromCodePoint;r(r.S+r.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(t){for(var e,n=[],r=arguments.length,a=0;r>a;){if(e=+arguments[a++],i(e,1114111)!==e)throw RangeError(e+" is not a valid code point");n.push(e<65536?o(e):o(55296+((e-=65536)>>10),e%1024+56320))}return n.join("")}})},function(t,e,n){t.exports={default:n(390),__esModule:!0}},function(t,e,n){n(49),n(391),t.exports=n(2).Array.from},function(t,e,n){"use strict";var r=n(38),i=n(6),o=n(59),a=n(189),s=n(190),u=n(76),l=n(392),c=n(124);i(i.S+i.F*!n(393)(function(t){Array.from(t)}),"Array",{from:function(t){var e,n,i,f,h=o(t),d="function"==typeof this?this:Array,p=arguments.length,g=p>1?arguments[1]:void 0,v=void 0!==g,y=0,b=c(h);if(v&&(g=r(g,p>2?arguments[2]:void 0,2)),void 0==b||d==Array&&s(b))for(e=u(h.length),n=new d(e);e>y;y++)l(n,y,v?g(h[y],y):h[y]);else for(f=b.call(h),n=new d;!(i=f.next()).done;y++)l(n,y,v?a(f,g,[i.value,y],!0):i.value);return n.length=y,n}})},function(t,e,n){"use strict";var r=n(18),i=n(56);t.exports=function(t,e,n){e in t?r.f(t,e,i(0,n)):t[e]=n}},function(t,e,n){var r=n(12)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,function(){throw 2})}catch(t){}t.exports=function(t,e){if(!e&&!i)return!1;var n=!1;try{var o=[7],a=o[r]();a.next=function(){return{done:n=!0}},o[r]=function(){return a},t(o)}catch(t){}return n}},function(t,e,n){t.exports={default:n(395),__esModule:!0}},function(t,e,n){n(130),n(49),n(57),n(396),n(397),n(398),n(399),t.exports=n(2).Set},function(t,e,n){"use strict";var r=n(186),i=n(132);t.exports=n(191)("Set",function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}},{add:function(t){return r.def(i(this,"Set"),t=0===t?0:t,t)}},r)},function(t,e,n){var r=n(6);r(r.P+r.R,"Set",{toJSON:n(192)("Set")})},function(t,e,n){n(193)("Set")},function(t,e,n){n(194)("Set")},function(t,e,n){(function(t){var r,i,o,a,s,u,l,c,f,h,d,p,g,v,y,b,m,w,x;y=n(133),m=n(401),x=new y(t("","base64")),w=Math.log2||function(t){return Math.log(t)/Math.LN2},b=function(t){return w(t)+1|0},r=b(m.categories.length-1),a=b(m.combiningClasses.length-1),p=b(m.scripts.length-1),l=b(m.eaw.length-1),h=10,o=a+p+l+h,u=p+l+h,v=l+h,f=h,i=(1<<r)-1,s=(1<<a)-1,g=(1<<p)-1,c=(1<<l)-1,d=(1<<h)-1,e.getCategory=function(t){var e;return e=x.get(t),m.categories[e>>o&i]},e.getCombiningClass=function(t){var e;return e=x.get(t),m.combiningClasses[e>>u&s]},e.getScript=function(t){var e;return e=x.get(t),m.scripts[e>>v&g]},e.getEastAsianWidth=function(t){var e;return e=x.get(t),m.eaw[e>>f&c]},e.getNumericValue=function(t){var e,n,r,i,o;if(o=x.get(t),0===(r=o&d))return null;if(r<=50)return r-1;if(r<480)return i=(r>>4)-12,e=1+(15&r),i/e;if(r<768){for(o=(r>>5)-14,n=2+(31&r);n>0;)o*=10,n--;return o}for(o=(r>>2)-191,n=1+(3&r);n>0;)o*=60,n--;return o},e.isAlphabetic=function(t){var n;return"Lu"===(n=e.getCategory(t))||"Ll"===n||"Lt"===n||"Lm"===n||"Lo"===n||"Nl"===n},e.isDigit=function(t){return"Nd"===e.getCategory(t)},e.isPunctuation=function(t){var n;return"Pc"===(n=e.getCategory(t))||"Pd"===n||"Pe"===n||"Pf"===n||"Pi"===n||"Po"===n||"Ps"===n},e.isLowerCase=function(t){return"Ll"===e.getCategory(t)},e.isUpperCase=function(t){return"Lu"===e.getCategory(t)},e.isTitleCase=function(t){return"Lt"===e.getCategory(t)},e.isWhiteSpace=function(t){var n;return"Zs"===(n=e.getCategory(t))||"Zl"===n||"Zp"===n},e.isBaseForm=function(t){var n;return"Nd"===(n=e.getCategory(t))||"No"===n||"Nl"===n||"Lu"===n||"Ll"===n||"Lt"===n||"Lm"===n||"Lo"===n||"Me"===n||"Mc"===n},e.isMark=function(t){var n;return"Mn"===(n=e.getCategory(t))||"Me"===n||"Mc"===n}}).call(e,n(3).Buffer)},function(t,e){t.exports={categories:["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],combiningClasses:["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],scripts:["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Tirhuta","Siddham","Modi","Takri","Ahom","Warang_Citi","Pau_Cin_Hau","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Miao","Duployan","SignWriting","Mende_Kikakui"],eaw:["N","Na","A","W","H","F"]}},function(t,e,n){"use strict";function r(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var i=r(n(403)),o=r(n(118)),a=r(n(407)),s=r(n(408)),u=r(n(181)),l=r(n(184)),c=r(n(185)),f=function(){function t(e){l(this,t),this.stateTable=e.stateTable,this.accepting=e.accepting,this.tags=e.tags}return c(t,[{key:"match",value:function(t){var e=this;return a({},u,s.mark(function n(){var r,i,o,a,u,l;return s.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:r=1,i=null,o=null,a=null,u=0;case 5:if(!(u<t.length)){n.next=21;break}if(l=t[u],a=r,0!==(r=e.stateTable[r][l])){n.next=15;break}if(!(null!=i&&null!=o&&o>=i)){n.next=13;break}return n.next=13,[i,o,e.tags[a]];case 13:r=e.stateTable[1][l],i=null;case 15:0!==r&&null==i&&(i=u),e.accepting[r]&&(o=u),0===r&&(r=1);case 18:u++,n.next=5;break;case 21:if(!(null!=i&&null!=o&&o>=i)){n.next=24;break}return n.next=24,[i,o,e.tags[r]];case 24:case"end":return n.stop()}},n,this)}))}},{key:"apply",value:function(t,e){var n=!0,r=!1,a=void 0;try{for(var s,u=o(this.match(t));!(n=(s=u.next()).done);n=!0){var l=i(s.value,3),c=l[0],f=l[1],h=l[2],d=!0,p=!1,g=void 0;try{for(var v,y=o(h);!(d=(v=y.next()).done);d=!0){var b=v.value;"function"==typeof e[b]&&e[b](c,f,t.slice(c,f+1))}}catch(t){p=!0,g=t}finally{try{!d&&y.return&&y.return()}finally{if(p)throw g}}}}catch(t){r=!0,a=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw a}}}}]),t}();t.exports=f},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var i=n(404),o=r(i),a=n(118),s=r(a);e.default=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var a,u=(0,s.default)(t);!(r=(a=u.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&u.return&&u.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if((0,o.default)(Object(e)))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()},function(t,e,n){t.exports={default:n(405),__esModule:!0}},function(t,e,n){n(57),n(49),t.exports=n(406)},function(t,e,n){var r=n(125),i=n(12)("iterator"),o=n(48);t.exports=n(2).isIterable=function(t){var e=Object(t);return void 0!==e[i]||"@@iterator"in e||o.hasOwnProperty(r(e))}},function(t,e,n){"use strict";e.__esModule=!0;var r=n(131),i=function(t){return t&&t.__esModule?t:{default:t}}(r);e.default=function(t,e,n){return e in t?(0,i.default)(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},function(t,e,n){t.exports=n(409)},function(t,e,n){var r=function(){return this}()||Function("return this")(),i=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,o=i&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,t.exports=n(410),i)r.regeneratorRuntime=o;else try{delete r.regeneratorRuntime}catch(t){r.regeneratorRuntime=void 0}},function(t,e){!function(e){"use strict";function n(t,e,n,r){var o=e&&e.prototype instanceof i?e:i,a=Object.create(o.prototype),s=new d(r||[]);return a._invoke=l(t,n,s),a}function r(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function i(){}function o(){}function a(){}function s(t){["next","throw","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function u(t){function e(n,i,o,a){var s=r(t[n],t,i);if("throw"!==s.type){var u=s.arg,l=u.value;return l&&"object"==typeof l&&b.call(l,"__await")?Promise.resolve(l.__await).then(function(t){e("next",t,o,a)},function(t){e("throw",t,o,a)}):Promise.resolve(l).then(function(t){u.value=t,o(u)},a)}a(s.arg)}function n(t,n){function r(){return new Promise(function(r,i){e(t,n,r,i)})}return i=i?i.then(r,r):r()}var i;this._invoke=n}function l(t,e,n){var i=C;return function(o,a){if(i===P)throw new Error("Generator is already running");if(i===E){if("throw"===o)throw a;return g()}for(n.method=o,n.arg=a;;){var s=n.delegate;if(s){var u=c(s,n);if(u){if(u===O)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===C)throw i=E,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=P;var l=r(t,e,n);if("normal"===l.type){if(i=n.done?E:A,l.arg===O)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(i=E,n.method="throw",n.arg=l.arg)}}}function c(t,e){var n=t.iterator[e.method];if(n===v){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=v,c(t,e),"throw"===e.method))return O;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return O}var i=r(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,O;var o=i.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=v),e.delegate=null,O):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,O)}function f(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function h(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function d(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(f,this),this.reset(!0)}function p(t){if(t){var e=t[w];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,r=function e(){for(;++n<t.length;)if(b.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=v,e.done=!0,e};return r.next=r}}return{next:g}}function g(){return{value:v,done:!0}}var v,y=Object.prototype,b=y.hasOwnProperty,m="function"==typeof Symbol?Symbol:{},w=m.iterator||"@@iterator",x=m.asyncIterator||"@@asyncIterator",_=m.toStringTag||"@@toStringTag",k="object"==typeof t,S=e.regeneratorRuntime;if(S)return void(k&&(t.exports=S));S=e.regeneratorRuntime=k?t.exports:{},S.wrap=n;var C="suspendedStart",A="suspendedYield",P="executing",E="completed",O={},T={};T[w]=function(){return this};var I=Object.getPrototypeOf,B=I&&I(I(p([])));B&&B!==y&&b.call(B,w)&&(T=B);var L=a.prototype=i.prototype=Object.create(T);o.prototype=L.constructor=a,a.constructor=o,a[_]=o.displayName="GeneratorFunction",S.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===o||"GeneratorFunction"===(e.displayName||e.name))},S.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,a):(t.__proto__=a,_ in t||(t[_]="GeneratorFunction")),t.prototype=Object.create(L),t},S.awrap=function(t){return{__await:t}},s(u.prototype),u.prototype[x]=function(){return this},S.AsyncIterator=u,S.async=function(t,e,r,i){var o=new u(n(t,e,r,i));return S.isGeneratorFunction(e)?o:o.next().then(function(t){return t.done?t.value:o.next()})},s(L),L[_]="Generator",L[w]=function(){return this},L.toString=function(){return"[object Generator]"},S.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},S.values=p,d.prototype={constructor:d,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=v,this.done=!1,this.delegate=null,this.method="next",this.arg=v,this.tryEntries.forEach(h),!t)for(var e in this)"t"===e.charAt(0)&&b.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=v)},stop:function(){this.done=!0;var t=this.tryEntries[0],e=t.completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){function e(e,r){return o.type="throw",o.arg=t,n.next=e,r&&(n.method="next",n.arg=v),!!r}if(this.done)throw t;for(var n=this,r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],o=i.completion;if("root"===i.tryLoc)return e("end");if(i.tryLoc<=this.prev){var a=b.call(i,"catchLoc"),s=b.call(i,"finallyLoc");if(a&&s){if(this.prev<i.catchLoc)return e(i.catchLoc,!0);if(this.prev<i.finallyLoc)return e(i.finallyLoc)}else if(a){if(this.prev<i.catchLoc)return e(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return e(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&b.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=t,o.arg=e,i?(this.method="next",this.next=i.finallyLoc,O):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),O},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),h(n),O}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var i=r.arg;h(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:p(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=v),O}}}(function(){return this}()||Function("return this")())},function(t,e,n){t.exports={default:n(412),__esModule:!0}},function(t,e,n){n(413),t.exports=Math.pow(2,-52)},function(t,e,n){var r=n(6);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},function(t,e,n){(function(e){var n=function(){"use strict";function t(n,r,i,o){function s(n,i){if(null===n)return null;if(0==i)return n;var f,h;if("object"!=typeof n)return n;if(t.__isArray(n))f=[];else if(t.__isRegExp(n))f=new RegExp(n.source,a(n)),n.lastIndex&&(f.lastIndex=n.lastIndex);else if(t.__isDate(n))f=new Date(n.getTime());else{if(c&&e.isBuffer(n))return f=e.allocUnsafe?e.allocUnsafe(n.length):new e(n.length),n.copy(f),f;void 0===o?(h=Object.getPrototypeOf(n),f=Object.create(h)):(f=Object.create(o),h=o)}if(r){var d=u.indexOf(n);if(-1!=d)return l[d];u.push(n),l.push(f)}for(var p in n){var g;h&&(g=Object.getOwnPropertyDescriptor(h,p)),g&&null==g.set||(f[p]=s(n[p],i-1))}return f}"object"==typeof r&&(i=r.depth,o=r.prototype,r.filter,r=r.circular);var u=[],l=[],c=void 0!==e;return void 0===r&&(r=!0),void 0===i&&(i=1/0),s(n,i)}function n(t){return Object.prototype.toString.call(t)}function r(t){return"object"==typeof t&&"[object Date]"===n(t)}function i(t){return"object"==typeof t&&"[object Array]"===n(t)}function o(t){return"object"==typeof t&&"[object RegExp]"===n(t)}function a(t){var e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),e}return t.clonePrototype=function(t){if(null===t)return null;var e=function(){};return e.prototype=t,new e},t.__objToStr=n,t.__isDate=r,t.__isArray=i,t.__isRegExp=o,t.__getRegExpFlags=a,t}();"object"==typeof t&&t.exports&&(t.exports=n)}).call(e,n(3).Buffer)},function(t,e,n){t.exports=n(196).BrotliDecompressBuffer},function(t,e){function n(t){this.buf_=new Uint8Array(r),this.input_=t,this.reset()}var r=8224,i=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);n.READ_SIZE=4096,n.IBUF_MASK=8191,n.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var t=0;t<4;t++)this.val_|=this.buf_[this.pos_]<<8*t,++this.pos_;return this.bit_end_pos_>0},n.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var t=this.buf_ptr_,e=this.input_.read(this.buf_,t,4096);if(e<0)throw new Error("Unexpected end of input");if(e<4096){this.eos_=1;for(var n=0;n<32;n++)this.buf_[t+e+n]=0}if(0===t){for(var n=0;n<32;n++)this.buf_[8192+n]=this.buf_[n];this.buf_ptr_=4096}else this.buf_ptr_=0;this.bit_end_pos_+=e<<3}},n.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[8191&this.pos_]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0},n.prototype.readBits=function(t){32-this.bit_pos_<t&&this.fillBitWindow();var e=this.val_>>>this.bit_pos_&i[t];return this.bit_pos_+=t,e},t.exports=n},function(t,e,n){var r=n(418);n(50);e.init=function(){return(0,n(196).BrotliDecompressBuffer)(r.toByteArray(n(419)))}},function(t,e,n){"use strict";function r(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function i(t){var e=r(t),n=e[0],i=e[1];return 3*(n+i)/4-i}function o(t,e,n){return 3*(e+n)/4-n}function a(t){for(var e,n=r(t),i=n[0],a=n[1],s=new h(o(t,i,a)),u=0,l=a>0?i-4:i,c=0;c<l;c+=4)e=f[t.charCodeAt(c)]<<18|f[t.charCodeAt(c+1)]<<12|f[t.charCodeAt(c+2)]<<6|f[t.charCodeAt(c+3)],s[u++]=e>>16&255,s[u++]=e>>8&255,s[u++]=255&e;return 2===a&&(e=f[t.charCodeAt(c)]<<2|f[t.charCodeAt(c+1)]>>4,s[u++]=255&e),1===a&&(e=f[t.charCodeAt(c)]<<10|f[t.charCodeAt(c+1)]<<4|f[t.charCodeAt(c+2)]>>2,s[u++]=e>>8&255,s[u++]=255&e),s}function s(t){return c[t>>18&63]+c[t>>12&63]+c[t>>6&63]+c[63&t]}function u(t,e,n){for(var r,i=[],o=e;o<n;o+=3)r=(t[o]<<16&16711680)+(t[o+1]<<8&65280)+(255&t[o+2]),i.push(s(r));return i.join("")}function l(t){for(var e,n=t.length,r=n%3,i=[],o=0,a=n-r;o<a;o+=16383)i.push(u(t,o,o+16383>a?a:o+16383));return 1===r?(e=t[n-1],i.push(c[e>>2]+c[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],i.push(c[e>>10]+c[e>>4&63]+c[e<<2&63]+"=")),i.join("")}e.byteLength=i,e.toByteArray=a,e.fromByteArray=l;for(var c=[],f=[],h="undefined"!=typeof Uint8Array?Uint8Array:Array,d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",p=0,g=d.length;p<g;++p)c[p]=d[p],f[d.charCodeAt(p)]=p;f["-".charCodeAt(0)]=62,f["_".charCodeAt(0)]=63},function(t,e){t.exports=""},function(t,e){e.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),e.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])},function(t,e){function n(t,e){this.offset=t,this.nbits=e}e.kBlockLengthPrefixCode=[new n(1,2),new n(5,2),new n(9,2),new n(13,2),new n(17,3),new n(25,3),new n(33,3),new n(41,3),new n(49,4),new n(65,4),new n(81,4),new n(97,4),new n(113,5),new n(145,5),new n(177,5),new n(209,5),new n(241,6),new n(305,6),new n(369,7),new n(497,8),new n(753,9),new n(1265,10),new n(2289,11),new n(4337,12),new n(8433,13),new n(16625,24)],e.kInsertLengthPrefixCode=[new n(0,0),new n(1,0),new n(2,0),new n(3,0),new n(4,0),new n(5,0),new n(6,1),new n(8,1),new n(10,2),new n(14,2),new n(18,3),new n(26,3),new n(34,4),new n(50,4),new n(66,5),new n(98,5),new n(130,6),new n(194,7),new n(322,8),new n(578,9),new n(1090,10),new n(2114,12),new n(6210,14),new n(22594,24)],e.kCopyLengthPrefixCode=[new n(2,0),new n(3,0),new n(4,0),new n(5,0),new n(6,0),new n(7,0),new n(8,0),new n(9,0),new n(10,1),new n(12,1),new n(14,2),new n(18,2),new n(22,3),new n(30,3),new n(38,4),new n(54,4),new n(70,5),new n(102,5),new n(134,6),new n(198,7),new n(326,8),new n(582,9),new n(1094,10),new n(2118,24)],e.kInsertRangeLut=[0,0,8,8,0,16,8,16,16],e.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]},function(t,e,n){function r(t,e,n){this.prefix=new Uint8Array(t.length),this.transform=e,this.suffix=new Uint8Array(n.length);for(var r=0;r<t.length;r++)this.prefix[r]=t.charCodeAt(r);for(var r=0;r<n.length;r++)this.suffix[r]=n.charCodeAt(r)}function i(t,e){return t[e]<192?(t[e]>=97&&t[e]<=122&&(t[e]^=32),1):t[e]<224?(t[e+1]^=32,2):(t[e+2]^=5,3)}var o=n(198),a=[new r("",0,""),new r("",0," "),new r(" ",0," "),new r("",12,""),new r("",10," "),new r("",0," the "),new r(" ",0,""),new r("s ",0," "),new r("",0," of "),new r("",10,""),new r("",0," and "),new r("",13,""),new r("",1,""),new r(", ",0," "),new r("",0,", "),new r(" ",10," "),new r("",0," in "),new r("",0," to "),new r("e ",0," "),new r("",0,'"'),new r("",0,"."),new r("",0,'">'),new r("",0,"\n"),new r("",3,""),new r("",0,"]"),new r("",0," for "),new r("",14,""),new r("",2,""),new r("",0," a "),new r("",0," that "),new r(" ",10,""),new r("",0,". "),new r(".",0,""),new r(" ",0,", "),new r("",15,""),new r("",0," with "),new r("",0,"'"),new r("",0," from "),new r("",0," by "),new r("",16,""),new r("",17,""),new r(" the ",0,""),new r("",4,""),new r("",0,". The "),new r("",11,""),new r("",0," on "),new r("",0," as "),new r("",0," is "),new r("",7,""),new r("",1,"ing "),new r("",0,"\n\t"),new r("",0,":"),new r(" ",0,". "),new r("",0,"ed "),new r("",20,""),new r("",18,""),new r("",6,""),new r("",0,"("),new r("",10,", "),new r("",8,""),new r("",0," at "),new r("",0,"ly "),new r(" the ",0," of "),new r("",5,""),new r("",9,""),new r(" ",10,", "),new r("",10,'"'),new r(".",0,"("),new r("",11," "),new r("",10,'">'),new r("",0,'="'),new r(" ",0,"."),new r(".com/",0,""),new r(" the ",0," of the "),new r("",10,"'"),new r("",0,". This "),new r("",0,","),new r(".",0," "),new r("",10,"("),new r("",10,"."),new r("",0," not "),new r(" ",0,'="'),new r("",0,"er "),new r(" ",11," "),new r("",0,"al "),new r(" ",11,""),new r("",0,"='"),new r("",11,'"'),new r("",10,". "),new r(" ",0,"("),new r("",0,"ful "),new r(" ",10,". "),new r("",0,"ive "),new r("",0,"less "),new r("",11,"'"),new r("",0,"est "),new r(" ",10,"."),new r("",11,'">'),new r(" ",0,"='"),new r("",10,","),new r("",0,"ize "),new r("",11,"."),new r("ÃÂ ",0,""),new r(" ",0,","),new r("",10,'="'),new r("",11,'="'),new r("",0,"ous "),new r("",11,", "),new r("",10,"='"),new r(" ",10,","),new r(" ",11,'="'),new r(" ",11,", "),new r("",11,","),new r("",11,"("),new r("",11,". "),new r(" ",11,"."),new r("",11,"='"),new r(" ",11,". "),new r(" ",10,'="'),new r(" ",11,"='"),new r(" ",10,"='")];e.kTransforms=a,e.kNumTransforms=a.length,e.transformDictionaryWord=function(t,e,n,r,s){var u,l=a[s].prefix,c=a[s].suffix,f=a[s].transform,h=f<12?0:f-11,d=0,p=e;h>r&&(h=r);for(var g=0;g<l.length;)t[e++]=l[g++];for(n+=h,r-=h,f<=9&&(r-=f),d=0;d<r;d++)t[e++]=o.dictionary[n+d];if(u=e-r,10===f)i(t,u);else if(11===f)for(;r>0;){var v=i(t,u);u+=v,r-=v}for(var y=0;y<c.length;)t[e++]=c[y++];return e-p}},function(t,e,n){!function(t){"use strict";function e(t){var e=t.charCodeAt(0);return e===o||e===c?62:e===a||e===f?63:e<s?-1:e<s+10?e-s+26+26:e<l+26?e-l:e<u+26?e-u+26:void 0}function n(t){function n(t){l[f++]=t}var r,o,a,s,u,l;if(t.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var c=t.length;u="="===t.charAt(c-2)?2:"="===t.charAt(c-1)?1:0,l=new i(3*t.length/4-u),a=u>0?t.length-4:t.length;var f=0;for(r=0,o=0;r<a;r+=4,o+=3)s=e(t.charAt(r))<<18|e(t.charAt(r+1))<<12|e(t.charAt(r+2))<<6|e(t.charAt(r+3)),n((16711680&s)>>16),n((65280&s)>>8),n(255&s);return 2===u?(s=e(t.charAt(r))<<2|e(t.charAt(r+1))>>4,n(255&s)):1===u&&(s=e(t.charAt(r))<<10|e(t.charAt(r+1))<<4|e(t.charAt(r+2))>>2,n(s>>8&255),n(255&s)),l}function r(t){function e(t){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(t)}var n,r,i,o=t.length%3,a="";for(n=0,i=t.length-o;n<i;n+=3)r=(t[n]<<16)+(t[n+1]<<8)+t[n+2],a+=function(t){return e(t>>18&63)+e(t>>12&63)+e(t>>6&63)+e(63&t)}(r);switch(o){case 1:r=t[t.length-1],a+=e(r>>2),a+=e(r<<4&63),a+="==";break;case 2:r=(t[t.length-2]<<8)+t[t.length-1],a+=e(r>>10),a+=e(r>>4&63),a+=e(r<<2&63),a+="="}return a}var i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="+".charCodeAt(0),a="/".charCodeAt(0),s="0".charCodeAt(0),u="a".charCodeAt(0),l="A".charCodeAt(0),c="-".charCodeAt(0),f="_".charCodeAt(0);t.toByteArray=n,t.fromByteArray=r}(e)},function(t,e){(function(){e.OP=0,e.CL=1,e.CP=2,e.QU=3,e.GL=4,e.NS=5,e.EX=6,e.SY=7,e.IS=8,e.PR=9,e.PO=10,e.NU=11,e.AL=12,e.HL=13,e.ID=14,e.IN=15,e.HY=16,e.BA=17,e.BB=18,e.B2=19,e.ZW=20,e.CM=21,e.WJ=22,e.H2=23,e.H3=24,e.JL=25,e.JV=26,e.JT=27,e.RI=28,e.AI=29,e.BK=30,e.CB=31,e.CJ=32,e.CR=33,e.LF=34,e.NL=35,e.SA=36,e.SG=37,e.SP=38,e.XX=39}).call(this)},function(t,e){(function(){var t,n,r,i,o;e.DI_BRK=r=0,e.IN_BRK=i=1,e.CI_BRK=t=2,e.CP_BRK=n=3,e.PR_BRK=o=4,e.pairTable=[[o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,n,o,o,o,o,o,o,o],[r,o,o,i,i,o,o,o,o,i,i,r,r,r,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,i,o,o,o,o,i,i,i,i,i,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[o,o,o,i,i,i,o,o,o,i,i,i,i,i,i,i,i,i,i,i,o,t,o,i,i,i,i,i,i],[i,o,o,i,i,i,o,o,o,i,i,i,i,i,i,i,i,i,i,i,o,t,o,i,i,i,i,i,i],[r,o,o,i,i,i,o,o,o,r,r,r,r,r,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,i,i,o,o,o,r,r,r,r,r,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,i,i,o,o,o,r,r,i,r,r,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,i,i,o,o,o,r,r,i,i,i,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[i,o,o,i,i,i,o,o,o,r,r,i,i,i,i,r,i,i,r,r,o,t,o,i,i,i,i,i,r],[i,o,o,i,i,i,o,o,o,r,r,i,i,i,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[i,o,o,i,i,i,o,o,o,i,i,i,i,i,r,i,i,i,r,r,o,t,o,r,r,r,r,r,r],[i,o,o,i,i,i,o,o,o,r,r,i,i,i,r,i,i,i,r,r,o,t,o,r,r,r,r,r,r],[i,o,o,i,i,i,o,o,o,r,r,i,i,i,r,i,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,i,i,o,o,o,r,i,r,r,r,r,i,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,i,i,o,o,o,r,r,r,r,r,r,i,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,r,i,o,o,o,r,r,i,r,r,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[r,o,o,i,r,i,o,o,o,r,r,r,r,r,r,r,i,i,r,r,o,t,o,r,r,r,r,r,r],[i,o,o,i,i,i,o,o,o,i,i,i,i,i,i,i,i,i,i,i,o,t,o,i,i,i,i,i,i],[r,o,o,i,i,i,o,o,o,r,r,r,r,r,r,r,i,i,r,o,o,t,o,r,r,r,r,r,r],[r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,o,r,r,r,r,r,r,r,r],[i,o,o,i,i,i,o,o,o,r,r,i,i,i,r,i,i,i,r,r,o,t,o,r,r,r,r,r,r],[i,o,o,i,i,i,o,o,o,i,i,i,i,i,i,i,i,i,i,i,o,t,o,i,i,i,i,i,i],[r,o,o,i,i,i,o,o,o,r,i,r,r,r,r,i,i,i,r,r,o,t,o,r,r,r,i,i,r],[r,o,o,i,i,i,o,o,o,r,i,r,r,r,r,i,i,i,r,r,o,t,o,r,r,r,r,i,r],[r,o,o,i,i,i,o,o,o,r,i,r,r,r,r,i,i,i,r,r,o,t,o,i,i,i,i,r,r],[r,o,o,i,i,i,o,o,o,r,i,r,r,r,r,i,i,i,r,r,o,t,o,r,r,r,i,i,r],[r,o,o,i,i,i,o,o,o,r,i,r,r,r,r,i,i,i,r,r,o,t,o,r,r,r,r,i,r],[r,o,o,i,i,i,o,o,o,r,r,r,r,r,r,r,i,i,r,r,o,t,o,r,r,r,r,r,i]]}).call(this)},function(t,e,n){(function(e){(function(){var r,i;r=n(50),i=n(157),t.exports=function(){function t(t){var n,r,i,o,a,s,u,l,c,f;for(this.data=t,this.pos=8,this.palette=[],this.imgData=[],this.transparency={},this.text={};;){switch(n=this.readUInt32(),function(){var t,e;for(e=[],i=t=0;t<4;i=++t)e.push(String.fromCharCode(this.data[this.pos++]));return e}.call(this).join("")){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"PLTE":this.palette=this.read(n);break;case"IDAT":for(i=l=0;l<n;i=l+=1)this.imgData.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:if(this.transparency.indexed=this.read(n),(s=255-this.transparency.indexed.length)>0)for(i=c=0;0<=s?c<s:c>s;i=0<=s?++c:--c)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(n)[0];break;case 2:this.transparency.rgb=this.read(n)}break;case"tEXt":u=this.read(n),o=u.indexOf(0),a=String.fromCharCode.apply(String,u.slice(0,o)),this.text[a]=String.fromCharCode.apply(String,u.slice(o+1));break;case"IEND":return this.colors=function(){switch(this.colorType){case 0:case 3:case 4:return 1;case 2:case 6:return 3}}.call(this),this.hasAlphaChannel=4===(f=this.colorType)||6===f,r=this.colors+(this.hasAlphaChannel?1:0),this.pixelBitlength=this.bits*r,this.colorSpace=function(){switch(this.colors){case 1:return"DeviceGray";case 3:return"DeviceRGB"}}.call(this),void(this.imgData=new e(this.imgData));default:this.pos+=n}if(this.pos+=4,this.pos>this.data.length)throw new Error("Incomplete or corrupt PNG file")}}return t.decode=function(e,n){return r.readFile(e,function(e,r){var i;return i=new t(r),i.decode(function(t){return n(t)})})},t.load=function(e){var n;return n=r.readFileSync(e),new t(n)},t.prototype.read=function(t){var e,n;for(n=[],e=0;0<=t?e<t:e>t;0<=t?++e:--e)n.push(this.data[this.pos++]);return n},t.prototype.readUInt32=function(){var t,e,n,r;return t=this.data[this.pos++]<<24,e=this.data[this.pos++]<<16,n=this.data[this.pos++]<<8,r=this.data[this.pos++],t|e|n|r},t.prototype.readUInt16=function(){var t,e;return t=this.data[this.pos++]<<8,e=this.data[this.pos++],t|e},t.prototype.decodePixels=function(t){var n=this;return i.inflate(this.imgData,function(r,i){var o,a,s,u,l,c,f,h,d,p,g,v,y,b,m,w,x,_,k,S,C,A,P;if(r)throw r;for(v=n.pixelBitlength/8,w=v*n.width,y=new e(w*n.height),c=i.length,m=0,b=0,a=0;b<c;){switch(i[b++]){case 0:for(u=k=0;k<w;u=k+=1)y[a++]=i[b++];break;case 1:for(u=S=0;S<w;u=S+=1)o=i[b++],l=u<v?0:y[a-v],y[a++]=(o+l)%256;break;case 2:for(u=C=0;C<w;u=C+=1)o=i[b++],s=(u-u%v)/v,x=m&&y[(m-1)*w+s*v+u%v],y[a++]=(x+o)%256;break;case 3:for(u=A=0;A<w;u=A+=1)o=i[b++],s=(u-u%v)/v,l=u<v?0:y[a-v],x=m&&y[(m-1)*w+s*v+u%v],y[a++]=(o+Math.floor((l+x)/2))%256;break;case 4:for(u=P=0;P<w;u=P+=1)o=i[b++],s=(u-u%v)/v,l=u<v?0:y[a-v],0===m?x=_=0:(x=y[(m-1)*w+s*v+u%v],_=s&&y[(m-1)*w+(s-1)*v+u%v]),f=l+x-_,h=Math.abs(f-l),p=Math.abs(f-x),g=Math.abs(f-_),d=h<=p&&h<=g?l:p<=g?x:_,y[a++]=(o+d)%256;break;default:throw new Error("Invalid filter algorithm: "+i[b-1])}m++}return t(y)})},t.prototype.decodePalette=function(){var t,n,r,i,o,a,s,u,l;for(r=this.palette,a=this.transparency.indexed||[],o=new e(a.length+r.length),i=0,r.length,t=0,n=s=0,u=r.length;s<u;n=s+=3)o[i++]=r[n],o[i++]=r[n+1],o[i++]=r[n+2],o[i++]=null!=(l=a[t++])?l:255;return o},t.prototype.copyToImageData=function(t,e){var n,r,i,o,a,s,u,l,c,f,h;if(r=this.colors,c=null,n=this.hasAlphaChannel,this.palette.length&&(c=null!=(h=this._decodedPalette)?h:this._decodedPalette=this.decodePalette(),r=4,n=!0),i=(null!=t?t.data:void 0)||t,l=i.length,a=c||e,o=s=0,1===r)for(;o<l;)u=c?4*e[o/4]:s,f=a[u++],i[o++]=f,i[o++]=f,i[o++]=f,i[o++]=n?a[u++]:255,s=u;else for(;o<l;)u=c?4*e[o/4]:s,i[o++]=a[u++],i[o++]=a[u++],i[o++]=a[u++],i[o++]=n?a[u++]:255,s=u},t.prototype.decode=function(t){var n,r=this;return n=new e(this.width*this.height*4),this.decodePixels(function(e){return r.copyToImageData(n,e),t(n)})},t}()}).call(this)}).call(e,n(3).Buffer)},function(t,e,n){"use strict";function r(t,e){var n="normal";return t&&e?n="bolditalics":t?n="bold":e&&(n="italics"),n}function i(t,e){this.fonts={},this.pdfKitDoc=e,this.fontCache={};for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];this.fonts[n]={normal:r.normal,bold:r.bold,italics:r.italics,bolditalics:r.bolditalics}}}var o=n(0).isArray;i.prototype.provideFont=function(t,e,n){var i=r(e,n);if(!this.fonts[t]||!this.fonts[t][i])throw new Error("Font '"+t+"' in style '"+i+"' is not defined in the font section of the document definition.");if(this.fontCache[t]=this.fontCache[t]||{},!this.fontCache[t][i]){var a=this.fonts[t][i];o(a)||(a=[a]),this.fontCache[t][i]=this.pdfKitDoc.font.apply(this.pdfKitDoc,a)._font}return this.fontCache[t][i]},t.exports=i},function(t,e,n){"use strict";function r(t,e){e.forEach(function(e){t.push(e)})}function i(t,e,n){this.pageSize=t,this.pageMargins=e,this.tracker=new a,this.imageMeasure=n,this.tableLayouts={}}function o(t){var e=t.x,n=t.y;t.positions=[],g(t.canvas)&&t.canvas.forEach(function(t){var e=t.x,n=t.y,r=t.x1,i=t.y1,o=t.x2,a=t.y2;t.resetXY=function(){t.x=e,t.y=n,t.x1=r,t.y1=i,t.x2=o,t.y2=a}}),t.resetXY=function(){t.x=e,t.y=n,g(t.canvas)&&t.canvas.forEach(function(t){t.resetXY()})}}var a=n(201),s=n(429),u=n(430),l=n(203),c=n(432),f=n(135),h=n(434),d=n(204),p=n(0).isString,g=n(0).isArray,v=n(0).pack,y=n(0).offsetVector,b=n(0).fontStringify,m=n(0).isFunction,w=n(134),x=n(202);i.prototype.registerTableLayouts=function(t){this.tableLayouts=v(this.tableLayouts,t)},i.prototype.layoutDocument=function(t,e,n,r,i,o,a,l,c,f){this.docPreprocessor=new s,this.docMeasure=new u(e,n,r,this.imageMeasure,this.tableLayouts,l);for(var h=this.tryLayoutDocument(t,e,n,r,i,o,a,l,c);function(t,e){return!!m(f)&&(t=t.filter(function(t){return t.positions.length>0}),t.forEach(function(t){var n={};["id","text","ul","ol","table","image","qr","canvas","columns","headlineLevel","style","pageBreak","pageOrientation","width","height"].forEach(function(e){void 0!==t[e]&&(n[e]=t[e])}),n.startPosition=t.positions[0],n.pageNumbers=t.positions.map(function(t){return t.pageNumber}).filter(function(t,e,n){return n.indexOf(t)===e}),n.pages=e.length,n.stack=g(t.stack),t.nodeInfo=n}),t.some(function(t,e,n){if("before"!==t.pageBreak&&!t.pageBreakCalculated){t.pageBreakCalculated=!0;var r=t.nodeInfo.pageNumbers[0],i=n.slice(e+1).filter(function(t){return t.nodeInfo.pageNumbers.indexOf(r)>-1}),o=n.slice(e+1).filter(function(t){return t.nodeInfo.pageNumbers.indexOf(r+1)>-1}),a=n.slice(0,e).filter(function(t){return t.nodeInfo.pageNumbers.indexOf(r)>-1});if(f(t.nodeInfo,i.map(function(t){return t.nodeInfo}),o.map(function(t){return t.nodeInfo}),a.map(function(t){return t.nodeInfo})))return t.pageBreak="before",!0}}))}(h.linearNodeList,h.pages);)!function(t){t.linearNodeList.forEach(function(t){t.resetXY()})}(h),h=this.tryLayoutDocument(t,e,n,r,i,o,a,l,c);return h.pages},i.prototype.tryLayoutDocument=function(t,e,n,r,i,o,a,s,u,f){this.linearNodeList=[],t=this.docPreprocessor.preprocessDocument(t),t=this.docMeasure.measureDocument(t),this.writer=new c(new l(this.pageSize,this.pageMargins),this.tracker);var h=this;return this.writer.context().tracker.startTracking("pageAdded",function(){h.addBackground(i)}),this.addBackground(i),this.processNode(t),this.addHeadersAndFooters(o,a),null!=u&&this.addWatermark(u,e,r),{pages:this.writer.context().pages,linearNodeList:this.linearNodeList}},i.prototype.addBackground=function(t){var e=m(t)?t:function(){return t},n=this.writer.context(),r=n.getCurrentPage().pageSize,i=e(n.page+1,r);i&&(this.writer.beginUnbreakableBlock(r.width,r.height),i=this.docPreprocessor.preprocessDocument(i),this.processNode(this.docMeasure.measureDocument(i)),this.writer.commitUnbreakableBlock(0,0),n.backgroundLength[n.page]+=i.positions.length)},i.prototype.addStaticRepeatable=function(t,e){this.addDynamicRepeatable(function(){return JSON.parse(JSON.stringify(t))},e)},i.prototype.addDynamicRepeatable=function(t,e){for(var n=this.writer.context().pages,r=0,i=n.length;r<i;r++){this.writer.context().page=r;var o=t(r+1,i,this.writer.context().pages[r].pageSize);if(o){var a=e(this.writer.context().getCurrentPage().pageSize,this.pageMargins);this.writer.beginUnbreakableBlock(a.width,a.height),o=this.docPreprocessor.preprocessDocument(o),this.processNode(this.docMeasure.measureDocument(o)),this.writer.commitUnbreakableBlock(a.x,a.y)}}},i.prototype.addHeadersAndFooters=function(t,e){var n=function(t,e){return{x:0,y:0,width:t.width,height:e.top}},r=function(t,e){return{x:0,y:t.height-e.bottom,width:t.width,height:e.bottom}};m(t)?this.addDynamicRepeatable(t,n):t&&this.addStaticRepeatable(t,n),m(e)?this.addDynamicRepeatable(e,r):e&&this.addStaticRepeatable(e,r)},i.prototype.addWatermark=function(t,e,n){if(p(t)&&(t={text:t}),t.text){t.font=t.font||n.font||"Roboto",t.color=t.color||"black",t.opacity=t.opacity||.6,t.bold=t.bold||!1,t.italics=t.italics||!1;for(var r={text:t.text,font:e.provideFont(t.font,t.bold,t.italics),size:function(t,e,n){for(var r,i=t.width,o=t.height,a=.8*Math.sqrt(i*i+o*o),s=new w(n),u=new x(null,{font:e.font,bold:e.bold,italics:e.italics}),l=0,c=1e3,f=(l+c)/2;Math.abs(l-c)>1;)u.push({fontSize:f}),r=s.sizeOfString(e.text,u),r.width>a?(c=f,f=(l+c)/2):r.width<a&&(l=f,f=(l+c)/2),u.pop();return{size:r,fontSize:f}}(this.pageSize,t,e),color:t.color,opacity:t.opacity},i=this.writer.context().pages,o=0,a=i.length;o<a;o++)i[o].watermark=r}},i.prototype.processNode=function(t){var e=this;this.linearNodeList.push(t),o(t),function(n){var r=t._margin;"before"===t.pageBreak&&e.writer.moveToNextPage(t.pageOrientation),r&&(e.writer.context().moveDown(r[1]),e.writer.context().addMargin(r[0],r[2])),n(),r&&(e.writer.context().addMargin(-r[0],-r[2]),e.writer.context().moveDown(r[3])),"after"===t.pageBreak&&e.writer.moveToNextPage(t.pageOrientation)}(function(){var n=t.unbreakable;n&&e.writer.beginUnbreakableBlock();var r=t.absolutePosition;r&&(e.writer.context().beginDetachedBlock(),e.writer.context().moveTo(r.x||0,r.y||0));var i=t.relativePosition;if(i&&(e.writer.context().beginDetachedBlock(),e.writer.context().moveTo((i.x||0)+e.writer.context().x,(i.y||0)+e.writer.context().y)),t.stack)e.processVerticalContainer(t);else if(t.columns)e.processColumns(t);else if(t.ul)e.processList(!1,t);else if(t.ol)e.processList(!0,t);else if(t.table)e.processTable(t);else if(void 0!==t.text)e.processLeaf(t);else if(t.toc)e.processToc(t);else if(t.image)e.processImage(t);else if(t.canvas)e.processCanvas(t);else if(t.qr)e.processQr(t);else if(!t._span)throw"Unrecognized document structure: "+JSON.stringify(t,b);(r||i)&&e.writer.context().endDetachedBlock(),n&&e.writer.commitUnbreakableBlock()})},i.prototype.processVerticalContainer=function(t){var e=this;t.stack.forEach(function(n){e.processNode(n),r(t.positions,n.positions)})},i.prototype.processColumns=function(t){var e=t.columns,n=this.writer.context().availableWidth,i=function(t){if(!t)return null;var n=[];n.push(0);for(var r=e.length-1;r>0;r--)n.push(t);return n}(t._gap);i&&(n-=(i.length-1)*t._gap),f.buildColumnWidths(e,n);var o=this.processRow(e,e,i);r(t.positions,o.positions)},i.prototype.processRow=function(t,e,n,i,o,a){function s(t){for(var e,n=0,r=f.length;n<r;n++){var i=f[n];if(i.prevPage===t.prevPage){e=i;break}}e||(e=t,f.push(e)),e.prevY=Math.max(e.prevY,t.prevY),e.y=Math.min(e.y,t.y)}function u(t){return n&&n.length>t?n[t]:0}function l(t,e){if(t.rowSpan&&t.rowSpan>1){var n=o+t.rowSpan-1;if(n>=i.length)throw"Row span for column "+e+" (with indexes starting from 0) exceeded row count";return i[n][e]}return null}var c=this,f=[],h=[];return this.tracker.auto("pageChanged",s,function(){e=e||t,c.writer.context().beginColumnGroup();for(var i=0,o=t.length;i<o;i++){var s=t[i],f=e[i]._calcWidth,d=u(i);if(s.colSpan&&s.colSpan>1)for(var p=1;p<s.colSpan;p++)f+=e[++i]._calcWidth+n[i];c.writer.context().beginColumn(f,d,l(s,i)),s._span?s._columnEndingContext&&c.writer.context().markEnding(s):(c.processNode(s),r(h,s.positions))}c.writer.context().completeColumnGroup(a)}),{pageBreaks:f,positions:h}},i.prototype.processList=function(t,e){function n(t){if(s){var e=s;if(s=null,e.canvas){var n=e.canvas[0];y(n,-e._minWidth,0),i.writer.addVector(n)}else if(e._inlines){var r=new d(i.pageSize.width);r.addInline(e._inlines[0]),r.x=-e._minWidth,r.y=t.getAscenderHeight()-r.getAscenderHeight(),i.writer.addLine(r,!0)}}}var i=this,o=t?e.ol:e.ul,a=e._gapSize;this.writer.context().addMargin(a.width);var s;this.tracker.auto("lineAdded",n,function(){o.forEach(function(t){s=t.listMarker,i.processNode(t),r(e.positions,t.positions)})}),this.writer.context().addMargin(-a.width)},i.prototype.processTable=function(t){var e=new h(t);e.beginTable(this.writer);for(var n=t.table.heights,i=0,o=t.table.body.length;i<o;i++){e.beginRow(i,this.writer);var a;a=m(n)?n(i):g(n)?n[i]:n,"auto"===a&&(a=void 0);var s=this.processRow(t.table.body[i],t.table.widths,t._offsets.offsets,t.table.body,i,a);r(t.positions,s.positions),e.endRow(i,this.writer,s.pageBreaks)}e.endTable(this.writer)},i.prototype.processLeaf=function(t){var e=this.buildNextLine(t);e&&(t.tocItem||t.id)&&(e._node=t);var n=e?e.getHeight():0,r=t.maxHeight||-1;if(t._tocItemRef&&(e._pageNodeRef=t._tocItemRef),t._pageRef&&(e._pageNodeRef=t._pageRef._nodeRef),e&&e.inlines&&g(e.inlines))for(var i=0,o=e.inlines.length;i<o;i++)e.inlines[i]._tocItemRef&&(e.inlines[i]._pageNodeRef=e.inlines[i]._tocItemRef),e.inlines[i]._pageRef&&(e.inlines[i]._pageNodeRef=e.inlines[i]._pageRef._nodeRef);for(;e&&(-1===r||n<r);){var a=this.writer.addLine(e);t.positions.push(a),e=this.buildNextLine(t),e&&(n+=e.getHeight())}},i.prototype.processToc=function(t){t.toc.title&&this.processNode(t.toc.title),this.processNode(t.toc._table)},i.prototype.buildNextLine=function(t){if(!t._inlines||0===t._inlines.length)return null;for(var e=new d(this.writer.context().availableWidth),n=new w(null),r=!1;t._inlines&&t._inlines.length>0&&(e.hasEnoughSpaceForInline(t._inlines[0],t._inlines.slice(1))||r);){var i=!1,o=t._inlines.shift();if(r=!1,!o.noWrap&&o.text.length>1&&o.width>e.getAvailableWidth()){var a=o.width/o.text.length,s=Math.floor(e.getAvailableWidth()/a);if(s<1&&(s=1),s<o.text.length){var u=function(t){var e=t.constructor();for(var n in t)e[n]=t[n];return e}(o);u.text=o.text.substr(s),o.text=o.text.substr(0,s),u.width=n.widthOfString(u.text,u.font,u.fontSize,u.characterSpacing,u.fontFeatures),o.width=n.widthOfString(o.text,o.font,o.fontSize,o.characterSpacing,o.fontFeatures),t._inlines.unshift(u),i=!0}}e.addInline(o),r=o.noNewLine&&!i}return e.lastLineInParagraph=0===t._inlines.length,e},i.prototype.processImage=function(t){var e=this.writer.addImage(t);t.positions.push(e)},i.prototype.processCanvas=function(t){var e=t._minHeight;void 0===t.absolutePosition&&this.writer.context().availableHeight<e&&this.writer.moveToNextPage(),this.writer.alignCanvas(t),t.canvas.forEach(function(e){var n=this.writer.addVector(e);t.positions.push(n)},this),this.writer.context().moveDown(e)},i.prototype.processQr=function(t){var e=this.writer.addQr(t);t.positions.push(e)},t.exports=i},function(t,e,n){"use strict";(function(e){function r(){}var i=n(0).isString,o=n(0).isNumber,a=n(0).isBoolean,s=n(0).isArray,u=n(0).isUndefined,l=n(0).fontStringify;r.prototype.preprocessDocument=function(t){return this.parentNode=null,this.tocs=[],this.nodeReferences=[],this.preprocessNode(t)},r.prototype.preprocessNode=function(t){if(s(t)?t={stack:t}:i(t)?t={text:t}:o(t)||a(t)?t={text:t.toString()}:void 0===t||null===t?t={text:""}:0===Object.keys(t).length?t={text:""}:"text"in t&&(void 0===t.text||null===t.text)&&(t.text=""),t.columns)return this.preprocessColumns(t);if(t.stack)return this.preprocessVerticalContainer(t);if(t.ul)return this.preprocessList(t);if(t.ol)return this.preprocessList(t);if(t.table)return this.preprocessTable(t);if(void 0!==t.text)return this.preprocessText(t);if(t.toc)return this.preprocessToc(t);if(t.image)return this.preprocessImage(t);if(t.canvas)return this.preprocessCanvas(t);if(t.qr)return this.preprocessQr(t);if(t.pageReference||t.textReference)return this.preprocessText(t);throw"Unrecognized document structure: "+JSON.stringify(t,l)},r.prototype.preprocessColumns=function(t){for(var e=t.columns,n=0,r=e.length;n<r;n++)e[n]=this.preprocessNode(e[n]);return t},r.prototype.preprocessVerticalContainer=function(t){for(var e=t.stack,n=0,r=e.length;n<r;n++)e[n]=this.preprocessNode(e[n]);return t},r.prototype.preprocessList=function(t){for(var e=t.ul||t.ol,n=0,r=e.length;n<r;n++)e[n]=this.preprocessNode(e[n]);return t},r.prototype.preprocessTable=function(t){var e,n,r,i;for(e=0,r=t.table.body[0].length;e<r;e++)for(n=0,i=t.table.body.length;n<i;n++){var o=t.table.body[n],a=o[e];void 0!==a&&(null===a&&(a=""),a._span||(o[e]=this.preprocessNode(a)))}return t},r.prototype.preprocessText=function(t){if(t.tocItem){s(t.tocItem)||(t.tocItem=[t.tocItem]);for(var e=0,n=t.tocItem.length;e<n;e++){i(t.tocItem[e])||(t.tocItem[e]="_default_");var r=t.tocItem[e];this.tocs[r]||(this.tocs[r]={toc:{_items:[],_pseudo:!0}});var o={_nodeRef:this._getNodeForNodeRef(t),_textNodeRef:t};this.tocs[r].toc._items.push(o)}}if(t.id)if(this.nodeReferences[t.id]){if(!this.nodeReferences[t.id]._pseudo)throw"Node id '"+t.id+"' already exists";this.nodeReferences[t.id]._nodeRef=this._getNodeForNodeRef(t),this.nodeReferences[t.id]._textNodeRef=t,this.nodeReferences[t.id]._pseudo=!1}else this.nodeReferences[t.id]={_nodeRef:this._getNodeForNodeRef(t),_textNodeRef:t};if(t.pageReference&&(this.nodeReferences[t.pageReference]||(this.nodeReferences[t.pageReference]={_nodeRef:{},_textNodeRef:{},_pseudo:!0}),t.text="00000",t._pageRef=this.nodeReferences[t.pageReference]),t.textReference&&(this.nodeReferences[t.textReference]||(this.nodeReferences[t.textReference]={_nodeRef:{},_pseudo:!0}),t.text="",t._textRef=this.nodeReferences[t.textReference]),t.text&&t.text.text)t.text=[this.preprocessNode(t.text)];else if(s(t.text)){var a=!1;null===this.parentNode&&(this.parentNode=t,a=!0);for(var e=0,n=t.text.length;e<n;e++)t.text[e]=this.preprocessNode(t.text[e]);a&&(this.parentNode=null)}return t},r.prototype.preprocessToc=function(t){if(t.toc.id||(t.toc.id="_default_"),t.toc.title=t.toc.title?this.preprocessNode(t.toc.title):null,t.toc._items=[],this.tocs[t.toc.id]){if(!this.tocs[t.toc.id].toc._pseudo)throw"TOC '"+t.toc.id+"' already exists";t.toc._items=this.tocs[t.toc.id].toc._items}return this.tocs[t.toc.id]=t,t},r.prototype.preprocessImage=function(t){return u(t.image.type)||u(t.image.data)||"Buffer"!==t.image.type||!s(t.image.data)||(t.image=e.from(t.image.data)),t},r.prototype.preprocessCanvas=function(t){return t},r.prototype.preprocessQr=function(t){return t},r.prototype._getNodeForNodeRef=function(t){return this.parentNode?this.parentNode:t},t.exports=r}).call(e,n(3).Buffer)},function(t,e,n){"use strict";function r(t,e,n,r,a,s){this.textTools=new i(t),this.styleStack=new o(e,n),this.imageMeasure=r,this.tableLayouts=a,this.images=s,this.autoImageIndex=1}var i=n(134),o=n(202),a=n(135),s=n(0).isString,u=n(0).isNumber,l=n(0).isObject,c=n(0).isArray,f=n(0).fontStringify,h=n(0).pack,d=n(431);r.prototype.measureDocument=function(t){return this.measureNode(t)},r.prototype.measureNode=function(t){function e(t){var e=t._margin;return e&&(t._minWidth+=e[0]+e[2],t._maxWidth+=e[0]+e[2]),t}function n(){function e(t,e){return t.marginLeft||t.marginTop||t.marginRight||t.marginBottom?[t.marginLeft||e[0]||0,t.marginTop||e[1]||0,t.marginRight||e[2]||0,t.marginBottom||e[3]||0]:e}function n(t){return u(t)?t=[t,t,t,t]:c(t)&&2===t.length&&(t=[t[0],t[1],t[0],t[1]]),t}var i=[void 0,void 0,void 0,void 0];if(t.style){var o=c(t.style)?t.style:[t.style],a=function(t){for(var e={},n=t.length-1;n>=0;n--){var i=t[n],o=r.styleStack.styleDictionary[i];for(var a in o)o.hasOwnProperty(a)&&(e[a]=o[a])}return e}(o);a&&(i=e(a,i)),a.margin&&(i=n(a.margin))}return i=e(t,i),t.margin&&(i=n(t.margin)),void 0===i[0]&&void 0===i[1]&&void 0===i[2]&&void 0===i[3]?null:i}var r=this;return this.styleStack.auto(t,function(){if(t._margin=n(),t.columns)return e(r.measureColumns(t));if(t.stack)return e(r.measureVerticalContainer(t));if(t.ul)return e(r.measureUnorderedList(t));if(t.ol)return e(r.measureOrderedList(t));if(t.table)return e(r.measureTable(t));if(void 0!==t.text)return e(r.measureLeaf(t));if(t.toc)return e(r.measureToc(t));if(t.image)return e(r.measureImage(t));if(t.canvas)return e(r.measureCanvas(t));if(t.qr)return e(r.measureQr(t));throw"Unrecognized document structure: "+JSON.stringify(t,f)})},r.prototype.convertIfBase64Image=function(t){if(/^data:image\/(jpeg|jpg|png);base64,/.test(t.image)){var e="$$pdfmake$$"+this.autoImageIndex++;this.images[e]=t.image,t.image=e}},r.prototype.measureImage=function(t){this.images&&this.convertIfBase64Image(t);var e=this.imageMeasure.measureImage(t.image);if(t.fit){var n=e.width/e.height>t.fit[0]/t.fit[1]?t.fit[0]/e.width:t.fit[1]/e.height;t._width=t._minWidth=t._maxWidth=e.width*n,t._height=e.height*n}else t._width=t._minWidth=t._maxWidth=t.width||e.width,t._height=t.height||e.height*t._width/e.width,u(t.maxWidth)&&t.maxWidth<t._width&&(t._width=t._minWidth=t._maxWidth=t.maxWidth,t._height=t._width*e.height/e.width),u(t.maxHeight)&&t.maxHeight<t._height&&(t._height=t.maxHeight,t._width=t._minWidth=t._maxWidth=t._height*e.width/e.height),u(t.minWidth)&&t.minWidth>t._width&&(t._width=t._minWidth=t._maxWidth=t.minWidth,t._height=t._width*e.height/e.width),u(t.minHeight)&&t.minHeight>t._height&&(t._height=t.minHeight,t._width=t._minWidth=t._maxWidth=t._height*e.width/e.height);return t._alignment=this.styleStack.getProperty("alignment"),t},r.prototype.measureLeaf=function(t){t._textRef&&t._textRef._textNodeRef.text&&(t.text=t._textRef._textNodeRef.text);var e=this.styleStack.clone();e.push(t);var n=this.textTools.buildInlines(t.text,e);return t._inlines=n.items,t._minWidth=n.minWidth,t._maxWidth=n.maxWidth,t},r.prototype.measureToc=function(t){t.toc.title&&(t.toc.title=this.measureNode(t.toc.title));for(var e=[],n=t.toc.textStyle||{},r=t.toc.numberStyle||n,i=t.toc.textMargin||[0,0,0,0],o=0,a=t.toc._items.length;o<a;o++){var s=t.toc._items[o],u=s._textNodeRef.tocStyle||n,l=s._textNodeRef.tocMargin||i,c=s._textNodeRef.tocNumberStyle||r;e.push([{text:s._textNodeRef.text,alignment:"left",style:u,margin:l},{text:"00000",alignment:"right",_tocItemRef:s._nodeRef,style:c,margin:[0,l[1],0,l[3]]}])}return t.toc._table={table:{dontBreakRows:!0,widths:["*","auto"],body:e},layout:"noBorders"},t.toc._table=this.measureNode(t.toc._table),t},r.prototype.measureVerticalContainer=function(t){var e=t.stack;t._minWidth=0,t._maxWidth=0;for(var n=0,r=e.length;n<r;n++)e[n]=this.measureNode(e[n]),t._minWidth=Math.max(t._minWidth,e[n]._minWidth),t._maxWidth=Math.max(t._maxWidth,e[n]._maxWidth);return t},r.prototype.gapSizeForList=function(){return this.textTools.sizeOfString("9. ",this.styleStack)},r.prototype.buildUnorderedMarker=function(t,e,n){var r,i=t.getProperty("markerColor")||t.getProperty("color")||"black";switch(n){case"circle":r=function(t,e){var n=t.fontSize/6;return{canvas:[{x:n,y:t.height/t.lineHeight+t.descender-t.fontSize/3,r1:n,r2:n,type:"ellipse",lineColor:e}]}}(e,i);break;case"square":r=function(t,e){var n=t.fontSize/3;return{canvas:[{x:0,y:t.height/t.lineHeight+t.descender-t.fontSize/3-n/2,h:n,w:n,type:"rect",color:e}]}}(e,i);break;case"none":r={};break;case"disc":default:r=function(t,e){var n=t.fontSize/6;return{canvas:[{x:n,y:t.height/t.lineHeight+t.descender-t.fontSize/3,r1:n,r2:n,type:"ellipse",color:e}]}}(e,i)}return r._minWidth=r._maxWidth=e.width,r._minHeight=r._maxHeight=e.height,r},r.prototype.buildOrderedMarker=function(t,e,n,r){function i(t){function e(t){return(t>=26?e((t/26>>0)-1):"")+"abcdefghijklmnopqrstuvwxyz"[t%26>>0]}return t<1?t.toString():e(t-1)}function o(t){if(t<1||t>4999)return t.toString();var e,n=t,r={M:1e3,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1},i="";for(e in r)for(;n>=r[e];)i+=e,n-=r[e];return i}var a;switch(n){case"none":a=null;break;case"upper-alpha":a=i(t).toUpperCase();break;case"lower-alpha":a=i(t);break;case"upper-roman":a=o(t);break;case"lower-roman":a=o(t).toLowerCase();break;case"decimal":default:a=function(t){return t.toString()}(t)}if(null===a)return{};r&&(c(r)?(r[0]&&(a=r[0]+a),r[1]&&(a+=r[1]),a+=" "):a+=r+" ");var s={text:a},u=e.getProperty("markerColor");return u&&(s.color=u),{_inlines:this.textTools.buildInlines(s,e).items}},r.prototype.measureUnorderedList=function(t){var e=this.styleStack.clone(),n=t.ul;t.type=t.type||"disc",t._gapSize=this.gapSizeForList(),t._minWidth=0,t._maxWidth=0;for(var r=0,i=n.length;r<i;r++){var o=n[r]=this.measureNode(n[r]);o.ol||o.ul||(o.listMarker=this.buildUnorderedMarker(e,t._gapSize,o.listType||t.type)),t._minWidth=Math.max(t._minWidth,n[r]._minWidth+t._gapSize.width),t._maxWidth=Math.max(t._maxWidth,n[r]._maxWidth+t._gapSize.width)}return t},r.prototype.measureOrderedList=function(t){var e=this.styleStack.clone(),n=t.ol;t.type=t.type||"decimal",t.separator=t.separator||".",t.reversed=t.reversed||!1,u(t.start)||(t.start=t.reversed?n.length:1),t._gapSize=this.gapSizeForList(),t._minWidth=0,t._maxWidth=0;for(var r=t.start,i=0,o=n.length;i<o;i++){var a=n[i]=this.measureNode(n[i]);if(!a.ol&&!a.ul){var s=u(a.counter)?a.counter:r;a.listMarker=this.buildOrderedMarker(s,e,a.listType||t.type,t.separator),a.listMarker._inlines&&(t._gapSize.width=Math.max(t._gapSize.width,a.listMarker._inlines[0].width))}t._minWidth=Math.max(t._minWidth,n[i]._minWidth),t._maxWidth=Math.max(t._maxWidth,n[i]._maxWidth),t.reversed?r--:r++}t._minWidth+=t._gapSize.width,t._maxWidth+=t._gapSize.width;for(var i=0,o=n.length;i<o;i++){var a=n[i];a.ol||a.ul||(a.listMarker._minWidth=a.listMarker._maxWidth=t._gapSize.width)}return t},r.prototype.measureColumns=function(t){var e=t.columns;t._gap=this.styleStack.getProperty("columnGap")||0;for(var n=0,r=e.length;n<r;n++)e[n]=this.measureNode(e[n]);var i=a.measureMinMax(e),o=e.length>0?e.length-1:0;return t._minWidth=i.min+t._gap*o,t._maxWidth=i.max+t._gap*o,t},r.prototype.measureTable=function(t){function e(e,n,r){for(var i={minWidth:0,maxWidth:0},o=0;o<n;o++)i.minWidth+=t.table.widths[e+o]._minWidth+(o?r.offsets[e+o]:0),i.maxWidth+=t.table.widths[e+o]._maxWidth+(o?r.offsets[e+o]:0);return i}!function(t){if(t.table.widths||(t.table.widths="auto"),s(t.table.widths))for(t.table.widths=[t.table.widths];t.table.widths.length<t.table.body[0].length;)t.table.widths.push(t.table.widths[t.table.widths.length-1]);for(var e=0,n=t.table.widths.length;e<n;e++){var r=t.table.widths[e];(u(r)||s(r))&&(t.table.widths[e]={width:r})}}(t),t._layout=function(e){var n=t.layout;return s(n)&&(n=e[n]),h({hLineWidth:function(t,e){return 1},vLineWidth:function(t,e){return 1},hLineColor:function(t,e){return"black"},vLineColor:function(t,e){return"black"},hLineStyle:function(t,e){return null},vLineStyle:function(t,e){return null},paddingLeft:function(t,e){return 4},paddingRight:function(t,e){return 4},paddingTop:function(t,e){return 2},paddingBottom:function(t,e){return 2},fillColor:function(t,e){return null},defaultBorder:!0},n)}(this.tableLayouts),t._offsets=function(e){for(var n=[],r=0,i=0,o=0,a=t.table.widths.length;o<a;o++){var s=i+e.vLineWidth(o,t)+e.paddingLeft(o,t);n.push(s),r+=s,i=e.paddingRight(o,t)}return r+=i+e.vLineWidth(t.table.widths.length,t),{total:r,offsets:n}}(t._layout);var n,r,i,o,c=[];for(n=0,i=t.table.body[0].length;n<i;n++){var f=t.table.widths[n];for(f._minWidth=0,f._maxWidth=0,r=0,o=t.table.body.length;r<o;r++){var d=t.table.body[r],p=d[n];if(void 0===p)throw console.error("Malformed table row ",d,"in node ",t),"Malformed table row, a cell is undefined.";null===p&&(p=""),p._span||(p=d[n]=this.styleStack.auto(p,function(t,e){return function(){return l(e)&&(e.fillColor=t.styleStack.getProperty("fillColor")),t.measureNode(e)}}(this,p)),p.colSpan&&p.colSpan>1?(!function(t,e,n){for(var r=1;r<n;r++)t[e+r]={_span:!0,_minWidth:0,_maxWidth:0,rowSpan:t[e].rowSpan}}(d,n,p.colSpan),c.push({col:n,span:p.colSpan,minWidth:p._minWidth,maxWidth:p._maxWidth})):(f._minWidth=Math.max(f._minWidth,p._minWidth),f._maxWidth=Math.max(f._maxWidth,p._maxWidth))),p.rowSpan&&p.rowSpan>1&&function(t,e,n,r){for(var i=1;i<r;i++)t.body[e+i][n]={_span:!0,_minWidth:0,_maxWidth:0,fillColor:t.body[e][n].fillColor}}(t.table,r,n,p.rowSpan)}}!function(){for(var n,r,i=0,o=c.length;i<o;i++){var a=c[i],s=e(a.col,a.span,t._offsets),u=a.minWidth-s.minWidth,l=a.maxWidth-s.maxWidth;if(u>0)for(n=u/a.span,r=0;r<a.span;r++)t.table.widths[a.col+r]._minWidth+=n;if(l>0)for(n=l/a.span,r=0;r<a.span;r++)t.table.widths[a.col+r]._maxWidth+=n}}();var g=a.measureMinMax(t.table.widths);return t._minWidth=g.min+t._offsets.total,t._maxWidth=g.max+t._offsets.total,t},r.prototype.measureCanvas=function(t){for(var e=0,n=0,r=0,i=t.canvas.length;r<i;r++){var o=t.canvas[r];switch(o.type){case"ellipse":e=Math.max(e,o.x+o.r1),n=Math.max(n,o.y+o.r2);break;case"rect":e=Math.max(e,o.x+o.w),n=Math.max(n,o.y+o.h);break;case"line":e=Math.max(e,o.x1,o.x2),n=Math.max(n,o.y1,o.y2);break;case"polyline":for(var a=0,s=o.points.length;a<s;a++)e=Math.max(e,o.points[a].x),n=Math.max(n,o.points[a].y)}}return t._minWidth=t._maxWidth=e,t._minHeight=t._maxHeight=n,t._alignment=this.styleStack.getProperty("alignment"),t},r.prototype.measureQr=function(t){return t=d.measure(t),t._alignment=this.styleStack.getProperty("alignment"),t},t.exports=r},function(t,e,n){"use strict";function r(t,e){var n={numeric:s,alphanumeric:u,octet:l},r={L:d,M:p,Q:g,H:v};e=e||{};var i=e.version||-1,o=r[(e.eccLevel||"L").toUpperCase()],a=e.mode?n[e.mode.toLowerCase()]:-1,f="mask"in e?e.mask:-1;if(a<0)a="string"==typeof t?t.match(c)?s:t.match(h)?u:l:l;else if(a!=s&&a!=u&&a!=l)throw"invalid or unsupported mode";if(null===(t=M(a,t)))throw"invalid data format";if(o<0||o>3)throw"invalid ECC level";if(i<0){for(i=1;i<=40&&!(t.length<=R(i,a,o));++i);if(i>40)throw"too large data for the Qr format"}else if(i<1||i>40)throw"invalid Qr version! should be between 1 and 40";if(-1!=f&&(f<0||f>8))throw"invalid mask";return V(t,i,a,o,f)}function i(t,e){var n=[],i=e.background||"#fff",o=e.foreground||"#000",a=r(t,e),s=a.length,u=Math.floor(e.fit?e.fit/s:5),l=s*u;n.push({type:"rect",x:0,y:0,w:l,h:l,lineWidth:0,color:i});for(var c=0;c<s;++c)for(var f=0;f<s;++f)a[c][f]&&n.push({type:"rect",x:u*f,y:u*c,w:u,h:u,lineWidth:0,color:o});return{canvas:n,size:l}}function o(t){var e=i(t.qr,t);return t._canvas=e.canvas,t._width=t._height=t._minWidth=t._maxWidth=t._minHeight=t._maxHeight=e.size,t}for(var a=[null,[[10,7,17,13],[1,1,1,1],[]],[[16,10,28,22],[1,1,1,1],[4,16]],[[26,15,22,18],[1,1,2,2],[4,20]],[[18,20,16,26],[2,1,4,2],[4,24]],[[24,26,22,18],[2,1,4,4],[4,28]],[[16,18,28,24],[4,2,4,4],[4,32]],[[18,20,26,18],[4,2,5,6],[4,20,36]],[[22,24,26,22],[4,2,6,6],[4,22,40]],[[22,30,24,20],[5,2,8,8],[4,24,44]],[[26,18,28,24],[5,4,8,8],[4,26,48]],[[30,20,24,28],[5,4,11,8],[4,28,52]],[[22,24,28,26],[8,4,11,10],[4,30,56]],[[22,26,22,24],[9,4,16,12],[4,32,60]],[[24,30,24,20],[9,4,16,16],[4,24,44,64]],[[24,22,24,30],[10,6,18,12],[4,24,46,68]],[[28,24,30,24],[10,6,16,17],[4,24,48,72]],[[28,28,28,28],[11,6,19,16],[4,28,52,76]],[[26,30,28,28],[13,6,21,18],[4,28,54,80]],[[26,28,26,26],[14,7,25,21],[4,28,56,84]],[[26,28,28,30],[16,8,25,20],[4,32,60,88]],[[26,28,30,28],[17,8,25,23],[4,26,48,70,92]],[[28,28,24,30],[17,9,34,23],[4,24,48,72,96]],[[28,30,30,30],[18,9,30,25],[4,28,52,76,100]],[[28,30,30,30],[20,10,32,27],[4,26,52,78,104]],[[28,26,30,30],[21,12,35,29],[4,30,56,82,108]],[[28,28,30,28],[23,12,37,34],[4,28,56,84,112]],[[28,30,30,30],[25,12,40,34],[4,32,60,88,116]],[[28,30,30,30],[26,13,42,35],[4,24,48,72,96,120]],[[28,30,30,30],[28,14,45,38],[4,28,52,76,100,124]],[[28,30,30,30],[29,15,48,40],[4,24,50,76,102,128]],[[28,30,30,30],[31,16,51,43],[4,28,54,80,106,132]],[[28,30,30,30],[33,17,54,45],[4,32,58,84,110,136]],[[28,30,30,30],[35,18,57,48],[4,28,56,84,112,140]],[[28,30,30,30],[37,19,60,51],[4,32,60,88,116,144]],[[28,30,30,30],[38,19,63,53],[4,28,52,76,100,124,148]],[[28,30,30,30],[40,20,66,56],[4,22,48,74,100,126,152]],[[28,30,30,30],[43,21,70,59],[4,26,52,78,104,130,156]],[[28,30,30,30],[45,22,74,62],[4,30,56,82,108,134,160]],[[28,30,30,30],[47,24,77,65],[4,24,52,80,108,136,164]],[[28,30,30,30],[49,25,81,68],[4,28,56,84,112,140,168]]],s=1,u=2,l=4,c=/^\d*$/,f=/^[A-Za-z0-9 $%*+\-.\/:]*$/,h=/^[A-Z0-9 $%*+\-.\/:]*$/,d=1,p=0,g=3,v=2,y=[],b=[-1],m=0,w=1;m<255;++m)y.push(w),b[w]=m,w=2*w^(w>=128?285:0);for(var x=[[]],m=0;m<30;++m){for(var _=x[m],k=[],S=0;S<=m;++S){var C=S<m?y[_[S]]:0,A=y[(m+(_[S-1]||0))%255];k.push(b[C^A])}x.push(k)}for(var P={},m=0;m<45;++m)P["0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:".charAt(m)]=m;var E=[function(t,e){return(t+e)%2==0},function(t,e){return t%2==0},function(t,e){return e%3==0},function(t,e){return(t+e)%3==0},function(t,e){return((t/2|0)+(e/3|0))%2==0},function(t,e){return t*e%2+t*e%3==0},function(t,e){return(t*e%2+t*e%3)%2==0},function(t,e){return((t+e)%2+t*e%3)%2==0}],O=function(t){return t>6},T=function(t){return 4*t+17},I=function(t){var e=a[t],n=16*t*t+128*t+64;return O(t)&&(n-=36),e[2].length&&(n-=25*e[2].length*e[2].length-10*e[2].length-55),n},B=function(t,e){var n=-8&I(t),r=a[t];return n-=8*r[0][e]*r[1][e]},L=function(t,e){switch(e){case s:return t<10?10:t<27?12:14;case u:return t<10?9:t<27?11:13;case l:return t<10?8:16;case 8:return t<10?8:t<27?10:12}},R=function(t,e,n){var r=B(t,n)-4-L(t,e);switch(e){case s:return 3*(r/10|0)+(r%10<4?0:r%10<7?1:2);case u:return 2*(r/11|0)+(r%11<6?0:1);case l:return r/8|0;case 8:return r/13|0}},M=function(t,e){switch(t){case s:return e.match(c)?e:null;case u:return e.match(f)?e.toUpperCase():null;case l:if("string"==typeof e){for(var n=[],r=0;r<e.length;++r){var i=e.charCodeAt(r);i<128?n.push(i):i<2048?n.push(192|i>>6,128|63&i):i<65536?n.push(224|i>>12,128|i>>6&63,128|63&i):n.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i)}return n}return e}},F=function(t,e,n,r){var i=[],o=0,a=8,c=n.length,f=function(t,e){if(e>=a){for(i.push(o|t>>(e-=a));e>=8;)i.push(t>>(e-=8)&255);o=0,a=8}e>0&&(o|=(t&(1<<e)-1)<<(a-=e))},h=L(t,e);switch(f(e,4),f(c,h),e){case s:for(var d=2;d<c;d+=3)f(parseInt(n.substring(d-2,d+1),10),10);f(parseInt(n.substring(d-2),10),[0,4,7][c%3]);break;case u:for(var d=1;d<c;d+=2)f(45*P[n.charAt(d-1)]+P[n.charAt(d)],11);c%2==1&&f(P[n.charAt(d-1)],6);break;case l:for(var d=0;d<c;++d)f(n[d],8)}for(f(0,4),a<8&&i.push(o);i.length+1<r;)i.push(236,17);return i.length<r&&i.push(236),i},D=function(t,e){for(var n=t.slice(0),r=t.length,i=e.length,o=0;o<i;++o)n.push(0);for(var o=0;o<r;){var a=b[n[o++]];if(a>=0)for(var s=0;s<i;++s)n[o+s]^=y[(a+e[s])%255]}return n.slice(r)},z=function(t,e,n){for(var r=[],i=t.length/e|0,o=0,a=e-t.length%e,s=0;s<a;++s)r.push(o),o+=i;for(var s=a;s<e;++s)r.push(o),o+=i+1;r.push(o);for(var u=[],s=0;s<e;++s)u.push(D(t.slice(r[s],r[s+1]),n));for(var l=[],c=t.length/e|0,s=0;s<c;++s)for(var f=0;f<e;++f)l.push(t[r[f]+s]);for(var f=a;f<e;++f)l.push(t[r[f+1]-1]);for(var s=0;s<n.length;++s)for(var f=0;f<e;++f)l.push(u[f][s]);return l},N=function(t,e,n,r){for(var i=t<<r,o=e-1;o>=0;--o)i>>r+o&1&&(i^=n<<o);return t<<r|i},W=function(t){for(var e=a[t],n=T(t),r=[],i=[],o=0;o<n;++o)r.push([]),i.push([]);var s=function(t,e,n,o,a){for(var s=0;s<n;++s)for(var u=0;u<o;++u)r[t+s][e+u]=a[s]>>u&1,i[t+s][e+u]=1};s(0,0,9,9,[127,65,93,93,93,65,383,0,64]),s(n-8,0,8,9,[256,127,65,93,93,93,65,127]),s(0,n-8,9,8,[254,130,186,186,186,130,254,0,0]);for(var o=9;o<n-8;++o)r[6][o]=r[o][6]=1&~o,i[6][o]=i[o][6]=1;for(var u=e[2],l=u.length,o=0;o<l;++o)for(var c=0===o||o===l-1?1:0,f=0===o?l-1:l,h=c;h<f;++h)s(u[o],u[h],5,5,[31,17,21,17,31]);if(O(t))for(var d=N(t,6,7973,12),p=0,o=0;o<6;++o)for(var h=0;h<3;++h)r[o][n-11+h]=r[n-11+h][o]=d>>p++&1,i[o][n-11+h]=i[n-11+h][o]=1;return{matrix:r,reserved:i}},U=function(t,e,n){for(var r=t.length,i=0,o=-1,a=r-1;a>=0;a-=2){6==a&&--a;for(var s=o<0?r-1:0,u=0;u<r;++u){for(var l=a;l>a-2;--l)e[s][l]||(t[s][l]=n[i>>3]>>(7&~i)&1,++i);s+=o}o=-o}return t},j=function(t,e,n){for(var r=E[n],i=t.length,o=0;o<i;++o)for(var a=0;a<i;++a)e[o][a]||(t[o][a]^=r(o,a));return t},G=function(t,e,n,r){for(var i=t.length,o=21522^N(n<<3|r,5,1335,10),a=0;a<15;++a){var s=[0,1,2,3,4,5,7,8,i-7,i-6,i-5,i-4,i-3,i-2,i-1][a],u=[i-1,i-2,i-3,i-4,i-5,i-6,i-7,i-8,7,5,4,3,2,1,0][a];t[s][8]=t[8][u]=o>>a&1}return t},H=function(t){for(var e=function(t){for(var e=0,n=0;n<t.length;++n)t[n]>=5&&(e+=t[n]-5+3);for(var n=5;n<t.length;n+=2){var r=t[n];t[n-1]==r&&t[n-2]==3*r&&t[n-3]==r&&t[n-4]==r&&(t[n-5]>=4*r||t[n+1]>=4*r)&&(e+=40)}return e},n=t.length,r=0,i=0,o=0;o<n;++o){var a,s=t[o];a=[0];for(var u=0;u<n;){var l;for(l=0;u<n&&s[u];++l)++u;for(a.push(l),l=0;u<n&&!s[u];++l)++u;a.push(l)}r+=e(a),a=[0];for(var u=0;u<n;){var l;for(l=0;u<n&&t[u][o];++l)++u;for(a.push(l),l=0;u<n&&!t[u][o];++l)++u;a.push(l)}r+=e(a);var c=t[o+1]||[];i+=s[0];for(var u=1;u<n;++u){var f=s[u];i+=f,s[u-1]==f&&c[u]===f&&c[u-1]===f&&(r+=3)}}return r+=10*(Math.abs(i/n/n-.5)/.05|0)},V=function(t,e,n,r,i){var o=a[e],s=F(e,n,t,B(e,r)>>3);s=z(s,o[1][r],x[o[0][r]]);var u=W(e),l=u.matrix,c=u.reserved;if(U(l,c,s),i<0){j(l,c,0),G(l,0,r,0);var f=0,h=H(l);for(j(l,c,0),i=1;i<8;++i){j(l,c,i),G(l,0,r,i);var d=H(l);h>d&&(h=d,f=i),j(l,c,i)}i=f}return j(l,c,i),G(l,0,r,i),l};t.exports={measure:o}},function(t,e,n){"use strict";function r(t,e){this.transactionLevel=0,this.repeatables=[],this.tracker=e,this.writer=new a(t,e)}function i(t,e){var n=e(t);return n||(t.moveToNextPage(),n=e(t)),n}var o=n(0).isUndefined,a=n(433);r.prototype.addLine=function(t,e,n){return i(this,function(r){return r.writer.addLine(t,e,n)})},r.prototype.addImage=function(t,e){return i(this,function(n){return n.writer.addImage(t,e)})},r.prototype.addQr=function(t,e){return i(this,function(n){return n.writer.addQr(t,e)})},r.prototype.addVector=function(t,e,n,r){return this.writer.addVector(t,e,n,r)},r.prototype.beginClip=function(t,e){return this.writer.beginClip(t,e)},r.prototype.endClip=function(){return this.writer.endClip()},r.prototype.alignCanvas=function(t){this.writer.alignCanvas(t)},r.prototype.addFragment=function(t,e,n,r){this.writer.addFragment(t,e,n,r)||(this.moveToNextPage(),this.writer.addFragment(t,e,n,r))},r.prototype.moveToNextPage=function(t){var e=this.writer.context.moveToNextPage(t);this.repeatables.forEach(function(t){o(t.insertedOnPages[this.writer.context.page])?(t.insertedOnPages[this.writer.context.page]=!0,this.writer.addFragment(t,!0)):this.writer.context.moveDown(t.height)},this),this.writer.tracker.emit("pageChanged",{prevPage:e.prevPage,prevY:e.prevY,y:this.writer.context.y})},r.prototype.beginUnbreakableBlock=function(t,e){0==this.transactionLevel++&&(this.originalX=this.writer.context.x,this.writer.pushContext(t,e))},r.prototype.commitUnbreakableBlock=function(t,e){if(0==--this.transactionLevel){var n=this.writer.context;this.writer.popContext();var r=n.pages.length;if(r>0){var i=n.pages[0];if(i.xOffset=t,i.yOffset=e,r>1)if(void 0!==t||void 0!==e)i.height=n.getCurrentPage().pageSize.height-n.pageMargins.top-n.pageMargins.bottom;else{i.height=this.writer.context.getCurrentPage().pageSize.height-this.writer.context.pageMargins.top-this.writer.context.pageMargins.bottom;for(var o=0,a=this.repeatables.length;o<a;o++)i.height-=this.repeatables[o].height}else i.height=n.y;void 0!==t||void 0!==e?this.writer.addFragment(i,!0,!0,!0):this.addFragment(i)}}},r.prototype.currentBlockToRepeatable=function(){var t=this.writer.context,e={items:[]};return t.pages[0].items.forEach(function(t){e.items.push(t)}),e.xOffset=this.originalX,e.height=t.y,e.insertedOnPages=[],e},r.prototype.pushToRepeatables=function(t){this.repeatables.push(t)},r.prototype.popFromRepeatables=function(){this.repeatables.pop()},r.prototype.context=function(){return this.writer.context},t.exports=r},function(t,e,n){"use strict";function r(t,e){this.context=t,this.contextStack=[],this.tracker=e}function i(t,e,n){null===n||void 0===n||n<0||n>t.items.length?t.items.push(e):t.items.splice(n,0,e)}function o(t){var e=new a(t.maxWidth);for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}var a=n(204),s=n(0).isNumber,u=n(0).pack,l=n(0).offsetVector,c=n(203);r.prototype.addLine=function(t,e,n){var r=t.getHeight(),o=this.context,a=o.getCurrentPage(),s=this.getCurrentPositionOnPage();return!(o.availableHeight<r||!a)&&(t.x=o.x+(t.x||0),t.y=o.y+(t.y||0),this.alignLine(t),i(a,{type:"line",item:t},n),this.tracker.emit("lineAdded",t),e||o.moveDown(r),s)},r.prototype.alignLine=function(t){var e=this.context.availableWidth,n=t.getWidth(),r=t.inlines&&t.inlines.length>0&&t.inlines[0].alignment,i=0;switch(r){case"right":i=e-n;break;case"center":i=(e-n)/2}if(i&&(t.x=(t.x||0)+i),"justify"===r&&!t.newLineForced&&!t.lastLineInParagraph&&t.inlines.length>1)for(var o=(e-n)/(t.inlines.length-1),a=1,s=t.inlines.length;a<s;a++)i=a*o,t.inlines[a].x+=i,t.inlines[a].justifyShift=o},r.prototype.addImage=function(t,e){var n=this.context,r=n.getCurrentPage(),o=this.getCurrentPositionOnPage();return!(!r||void 0===t.absolutePosition&&n.availableHeight<t._height&&r.items.length>0)&&(void 0===t._x&&(t._x=t.x||0),t.x=n.x+t._x,t.y=n.y,this.alignImage(t),i(r,{type:"image",item:t},e),n.moveDown(t._height),o)},r.prototype.addQr=function(t,e){var n=this.context,r=n.getCurrentPage(),i=this.getCurrentPositionOnPage();if(!r||void 0===t.absolutePosition&&n.availableHeight<t._height)return!1;void 0===t._x&&(t._x=t.x||0),t.x=n.x+t._x,t.y=n.y,this.alignImage(t);for(var o=0,a=t._canvas.length;o<a;o++){var s=t._canvas[o];s.x+=t.x,s.y+=t.y,this.addVector(s,!0,!0,e)}return n.moveDown(t._height),i},r.prototype.alignImage=function(t){var e=this.context.availableWidth,n=t._minWidth,r=0;switch(t._alignment){case"right":r=e-n;break;case"center":r=(e-n)/2}r&&(t.x=(t.x||0)+r)},r.prototype.alignCanvas=function(t){var e=this.context.availableWidth,n=t._minWidth,r=0;switch(t._alignment){case"right":r=e-n;break;case"center":r=(e-n)/2}r&&t.canvas.forEach(function(t){l(t,r,0)})},r.prototype.addVector=function(t,e,n,r){var o=this.context,a=o.getCurrentPage(),s=this.getCurrentPositionOnPage();if(a)return l(t,e?0:o.x,n?0:o.y),i(a,{type:"vector",item:t},r),s},r.prototype.beginClip=function(t,e){var n=this.context;return n.getCurrentPage().items.push({type:"beginClip",item:{x:n.x,y:n.y,width:t,height:e}}),!0},r.prototype.endClip=function(){return this.context.getCurrentPage().items.push({type:"endClip"}),!0},r.prototype.addFragment=function(t,e,n,r){var i=this.context,a=i.getCurrentPage();return!(!e&&t.height>i.availableHeight)&&(t.items.forEach(function(r){switch(r.type){case"line":var s=o(r.item);s._node&&(s._node.positions[0].pageNumber=i.page+1),s.x=(s.x||0)+(e?t.xOffset||0:i.x),s.y=(s.y||0)+(n?t.yOffset||0:i.y),a.items.push({type:"line",item:s});break;case"vector":var c=u(r.item);l(c,e?t.xOffset||0:i.x,n?t.yOffset||0:i.y),a.items.push({type:"vector",item:c});break;case"image":var f=u(r.item);f.x=(f.x||0)+(e?t.xOffset||0:i.x),f.y=(f.y||0)+(n?t.yOffset||0:i.y),a.items.push({type:"image",item:f})}}),r||i.moveDown(t.height),!0)},r.prototype.pushContext=function(t,e){void 0===t&&(e=this.context.getCurrentPage().height-this.context.pageMargins.top-this.context.pageMargins.bottom,t=this.context.availableWidth),s(t)&&(t=new c({width:t,height:e},{left:0,right:0,top:0,bottom:0})),this.contextStack.push(this.context),this.context=t},r.prototype.popContext=function(){this.context=this.contextStack.pop()},r.prototype.getCurrentPositionOnPage=function(){return(this.contextStack[0]||this.context).getCurrentPosition()},t.exports=r},function(t,e,n){"use strict";function r(t){this.tableNode=t}var i=n(135),o=n(0).isFunction;r.prototype.beginTable=function(t){var e,n,r=this;e=this.tableNode,this.offsets=e._offsets,this.layout=e._layout,n=t.context().availableWidth-this.offsets.total,i.buildColumnWidths(e.table.widths,n),this.tableWidth=e._offsets.total+function(){var t=0;return e.table.widths.forEach(function(e){t+=e._calcWidth}),t}(),this.rowSpanData=function(){var t=[],e=0,n=0;t.push({left:0,rowSpan:0});for(var i=0,o=r.tableNode.table.body[0].length;i<o;i++){n=r.layout.paddingLeft(i,r.tableNode)+r.layout.paddingRight(i,r.tableNode)+r.layout.vLineWidth(i,r.tableNode)+r.tableNode.table.widths[i]._calcWidth,t[t.length-1].width=n,e+=n,t.push({left:e,rowSpan:0,width:0})}return t}(),this.cleanUpRepeatables=!1,this.headerRows=e.table.headerRows||0,this.rowsWithoutPageBreak=this.headerRows+(e.table.keepWithHeaderRows||0),this.dontBreakRows=e.table.dontBreakRows||!1,this.rowsWithoutPageBreak&&t.beginUnbreakableBlock(),function(t){function e(e,n,r,i){var o=t[e][n];o.border=o.border||{},o.border[r]=i}for(var n=0;n<t.length;n++)for(var r=t[n],i=0;i<r.length;i++){var o=r[i];if(o.border){for(var a=o.rowSpan||1,s=o.colSpan||1,u=0;u<a;u++)void 0!==o.border[0]&&u>0&&e(n+u,i,0,o.border[0]),void 0!==o.border[2]&&e(n+u,i+s-1,2,o.border[2]);for(var l=0;l<s;l++)void 0!==o.border[1]&&l>0&&e(n,i+l,1,o.border[1]),void 0!==o.border[3]&&e(n+a-1,i+l,3,o.border[3])}}}(this.tableNode.table.body),this.drawHorizontalLine(0,t)},r.prototype.onRowBreak=function(t,e){var n=this;return function(){var t=n.rowPaddingTop+(n.headerRows?0:n.topLineWidth);e.context().availableHeight-=n.reservedAtBottom,e.context().moveDown(t)}},r.prototype.beginRow=function(t,e){this.topLineWidth=this.layout.hLineWidth(t,this.tableNode),this.rowPaddingTop=this.layout.paddingTop(t,this.tableNode),this.bottomLineWidth=this.layout.hLineWidth(t+1,this.tableNode),this.rowPaddingBottom=this.layout.paddingBottom(t,this.tableNode),this.rowCallback=this.onRowBreak(t,e),e.tracker.startTracking("pageChanged",this.rowCallback),this.dontBreakRows&&e.beginUnbreakableBlock(),this.rowTopY=e.context().y,this.reservedAtBottom=this.bottomLineWidth+this.rowPaddingBottom,e.context().availableHeight-=this.reservedAtBottom,e.context().moveDown(this.rowPaddingTop)},r.prototype.drawHorizontalLine=function(t,e,n){var r=this.layout.hLineWidth(t,this.tableNode);if(r){var i,a=this.layout.hLineStyle(t,this.tableNode);a&&a.dash&&(i=a.dash);for(var s=r/2,u=null,l=this.tableNode.table.body,c=0,f=this.rowSpanData.length;c<f;c++){var h=this.rowSpanData[c],d=!h.rowSpan;if(d&&c<f-1){var p=!1,g=!1;if(t<l.length){var v=l[t][c];p=v.border?v.border[1]:this.layout.defaultBorder}if(t>0){var y=l[t-1][c];g=y.border?y.border[3]:this.layout.defaultBorder}d=p||g}!u&&d&&(u={left:h.left,width:0}),d&&(u.width+=h.width||0);var b=(n||0)+s;d&&c!==f-1||u&&u.width&&(e.addVector({type:"line",x1:u.left,x2:u.left+u.width,y1:b,y2:b,lineWidth:r,dash:i,lineColor:o(this.layout.hLineColor)?this.layout.hLineColor(t,this.tableNode):this.layout.hLineColor},!1,n),u=null)}e.context().moveDown(r)}},r.prototype.drawVerticalLine=function(t,e,n,r,i){var a=this.layout.vLineWidth(r,this.tableNode);if(0!==a){var s,u=this.layout.vLineStyle(r,this.tableNode);u&&u.dash&&(s=u.dash),i.addVector({type:"line",x1:t+a/2,x2:t+a/2,y1:e,y2:n,lineWidth:a,dash:s,lineColor:o(this.layout.vLineColor)?this.layout.vLineColor(r,this.tableNode):this.layout.vLineColor},!1,!0)}},r.prototype.endTable=function(t){this.cleanUpRepeatables&&t.popFromRepeatables()},r.prototype.endRow=function(t,e,n){var r,i,a=this;e.tracker.stopTracking("pageChanged",this.rowCallback),e.context().moveDown(this.layout.paddingBottom(t,this.tableNode)),e.context().availableHeight+=this.reservedAtBottom;var s=e.context().page,u=e.context().y,l=function(){for(var e=[],n=0,r=0,i=a.tableNode.table.body[t].length;r<i;r++){if(!n){e.push({x:a.rowSpanData[r].left,index:r});var o=a.tableNode.table.body[t][r];n=o._colSpan||o.colSpan||0}n>0&&n--}return e.push({x:a.rowSpanData[a.rowSpanData.length-1].left,index:a.rowSpanData.length-1}),e}(),c=[],f=n&&n.length>0,h=this.tableNode.table.body;if(c.push({y0:this.rowTopY,page:f?n[0].prevPage:s}),f)for(i=0,r=n.length;i<r;i++){var d=n[i];c[c.length-1].y1=d.prevY,c.push({y0:d.y,page:d.prevPage+1})}c[c.length-1].y1=u;for(var p=c[0].y1-c[0].y0===this.rowPaddingTop,g=p?1:0,v=c.length;g<v;g++){var y=g<c.length-1,b=g>0&&!this.headerRows,m=b?0:this.topLineWidth,w=c[g].y0,x=c[g].y1;for(y&&(x+=this.rowPaddingBottom),e.context().page!=c[g].page&&(e.context().page=c[g].page,this.reservedAtBottom=0),i=0,r=l.length;i<r;i++){var _=!1,k=!1,S=l[i].index;if(S<h[t].length){var C=h[t][S];_=C.border?C.border[0]:this.layout.defaultBorder,k=C.border?C.border[2]:this.layout.defaultBorder}if(S>0&&!_){var C=h[t][S-1];_=C.border?C.border[2]:this.layout.defaultBorder}if(S+1<h[t].length&&!k){var C=h[t][S+1];k=C.border?C.border[0]:this.layout.defaultBorder}if(_&&this.drawVerticalLine(l[i].x,w-m,x+this.bottomLineWidth,l[i].index,e),i<r-1){var A=h[t][S].fillColor;if(A||(A=o(this.layout.fillColor)?this.layout.fillColor(t,this.tableNode,S):this.layout.fillColor),A){var P,E=_?this.layout.vLineWidth(S,this.tableNode):0;P=0!==S&&S+1!=h[t].length||k?k?this.layout.vLineWidth(S+1,this.tableNode)/2:0:this.layout.vLineWidth(S+1,this.tableNode);var O=this.dontBreakRows?l[i].x+E:l[i].x+E/2,T=this.dontBreakRows?w:w-m/2,I=l[i+1].x+P,B=this.dontBreakRows?x+this.bottomLineWidth:x+this.bottomLineWidth/2;e.addVector({type:"rect",x:O,y:T,w:I-O,h:B-T,lineWidth:0,color:A},!1,!0,e.context().backgroundLength[e.context().page])}}}y&&!1!==this.layout.hLineWhenBroken&&this.drawHorizontalLine(t+1,e,x),b&&!1!==this.layout.hLineWhenBroken&&this.drawHorizontalLine(t,e,w)}e.context().page=s,e.context().y=u;var L=this.tableNode.table.body[t];for(i=0,r=L.length;i<r;i++){if(L[i].rowSpan&&(this.rowSpanData[i].rowSpan=L[i].rowSpan,L[i].colSpan&&L[i].colSpan>1))for(var R=1;R<L[i].rowSpan;R++)this.tableNode.table.body[t+R][i]._colSpan=L[i].colSpan;this.rowSpanData[i].rowSpan>0&&this.rowSpanData[i].rowSpan--}this.drawHorizontalLine(t+1,e),this.headerRows&&t===this.headerRows-1&&(this.headerRepeatable=e.currentBlockToRepeatable()),this.dontBreakRows&&e.tracker.auto("pageChanged",function(){a.headerRows||!1===a.layout.hLineWhenBroken||a.drawHorizontalLine(t,e)},function(){e.commitUnbreakableBlock()}),!this.headerRepeatable||t!==this.rowsWithoutPageBreak-1&&t!==this.tableNode.table.body.length-1||(e.commitUnbreakableBlock(),e.pushToRepeatables(this.headerRepeatable),this.cleanUpRepeatables=!0,this.headerRepeatable=null)},t.exports=r},function(t,e,n){"use strict";t.exports={"4A0":[4767.87,6740.79],"2A0":[3370.39,4767.87],A0:[2383.94,3370.39],A1:[1683.78,2383.94],A2:[1190.55,1683.78],A3:[841.89,1190.55],A4:[595.28,841.89],A5:[419.53,595.28],A6:[297.64,419.53],A7:[209.76,297.64],A8:[147.4,209.76],A9:[104.88,147.4],A10:[73.7,104.88],B0:[2834.65,4008.19],B1:[2004.09,2834.65],B2:[1417.32,2004.09],B3:[1000.63,1417.32],B4:[708.66,1000.63],B5:[498.9,708.66],B6:[354.33,498.9],B7:[249.45,354.33],B8:[175.75,249.45],B9:[124.72,175.75],B10:[87.87,124.72],C0:[2599.37,3676.54],C1:[1836.85,2599.37],C2:[1298.27,1836.85],C3:[918.43,1298.27],C4:[649.13,918.43],C5:[459.21,649.13],C6:[323.15,459.21],C7:[229.61,323.15],C8:[161.57,229.61],C9:[113.39,161.57],C10:[79.37,113.39],RA0:[2437.8,3458.27],RA1:[1729.13,2437.8],RA2:[1218.9,1729.13],RA3:[864.57,1218.9],RA4:[609.45,864.57],SRA0:[2551.18,3628.35],SRA1:[1814.17,2551.18],SRA2:[1275.59,1814.17],SRA3:[907.09,1275.59],SRA4:[637.8,907.09],EXECUTIVE:[521.86,756],FOLIO:[612,936],LEGAL:[612,1008],LETTER:[612,792],TABLOID:[792,1224]}},function(t,e,n){"use strict";(function(e){function n(t,e){this.pdfKitDoc=t,this.imageDictionary=e||{}}n.prototype.measureImage=function(t){var n,r=this;if(this.pdfKitDoc._imageRegistry[t])n=this.pdfKitDoc._imageRegistry[t];else{try{n=this.pdfKitDoc.openImage(function(t){var n=r.imageDictionary[t];if(!n)return t;var i=n.indexOf("base64,");return i<0?r.imageDictionary[t]:e.from(n.substring(i+7),"base64")}(t))}catch(t){n=null}if(null===n||void 0===n)throw"invalid image, images dictionary should contain dataURL entries (or local file paths in node.js)";n.embed(this.pdfKitDoc),this.pdfKitDoc._imageRegistry[t]=n}return{width:n.width,height:n.height}},t.exports=n}).call(e,n(3).Buffer)},function(t,e,n){"use strict";function r(t){for(var e=[],n=null,r=0,i=t.inlines.length;r<i;r++){var o=t.inlines[r],a=o.decoration;if(a){s(a)||(a=[a]);for(var u=o.decorationColor||o.color||"black",l=o.decorationStyle||"solid",c=0,f=a.length;c<f;c++){var h=a[c];n&&h===n.decoration&&l===n.decorationStyle&&u===n.decorationColor?n.inlines.push(o):(n={line:t,decoration:h,decorationColor:u,decorationStyle:l,inlines:[o]},e.push(n))}}else n=null}return e}function i(t,e,n,r){var i=t.inlines[0],o=function(){for(var e=0,n=0,r=t.inlines.length;n<r;n++){e=t.inlines[n].fontSize>e?n:e}return t.inlines[e]}(),a=function(){for(var e=0,n=0,r=t.inlines.length;n<r;n++){var i=t.inlines[n].justifyShift||0;e+=t.inlines[n].width+i}return e}(),s=t.line.getAscenderHeight(),u=o.font.ascender/1e3*o.fontSize,l=o.height,c=l-u,f=.5+.12*Math.floor(Math.max(o.fontSize-8,0)/2);switch(t.decoration){case"underline":n+=s+.45*c;break;case"overline":n+=s-.85*u;break;case"lineThrough":n+=s-.25*u;break;default:throw"Unkown decoration : "+t.decoration}if(r.save(),"double"===t.decorationStyle){var h=Math.max(.5,2*f);r.fillColor(t.decorationColor).rect(e+i.x,n-f/2,a,f/2).fill().rect(e+i.x,n+h-f/2,a,f/2).fill()}else if("dashed"===t.decorationStyle){var d=Math.ceil(a/6.8),p=e+i.x;r.rect(p,n,a,f).clip(),r.fillColor(t.decorationColor);for(var g=0;g<d;g++)r.rect(p,n-f/2,3.96,f).fill(),p+=6.8}else if("dotted"===t.decorationStyle){var v=Math.ceil(a/(3*f)),y=e+i.x;r.rect(y,n,a,f).clip(),r.fillColor(t.decorationColor);for(var b=0;b<v;b++)r.rect(y,n-f/2,f,f).fill(),y+=3*f}else if("wavy"===t.decorationStyle){var m=Math.ceil(a/1.4)+1,w=e+i.x-1;r.rect(e+i.x,n-1,a,n+1).clip(),r.lineWidth(.24),r.moveTo(w,n);for(var x=0;x<m;x++)r.bezierCurveTo(w+.7,n-1,w+1.4,n-1,w+.7*3,n).bezierCurveTo(w+2.8,n+1,w+3.5,n+1,w+.7*6,n),w+=.7*6;r.stroke(t.decorationColor)}else r.fillColor(t.decorationColor).rect(e+i.x,n-f/2,a,f).fill();r.restore()}function o(t,e,n,o){for(var a=r(t),s=0,u=a.length;s<u;s++)i(a[s],e,n,o)}function a(t,e,n,r){for(var i=t.getHeight(),o=0,a=t.inlines.length;o<a;o++){var s=t.inlines[o];if(s.background){var u=s.justifyShift||0;r.fillColor(s.background).rect(e+s.x-u,n,s.width+u,i).fill()}}}var s=n(0).isArray;t.exports={drawBackground:a,drawDecorations:o}}])});
//# sourceMappingURL=pdfmake.min.js.map
this.pdfMake = this.pdfMake || {}; this.pdfMake.vfs = {
  "Roboto-Italic.ttf": "",
  "Roboto-Medium.ttf": "",
  "Roboto-MediumItalic.ttf": "",
  "Roboto-Regular.ttf": ""
};
/*!
 Buttons for DataTables 1.5.6
 Â©2016-2019 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(p){return d(p,window,document)}):"object"===typeof exports?module.exports=function(p,o){p||(p=window);if(!o||!o.fn.dataTable)o=require("datatables.net")(p,o).$;return d(o,p,p.document)}:d(jQuery,window,document)})(function(d,p,o,n){function t(a){var a=new j.Api(a),b=a.init().buttons||j.defaults.buttons;return(new m(a,b)).container()}var j=d.fn.dataTable,x=0,y=0,l=j.ext.buttons,m=function(a,b){if(!(this instanceof
m))return function(b){return(new m(b,a)).container()};"undefined"===typeof b&&(b={});!0===b&&(b={});d.isArray(b)&&(b={buttons:b});this.c=d.extend(!0,{},m.defaults,b);b.buttons&&(this.c.buttons=b.buttons);this.s={dt:new j.Api(a),buttons:[],listenKeys:"",namespace:"dtb"+x++};this.dom={container:d("<"+this.c.dom.container.tag+"/>").addClass(this.c.dom.container.className)};this._constructor()};d.extend(m.prototype,{action:function(a,b){var c=this._nodeToButton(a);if(b===n)return c.conf.action;c.conf.action=
b;return this},active:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.button.active,c=d(c.node);if(b===n)return c.hasClass(e);c.toggleClass(e,b===n?!0:b);return this},add:function(a,b){var c=this.s.buttons;if("string"===typeof b){for(var e=b.split("-"),c=this.s,d=0,g=e.length-1;d<g;d++)c=c.buttons[1*e[d]];c=c.buttons;b=1*e[e.length-1]}this._expandButton(c,a,!1,b);this._draw();return this},container:function(){return this.dom.container},disable:function(a){a=this._nodeToButton(a);d(a.node).addClass(this.c.dom.button.disabled);
return this},destroy:function(){d("body").off("keyup."+this.s.namespace);var a=this.s.buttons.slice(),b,c;b=0;for(c=a.length;b<c;b++)this.remove(a[b].node);this.dom.container.remove();a=this.s.dt.settings()[0];b=0;for(c=a.length;b<c;b++)if(a.inst===this){a.splice(b,1);break}return this},enable:function(a,b){if(!1===b)return this.disable(a);var c=this._nodeToButton(a);d(c.node).removeClass(this.c.dom.button.disabled);return this},name:function(){return this.c.name},node:function(a){if(!a)return this.dom.container;
a=this._nodeToButton(a);return d(a.node)},processing:function(a,b){var c=this._nodeToButton(a);if(b===n)return d(c.node).hasClass("processing");d(c.node).toggleClass("processing",b);return this},remove:function(a){var b=this._nodeToButton(a),c=this._nodeToHost(a),e=this.s.dt;if(b.buttons.length)for(var i=b.buttons.length-1;0<=i;i--)this.remove(b.buttons[i].node);b.conf.destroy&&b.conf.destroy.call(e.button(a),e,d(a),b.conf);this._removeKey(b.conf);d(b.node).remove();a=d.inArray(b,c);c.splice(a,1);
return this},text:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.collection.buttonLiner,e=c.inCollection&&e&&e.tag?e.tag:this.c.dom.buttonLiner.tag,i=this.s.dt,g=d(c.node),f=function(a){return"function"===typeof a?a(i,g,c.conf):a};if(b===n)return f(c.conf.text);c.conf.text=b;e?g.children(e).html(f(b)):g.html(f(b));return this},_constructor:function(){var a=this,b=this.s.dt,c=b.settings()[0],e=this.c.buttons;c._buttons||(c._buttons=[]);c._buttons.push({inst:this,name:this.c.name});for(var i=
0,g=e.length;i<g;i++)this.add(e[i]);b.on("destroy",function(b,e){e===c&&a.destroy()});d("body").on("keyup."+this.s.namespace,function(b){if(!o.activeElement||o.activeElement===o.body){var c=String.fromCharCode(b.keyCode).toLowerCase();a.s.listenKeys.toLowerCase().indexOf(c)!==-1&&a._keypress(c,b)}})},_addKey:function(a){a.key&&(this.s.listenKeys+=d.isPlainObject(a.key)?a.key.key:a.key)},_draw:function(a,b){a||(a=this.dom.container,b=this.s.buttons);a.children().detach();for(var c=0,e=b.length;c<e;c++)a.append(b[c].inserter),
a.append(" "),b[c].buttons&&b[c].buttons.length&&this._draw(b[c].collection,b[c].buttons)},_expandButton:function(a,b,c,e){for(var i=this.s.dt,g=0,b=!d.isArray(b)?[b]:b,f=0,k=b.length;f<k;f++){var r=this._resolveExtends(b[f]);if(r)if(d.isArray(r))this._expandButton(a,r,c,e);else{var h=this._buildButton(r,c);if(h){e!==n?(a.splice(e,0,h),e++):a.push(h);if(h.conf.buttons){var u=this.c.dom.collection;h.collection=d("<"+u.tag+"/>").addClass(u.className).attr("role","menu");h.conf._collection=h.collection;
this._expandButton(h.buttons,h.conf.buttons,!0,e)}r.init&&r.init.call(i.button(h.node),i,d(h.node),r);g++}}}},_buildButton:function(a,b){var c=this.c.dom.button,e=this.c.dom.buttonLiner,i=this.c.dom.collection,g=this.s.dt,f=function(b){return"function"===typeof b?b(g,h,a):b};b&&i.button&&(c=i.button);b&&i.buttonLiner&&(e=i.buttonLiner);if(a.available&&!a.available(g,a))return!1;var k=function(a,b,c,e){e.action.call(b.button(c),a,b,c,e);d(b.table().node()).triggerHandler("buttons-action.dt",[b.button(c),
b,c,e])},i=a.tag||c.tag,r=a.clickBlurs===n?!0:a.clickBlurs,h=d("<"+i+"/>").addClass(c.className).attr("tabindex",this.s.dt.settings()[0].iTabIndex).attr("aria-controls",this.s.dt.table().node().id).on("click.dtb",function(b){b.preventDefault();!h.hasClass(c.disabled)&&a.action&&k(b,g,h,a);r&&h.blur()}).on("keyup.dtb",function(b){b.keyCode===13&&!h.hasClass(c.disabled)&&a.action&&k(b,g,h,a)});"a"===i.toLowerCase()&&h.attr("href","#");"button"===i.toLowerCase()&&h.attr("type","button");e.tag?(i=d("<"+
e.tag+"/>").html(f(a.text)).addClass(e.className),"a"===e.tag.toLowerCase()&&i.attr("href","#"),h.append(i)):h.html(f(a.text));!1===a.enabled&&h.addClass(c.disabled);a.className&&h.addClass(a.className);a.titleAttr&&h.attr("title",f(a.titleAttr));a.attr&&h.attr(a.attr);a.namespace||(a.namespace=".dt-button-"+y++);e=(e=this.c.dom.buttonContainer)&&e.tag?d("<"+e.tag+"/>").addClass(e.className).append(h):h;this._addKey(a);this.c.buttonCreated&&(e=this.c.buttonCreated(a,e));return{conf:a,node:h.get(0),
inserter:e,buttons:[],inCollection:b,collection:null}},_nodeToButton:function(a,b){b||(b=this.s.buttons);for(var c=0,e=b.length;c<e;c++){if(b[c].node===a)return b[c];if(b[c].buttons.length){var d=this._nodeToButton(a,b[c].buttons);if(d)return d}}},_nodeToHost:function(a,b){b||(b=this.s.buttons);for(var c=0,e=b.length;c<e;c++){if(b[c].node===a)return b;if(b[c].buttons.length){var d=this._nodeToHost(a,b[c].buttons);if(d)return d}}},_keypress:function(a,b){if(!b._buttonsHandled){var c=function(e){for(var i=
0,g=e.length;i<g;i++){var f=e[i].conf,k=e[i].node;if(f.key)if(f.key===a)b._buttonsHandled=!0,d(k).click();else if(d.isPlainObject(f.key)&&f.key.key===a&&(!f.key.shiftKey||b.shiftKey))if(!f.key.altKey||b.altKey)if(!f.key.ctrlKey||b.ctrlKey)if(!f.key.metaKey||b.metaKey)b._buttonsHandled=!0,d(k).click();e[i].buttons.length&&c(e[i].buttons)}};c(this.s.buttons)}},_removeKey:function(a){if(a.key){var b=d.isPlainObject(a.key)?a.key.key:a.key,a=this.s.listenKeys.split(""),b=d.inArray(b,a);a.splice(b,1);this.s.listenKeys=
a.join("")}},_resolveExtends:function(a){for(var b=this.s.dt,c,e,i=function(c){for(var e=0;!d.isPlainObject(c)&&!d.isArray(c);){if(c===n)return;if("function"===typeof c){if(c=c(b,a),!c)return!1}else if("string"===typeof c){if(!l[c])throw"Unknown button type: "+c;c=l[c]}e++;if(30<e)throw"Buttons: Too many iterations";}return d.isArray(c)?c:d.extend({},c)},a=i(a);a&&a.extend;){if(!l[a.extend])throw"Cannot extend unknown button type: "+a.extend;var g=i(l[a.extend]);if(d.isArray(g))return g;if(!g)return!1;
c=g.className;a=d.extend({},g,a);c&&a.className!==c&&(a.className=c+" "+a.className);var f=a.postfixButtons;if(f){a.buttons||(a.buttons=[]);c=0;for(e=f.length;c<e;c++)a.buttons.push(f[c]);a.postfixButtons=null}if(f=a.prefixButtons){a.buttons||(a.buttons=[]);c=0;for(e=f.length;c<e;c++)a.buttons.splice(c,0,f[c]);a.prefixButtons=null}a.extend=g.extend}return a}});m.background=function(a,b,c,e){c===n&&(c=400);e||(e=o.body);a?d("<div/>").addClass(b).css("display","none").insertAfter(e).stop().fadeIn(c):
d("div."+b).stop().fadeOut(c,function(){d(this).removeClass(b).remove()})};m.instanceSelector=function(a,b){if(!a)return d.map(b,function(a){return a.inst});var c=[],e=d.map(b,function(a){return a.name}),i=function(a){if(d.isArray(a))for(var f=0,k=a.length;f<k;f++)i(a[f]);else"string"===typeof a?-1!==a.indexOf(",")?i(a.split(",")):(a=d.inArray(d.trim(a),e),-1!==a&&c.push(b[a].inst)):"number"===typeof a&&c.push(b[a].inst)};i(a);return c};m.buttonSelector=function(a,b){for(var c=[],e=function(a,b,c){for(var d,
g,f=0,i=b.length;f<i;f++)if(d=b[f])g=c!==n?c+f:f+"",a.push({node:d.node,name:d.conf.name,idx:g}),d.buttons&&e(a,d.buttons,g+"-")},i=function(a,b){var h,g,f=[];e(f,b.s.buttons);h=d.map(f,function(a){return a.node});if(d.isArray(a)||a instanceof d){h=0;for(g=a.length;h<g;h++)i(a[h],b)}else if(null===a||a===n||"*"===a){h=0;for(g=f.length;h<g;h++)c.push({inst:b,node:f[h].node})}else if("number"===typeof a)c.push({inst:b,node:b.s.buttons[a].node});else if("string"===typeof a)if(-1!==a.indexOf(",")){f=
a.split(",");h=0;for(g=f.length;h<g;h++)i(d.trim(f[h]),b)}else if(a.match(/^\d+(\-\d+)*$/))h=d.map(f,function(a){return a.idx}),c.push({inst:b,node:f[d.inArray(a,h)].node});else if(-1!==a.indexOf(":name")){var j=a.replace(":name","");h=0;for(g=f.length;h<g;h++)f[h].name===j&&c.push({inst:b,node:f[h].node})}else d(h).filter(a).each(function(){c.push({inst:b,node:this})});else"object"===typeof a&&a.nodeName&&(f=d.inArray(a,h),-1!==f&&c.push({inst:b,node:h[f]}))},g=0,f=a.length;g<f;g++)i(b,a[g]);return c};
m.defaults={buttons:["copy","excel","csv","pdf","print"],name:"main",tabIndex:0,dom:{container:{tag:"div",className:"dt-buttons"},collection:{tag:"div",className:"dt-button-collection"},button:{tag:"ActiveXObject"in p?"a":"button",className:"dt-button",active:"active",disabled:"disabled"},buttonLiner:{tag:"span",className:""}}};m.version="1.5.6";d.extend(l,{collection:{text:function(a){return a.i18n("buttons.collection","Collection")},className:"buttons-collection",init:function(a,b){b.attr("aria-expanded",
!1)},action:function(a,b,c,e){var i=function(){b.buttons('[aria-haspopup="true"][aria-expanded="true"]').nodes().each(function(){var a=d(this).siblings(".dt-button-collection");a.length&&a.stop().fadeOut(e.fade,function(){a.detach()});d(this).attr("aria-expanded","false")});d("div.dt-button-background").off("click.dtb-collection");m.background(!1,e.backgroundClassName,e.fade,j);d("body").off(".dtb-collection");b.off("buttons-action.b-internal")},a="true"===c.attr("aria-expanded");i();if(!a){var g=
d(c).parents("div.dt-button-collection"),a=c.position(),f=d(b.table().container()),k=!1,j=c;c.attr("aria-expanded","true");g.length&&(k=d(".dt-button-collection").position(),j=g,d("body").trigger("click.dtb-collection"));j.parents("body")[0]!==o.body&&(j=o.body.lastChild);e._collection.find(".dt-button-collection-title").remove();e._collection.prepend('<div class="dt-button-collection-title">'+e.collectionTitle+"</div>");e._collection.addClass(e.collectionLayout).css("display","none").insertAfter(j).stop().fadeIn(e.fade);
g=e._collection.css("position");k&&"absolute"===g?e._collection.css({top:k.top,left:k.left}):"absolute"===g?(e._collection.css({top:a.top+c.outerHeight(),left:a.left}),k=f.offset().top+f.height(),k=a.top+c.outerHeight()+e._collection.outerHeight()-k,g=a.top-e._collection.outerHeight(),g=f.offset().top-g,(k>g||e.dropup)&&e._collection.css("top",a.top-e._collection.outerHeight()-5),e._collection.hasClass(e.rightAlignClassName)&&e._collection.css("left",a.left+c.outerWidth()-e._collection.outerWidth()),
k=a.left+e._collection.outerWidth(),f=f.offset().left+f.width(),k>f&&e._collection.css("left",a.left-(k-f)),c=c.offset().left+e._collection.outerWidth(),c>d(p).width()&&e._collection.css("left",a.left-(c-d(p).width()))):(c=e._collection.height()/2,c>d(p).height()/2&&(c=d(p).height()/2),e._collection.css("marginTop",-1*c));e.background&&m.background(!0,e.backgroundClassName,e.fade,j);setTimeout(function(){d("div.dt-button-background").on("click.dtb-collection",function(){});d("body").on("click.dtb-collection",
function(a){var b=d.fn.addBack?"addBack":"andSelf";d(a.target).parents()[b]().filter(e._collection).length||i()}).on("keyup.dtb-collection",function(a){a.keyCode===27&&i()});if(e.autoClose)b.on("buttons-action.b-internal",function(){i()})},10)}},background:!0,collectionLayout:"",collectionTitle:"",backgroundClassName:"dt-button-background",rightAlignClassName:"dt-button-right",autoClose:!1,fade:400,attr:{"aria-haspopup":!0}},copy:function(a,b){if(l.copyHtml5)return"copyHtml5";if(l.copyFlash&&l.copyFlash.available(a,
b))return"copyFlash"},csv:function(a,b){if(l.csvHtml5&&l.csvHtml5.available(a,b))return"csvHtml5";if(l.csvFlash&&l.csvFlash.available(a,b))return"csvFlash"},excel:function(a,b){if(l.excelHtml5&&l.excelHtml5.available(a,b))return"excelHtml5";if(l.excelFlash&&l.excelFlash.available(a,b))return"excelFlash"},pdf:function(a,b){if(l.pdfHtml5&&l.pdfHtml5.available(a,b))return"pdfHtml5";if(l.pdfFlash&&l.pdfFlash.available(a,b))return"pdfFlash"},pageLength:function(a){var a=a.settings()[0].aLengthMenu,b=d.isArray(a[0])?
a[0]:a,c=d.isArray(a[0])?a[1]:a;return{extend:"collection",text:function(a){return a.i18n("buttons.pageLength",{"-1":"Show all rows",_:"Show %d rows"},a.page.len())},className:"buttons-page-length",autoClose:!0,buttons:d.map(b,function(a,b){return{text:c[b],className:"button-page-length",action:function(b,c){c.page.len(a).draw()},init:function(b,c,d){var i=this,c=function(){i.active(b.page.len()===a)};b.on("length.dt"+d.namespace,c);c()},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}),
init:function(a,b,c){var d=this;a.on("length.dt"+c.namespace,function(){d.text(c.text)})},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}});j.Api.register("buttons()",function(a,b){b===n&&(b=a,a=n);this.selector.buttonGroup=a;var c=this.iterator(!0,"table",function(c){if(c._buttons)return m.buttonSelector(m.instanceSelector(a,c._buttons),b)},!0);c._groupSelector=a;return c});j.Api.register("button()",function(a,b){var c=this.buttons(a,b);1<c.length&&c.splice(1,c.length);return c});j.Api.registerPlural("buttons().active()",
"button().active()",function(a){return a===n?this.map(function(a){return a.inst.active(a.node)}):this.each(function(b){b.inst.active(b.node,a)})});j.Api.registerPlural("buttons().action()","button().action()",function(a){return a===n?this.map(function(a){return a.inst.action(a.node)}):this.each(function(b){b.inst.action(b.node,a)})});j.Api.register(["buttons().enable()","button().enable()"],function(a){return this.each(function(b){b.inst.enable(b.node,a)})});j.Api.register(["buttons().disable()",
"button().disable()"],function(){return this.each(function(a){a.inst.disable(a.node)})});j.Api.registerPlural("buttons().nodes()","button().node()",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.node(b.node))}));return a});j.Api.registerPlural("buttons().processing()","button().processing()",function(a){return a===n?this.map(function(a){return a.inst.processing(a.node)}):this.each(function(b){b.inst.processing(b.node,a)})});j.Api.registerPlural("buttons().text()","button().text()",function(a){return a===
n?this.map(function(a){return a.inst.text(a.node)}):this.each(function(b){b.inst.text(b.node,a)})});j.Api.registerPlural("buttons().trigger()","button().trigger()",function(){return this.each(function(a){a.inst.node(a.node).trigger("click")})});j.Api.registerPlural("buttons().containers()","buttons().container()",function(){var a=d(),b=this._groupSelector;this.iterator(!0,"table",function(c){if(c._buttons)for(var c=m.instanceSelector(b,c._buttons),d=0,i=c.length;d<i;d++)a=a.add(c[d].container())});
return a});j.Api.register("button().add()",function(a,b){var c=this.context;c.length&&(c=m.instanceSelector(this._groupSelector,c[0]._buttons),c.length&&c[0].add(b,a));return this.button(this._groupSelector,a)});j.Api.register("buttons().destroy()",function(){this.pluck("inst").unique().each(function(a){a.destroy()});return this});j.Api.registerPlural("buttons().remove()","buttons().remove()",function(){this.each(function(a){a.inst.remove(a.node)});return this});var q;j.Api.register("buttons.info()",
function(a,b,c){var e=this;if(!1===a)return d("#datatables_buttons_info").fadeOut(function(){d(this).remove()}),clearTimeout(q),q=null,this;q&&clearTimeout(q);d("#datatables_buttons_info").length&&d("#datatables_buttons_info").remove();d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a?"<h2>"+a+"</h2>":"").append(d("<div/>")["string"===typeof b?"html":"append"](b)).css("display","none").appendTo("body").fadeIn();c!==n&&0!==c&&(q=setTimeout(function(){e.buttons.info(!1)},c));return this});
j.Api.register("buttons.exportData()",function(a){if(this.context.length){var b=new j.Api(this.context[0]),c=d.extend(!0,{},{rows:null,columns:"",modifier:{search:"applied",order:"applied"},orthogonal:"display",stripHtml:!0,stripNewlines:!0,decodeEntities:!0,trim:!0,format:{header:function(a){return e(a)},footer:function(a){return e(a)},body:function(a){return e(a)}},customizeData:null},a),e=function(a){if("string"!==typeof a)return a;a=a.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
"");a=a.replace(/<!\-\-.*?\-\->/g,"");c.stripHtml&&(a=a.replace(/<[^>]*>/g,""));c.trim&&(a=a.replace(/^\s+|\s+$/g,""));c.stripNewlines&&(a=a.replace(/\n/g," "));c.decodeEntities&&(v.innerHTML=a,a=v.value);return a},a=b.columns(c.columns).indexes().map(function(a){var d=b.column(a).header();return c.format.header(d.innerHTML,a,d)}).toArray(),i=b.table().footer()?b.columns(c.columns).indexes().map(function(a){var d=b.column(a).footer();return c.format.footer(d?d.innerHTML:"",a,d)}).toArray():null,g=
d.extend({},c.modifier);b.select&&"function"===typeof b.select.info&&g.selected===n&&b.rows(c.rows,d.extend({selected:!0},g)).any()&&d.extend(g,{selected:!0});for(var g=b.rows(c.rows,g).indexes().toArray(),f=b.cells(g,c.columns),g=f.render(c.orthogonal).toArray(),f=f.nodes().toArray(),k=a.length,m=[],h=0,l=0,p=0<k?g.length/k:0;l<p;l++){for(var o=[k],q=0;q<k;q++)o[q]=c.format.body(g[h],l,q,f[h]),h++;m[l]=o}a={header:a,footer:i,body:m};c.customizeData&&c.customizeData(a);return a}});j.Api.register("buttons.exportInfo()",
function(a){a||(a={});var b;var c=a;b="*"===c.filename&&"*"!==c.title&&c.title!==n&&null!==c.title&&""!==c.title?c.title:c.filename;"function"===typeof b&&(b=b());b===n||null===b?b=null:(-1!==b.indexOf("*")&&(b=d.trim(b.replace("*",d("head > title").text()))),b=b.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g,""),(c=s(c.extension))||(c=""),b+=c);c=s(a.title);c=null===c?null:-1!==c.indexOf("*")?c.replace("*",d("head > title").text()||"Exported data"):c;return{filename:b,title:c,messageTop:w(this,
a.message||a.messageTop,"top"),messageBottom:w(this,a.messageBottom,"bottom")}});var s=function(a){return null===a||a===n?null:"function"===typeof a?a():a},w=function(a,b,c){b=s(b);if(null===b)return null;a=d("caption",a.table().container()).eq(0);return"*"===b?a.css("caption-side")!==c?null:a.length?a.text():"":b},v=d("<textarea/>")[0];d.fn.dataTable.Buttons=m;d.fn.DataTable.Buttons=m;d(o).on("init.dt plugin-init.dt",function(a,b){if("dt"===a.namespace){var c=b.oInit.buttons||j.defaults.buttons;
c&&!b._buttons&&(new m(b,c)).container()}});j.ext.feature.push({fnInit:t,cFeature:"B"});j.ext.features&&j.ext.features.register("buttons",t);return m});

/*!
 Bootstrap integration for DataTables' Buttons
 Â©2016 SpryMedia Ltd - datatables.net/license
*/
(function(b){"function"===typeof define&&define.amd?define(["jquery","datatables.net-bs4","datatables.net-buttons"],function(a){return b(a,window,document)}):"object"===typeof exports?module.exports=function(a,c){a||(a=window);if(!c||!c.fn.dataTable)c=require("datatables.net-bs4")(a,c).$;c.fn.dataTable.Buttons||require("datatables.net-buttons")(a,c);return b(c,a,a.document)}:b(jQuery,window,document)})(function(b){var a=b.fn.dataTable;b.extend(!0,a.Buttons.defaults,{dom:{container:{className:"dt-buttons btn-group"},
button:{className:"btn btn-secondary"},collection:{tag:"div",className:"dt-button-collection dropdown-menu",button:{tag:"a",className:"dt-button dropdown-item",active:"active",disabled:"disabled"}}},buttonCreated:function(a,d){return a.buttons?b('<div class="btn-group"/>').append(d):d}});a.ext.buttons.collection.className+=" dropdown-toggle";a.ext.buttons.collection.rightAlignClassName="dropdown-menu-right";return a.Buttons});

/*!
 * Column visibility buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


$.extend( DataTable.ext.buttons, {
	// A collection of column visibility buttons
	colvis: function ( dt, conf ) {
		return {
			extend: 'collection',
			text: function ( dt ) {
				return dt.i18n( 'buttons.colvis', 'Column visibility' );
			},
			className: 'buttons-colvis',
			buttons: [ {
				extend: 'columnsToggle',
				columns: conf.columns,
				columnText: conf.columnText
			} ]
		};
	},

	// Selected columns with individual buttons - toggle column visibility
	columnsToggle: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnToggle',
				columns: idx,
				columnText: conf.columnText
			};
		} ).toArray();

		return columns;
	},

	// Single button to toggle column visibility
	columnToggle: function ( dt, conf ) {
		return {
			extend: 'columnVisibility',
			columns: conf.columns,
			columnText: conf.columnText
		};
	},

	// Selected columns with individual buttons - set column visibility
	columnsVisibility: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnVisibility',
				columns: idx,
				visibility: conf.visibility,
				columnText: conf.columnText
			};
		} ).toArray();

		return columns;
	},

	// Single button to set column visibility
	columnVisibility: {
		columns: undefined, // column selector
		text: function ( dt, button, conf ) {
			return conf._columnText( dt, conf );
		},
		className: 'buttons-columnVisibility',
		action: function ( e, dt, button, conf ) {
			var col = dt.columns( conf.columns );
			var curr = col.visible();

			col.visible( conf.visibility !== undefined ?
				conf.visibility :
				! (curr.length ? curr[0] : false )
			);
		},
		init: function ( dt, button, conf ) {
			var that = this;
			button.attr( 'data-cv-idx', conf.columns );

			dt
				.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {
					if ( ! settings.bDestroying && settings.nTable == dt.settings()[0].nTable ) {
						that.active( dt.column( conf.columns ).visible() );
					}
				} )
				.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {
					// Don't rename buttons based on column name if the button
					// controls more than one column!
					if ( dt.columns( conf.columns ).count() !== 1 ) {
						return;
					}

					conf.columns = $.inArray( conf.columns, details.mapping );
					button.attr( 'data-cv-idx', conf.columns );

					// Reorder buttons for new table order
					button
						.parent()
						.children('[data-cv-idx]')
						.sort( function (a, b) {
							return (a.getAttribute('data-cv-idx')*1) - (b.getAttribute('data-cv-idx')*1);
						} )
						.appendTo(button.parent());
				} );

			this.active( dt.column( conf.columns ).visible() );
		},
		destroy: function ( dt, button, conf ) {
			dt
				.off( 'column-visibility.dt'+conf.namespace )
				.off( 'column-reorder.dt'+conf.namespace );
		},

		_columnText: function ( dt, conf ) {
			// Use DataTables' internal data structure until this is presented
			// is a public API. The other option is to use
			// `$( column(col).node() ).text()` but the node might not have been
			// populated when Buttons is constructed.
			var idx = dt.column( conf.columns ).index();
			var title = dt.settings()[0].aoColumns[ idx ].sTitle
				.replace(/\n/g," ")        // remove new lines
				.replace(/<br\s*\/?>/gi, " ")  // replace line breaks with spaces
				.replace(/<select(.*?)<\/select>/g, "") // remove select tags, including options text
				.replace(/<!\-\-.*?\-\->/g, "") // strip HTML comments
				.replace(/<.*?>/g, "")   // strip HTML
				.replace(/^\s+|\s+$/g,""); // trim

			return conf.columnText ?
				conf.columnText( dt, idx, title ) :
				title;
		}
	},


	colvisRestore: {
		className: 'buttons-colvisRestore',

		text: function ( dt ) {
			return dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );
		},

		init: function ( dt, button, conf ) {
			conf._visOriginal = dt.columns().indexes().map( function ( idx ) {
				return dt.column( idx ).visible();
			} ).toArray();
		},

		action: function ( e, dt, button, conf ) {
			dt.columns().every( function ( i ) {
				// Take into account that ColReorder might have disrupted our
				// indexes
				var idx = dt.colReorder && dt.colReorder.transpose ?
					dt.colReorder.transpose( i, 'toOriginal' ) :
					i;

				this.visible( conf._visOriginal[ idx ] );
			} );
		}
	},


	colvisGroup: {
		className: 'buttons-colvisGroup',

		action: function ( e, dt, button, conf ) {
			dt.columns( conf.show ).visible( true, false );
			dt.columns( conf.hide ).visible( false, false );

			dt.columns.adjust();
		},

		show: [],

		hide: []
	}
} );


return DataTable.Buttons;
}));

/*!
 * Flash export buttons for Buttons and DataTables.
 * 2015-2017 SpryMedia Ltd - datatables.net/license
 *
 * ZeroClipbaord - MIT license
 * Copyright (c) 2012 Joseph Huckaby
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * ZeroClipboard dependency
 */

/*
 * ZeroClipboard 1.0.4 with modifications
 * Author: Joseph Huckaby
 * License: MIT
 *
 * Copyright (c) 2012 Joseph Huckaby
 */
var ZeroClipboard_TableTools = {
	version: "1.0.4-TableTools2",
	clients: {}, // registered upload clients on page, indexed by id
	moviePath: '', // URL to movie
	nextId: 1, // ID of next movie

	$: function(thingy) {
		// simple DOM lookup utility function
		if (typeof(thingy) == 'string') {
			thingy = document.getElementById(thingy);
		}
		if (!thingy.addClass) {
			// extend element with a few useful methods
			thingy.hide = function() { this.style.display = 'none'; };
			thingy.show = function() { this.style.display = ''; };
			thingy.addClass = function(name) { this.removeClass(name); this.className += ' ' + name; };
			thingy.removeClass = function(name) {
				this.className = this.className.replace( new RegExp("\\s*" + name + "\\s*"), " ").replace(/^\s+/, '').replace(/\s+$/, '');
			};
			thingy.hasClass = function(name) {
				return !!this.className.match( new RegExp("\\s*" + name + "\\s*") );
			};
		}
		return thingy;
	},

	setMoviePath: function(path) {
		// set path to ZeroClipboard.swf
		this.moviePath = path;
	},

	dispatch: function(id, eventName, args) {
		// receive event from flash movie, send to client
		var client = this.clients[id];
		if (client) {
			client.receiveEvent(eventName, args);
		}
	},

	log: function ( str ) {
		console.log( 'Flash: '+str );
	},

	register: function(id, client) {
		// register new client to receive events
		this.clients[id] = client;
	},

	getDOMObjectPosition: function(obj) {
		// get absolute coordinates for dom element
		var info = {
			left: 0,
			top: 0,
			width: obj.width ? obj.width : obj.offsetWidth,
			height: obj.height ? obj.height : obj.offsetHeight
		};

		if ( obj.style.width !== "" ) {
			info.width = obj.style.width.replace("px","");
		}

		if ( obj.style.height !== "" ) {
			info.height = obj.style.height.replace("px","");
		}

		while (obj) {
			info.left += obj.offsetLeft;
			info.top += obj.offsetTop;
			obj = obj.offsetParent;
		}

		return info;
	},

	Client: function(elem) {
		// constructor for new simple upload client
		this.handlers = {};

		// unique ID
		this.id = ZeroClipboard_TableTools.nextId++;
		this.movieId = 'ZeroClipboard_TableToolsMovie_' + this.id;

		// register client with singleton to receive flash events
		ZeroClipboard_TableTools.register(this.id, this);

		// create movie
		if (elem) {
			this.glue(elem);
		}
	}
};

ZeroClipboard_TableTools.Client.prototype = {

	id: 0, // unique ID for us
	ready: false, // whether movie is ready to receive events or not
	movie: null, // reference to movie object
	clipText: '', // text to copy to clipboard
	fileName: '', // default file save name
	action: 'copy', // action to perform
	handCursorEnabled: true, // whether to show hand cursor, or default pointer cursor
	cssEffects: true, // enable CSS mouse effects on dom container
	handlers: null, // user event handlers
	sized: false,
	sheetName: '', // default sheet name for excel export

	glue: function(elem, title) {
		// glue to DOM element
		// elem can be ID or actual DOM element object
		this.domElement = ZeroClipboard_TableTools.$(elem);

		// float just above object, or zIndex 99 if dom element isn't set
		var zIndex = 99;
		if (this.domElement.style.zIndex) {
			zIndex = parseInt(this.domElement.style.zIndex, 10) + 1;
		}

		// find X/Y position of domElement
		var box = ZeroClipboard_TableTools.getDOMObjectPosition(this.domElement);

		// create floating DIV above element
		this.div = document.createElement('div');
		var style = this.div.style;
		style.position = 'absolute';
		style.left = '0px';
		style.top = '0px';
		style.width = (box.width) + 'px';
		style.height = box.height + 'px';
		style.zIndex = zIndex;

		if ( typeof title != "undefined" && title !== "" ) {
			this.div.title = title;
		}
		if ( box.width !== 0 && box.height !== 0 ) {
			this.sized = true;
		}

		// style.backgroundColor = '#f00'; // debug
		if ( this.domElement ) {
			this.domElement.appendChild(this.div);
			this.div.innerHTML = this.getHTML( box.width, box.height ).replace(/&/g, '&amp;');
		}
	},

	positionElement: function() {
		var box = ZeroClipboard_TableTools.getDOMObjectPosition(this.domElement);
		var style = this.div.style;

		style.position = 'absolute';
		//style.left = (this.domElement.offsetLeft)+'px';
		//style.top = this.domElement.offsetTop+'px';
		style.width = box.width + 'px';
		style.height = box.height + 'px';

		if ( box.width !== 0 && box.height !== 0 ) {
			this.sized = true;
		} else {
			return;
		}

		var flash = this.div.childNodes[0];
		flash.width = box.width;
		flash.height = box.height;
	},

	getHTML: function(width, height) {
		// return HTML for movie
		var html = '';
		var flashvars = 'id=' + this.id +
			'&width=' + width +
			'&height=' + height;

		if (navigator.userAgent.match(/MSIE/)) {
			// IE gets an OBJECT tag
			var protocol = location.href.match(/^https/i) ? 'https://' : 'http://';
			html += '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="'+protocol+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0" width="'+width+'" height="'+height+'" id="'+this.movieId+'" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="'+ZeroClipboard_TableTools.moviePath+'" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="'+flashvars+'"/><param name="wmode" value="transparent"/></object>';
		}
		else {
			// all other browsers get an EMBED tag
			html += '<embed id="'+this.movieId+'" src="'+ZeroClipboard_TableTools.moviePath+'" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="'+width+'" height="'+height+'" name="'+this.movieId+'" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="'+flashvars+'" wmode="transparent" />';
		}
		return html;
	},

	hide: function() {
		// temporarily hide floater offscreen
		if (this.div) {
			this.div.style.left = '-2000px';
		}
	},

	show: function() {
		// show ourselves after a call to hide()
		this.reposition();
	},

	destroy: function() {
		// destroy control and floater
		var that = this;

		if (this.domElement && this.div) {
			$(this.div).remove();

			this.domElement = null;
			this.div = null;

			$.each( ZeroClipboard_TableTools.clients, function ( id, client ) {
				if ( client === that ) {
					delete ZeroClipboard_TableTools.clients[ id ];
				}
			} );
		}
	},

	reposition: function(elem) {
		// reposition our floating div, optionally to new container
		// warning: container CANNOT change size, only position
		if (elem) {
			this.domElement = ZeroClipboard_TableTools.$(elem);
			if (!this.domElement) {
				this.hide();
			}
		}

		if (this.domElement && this.div) {
			var box = ZeroClipboard_TableTools.getDOMObjectPosition(this.domElement);
			var style = this.div.style;
			style.left = '' + box.left + 'px';
			style.top = '' + box.top + 'px';
		}
	},

	clearText: function() {
		// clear the text to be copy / saved
		this.clipText = '';
		if (this.ready) {
			this.movie.clearText();
		}
	},

	appendText: function(newText) {
		// append text to that which is to be copied / saved
		this.clipText += newText;
		if (this.ready) { this.movie.appendText(newText) ;}
	},

	setText: function(newText) {
		// set text to be copied to be copied / saved
		this.clipText = newText;
		if (this.ready) { this.movie.setText(newText) ;}
	},

	setFileName: function(newText) {
		// set the file name
		this.fileName = newText;
		if (this.ready) {
			this.movie.setFileName(newText);
		}
	},

	setSheetData: function(data) {
		// set the xlsx sheet data
		if (this.ready) {
			this.movie.setSheetData( JSON.stringify( data ) );
		}
	},

	setAction: function(newText) {
		// set action (save or copy)
		this.action = newText;
		if (this.ready) {
			this.movie.setAction(newText);
		}
	},

	addEventListener: function(eventName, func) {
		// add user event listener for event
		// event types: load, queueStart, fileStart, fileComplete, queueComplete, progress, error, cancel
		eventName = eventName.toString().toLowerCase().replace(/^on/, '');
		if (!this.handlers[eventName]) {
			this.handlers[eventName] = [];
		}
		this.handlers[eventName].push(func);
	},

	setHandCursor: function(enabled) {
		// enable hand cursor (true), or default arrow cursor (false)
		this.handCursorEnabled = enabled;
		if (this.ready) {
			this.movie.setHandCursor(enabled);
		}
	},

	setCSSEffects: function(enabled) {
		// enable or disable CSS effects on DOM container
		this.cssEffects = !!enabled;
	},

	receiveEvent: function(eventName, args) {
		var self;

		// receive event from flash
		eventName = eventName.toString().toLowerCase().replace(/^on/, '');

		// special behavior for certain events
		switch (eventName) {
			case 'load':
				// movie claims it is ready, but in IE this isn't always the case...
				// bug fix: Cannot extend EMBED DOM elements in Firefox, must use traditional function
				this.movie = document.getElementById(this.movieId);
				if (!this.movie) {
					self = this;
					setTimeout( function() { self.receiveEvent('load', null); }, 1 );
					return;
				}

				// firefox on pc needs a "kick" in order to set these in certain cases
				if (!this.ready && navigator.userAgent.match(/Firefox/) && navigator.userAgent.match(/Windows/)) {
					self = this;
					setTimeout( function() { self.receiveEvent('load', null); }, 100 );
					this.ready = true;
					return;
				}

				this.ready = true;
				this.movie.clearText();
				this.movie.appendText( this.clipText );
				this.movie.setFileName( this.fileName );
				this.movie.setAction( this.action );
				this.movie.setHandCursor( this.handCursorEnabled );
				break;

			case 'mouseover':
				if (this.domElement && this.cssEffects) {
					//this.domElement.addClass('hover');
					if (this.recoverActive) {
						this.domElement.addClass('active');
					}
				}
				break;

			case 'mouseout':
				if (this.domElement && this.cssEffects) {
					this.recoverActive = false;
					if (this.domElement.hasClass('active')) {
						this.domElement.removeClass('active');
						this.recoverActive = true;
					}
					//this.domElement.removeClass('hover');
				}
				break;

			case 'mousedown':
				if (this.domElement && this.cssEffects) {
					this.domElement.addClass('active');
				}
				break;

			case 'mouseup':
				if (this.domElement && this.cssEffects) {
					this.domElement.removeClass('active');
					this.recoverActive = false;
				}
				break;
		} // switch eventName

		if (this.handlers[eventName]) {
			for (var idx = 0, len = this.handlers[eventName].length; idx < len; idx++) {
				var func = this.handlers[eventName][idx];

				if (typeof(func) == 'function') {
					// actual function reference
					func(this, args);
				}
				else if ((typeof(func) == 'object') && (func.length == 2)) {
					// PHP style object + method, i.e. [myObject, 'myMethod']
					func[0][ func[1] ](this, args);
				}
				else if (typeof(func) == 'string') {
					// name of function
					window[func](this, args);
				}
			} // foreach event handler defined
		} // user defined handler for event
	}
};

ZeroClipboard_TableTools.hasFlash = function ()
{
	try {
		var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
		if (fo) {
			return true;
		}
	}
	catch (e) {
		if (
			navigator.mimeTypes &&
			navigator.mimeTypes['application/x-shockwave-flash'] !== undefined &&
			navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin
		) {
			return true;
		}
	}

	return false;
};

// For the Flash binding to work, ZeroClipboard_TableTools must be on the global
// object list
window.ZeroClipboard_TableTools = ZeroClipboard_TableTools;



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local (private) functions
 */

/**
 * If a Buttons instance is initlaised before it is placed into the DOM, Flash
 * won't be able to bind to it, so we need to wait until it is available, this
 * method abstracts that out.
 *
 * @param {ZeroClipboard} flash ZeroClipboard instance
 * @param {jQuery} node  Button
 */
var _glue = function ( flash, node )
{
	var id = node.attr('id');

	if ( node.parents('html').length ) {
		flash.glue( node[0], '' );
	}
	else {
		setTimeout( function () {
			_glue( flash, node );
		}, 500 );
	}
};

/**
 * Get the sheet name for Excel exports.
 *
 * @param {object}  config       Button configuration
 */
var _sheetname = function ( config )
{
	var sheetName = 'Sheet1';

	if ( config.sheetName ) {
		sheetName = config.sheetName.replace(/[\[\]\*\/\\\?\:]/g, '');
	}

	return sheetName;
};

/**
 * Set the flash text. This has to be broken up into chunks as the Javascript /
 * Flash bridge has a size limit. There is no indication in the Flash
 * documentation what this is, and it probably depends upon the browser.
 * Experimentation shows that the point is around 50k when data starts to get
 * lost, so an 8K limit used here is safe.
 *
 * @param {ZeroClipboard} flash ZeroClipboard instance
 * @param {string}        data  Data to send to Flash
 */
var _setText = function ( flash, data )
{
	var parts = data.match(/[\s\S]{1,8192}/g) || [];

	flash.clearText();
	for ( var i=0, len=parts.length ; i<len ; i++ )
	{
		flash.appendText( parts[i] );
	}
};

/**
 * Get the newline character(s)
 *
 * @param {object}  config Button configuration
 * @return {string}        Newline character
 */
var _newLine = function ( config )
{
	return config.newline ?
		config.newline :
		navigator.userAgent.match(/Windows/) ?
			'\r\n' :
			'\n';
};

/**
 * Combine the data from the `buttons.exportData` method into a string that
 * will be used in the export file.
 *
 * @param  {DataTable.Api} dt     DataTables API instance
 * @param  {object}        config Button configuration
 * @return {object}               The data to export
 */
var _exportData = function ( dt, config )
{
	var newLine = _newLine( config );
	var data = dt.buttons.exportData( config.exportOptions );
	var boundary = config.fieldBoundary;
	var separator = config.fieldSeparator;
	var reBoundary = new RegExp( boundary, 'g' );
	var escapeChar = config.escapeChar !== undefined ?
		config.escapeChar :
		'\\';
	var join = function ( a ) {
		var s = '';

		// If there is a field boundary, then we might need to escape it in
		// the source data
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( i > 0 ) {
				s += separator;
			}

			s += boundary ?
				boundary + ('' + a[i]).replace( reBoundary, escapeChar+boundary ) + boundary :
				a[i];
		}

		return s;
	};

	var header = config.header ? join( data.header )+newLine : '';
	var footer = config.footer && data.footer ? newLine+join( data.footer ) : '';
	var body = [];

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		body.push( join( data.body[i] ) );
	}

	return {
		str: header + body.join( newLine ) + footer,
		rows: body.length
	};
};


// Basic initialisation for the buttons is common between them
var flashButton = {
	available: function () {
		return ZeroClipboard_TableTools.hasFlash();
	},

	init: function ( dt, button, config ) {
		// Insert the Flash movie
		ZeroClipboard_TableTools.moviePath = DataTable.Buttons.swfPath;
		var flash = new ZeroClipboard_TableTools.Client();

		flash.setHandCursor( true );
		flash.addEventListener('mouseDown', function(client) {
			config._fromFlash = true;
			dt.button( button[0] ).trigger();
			config._fromFlash = false;
		} );

		_glue( flash, button );

		config._flash = flash;
	},

	destroy: function ( dt, button, config ) {
		config._flash.destroy();
	},

	fieldSeparator: ',',

	fieldBoundary: '"',

	exportOptions: {},

	title: '*',

	messageTop: '*',

	messageBottom: '*',

	filename: '*',

	extension: '.csv',

	header: true,

	footer: false
};


/**
 * Convert from numeric position to letter for column names in Excel
 * @param  {int} n Column number
 * @return {string} Column letter(s) name
 */
function createCellPos( n ){
	var ordA = 'A'.charCodeAt(0);
	var ordZ = 'Z'.charCodeAt(0);
	var len = ordZ - ordA + 1;
	var s = "";

	while( n >= 0 ) {
		s = String.fromCharCode(n % len + ordA) + s;
		n = Math.floor(n / len) - 1;
	}

	return s;
}

/**
 * Create an XML node and add any children, attributes, etc without needing to
 * be verbose in the DOM.
 *
 * @param  {object} doc      XML document
 * @param  {string} nodeName Node name
 * @param  {object} opts     Options - can be `attr` (attributes), `children`
 *   (child nodes) and `text` (text content)
 * @return {node}            Created node
 */
function _createNode( doc, nodeName, opts ){
	var tempNode = doc.createElement( nodeName );

	if ( opts ) {
		if ( opts.attr ) {
			$(tempNode).attr( opts.attr );
		}

		if ( opts.children ) {
			$.each( opts.children, function ( key, value ) {
				tempNode.appendChild( value );
			} );
		}

		if ( opts.text !== null && opts.text !== undefined ) {
			tempNode.appendChild( doc.createTextNode( opts.text ) );
		}
	}

	return tempNode;
}

/**
 * Get the width for an Excel column based on the contents of that column
 * @param  {object} data Data for export
 * @param  {int}    col  Column index
 * @return {int}         Column width
 */
function _excelColWidth( data, col ) {
	var max = data.header[col].length;
	var len, lineSplit, str;

	if ( data.footer && data.footer[col].length > max ) {
		max = data.footer[col].length;
	}

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		var point = data.body[i][col];
		str = point !== null && point !== undefined ?
			point.toString() :
			'';

		// If there is a newline character, workout the width of the column
		// based on the longest line in the string
		if ( str.indexOf('\n') !== -1 ) {
			lineSplit = str.split('\n');
			lineSplit.sort( function (a, b) {
				return b.length - a.length;
			} );

			len = lineSplit[0].length;
		}
		else {
			len = str.length;
		}

		if ( len > max ) {
			max = len;
		}

		// Max width rather than having potentially massive column widths
		if ( max > 40 ) {
			return 52; // 40 * 1.3
		}
	}

	max *= 1.3;

	// And a min width
	return max > 6 ? max : 6;
}

  var _serialiser = "";
    if (typeof window.XMLSerializer === 'undefined') {
        _serialiser = new function () {
            this.serializeToString = function (input) {
                return input.xml
            }
        };
    } else {
        _serialiser =  new XMLSerializer();
    }

    var _ieExcel;


/**
 * Convert XML documents in an object to strings
 * @param  {object} obj XLSX document object
 */
function _xlsxToStrings( obj ) {
	if ( _ieExcel === undefined ) {
		// Detect if we are dealing with IE's _awful_ serialiser by seeing if it
		// drop attributes
		_ieExcel = _serialiser
			.serializeToString(
				$.parseXML( excelStrings['xl/worksheets/sheet1.xml'] )
			)
			.indexOf( 'xmlns:r' ) === -1;
	}

	$.each( obj, function ( name, val ) {
		if ( $.isPlainObject( val ) ) {
			_xlsxToStrings( val );
		}
		else {
			if ( _ieExcel ) {
				// IE's XML serialiser will drop some name space attributes from
				// from the root node, so we need to save them. Do this by
				// replacing the namespace nodes with a regular attribute that
				// we convert back when serialised. Edge does not have this
				// issue
				var worksheet = val.childNodes[0];
				var i, ien;
				var attrs = [];

				for ( i=worksheet.attributes.length-1 ; i>=0 ; i-- ) {
					var attrName = worksheet.attributes[i].nodeName;
					var attrValue = worksheet.attributes[i].nodeValue;

					if ( attrName.indexOf( ':' ) !== -1 ) {
						attrs.push( { name: attrName, value: attrValue } );

						worksheet.removeAttribute( attrName );
					}
				}

				for ( i=0, ien=attrs.length ; i<ien ; i++ ) {
					var attr = val.createAttribute( attrs[i].name.replace( ':', '_dt_b_namespace_token_' ) );
					attr.value = attrs[i].value;
					worksheet.setAttributeNode( attr );
				}
			}

			var str = _serialiser.serializeToString(val);

			// Fix IE's XML
			if ( _ieExcel ) {
				// IE doesn't include the XML declaration
				if ( str.indexOf( '<?xml' ) === -1 ) {
					str = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+str;
				}

				// Return namespace attributes to being as such
				str = str.replace( /_dt_b_namespace_token_/g, ':' );
			}

			// Safari, IE and Edge will put empty name space attributes onto
			// various elements making them useless. This strips them out
			str = str.replace( /<([^<>]*?) xmlns=""([^<>]*?)>/g, '<$1 $2>' );

			obj[ name ] = str;
		}
	} );
}

// Excel - Pre-defined strings to build a basic XLSX file
var excelStrings = {
	"_rels/.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/>'+
		'</Relationships>',

	"xl/_rels/workbook.xml.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/>'+
			'<Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/>'+
		'</Relationships>',

	"[Content_Types].xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">'+
			'<Default Extension="xml" ContentType="application/xml" />'+
			'<Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" />'+
			'<Default Extension="jpeg" ContentType="image/jpeg" />'+
			'<Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" />'+
			'<Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" />'+
			'<Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" />'+
		'</Types>',

	"xl/workbook.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships">'+
			'<fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/>'+
			'<workbookPr showInkAnnotation="0" autoCompressPictures="0"/>'+
			'<bookViews>'+
				'<workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/>'+
			'</bookViews>'+
			'<sheets>'+
				'<sheet name="" sheetId="1" r:id="rId1"/>'+
			'</sheets>'+
		'</workbook>',

	"xl/worksheets/sheet1.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<sheetData/>'+
			'<mergeCells count="0"/>'+
		'</worksheet>',

	"xl/styles.xml":
		'<?xml version="1.0" encoding="UTF-8"?>'+
		'<styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<numFmts count="6">'+
				'<numFmt numFmtId="164" formatCode="#,##0.00_-\ [$$-45C]"/>'+
				'<numFmt numFmtId="165" formatCode="&quot;Â£&quot;#,##0.00"/>'+
				'<numFmt numFmtId="166" formatCode="[$â¬-2]\ #,##0.00"/>'+
				'<numFmt numFmtId="167" formatCode="0.0%"/>'+
				'<numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/>'+
				'<numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/>'+
			'</numFmts>'+
			'<fonts count="5" x14ac:knownFonts="1">'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<color rgb="FFFFFFFF" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<b />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<i />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<u />'+
				'</font>'+
			'</fonts>'+
			'<fills count="6">'+
				'<fill>'+
					'<patternFill patternType="none" />'+
				'</fill>'+
				'<fill>'+ // Excel appears to use this as a dotted background regardless of values but
					'<patternFill patternType="none" />'+ // to be valid to the schema, use a patternFill
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD9D9D9" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD99795" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6efce" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6cfef" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
			'</fills>'+
			'<borders count="2">'+
				'<border>'+
					'<left />'+
					'<right />'+
					'<top />'+
					'<bottom />'+
					'<diagonal />'+
				'</border>'+
				'<border diagonalUp="false" diagonalDown="false">'+
					'<left style="thin">'+
						'<color auto="1" />'+
					'</left>'+
					'<right style="thin">'+
						'<color auto="1" />'+
					'</right>'+
					'<top style="thin">'+
						'<color auto="1" />'+
					'</top>'+
					'<bottom style="thin">'+
						'<color auto="1" />'+
					'</bottom>'+
					'<diagonal />'+
				'</border>'+
			'</borders>'+
			'<cellStyleXfs count="1">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" />'+
			'</cellStyleXfs>'+
			'<cellXfs count="61">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="left"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="center"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="right"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="fill"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment textRotation="90"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment wrapText="1"/>'+
				'</xf>'+
				'<xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
			'</cellXfs>'+
			'<cellStyles count="1">'+
				'<cellStyle name="Normal" xfId="0" builtinId="0" />'+
			'</cellStyles>'+
			'<dxfs count="0" />'+
			'<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" />'+
		'</styleSheet>'
};
// Note we could use 3 `for` loops for the styles, but when gzipped there is
// virtually no difference in size, since the above can be easily compressed

// Pattern matching for special number formats. Perhaps this should be exposed
// via an API in future?
var _excelSpecials = [
	{ match: /^\-?\d+\.\d%$/,       style: 60, fmt: function (d) { return d/100; } }, // Precent with d.p.
	{ match: /^\-?\d+\.?\d*%$/,     style: 56, fmt: function (d) { return d/100; } }, // Percent
	{ match: /^\-?\$[\d,]+.?\d*$/,  style: 57 }, // Dollars
	{ match: /^\-?Â£[\d,]+.?\d*$/,   style: 58 }, // Pounds
	{ match: /^\-?â¬[\d,]+.?\d*$/,   style: 59 }, // Euros
	{ match: /^\([\d,]+\)$/,        style: 61, fmt: function (d) { return -1 * d.replace(/[\(\)]/g, ''); } },  // Negative numbers indicated by brackets
	{ match: /^\([\d,]+\.\d{2}\)$/, style: 62, fmt: function (d) { return -1 * d.replace(/[\(\)]/g, ''); } },  // Negative numbers indicated by brackets - 2d.p.
	{ match: /^[\d,]+$/,            style: 63 }, // Numbers with thousand separators
	{ match: /^[\d,]+\.\d{2}$/,     style: 64 }  // Numbers with 2d.p. and thousands separators
];



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables options and methods
 */

// Set the default SWF path
DataTable.Buttons.swfPath = '//cdn.datatables.net/buttons/'+DataTable.Buttons.version+'/swf/flashExport.swf';

// Method to allow Flash buttons to be resized when made visible - as they are
// of zero height and width if initialised hidden
DataTable.Api.register( 'buttons.resize()', function () {
	$.each( ZeroClipboard_TableTools.clients, function ( i, client ) {
		if ( client.domElement !== undefined && client.domElement.parentNode ) {
			client.positionElement();
		}
	} );
} );


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Button definitions
 */

// Copy to clipboard
DataTable.ext.buttons.copyFlash = $.extend( {}, flashButton, {
	className: 'buttons-copy buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.copy', 'Copy' );
	},

	action: function ( e, dt, button, config ) {
		// Check that the trigger did actually occur due to a Flash activation
		if ( ! config._fromFlash ) {
			return;
		}

		this.processing( true );

		var flash = config._flash;
		var exportData = _exportData( dt, config );
		var info = dt.buttons.exportInfo( config );
		var newline = _newLine(config);
		var output = exportData.str;

		if ( info.title ) {
			output = info.title + newline + newline + output;
		}

		if ( info.messageTop ) {
			output = info.messageTop + newline + newline + output;
		}

		if ( info.messageBottom ) {
			output = output + newline + newline + info.messageBottom;
		}

		if ( config.customize ) {
			output = config.customize( output, config, dt );
		}

		flash.setAction( 'copy' );
		_setText( flash, output );

		this.processing( false );

		dt.buttons.info(
			dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ),
			dt.i18n( 'buttons.copySuccess', {
				_: 'Copied %d rows to clipboard',
				1: 'Copied 1 row to clipboard'
			}, data.rows ),
			3000
		);
	},

	fieldSeparator: '\t',

	fieldBoundary: ''
} );

// CSV save file
DataTable.ext.buttons.csvFlash = $.extend( {}, flashButton, {
	className: 'buttons-csv buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.csv', 'CSV' );
	},

	action: function ( e, dt, button, config ) {
		// Set the text
		var flash = config._flash;
		var data = _exportData( dt, config );
		var info = dt.buttons.exportInfo( config );
		var output = config.customize ?
			config.customize( data.str, config, dt ) :
			data.str;

		flash.setAction( 'csv' );
		flash.setFileName( info.filename );
		_setText( flash, output );
	},

	escapeChar: '"'
} );

// Excel save file - this is really a CSV file using UTF-8 that Excel can read
DataTable.ext.buttons.excelFlash = $.extend( {}, flashButton, {
	className: 'buttons-excel buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.excel', 'Excel' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		var flash = config._flash;
		var rowPos = 0;
		var rels = $.parseXML( excelStrings['xl/worksheets/sheet1.xml'] ) ; //Parses xml
		var relsGet = rels.getElementsByTagName( "sheetData" )[0];

		var xlsx = {
			_rels: {
				".rels": $.parseXML( excelStrings['_rels/.rels'] )
			},
			xl: {
				_rels: {
					"workbook.xml.rels": $.parseXML( excelStrings['xl/_rels/workbook.xml.rels'] )
				},
				"workbook.xml": $.parseXML( excelStrings['xl/workbook.xml'] ),
				"styles.xml": $.parseXML( excelStrings['xl/styles.xml'] ),
				"worksheets": {
					"sheet1.xml": rels
				}

			},
			"[Content_Types].xml": $.parseXML( excelStrings['[Content_Types].xml'])
		};

		var data = dt.buttons.exportData( config.exportOptions );
		var currentRow, rowNode;
		var addRow = function ( row ) {
			currentRow = rowPos+1;
			rowNode = _createNode( rels, "row", { attr: {r:currentRow} } );

			for ( var i=0, ien=row.length ; i<ien ; i++ ) {
				// Concat both the Cell Columns as a letter and the Row of the cell.
				var cellId = createCellPos(i) + '' + currentRow;
				var cell = null;

				// For null, undefined of blank cell, continue so it doesn't create the _createNode
				if ( row[i] === null || row[i] === undefined || row[i] === '' ) {
					if ( config.createEmptyCells === true ) {
						row[i] = '';
					}
					else {
						continue;
					}
				}

				row[i] = $.trim( row[i] );

				// Special number formatting options
				for ( var j=0, jen=_excelSpecials.length ; j<jen ; j++ ) {
					var special = _excelSpecials[j];

					// TODO Need to provide the ability for the specials to say
					// if they are returning a string, since at the moment it is
					// assumed to be a number
					if ( row[i].match && ! row[i].match(/^0\d+/) && row[i].match( special.match ) ) {
						var val = row[i].replace(/[^\d\.\-]/g, '');

						if ( special.fmt ) {
							val = special.fmt( val );
						}

						cell = _createNode( rels, 'c', {
							attr: {
								r: cellId,
								s: special.style
							},
							children: [
								_createNode( rels, 'v', { text: val } )
							]
						} );

						break;
					}
				}

				if ( ! cell ) {
					if ( typeof row[i] === 'number' || (
						row[i].match &&
						row[i].match(/^-?\d+(\.\d+)?$/) &&
						! row[i].match(/^0\d+/) )
					) {
						// Detect numbers - don't match numbers with leading zeros
						// or a negative anywhere but the start
						cell = _createNode( rels, 'c', {
							attr: {
								t: 'n',
								r: cellId
							},
							children: [
								_createNode( rels, 'v', { text: row[i] } )
							]
						} );
					}
					else {
						// String output - replace non standard characters for text output
						var text = ! row[i].replace ?
							row[i] :
							row[i].replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g, '');

						cell = _createNode( rels, 'c', {
							attr: {
								t: 'inlineStr',
								r: cellId
							},
							children:{
								row: _createNode( rels, 'is', {
									children: {
										row: _createNode( rels, 't', {
											text: text
										} )
									}
								} )
							}
						} );
					}
				}

				rowNode.appendChild( cell );
			}

			relsGet.appendChild(rowNode);
			rowPos++;
		};

		$( 'sheets sheet', xlsx.xl['workbook.xml'] ).attr( 'name', _sheetname( config ) );

		if ( config.customizeData ) {
			config.customizeData( data );
		}

		var mergeCells = function ( row, colspan ) {
			var mergeCells = $('mergeCells', rels);

			mergeCells[0].appendChild( _createNode( rels, 'mergeCell', {
				attr: {
					ref: 'A'+row+':'+createCellPos(colspan)+row
				}
			} ) );
			mergeCells.attr( 'count', mergeCells.attr( 'count' )+1 );
			$('row:eq('+(row-1)+') c', rels).attr( 's', '51' ); // centre
		};

		// Title and top messages
		var exportInfo = dt.buttons.exportInfo( config );
		if ( exportInfo.title ) {
			addRow( [exportInfo.title], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}

		if ( exportInfo.messageTop ) {
			addRow( [exportInfo.messageTop], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}

		// Table itself
		if ( config.header ) {
			addRow( data.header, rowPos );
			$('row:last c', rels).attr( 's', '2' ); // bold
		}

		for ( var n=0, ie=data.body.length ; n<ie ; n++ ) {
			addRow( data.body[n], rowPos );
		}

		if ( config.footer && data.footer ) {
			addRow( data.footer, rowPos);
			$('row:last c', rels).attr( 's', '2' ); // bold
		}

		// Below the table
		if ( exportInfo.messageBottom ) {
			addRow( [exportInfo.messageBottom], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}

		// Set column widths
		var cols = _createNode( rels, 'cols' );
		$('worksheet', rels).prepend( cols );

		for ( var i=0, ien=data.header.length ; i<ien ; i++ ) {
			cols.appendChild( _createNode( rels, 'col', {
				attr: {
					min: i+1,
					max: i+1,
					width: _excelColWidth( data, i ),
					customWidth: 1
				}
			} ) );
		}

		// Let the developer customise the document if they want to
		if ( config.customize ) {
			config.customize( xlsx, config, dt );
		}

		_xlsxToStrings( xlsx );

		flash.setAction( 'excel' );
		flash.setFileName( exportInfo.filename );
		flash.setSheetData( xlsx );
		_setText( flash, '' );

		this.processing( false );
	},

	extension: '.xlsx',
	
	createEmptyCells: false
} );



// PDF export
DataTable.ext.buttons.pdfFlash = $.extend( {}, flashButton, {
	className: 'buttons-pdf buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.pdf', 'PDF' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		// Set the text
		var flash = config._flash;
		var data = dt.buttons.exportData( config.exportOptions );
		var info = dt.buttons.exportInfo( config );
		var totalWidth = dt.table().node().offsetWidth;

		// Calculate the column width ratios for layout of the table in the PDF
		var ratios = dt.columns( config.columns ).indexes().map( function ( idx ) {
			return dt.column( idx ).header().offsetWidth / totalWidth;
		} );

		flash.setAction( 'pdf' );
		flash.setFileName( info.filename );

		_setText( flash, JSON.stringify( {
			title:         info.title || '',
			messageTop:    info.messageTop || '',
			messageBottom: info.messageBottom || '',
			colWidth:      ratios.toArray(),
			orientation:   config.orientation,
			size:          config.pageSize,
			header:        config.header ? data.header : null,
			footer:        config.footer ? data.footer : null,
			body:          data.body
		} ) );

		this.processing( false );
	},

	extension: '.pdf',

	orientation: 'portrait',

	pageSize: 'A4',

	newline: '\n'
} );


return DataTable.Buttons;
}));

/*!
 * HTML5 export buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 *
 * FileSaver.js (1.3.3) - MIT license
 * Copyright Â© 2016 Eli Grey - http://eligrey.com
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $, jszip, pdfmake) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document, jszip, pdfmake );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, jszip, pdfmake, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;

// Allow the constructor to pass in JSZip and PDFMake from external requires.
// Otherwise, use globally defined variables, if they are available.
function _jsZip () {
	return jszip || window.JSZip;
}
function _pdfMake () {
	return pdfmake || window.pdfMake;
}

DataTable.Buttons.pdfMake = function (_) {
	if ( ! _ ) {
		return _pdfMake();
	}
	pdfmake = m_ake;
}

DataTable.Buttons.jszip = function (_) {
	if ( ! _ ) {
		return _jsZip();
	}
	jszip = _;
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * FileSaver.js dependency
 */

/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

var _saveAs = (function(view) {
	"use strict";
	// IE <10 is explicitly unsupported
	if (typeof view === "undefined" || typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
		return;
	}
	var
		  doc = view.document
		  // only get URL when necessary in case Blob.js hasn't overridden it yet
		, get_URL = function() {
			return view.URL || view.webkitURL || view;
		}
		, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
		, can_use_save_link = "download" in save_link
		, click = function(node) {
			var event = new MouseEvent("click");
			node.dispatchEvent(event);
		}
		, is_safari = /constructor/i.test(view.HTMLElement) || view.safari
		, is_chrome_ios =/CriOS\/[\d]+/.test(navigator.userAgent)
		, throw_outside = function(ex) {
			(view.setImmediate || view.setTimeout)(function() {
				throw ex;
			}, 0);
		}
		, force_saveable_type = "application/octet-stream"
		// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
		, arbitrary_revoke_timeout = 1000 * 40 // in ms
		, revoke = function(file) {
			var revoker = function() {
				if (typeof file === "string") { // file is an object URL
					get_URL().revokeObjectURL(file);
				} else { // file is a File
					file.remove();
				}
			};
			setTimeout(revoker, arbitrary_revoke_timeout);
		}
		, dispatch = function(filesaver, event_types, event) {
			event_types = [].concat(event_types);
			var i = event_types.length;
			while (i--) {
				var listener = filesaver["on" + event_types[i]];
				if (typeof listener === "function") {
					try {
						listener.call(filesaver, event || filesaver);
					} catch (ex) {
						throw_outside(ex);
					}
				}
			}
		}
		, auto_bom = function(blob) {
			// prepend BOM for UTF-8 XML and text/* types (including HTML)
			// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF
			if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
				return new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});
			}
			return blob;
		}
		, FileSaver = function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			// First try a.download, then web filesystem, then object URLs
			var
				  filesaver = this
				, type = blob.type
				, force = type === force_saveable_type
				, object_url
				, dispatch_all = function() {
					dispatch(filesaver, "writestart progress write writeend".split(" "));
				}
				// on any filesys errors revert to saving with object URLs
				, fs_error = function() {
					if ((is_chrome_ios || (force && is_safari)) && view.FileReader) {
						// Safari doesn't allow downloading of blob urls
						var reader = new FileReader();
						reader.onloadend = function() {
							var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');
							var popup = view.open(url, '_blank');
							if(!popup) view.location.href = url;
							url=undefined; // release reference before dispatching
							filesaver.readyState = filesaver.DONE;
							dispatch_all();
						};
						reader.readAsDataURL(blob);
						filesaver.readyState = filesaver.INIT;
						return;
					}
					// don't create more object URLs than needed
					if (!object_url) {
						object_url = get_URL().createObjectURL(blob);
					}
					if (force) {
						view.location.href = object_url;
					} else {
						var opened = view.open(object_url, "_blank");
						if (!opened) {
							// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html
							view.location.href = object_url;
						}
					}
					filesaver.readyState = filesaver.DONE;
					dispatch_all();
					revoke(object_url);
				}
			;
			filesaver.readyState = filesaver.INIT;

			if (can_use_save_link) {
				object_url = get_URL().createObjectURL(blob);
				setTimeout(function() {
					save_link.href = object_url;
					save_link.download = name;
					click(save_link);
					dispatch_all();
					revoke(object_url);
					filesaver.readyState = filesaver.DONE;
				});
				return;
			}

			fs_error();
		}
		, FS_proto = FileSaver.prototype
		, saveAs = function(blob, name, no_auto_bom) {
			return new FileSaver(blob, name || blob.name || "download", no_auto_bom);
		}
	;
	// IE 10+ (native saveAs)
	if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
		return function(blob, name, no_auto_bom) {
			name = name || blob.name || "download";

			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			return navigator.msSaveOrOpenBlob(blob, name);
		};
	}

	FS_proto.abort = function(){};
	FS_proto.readyState = FS_proto.INIT = 0;
	FS_proto.WRITING = 1;
	FS_proto.DONE = 2;

	FS_proto.error =
	FS_proto.onwritestart =
	FS_proto.onprogress =
	FS_proto.onwrite =
	FS_proto.onabort =
	FS_proto.onerror =
	FS_proto.onwriteend =
		null;

	return saveAs;
}(
	   typeof self !== "undefined" && self
	|| typeof window !== "undefined" && window
	|| this.content
));


// Expose file saver on the DataTables API. Can't attach to `DataTables.Buttons`
// since this file can be loaded before Button's core!
DataTable.fileSave = _saveAs;


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local (private) functions
 */

/**
 * Get the sheet name for Excel exports.
 *
 * @param {object}	config Button configuration
 */
var _sheetname = function ( config )
{
	var sheetName = 'Sheet1';

	if ( config.sheetName ) {
		sheetName = config.sheetName.replace(/[\[\]\*\/\\\?\:]/g, '');
	}

	return sheetName;
};

/**
 * Get the newline character(s)
 *
 * @param {object}	config Button configuration
 * @return {string}				Newline character
 */
var _newLine = function ( config )
{
	return config.newline ?
		config.newline :
		navigator.userAgent.match(/Windows/) ?
			'\r\n' :
			'\n';
};

/**
 * Combine the data from the `buttons.exportData` method into a string that
 * will be used in the export file.
 *
 * @param	{DataTable.Api} dt		 DataTables API instance
 * @param	{object}				config Button configuration
 * @return {object}							 The data to export
 */
var _exportData = function ( dt, config )
{
	var newLine = _newLine( config );
	var data = dt.buttons.exportData( config.exportOptions );
	var boundary = config.fieldBoundary;
	var separator = config.fieldSeparator;
	var reBoundary = new RegExp( boundary, 'g' );
	var escapeChar = config.escapeChar !== undefined ?
		config.escapeChar :
		'\\';
	var join = function ( a ) {
		var s = '';

		// If there is a field boundary, then we might need to escape it in
		// the source data
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( i > 0 ) {
				s += separator;
			}

			s += boundary ?
				boundary + ('' + a[i]).replace( reBoundary, escapeChar+boundary ) + boundary :
				a[i];
		}

		return s;
	};

	var header = config.header ? join( data.header )+newLine : '';
	var footer = config.footer && data.footer ? newLine+join( data.footer ) : '';
	var body = [];

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		body.push( join( data.body[i] ) );
	}

	return {
		str: header + body.join( newLine ) + footer,
		rows: body.length
	};
};

/**
 * Older versions of Safari (prior to tech preview 18) don't support the
 * download option required.
 *
 * @return {Boolean} `true` if old Safari
 */
var _isDuffSafari = function ()
{
	var safari = navigator.userAgent.indexOf('Safari') !== -1 &&
		navigator.userAgent.indexOf('Chrome') === -1 &&
		navigator.userAgent.indexOf('Opera') === -1;

	if ( ! safari ) {
		return false;
	}

	var version = navigator.userAgent.match( /AppleWebKit\/(\d+\.\d+)/ );
	if ( version && version.length > 1 && version[1]*1 < 603.1 ) {
		return true;
	}

	return false;
};

/**
 * Convert from numeric position to letter for column names in Excel
 * @param  {int} n Column number
 * @return {string} Column letter(s) name
 */
function createCellPos( n ){
	var ordA = 'A'.charCodeAt(0);
	var ordZ = 'Z'.charCodeAt(0);
	var len = ordZ - ordA + 1;
	var s = "";

	while( n >= 0 ) {
		s = String.fromCharCode(n % len + ordA) + s;
		n = Math.floor(n / len) - 1;
	}

	return s;
}

try {
	var _serialiser = new XMLSerializer();
	var _ieExcel;
}
catch (t) {}

/**
 * Recursively add XML files from an object's structure to a ZIP file. This
 * allows the XSLX file to be easily defined with an object's structure matching
 * the files structure.
 *
 * @param {JSZip} zip ZIP package
 * @param {object} obj Object to add (recursive)
 */
function _addToZip( zip, obj ) {
	if ( _ieExcel === undefined ) {
		// Detect if we are dealing with IE's _awful_ serialiser by seeing if it
		// drop attributes
		_ieExcel = _serialiser
			.serializeToString(
				$.parseXML( excelStrings['xl/worksheets/sheet1.xml'] )
			)
			.indexOf( 'xmlns:r' ) === -1;
	}

	$.each( obj, function ( name, val ) {
		if ( $.isPlainObject( val ) ) {
			var newDir = zip.folder( name );
			_addToZip( newDir, val );
		}
		else {
			if ( _ieExcel ) {
				// IE's XML serialiser will drop some name space attributes from
				// from the root node, so we need to save them. Do this by
				// replacing the namespace nodes with a regular attribute that
				// we convert back when serialised. Edge does not have this
				// issue
				var worksheet = val.childNodes[0];
				var i, ien;
				var attrs = [];

				for ( i=worksheet.attributes.length-1 ; i>=0 ; i-- ) {
					var attrName = worksheet.attributes[i].nodeName;
					var attrValue = worksheet.attributes[i].nodeValue;

					if ( attrName.indexOf( ':' ) !== -1 ) {
						attrs.push( { name: attrName, value: attrValue } );

						worksheet.removeAttribute( attrName );
					}
				}

				for ( i=0, ien=attrs.length ; i<ien ; i++ ) {
					var attr = val.createAttribute( attrs[i].name.replace( ':', '_dt_b_namespace_token_' ) );
					attr.value = attrs[i].value;
					worksheet.setAttributeNode( attr );
				}
			}

			var str = _serialiser.serializeToString(val);

			// Fix IE's XML
			if ( _ieExcel ) {
				// IE doesn't include the XML declaration
				if ( str.indexOf( '<?xml' ) === -1 ) {
					str = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+str;
				}

				// Return namespace attributes to being as such
				str = str.replace( /_dt_b_namespace_token_/g, ':' );

				// Remove testing name space that IE puts into the space preserve attr
				str = str.replace( /xmlns:NS[\d]+="" NS[\d]+:/g, '' );
			}

			// Safari, IE and Edge will put empty name space attributes onto
			// various elements making them useless. This strips them out
			str = str.replace( /<([^<>]*?) xmlns=""([^<>]*?)>/g, '<$1 $2>' );

			zip.file( name, str );
		}
	} );
}

/**
 * Create an XML node and add any children, attributes, etc without needing to
 * be verbose in the DOM.
 *
 * @param  {object} doc      XML document
 * @param  {string} nodeName Node name
 * @param  {object} opts     Options - can be `attr` (attributes), `children`
 *   (child nodes) and `text` (text content)
 * @return {node}            Created node
 */
function _createNode( doc, nodeName, opts ) {
	var tempNode = doc.createElement( nodeName );

	if ( opts ) {
		if ( opts.attr ) {
			$(tempNode).attr( opts.attr );
		}

		if ( opts.children ) {
			$.each( opts.children, function ( key, value ) {
				tempNode.appendChild( value );
			} );
		}

		if ( opts.text !== null && opts.text !== undefined ) {
			tempNode.appendChild( doc.createTextNode( opts.text ) );
		}
	}

	return tempNode;
}

/**
 * Get the width for an Excel column based on the contents of that column
 * @param  {object} data Data for export
 * @param  {int}    col  Column index
 * @return {int}         Column width
 */
function _excelColWidth( data, col ) {
	var max = data.header[col].length;
	var len, lineSplit, str;

	if ( data.footer && data.footer[col].length > max ) {
		max = data.footer[col].length;
	}

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		var point = data.body[i][col];
		str = point !== null && point !== undefined ?
			point.toString() :
			'';

		// If there is a newline character, workout the width of the column
		// based on the longest line in the string
		if ( str.indexOf('\n') !== -1 ) {
			lineSplit = str.split('\n');
			lineSplit.sort( function (a, b) {
				return b.length - a.length;
			} );

			len = lineSplit[0].length;
		}
		else {
			len = str.length;
		}

		if ( len > max ) {
			max = len;
		}

		// Max width rather than having potentially massive column widths
		if ( max > 40 ) {
			return 54; // 40 * 1.35
		}
	}

	max *= 1.35;

	// And a min width
	return max > 6 ? max : 6;
}

// Excel - Pre-defined strings to build a basic XLSX file
var excelStrings = {
	"_rels/.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/>'+
		'</Relationships>',

	"xl/_rels/workbook.xml.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/>'+
			'<Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/>'+
		'</Relationships>',

	"[Content_Types].xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">'+
			'<Default Extension="xml" ContentType="application/xml" />'+
			'<Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" />'+
			'<Default Extension="jpeg" ContentType="image/jpeg" />'+
			'<Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" />'+
			'<Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" />'+
			'<Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" />'+
		'</Types>',

	"xl/workbook.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships">'+
			'<fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/>'+
			'<workbookPr showInkAnnotation="0" autoCompressPictures="0"/>'+
			'<bookViews>'+
				'<workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/>'+
			'</bookViews>'+
			'<sheets>'+
				'<sheet name="Sheet1" sheetId="1" r:id="rId1"/>'+
			'</sheets>'+
			'<definedNames/>'+
		'</workbook>',

	"xl/worksheets/sheet1.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<sheetData/>'+
			'<mergeCells count="0"/>'+
		'</worksheet>',

	"xl/styles.xml":
		'<?xml version="1.0" encoding="UTF-8"?>'+
		'<styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<numFmts count="6">'+
				'<numFmt numFmtId="164" formatCode="#,##0.00_-\ [$$-45C]"/>'+
				'<numFmt numFmtId="165" formatCode="&quot;Â£&quot;#,##0.00"/>'+
				'<numFmt numFmtId="166" formatCode="[$â¬-2]\ #,##0.00"/>'+
				'<numFmt numFmtId="167" formatCode="0.0%"/>'+
				'<numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/>'+
				'<numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/>'+
			'</numFmts>'+
			'<fonts count="5" x14ac:knownFonts="1">'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<color rgb="FFFFFFFF" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<b />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<i />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<u />'+
				'</font>'+
			'</fonts>'+
			'<fills count="6">'+
				'<fill>'+
					'<patternFill patternType="none" />'+
				'</fill>'+
				'<fill>'+ // Excel appears to use this as a dotted background regardless of values but
					'<patternFill patternType="none" />'+ // to be valid to the schema, use a patternFill
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD9D9D9" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD99795" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6efce" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6cfef" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
			'</fills>'+
			'<borders count="2">'+
				'<border>'+
					'<left />'+
					'<right />'+
					'<top />'+
					'<bottom />'+
					'<diagonal />'+
				'</border>'+
				'<border diagonalUp="false" diagonalDown="false">'+
					'<left style="thin">'+
						'<color auto="1" />'+
					'</left>'+
					'<right style="thin">'+
						'<color auto="1" />'+
					'</right>'+
					'<top style="thin">'+
						'<color auto="1" />'+
					'</top>'+
					'<bottom style="thin">'+
						'<color auto="1" />'+
					'</bottom>'+
					'<diagonal />'+
				'</border>'+
			'</borders>'+
			'<cellStyleXfs count="1">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" />'+
			'</cellStyleXfs>'+
			'<cellXfs count="67">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="left"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="center"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="right"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="fill"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment textRotation="90"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment wrapText="1"/>'+
				'</xf>'+
				'<xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
			'</cellXfs>'+
			'<cellStyles count="1">'+
				'<cellStyle name="Normal" xfId="0" builtinId="0" />'+
			'</cellStyles>'+
			'<dxfs count="0" />'+
			'<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" />'+
		'</styleSheet>'
};
// Note we could use 3 `for` loops for the styles, but when gzipped there is
// virtually no difference in size, since the above can be easily compressed

// Pattern matching for special number formats. Perhaps this should be exposed
// via an API in future?
// Ref: section 3.8.30 - built in formatters in open spreadsheet
//   https://www.ecma-international.org/news/TC45_current_work/Office%20Open%20XML%20Part%204%20-%20Markup%20Language%20Reference.pdf
var _excelSpecials = [
	{ match: /^\-?\d+\.\d%$/,       style: 60, fmt: function (d) { return d/100; } }, // Precent with d.p.
	{ match: /^\-?\d+\.?\d*%$/,     style: 56, fmt: function (d) { return d/100; } }, // Percent
	{ match: /^\-?\$[\d,]+.?\d*$/,  style: 57 }, // Dollars
	{ match: /^\-?Â£[\d,]+.?\d*$/,   style: 58 }, // Pounds
	{ match: /^\-?â¬[\d,]+.?\d*$/,   style: 59 }, // Euros
	{ match: /^\-?\d+$/,            style: 65 }, // Numbers without thousand separators
	{ match: /^\-?\d+\.\d{2}$/,     style: 66 }, // Numbers 2 d.p. without thousands separators
	{ match: /^\([\d,]+\)$/,        style: 61, fmt: function (d) { return -1 * d.replace(/[\(\)]/g, ''); } },  // Negative numbers indicated by brackets
	{ match: /^\([\d,]+\.\d{2}\)$/, style: 62, fmt: function (d) { return -1 * d.replace(/[\(\)]/g, ''); } },  // Negative numbers indicated by brackets - 2d.p.
	{ match: /^\-?[\d,]+$/,         style: 63 }, // Numbers with thousand separators
	{ match: /^\-?[\d,]+\.\d{2}$/,  style: 64 }  // Numbers with 2 d.p. and thousands separators
];



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Buttons
 */

//
// Copy to clipboard
//
DataTable.ext.buttons.copyHtml5 = {
	className: 'buttons-copy buttons-html5',

	text: function ( dt ) {
		return dt.i18n( 'buttons.copy', 'Copy' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		var that = this;
		var exportData = _exportData( dt, config );
		var info = dt.buttons.exportInfo( config );
		var newline = _newLine(config);
		var output = exportData.str;
		var hiddenDiv = $('<div/>')
			.css( {
				height: 1,
				width: 1,
				overflow: 'hidden',
				position: 'fixed',
				top: 0,
				left: 0
			} );

		if ( info.title ) {
			output = info.title + newline + newline + output;
		}

		if ( info.messageTop ) {
			output = info.messageTop + newline + newline + output;
		}

		if ( info.messageBottom ) {
			output = output + newline + newline + info.messageBottom;
		}

		if ( config.customize ) {
			output = config.customize( output, config, dt );
		}

		var textarea = $('<textarea readonly/>')
			.val( output )
			.appendTo( hiddenDiv );

		// For browsers that support the copy execCommand, try to use it
		if ( document.queryCommandSupported('copy') ) {
			hiddenDiv.appendTo( dt.table().container() );
			textarea[0].focus();
			textarea[0].select();

			try {
				var successful = document.execCommand( 'copy' );
				hiddenDiv.remove();

				if (successful) {
					dt.buttons.info(
						dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ),
						dt.i18n( 'buttons.copySuccess', {
							1: 'Copied one row to clipboard',
							_: 'Copied %d rows to clipboard'
						}, exportData.rows ),
						2000
					);

					this.processing( false );
					return;
				}
			}
			catch (t) {}
		}

		// Otherwise we show the text box and instruct the user to use it
		var message = $('<span>'+dt.i18n( 'buttons.copyKeys',
				'Press <i>ctrl</i> or <i>\u2318</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>'+
				'To cancel, click this message or press escape.' )+'</span>'
			)
			.append( hiddenDiv );

		dt.buttons.info( dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ), message, 0 );

		// Select the text so when the user activates their system clipboard
		// it will copy that text
		textarea[0].focus();
		textarea[0].select();

		// Event to hide the message when the user is done
		var container = $(message).closest('.dt-button-info');
		var close = function () {
			container.off( 'click.buttons-copy' );
			$(document).off( '.buttons-copy' );
			dt.buttons.info( false );
		};

		container.on( 'click.buttons-copy', close );
		$(document)
			.on( 'keydown.buttons-copy', function (e) {
				if ( e.keyCode === 27 ) { // esc
					close();
					that.processing( false );
				}
			} )
			.on( 'copy.buttons-copy cut.buttons-copy', function () {
				close();
				that.processing( false );
			} );
	},

	exportOptions: {},

	fieldSeparator: '\t',

	fieldBoundary: '',

	header: true,

	footer: false,

	title: '*',

	messageTop: '*',

	messageBottom: '*'
};

//
// CSV export
//
DataTable.ext.buttons.csvHtml5 = {
	bom: false,

	className: 'buttons-csv buttons-html5',

	available: function () {
		return window.FileReader !== undefined && window.Blob;
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.csv', 'CSV' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		// Set the text
		var output = _exportData( dt, config ).str;
		var info = dt.buttons.exportInfo(config);
		var charset = config.charset;

		if ( config.customize ) {
			output = config.customize( output, config, dt );
		}

		if ( charset !== false ) {
			if ( ! charset ) {
				charset = document.characterSet || document.charset;
			}

			if ( charset ) {
				charset = ';charset='+charset;
			}
		}
		else {
			charset = '';
		}

		if ( config.bom ) {
			output = '\ufeff' + output;
		}

		_saveAs(
			new Blob( [output], {type: 'text/csv'+charset} ),
			info.filename,
			true
		);

		this.processing( false );
	},

	filename: '*',

	extension: '.csv',

	exportOptions: {},

	fieldSeparator: ',',

	fieldBoundary: '"',

	escapeChar: '"',

	charset: null,

	header: true,

	footer: false
};

//
// Excel (xlsx) export
//
DataTable.ext.buttons.excelHtml5 = {
	className: 'buttons-excel buttons-html5',

	available: function () {
		return window.FileReader !== undefined && _jsZip() !== undefined && ! _isDuffSafari() && _serialiser;
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.excel', 'Excel' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		var that = this;
		var rowPos = 0;
		var dataStartRow, dataEndRow;
		var getXml = function ( type ) {
			var str = excelStrings[ type ];

			//str = str.replace( /xmlns:/g, 'xmlns_' ).replace( /mc:/g, 'mc_' );

			return $.parseXML( str );
		};
		var rels = getXml('xl/worksheets/sheet1.xml');
		var relsGet = rels.getElementsByTagName( "sheetData" )[0];

		var xlsx = {
			_rels: {
				".rels": getXml('_rels/.rels')
			},
			xl: {
				_rels: {
					"workbook.xml.rels": getXml('xl/_rels/workbook.xml.rels')
				},
				"workbook.xml": getXml('xl/workbook.xml'),
				"styles.xml": getXml('xl/styles.xml'),
				"worksheets": {
					"sheet1.xml": rels
				}

			},
			"[Content_Types].xml": getXml('[Content_Types].xml')
		};

		var data = dt.buttons.exportData( config.exportOptions );
		var currentRow, rowNode;
		var addRow = function ( row ) {
			currentRow = rowPos+1;
			rowNode = _createNode( rels, "row", { attr: {r:currentRow} } );

			for ( var i=0, ien=row.length ; i<ien ; i++ ) {
				// Concat both the Cell Columns as a letter and the Row of the cell.
				var cellId = createCellPos(i) + '' + currentRow;
				var cell = null;

				// For null, undefined of blank cell, continue so it doesn't create the _createNode
				if ( row[i] === null || row[i] === undefined || row[i] === '' ) {
					if ( config.createEmptyCells === true ) {
						row[i] = '';
					}
					else {
						continue;
					}
				}

				var originalContent = row[i];
				row[i] = $.trim( row[i] );

				// Special number formatting options
				for ( var j=0, jen=_excelSpecials.length ; j<jen ; j++ ) {
					var special = _excelSpecials[j];

					// TODO Need to provide the ability for the specials to say
					// if they are returning a string, since at the moment it is
					// assumed to be a number
					if ( row[i].match && ! row[i].match(/^0\d+/) && row[i].match( special.match ) ) {
						var val = row[i].replace(/[^\d\.\-]/g, '');

						if ( special.fmt ) {
							val = special.fmt( val );
						}

						cell = _createNode( rels, 'c', {
							attr: {
								r: cellId,
								s: special.style
							},
							children: [
								_createNode( rels, 'v', { text: val } )
							]
						} );

						break;
					}
				}

				if ( ! cell ) {
					if ( typeof row[i] === 'number' || (
						row[i].match &&
						row[i].match(/^-?\d+(\.\d+)?$/) &&
						! row[i].match(/^0\d+/) )
					) {
						// Detect numbers - don't match numbers with leading zeros
						// or a negative anywhere but the start
						cell = _createNode( rels, 'c', {
							attr: {
								t: 'n',
								r: cellId
							},
							children: [
								_createNode( rels, 'v', { text: row[i] } )
							]
						} );
					}
					else {
						// String output - replace non standard characters for text output
						var text = ! originalContent.replace ?
							originalContent :
							originalContent.replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g, '');

						cell = _createNode( rels, 'c', {
							attr: {
								t: 'inlineStr',
								r: cellId
							},
							children:{
								row: _createNode( rels, 'is', {
									children: {
										row: _createNode( rels, 't', {
											text: text,
											attr: {
												'xml:space': 'preserve'
											}
										} )
									}
								} )
							}
						} );
					}
				}

				rowNode.appendChild( cell );
			}

			relsGet.appendChild(rowNode);
			rowPos++;
		};

		if ( config.customizeData ) {
			config.customizeData( data );
		}

		var mergeCells = function ( row, colspan ) {
			var mergeCells = $('mergeCells', rels);

			mergeCells[0].appendChild( _createNode( rels, 'mergeCell', {
				attr: {
					ref: 'A'+row+':'+createCellPos(colspan)+row
				}
			} ) );
			mergeCells.attr( 'count', parseFloat(mergeCells.attr( 'count' ))+1 );
			$('row:eq('+(row-1)+') c', rels).attr( 's', '51' ); // centre
		};

		// Title and top messages
		var exportInfo = dt.buttons.exportInfo( config );
		if ( exportInfo.title ) {
			addRow( [exportInfo.title], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}

		if ( exportInfo.messageTop ) {
			addRow( [exportInfo.messageTop], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}


		// Table itself
		if ( config.header ) {
			addRow( data.header, rowPos );
			$('row:last c', rels).attr( 's', '2' ); // bold
		}
	
		dataStartRow = rowPos;

		for ( var n=0, ie=data.body.length ; n<ie ; n++ ) {
			addRow( data.body[n], rowPos );
		}
	
		dataEndRow = rowPos;

		if ( config.footer && data.footer ) {
			addRow( data.footer, rowPos);
			$('row:last c', rels).attr( 's', '2' ); // bold
		}

		// Below the table
		if ( exportInfo.messageBottom ) {
			addRow( [exportInfo.messageBottom], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}

		// Set column widths
		var cols = _createNode( rels, 'cols' );
		$('worksheet', rels).prepend( cols );

		for ( var i=0, ien=data.header.length ; i<ien ; i++ ) {
			cols.appendChild( _createNode( rels, 'col', {
				attr: {
					min: i+1,
					max: i+1,
					width: _excelColWidth( data, i ),
					customWidth: 1
				}
			} ) );
		}

		// Workbook modifications
		var workbook = xlsx.xl['workbook.xml'];

		$( 'sheets sheet', workbook ).attr( 'name', _sheetname( config ) );

		// Auto filter for columns
		if ( config.autoFilter ) {
			$('mergeCells', rels).before( _createNode( rels, 'autoFilter', {
				attr: {
					ref: 'A'+dataStartRow+':'+createCellPos(data.header.length-1)+dataEndRow
				}
			} ) );

			$('definedNames', workbook).append( _createNode( workbook, 'definedName', {
				attr: {
					name: '_xlnm._FilterDatabase',
					localSheetId: '0',
					hidden: 1
				},
				text: _sheetname(config)+'!$A$'+dataStartRow+':'+createCellPos(data.header.length-1)+dataEndRow
			} ) );
		}

		// Let the developer customise the document if they want to
		if ( config.customize ) {
			config.customize( xlsx, config, dt );
		}

		// Excel doesn't like an empty mergeCells tag
		if ( $('mergeCells', rels).children().length === 0 ) {
			$('mergeCells', rels).remove();
		}

		var jszip = _jsZip();
		var zip = new jszip();
		var zipConfig = {
			type: 'blob',
			mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
		};

		_addToZip( zip, xlsx );

		if ( zip.generateAsync ) {
			// JSZip 3+
			zip
				.generateAsync( zipConfig )
				.then( function ( blob ) {
					_saveAs( blob, exportInfo.filename );
					that.processing( false );
				} );
		}
		else {
			// JSZip 2.5
			_saveAs(
				zip.generate( zipConfig ),
				exportInfo.filename
			);
			this.processing( false );
		}
	},

	filename: '*',

	extension: '.xlsx',

	exportOptions: {},

	header: true,

	footer: false,

	title: '*',

	messageTop: '*',

	messageBottom: '*',

	createEmptyCells: false,

	autoFilter: false,

	sheetName: ''
};

//
// PDF export - using pdfMake - http://pdfmake.org
//
DataTable.ext.buttons.pdfHtml5 = {
	className: 'buttons-pdf buttons-html5',

	available: function () {
		return window.FileReader !== undefined && _pdfMake();
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.pdf', 'PDF' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		var that = this;
		var data = dt.buttons.exportData( config.exportOptions );
		var info = dt.buttons.exportInfo( config );
		var rows = [];

		if ( config.header ) {
			rows.push( $.map( data.header, function ( d ) {
				return {
					text: typeof d === 'string' ? d : d+'',
					style: 'tableHeader'
				};
			} ) );
		}

		for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
			rows.push( $.map( data.body[i], function ( d ) {
				if ( d === null || d === undefined ) {
					d = '';
				}
				return {
					text: typeof d === 'string' ? d : d+'',
					style: i % 2 ? 'tableBodyEven' : 'tableBodyOdd'
				};
			} ) );
		}

		if ( config.footer && data.footer) {
			rows.push( $.map( data.footer, function ( d ) {
				return {
					text: typeof d === 'string' ? d : d+'',
					style: 'tableFooter'
				};
			} ) );
		}

		var doc = {
			pageSize: config.pageSize,
			pageOrientation: config.orientation,
			content: [
				{
					table: {
						headerRows: 1,
						body: rows
					},
					layout: 'noBorders'
				}
			],
			styles: {
				tableHeader: {
					bold: true,
					fontSize: 11,
					color: 'white',
					fillColor: '#2d4154',
					alignment: 'center'
				},
				tableBodyEven: {},
				tableBodyOdd: {
					fillColor: '#f3f3f3'
				},
				tableFooter: {
					bold: true,
					fontSize: 11,
					color: 'white',
					fillColor: '#2d4154'
				},
				title: {
					alignment: 'center',
					fontSize: 15
				},
				message: {}
			},
			defaultStyle: {
				fontSize: 10
			}
		};

		if ( info.messageTop ) {
			doc.content.unshift( {
				text: info.messageTop,
				style: 'message',
				margin: [ 0, 0, 0, 12 ]
			} );
		}

		if ( info.messageBottom ) {
			doc.content.push( {
				text: info.messageBottom,
				style: 'message',
				margin: [ 0, 0, 0, 12 ]
			} );
		}

		if ( info.title ) {
			doc.content.unshift( {
				text: info.title,
				style: 'title',
				margin: [ 0, 0, 0, 12 ]
			} );
		}

		if ( config.customize ) {
			config.customize( doc, config, dt );
		}

		var pdf = _pdfMake().createPdf( doc );

		if ( config.download === 'open' && ! _isDuffSafari() ) {
			pdf.open();
		}
		else {
			pdf.download( info.filename );
		}

		this.processing( false );
	},

	title: '*',

	filename: '*',

	extension: '.pdf',

	exportOptions: {},

	orientation: 'portrait',

	pageSize: 'A4',

	header: true,

	footer: false,

	messageTop: '*',

	messageBottom: '*',

	customize: null,

	download: 'download'
};


return DataTable.Buttons;
}));

/*!
 * Print button for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var _link = document.createElement( 'a' );

/**
 * Clone link and style tags, taking into account the need to change the source
 * path.
 *
 * @param  {node}     el Element to convert
 */
var _styleToAbs = function( el ) {
	var url;
	var clone = $(el).clone()[0];
	var linkHost;

	if ( clone.nodeName.toLowerCase() === 'link' ) {
		clone.href = _relToAbs( clone.href );
	}

	return clone.outerHTML;
};

/**
 * Convert a URL from a relative to an absolute address so it will work
 * correctly in the popup window which has no base URL.
 *
 * @param  {string} href URL
 */
var _relToAbs = function( href ) {
	// Assign to a link on the original page so the browser will do all the
	// hard work of figuring out where the file actually is
	_link.href = href;
	var linkHost = _link.host;

	// IE doesn't have a trailing slash on the host
	// Chrome has it on the pathname
	if ( linkHost.indexOf('/') === -1 && _link.pathname.indexOf('/') !== 0) {
		linkHost += '/';
	}

	return _link.protocol+"//"+linkHost+_link.pathname+_link.search;
};


DataTable.ext.buttons.print = {
	className: 'buttons-print',

	text: function ( dt ) {
		return dt.i18n( 'buttons.print', 'Print' );
	},

	action: function ( e, dt, button, config ) {
		var data = dt.buttons.exportData(
			$.extend( {decodeEntities: false}, config.exportOptions ) // XSS protection
		);
		var exportInfo = dt.buttons.exportInfo( config );
		var columnClasses = dt
			.columns( config.exportOptions.columns )
			.flatten()
			.map( function (idx) {
				return dt.settings()[0].aoColumns[dt.column(idx).index()].sClass;
			} )
			.toArray();

		var addRow = function ( d, tag ) {
			var str = '<tr>';

			for ( var i=0, ien=d.length ; i<ien ; i++ ) {
				// null and undefined aren't useful in the print output
				var dataOut = d[i] === null || d[i] === undefined ?
					'' :
					d[i];
				var classAttr = columnClasses[i] ?
					'class="'+columnClasses[i]+'"' :
					'';

				str += '<'+tag+' '+classAttr+'>'+dataOut+'</'+tag+'>';
			}

			return str + '</tr>';
		};

		// Construct a table for printing
		var html = '<table class="'+dt.table().node().className+'">';

		if ( config.header ) {
			html += '<thead>'+ addRow( data.header, 'th' ) +'</thead>';
		}

		html += '<tbody>';
		for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
			html += addRow( data.body[i], 'td' );
		}
		html += '</tbody>';

		if ( config.footer && data.footer ) {
			html += '<tfoot>'+ addRow( data.footer, 'th' ) +'</tfoot>';
		}
		html += '</table>';

		// Open a new window for the printable table
		var win = window.open( '', '' );
		win.document.close();

		// Inject the title and also a copy of the style and link tags from this
		// document so the table can retain its base styling. Note that we have
		// to use string manipulation as IE won't allow elements to be created
		// in the host document and then appended to the new window.
		var head = '<title>'+exportInfo.title+'</title>';
		$('style, link').each( function () {
			head += _styleToAbs( this );
		} );

		try {
			win.document.head.innerHTML = head; // Work around for Edge
		}
		catch (e) {
			$(win.document.head).html( head ); // Old IE
		}

		// Inject the table and other surrounding information
		win.document.body.innerHTML =
			'<h1>'+exportInfo.title+'</h1>'+
			'<div>'+(exportInfo.messageTop || '')+'</div>'+
			html+
			'<div>'+(exportInfo.messageBottom || '')+'</div>';

		$(win.document.body).addClass('dt-print-view');

		$('img', win.document.body).each( function ( i, img ) {
			img.setAttribute( 'src', _relToAbs( img.getAttribute('src') ) );
		} );

		if ( config.customize ) {
			config.customize( win, config, dt );
		}

		// Allow stylesheets time to load
		var autoPrint = function () {
			if ( config.autoPrint ) {
				win.print(); // blocking - so close will not
				win.close(); // execute until this is done
			}
		};

		if ( navigator.userAgent.match(/Trident\/\d.\d/) ) { // IE needs to call this without a setTimeout
			autoPrint();
		}
		else {
			win.setTimeout( autoPrint, 1000 );
		}
	},

	title: '*',

	messageTop: '*',

	messageBottom: '*',

	exportOptions: {},

	header: true,

	footer: false,

	autoPrint: true,

	customize: null
};


return DataTable.Buttons;
}));

/*!
 ColReorder 1.5.1
 Â©2010-2018 SpryMedia Ltd - datatables.net/license
*/
(function(e){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(o){return e(o,window,document)}):"object"===typeof exports?module.exports=function(o,l){o||(o=window);if(!l||!l.fn.dataTable)l=require("datatables.net")(o,l).$;return e(l,o,o.document)}:e(jQuery,window,document)})(function(e,o,l,r){function q(a){for(var b=[],c=0,f=a.length;c<f;c++)b[a[c]]=c;return b}function p(a,b,c){b=a.splice(b,1)[0];a.splice(c,0,b)}function s(a,b,c){for(var f=[],e=0,d=a.childNodes.length;e<
d;e++)1==a.childNodes[e].nodeType&&f.push(a.childNodes[e]);b=f[b];null!==c?a.insertBefore(b,f[c]):a.appendChild(b)}var t=e.fn.dataTable;e.fn.dataTableExt.oApi.fnColReorder=function(a,b,c,f,g){var d,h,j,m,i,l=a.aoColumns.length,k;i=function(a,b,c){if(a[b]&&"function"!==typeof a[b]){var d=a[b].split("."),f=d.shift();isNaN(1*f)||(a[b]=c[1*f]+"."+d.join("."))}};if(b!=c)if(0>b||b>=l)this.oApi._fnLog(a,1,"ColReorder 'from' index is out of bounds: "+b);else if(0>c||c>=l)this.oApi._fnLog(a,1,"ColReorder 'to' index is out of bounds: "+
c);else{j=[];d=0;for(h=l;d<h;d++)j[d]=d;p(j,b,c);var n=q(j);d=0;for(h=a.aaSorting.length;d<h;d++)a.aaSorting[d][0]=n[a.aaSorting[d][0]];if(null!==a.aaSortingFixed){d=0;for(h=a.aaSortingFixed.length;d<h;d++)a.aaSortingFixed[d][0]=n[a.aaSortingFixed[d][0]]}d=0;for(h=l;d<h;d++){k=a.aoColumns[d];j=0;for(m=k.aDataSort.length;j<m;j++)k.aDataSort[j]=n[k.aDataSort[j]];k.idx=n[k.idx]}e.each(a.aLastSort,function(b,c){a.aLastSort[b].src=n[c.src]});d=0;for(h=l;d<h;d++)k=a.aoColumns[d],"number"==typeof k.mData?
k.mData=n[k.mData]:e.isPlainObject(k.mData)&&(i(k.mData,"_",n),i(k.mData,"filter",n),i(k.mData,"sort",n),i(k.mData,"type",n));if(a.aoColumns[b].bVisible){i=this.oApi._fnColumnIndexToVisible(a,b);m=null;for(d=c<b?c:c+1;null===m&&d<l;)m=this.oApi._fnColumnIndexToVisible(a,d),d++;j=a.nTHead.getElementsByTagName("tr");d=0;for(h=j.length;d<h;d++)s(j[d],i,m);if(null!==a.nTFoot){j=a.nTFoot.getElementsByTagName("tr");d=0;for(h=j.length;d<h;d++)s(j[d],i,m)}d=0;for(h=a.aoData.length;d<h;d++)null!==a.aoData[d].nTr&&
s(a.aoData[d].nTr,i,m)}p(a.aoColumns,b,c);d=0;for(h=l;d<h;d++)a.oApi._fnColumnOptions(a,d,{});p(a.aoPreSearchCols,b,c);d=0;for(h=a.aoData.length;d<h;d++){m=a.aoData[d];if(k=m.anCells){p(k,b,c);j=0;for(i=k.length;j<i;j++)k[j]&&k[j]._DT_CellIndex&&(k[j]._DT_CellIndex.column=j)}"dom"!==m.src&&e.isArray(m._aData)&&p(m._aData,b,c)}d=0;for(h=a.aoHeader.length;d<h;d++)p(a.aoHeader[d],b,c);if(null!==a.aoFooter){d=0;for(h=a.aoFooter.length;d<h;d++)p(a.aoFooter[d],b,c)}(g||g===r)&&e.fn.dataTable.Api(a).rows().invalidate();
d=0;for(h=l;d<h;d++)e(a.aoColumns[d].nTh).off(".DT"),this.oApi._fnSortAttachListener(a,a.aoColumns[d].nTh,d);e(a.oInstance).trigger("column-reorder.dt",[a,{from:b,to:c,mapping:n,drop:f,iFrom:b,iTo:c,aiInvertMapping:n}])}};var i=function(a,b){var c=(new e.fn.dataTable.Api(a)).settings()[0];if(c._colReorder)return c._colReorder;!0===b&&(b={});var f=e.fn.dataTable.camelToHungarian;f&&(f(i.defaults,i.defaults,!0),f(i.defaults,b||{}));this.s={dt:null,enable:null,init:e.extend(!0,{},i.defaults,b),fixed:0,
fixedRight:0,reorderCallback:null,mouse:{startX:-1,startY:-1,offsetX:-1,offsetY:-1,target:-1,targetIndex:-1,fromIndex:-1},aoTargets:[]};this.dom={drag:null,pointer:null};this.s.enable=this.s.init.bEnable;this.s.dt=c;this.s.dt._colReorder=this;this._fnConstruct();return this};e.extend(i.prototype,{fnEnable:function(a){if(!1===a)return fnDisable();this.s.enable=!0},fnDisable:function(){this.s.enable=!1},fnReset:function(){this._fnOrderColumns(this.fnOrder());return this},fnGetCurrentOrder:function(){return this.fnOrder()},
fnOrder:function(a,b){var c=[],f,g,d=this.s.dt.aoColumns;if(a===r){f=0;for(g=d.length;f<g;f++)c.push(d[f]._ColReorder_iOrigCol);return c}if(b){d=this.fnOrder();f=0;for(g=a.length;f<g;f++)c.push(e.inArray(a[f],d));a=c}this._fnOrderColumns(q(a));return this},fnTranspose:function(a,b){b||(b="toCurrent");var c=this.fnOrder(),f=this.s.dt.aoColumns;return"toCurrent"===b?!e.isArray(a)?e.inArray(a,c):e.map(a,function(a){return e.inArray(a,c)}):!e.isArray(a)?f[a]._ColReorder_iOrigCol:e.map(a,function(a){return f[a]._ColReorder_iOrigCol})},
_fnConstruct:function(){var a=this,b=this.s.dt.aoColumns.length,c=this.s.dt.nTable,f;this.s.init.iFixedColumns&&(this.s.fixed=this.s.init.iFixedColumns);this.s.init.iFixedColumnsLeft&&(this.s.fixed=this.s.init.iFixedColumnsLeft);this.s.fixedRight=this.s.init.iFixedColumnsRight?this.s.init.iFixedColumnsRight:0;this.s.init.fnReorderCallback&&(this.s.reorderCallback=this.s.init.fnReorderCallback);for(f=0;f<b;f++)f>this.s.fixed-1&&f<b-this.s.fixedRight&&this._fnMouseListener(f,this.s.dt.aoColumns[f].nTh),
this.s.dt.aoColumns[f]._ColReorder_iOrigCol=f;this.s.dt.oApi._fnCallbackReg(this.s.dt,"aoStateSaveParams",function(b,c){a._fnStateSave.call(a,c)},"ColReorder_State");var g=null;this.s.init.aiOrder&&(g=this.s.init.aiOrder.slice());this.s.dt.oLoadedState&&("undefined"!=typeof this.s.dt.oLoadedState.ColReorder&&this.s.dt.oLoadedState.ColReorder.length==this.s.dt.aoColumns.length)&&(g=this.s.dt.oLoadedState.ColReorder);if(g)if(a.s.dt._bInitComplete)b=q(g),a._fnOrderColumns.call(a,b);else{var d=!1;e(c).on("draw.dt.colReorder",
function(){if(!a.s.dt._bInitComplete&&!d){d=true;var b=q(g);a._fnOrderColumns.call(a,b)}})}else this._fnSetColumnIndexes();e(c).on("destroy.dt.colReorder",function(){e(c).off("destroy.dt.colReorder draw.dt.colReorder");e.each(a.s.dt.aoColumns,function(a,b){e(b.nTh).off(".ColReorder");e(b.nTh).removeAttr("data-column-index")});a.s.dt._colReorder=null;a.s=null})},_fnOrderColumns:function(a){var b=!1;if(a.length!=this.s.dt.aoColumns.length)this.s.dt.oInstance.oApi._fnLog(this.s.dt,1,"ColReorder - array reorder does not match known number of columns. Skipping.");
else{for(var c=0,f=a.length;c<f;c++){var g=e.inArray(c,a);c!=g&&(p(a,g,c),this.s.dt.oInstance.fnColReorder(g,c,!0,!1),b=!0)}this._fnSetColumnIndexes();b&&(e.fn.dataTable.Api(this.s.dt).rows().invalidate(),(""!==this.s.dt.oScroll.sX||""!==this.s.dt.oScroll.sY)&&this.s.dt.oInstance.fnAdjustColumnSizing(!1),this.s.dt.oInstance.oApi._fnSaveState(this.s.dt),null!==this.s.reorderCallback&&this.s.reorderCallback.call(this))}},_fnStateSave:function(a){var b,c,f,g=this.s.dt.aoColumns;a.ColReorder=[];if(a.aaSorting){for(b=
0;b<a.aaSorting.length;b++)a.aaSorting[b][0]=g[a.aaSorting[b][0]]._ColReorder_iOrigCol;var d=e.extend(!0,[],a.aoSearchCols);b=0;for(c=g.length;b<c;b++)f=g[b]._ColReorder_iOrigCol,a.aoSearchCols[f]=d[b],a.abVisCols[f]=g[b].bVisible,a.ColReorder.push(f)}else if(a.order){for(b=0;b<a.order.length;b++)a.order[b][0]=g[a.order[b][0]]._ColReorder_iOrigCol;d=e.extend(!0,[],a.columns);b=0;for(c=g.length;b<c;b++)f=g[b]._ColReorder_iOrigCol,a.columns[f]=d[b],a.ColReorder.push(f)}},_fnMouseListener:function(a,
b){var c=this;e(b).on("mousedown.ColReorder",function(a){c.s.enable&&c._fnMouseDown.call(c,a,b)}).on("touchstart.ColReorder",function(a){c.s.enable&&c._fnMouseDown.call(c,a,b)})},_fnMouseDown:function(a,b){var c=this,f=e(a.target).closest("th, td").offset(),g=parseInt(e(b).attr("data-column-index"),10);g!==r&&(this.s.mouse.startX=this._fnCursorPosition(a,"pageX"),this.s.mouse.startY=this._fnCursorPosition(a,"pageY"),this.s.mouse.offsetX=this._fnCursorPosition(a,"pageX")-f.left,this.s.mouse.offsetY=
this._fnCursorPosition(a,"pageY")-f.top,this.s.mouse.target=this.s.dt.aoColumns[g].nTh,this.s.mouse.targetIndex=g,this.s.mouse.fromIndex=g,this._fnRegions(),e(l).on("mousemove.ColReorder touchmove.ColReorder",function(a){c._fnMouseMove.call(c,a)}).on("mouseup.ColReorder touchend.ColReorder",function(a){c._fnMouseUp.call(c,a)}))},_fnMouseMove:function(a){if(null===this.dom.drag){if(5>Math.pow(Math.pow(this._fnCursorPosition(a,"pageX")-this.s.mouse.startX,2)+Math.pow(this._fnCursorPosition(a,"pageY")-
this.s.mouse.startY,2),0.5))return;this._fnCreateDragNode()}this.dom.drag.css({left:this._fnCursorPosition(a,"pageX")-this.s.mouse.offsetX,top:this._fnCursorPosition(a,"pageY")-this.s.mouse.offsetY});for(var b=!1,c=this.s.mouse.toIndex,f=1,e=this.s.aoTargets.length;f<e;f++)if(this._fnCursorPosition(a,"pageX")<this.s.aoTargets[f-1].x+(this.s.aoTargets[f].x-this.s.aoTargets[f-1].x)/2){this.dom.pointer.css("left",this.s.aoTargets[f-1].x);this.s.mouse.toIndex=this.s.aoTargets[f-1].to;b=!0;break}b||(this.dom.pointer.css("left",
this.s.aoTargets[this.s.aoTargets.length-1].x),this.s.mouse.toIndex=this.s.aoTargets[this.s.aoTargets.length-1].to);this.s.init.bRealtime&&c!==this.s.mouse.toIndex&&(this.s.dt.oInstance.fnColReorder(this.s.mouse.fromIndex,this.s.mouse.toIndex),this.s.mouse.fromIndex=this.s.mouse.toIndex,(""!==this.s.dt.oScroll.sX||""!==this.s.dt.oScroll.sY)&&this.s.dt.oInstance.fnAdjustColumnSizing(!1),this._fnRegions())},_fnMouseUp:function(){e(l).off(".ColReorder");null!==this.dom.drag&&(this.dom.drag.remove(),
this.dom.pointer.remove(),this.dom.drag=null,this.dom.pointer=null,this.s.dt.oInstance.fnColReorder(this.s.mouse.fromIndex,this.s.mouse.toIndex,!0),this._fnSetColumnIndexes(),(""!==this.s.dt.oScroll.sX||""!==this.s.dt.oScroll.sY)&&this.s.dt.oInstance.fnAdjustColumnSizing(!1),this.s.dt.oInstance.oApi._fnSaveState(this.s.dt),null!==this.s.reorderCallback&&this.s.reorderCallback.call(this))},_fnRegions:function(){var a=this.s.dt.aoColumns;this.s.aoTargets.splice(0,this.s.aoTargets.length);this.s.aoTargets.push({x:e(this.s.dt.nTable).offset().left,
to:0});for(var b=0,c=this.s.aoTargets[0].x,f=0,g=a.length;f<g;f++)f!=this.s.mouse.fromIndex&&b++,a[f].bVisible&&"none"!==a[f].nTh.style.display&&(c+=e(a[f].nTh).outerWidth(),this.s.aoTargets.push({x:c,to:b}));0!==this.s.fixedRight&&this.s.aoTargets.splice(this.s.aoTargets.length-this.s.fixedRight);0!==this.s.fixed&&this.s.aoTargets.splice(0,this.s.fixed)},_fnCreateDragNode:function(){var a=""!==this.s.dt.oScroll.sX||""!==this.s.dt.oScroll.sY,b=this.s.dt.aoColumns[this.s.mouse.targetIndex].nTh,c=b.parentNode,
f=c.parentNode,g=f.parentNode,d=e(b).clone();this.dom.drag=e(g.cloneNode(!1)).addClass("DTCR_clonedTable").append(e(f.cloneNode(!1)).append(e(c.cloneNode(!1)).append(d[0]))).css({position:"absolute",top:0,left:0,width:e(b).outerWidth(),height:e(b).outerHeight()}).appendTo("body");this.dom.pointer=e("<div></div>").addClass("DTCR_pointer").css({position:"absolute",top:a?e("div.dataTables_scroll",this.s.dt.nTableWrapper).offset().top:e(this.s.dt.nTable).offset().top,height:a?e("div.dataTables_scroll",
this.s.dt.nTableWrapper).height():e(this.s.dt.nTable).height()}).appendTo("body")},_fnSetColumnIndexes:function(){e.each(this.s.dt.aoColumns,function(a,b){e(b.nTh).attr("data-column-index",a)})},_fnCursorPosition:function(a,b){return-1!==a.type.indexOf("touch")?a.originalEvent.touches[0][b]:a[b]}});i.defaults={aiOrder:null,bEnable:!0,bRealtime:!0,iFixedColumnsLeft:0,iFixedColumnsRight:0,fnReorderCallback:null};i.version="1.5.1";e.fn.dataTable.ColReorder=i;e.fn.DataTable.ColReorder=i;"function"==typeof e.fn.dataTable&&
"function"==typeof e.fn.dataTableExt.fnVersionCheck&&e.fn.dataTableExt.fnVersionCheck("1.10.8")?e.fn.dataTableExt.aoFeatures.push({fnInit:function(a){var b=a.oInstance;a._colReorder?b.oApi._fnLog(a,1,"ColReorder attempted to initialise twice. Ignoring second"):(b=a.oInit,new i(a,b.colReorder||b.oColReorder||{}));return null},cFeature:"R",sFeature:"ColReorder"}):alert("Warning: ColReorder requires DataTables 1.10.8 or greater - www.datatables.net/download");e(l).on("preInit.dt.colReorder",function(a,
b){if("dt"===a.namespace){var c=b.oInit.colReorder,f=t.defaults.colReorder;if(c||f)f=e.extend({},c,f),!1!==c&&new i(b,f)}});e.fn.dataTable.Api.register("colReorder.reset()",function(){return this.iterator("table",function(a){a._colReorder.fnReset()})});e.fn.dataTable.Api.register("colReorder.order()",function(a,b){return a?this.iterator("table",function(c){c._colReorder.fnOrder(a,b)}):this.context.length?this.context[0]._colReorder.fnOrder():null});e.fn.dataTable.Api.register("colReorder.transpose()",
function(a,b){return this.context.length&&this.context[0]._colReorder?this.context[0]._colReorder.fnTranspose(a,b):a});e.fn.dataTable.Api.register("colReorder.move()",function(a,b,c,e){this.context.length&&this.context[0]._colReorder.s.dt.oInstance.fnColReorder(a,b,c,e);return this});e.fn.dataTable.Api.register("colReorder.enable()",function(a){return this.iterator("table",function(b){b._colReorder&&b._colReorder.fnEnable(a)})});e.fn.dataTable.Api.register("colReorder.disable()",function(){return this.iterator("table",
function(a){a._colReorder&&a._colReorder.fnDisable()})});return i});

/*!
 FixedColumns 3.2.6
 Â©2010-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(p){return d(p,window,document)}):"object"===typeof exports?module.exports=function(p,r){p||(p=window);if(!r||!r.fn.dataTable)r=require("datatables.net")(p,r).$;return d(r,p,p.document)}:d(jQuery,window,document)})(function(d,p,r,t){var s=d.fn.dataTable,u,m=function(a,b){var c=this;if(this instanceof m){if(b===t||!0===b)b={};var e=d.fn.dataTable.camelToHungarian;e&&(e(m.defaults,m.defaults,!0),e(m.defaults,
b));e=(new d.fn.dataTable.Api(a)).settings()[0];this.s={dt:e,iTableColumns:e.aoColumns.length,aiOuterWidths:[],aiInnerWidths:[],rtl:"rtl"===d(e.nTable).css("direction")};this.dom={scroller:null,header:null,body:null,footer:null,grid:{wrapper:null,dt:null,left:{wrapper:null,head:null,body:null,foot:null},right:{wrapper:null,head:null,body:null,foot:null}},clone:{left:{header:null,body:null,footer:null},right:{header:null,body:null,footer:null}}};if(e._oFixedColumns)throw"FixedColumns already initialised on this table";
e._oFixedColumns=this;e._bInitComplete?this._fnConstruct(b):e.oApi._fnCallbackReg(e,"aoInitComplete",function(){c._fnConstruct(b)},"FixedColumns")}else alert("FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.")};d.extend(m.prototype,{fnUpdate:function(){this._fnDraw(!0)},fnRedrawLayout:function(){this._fnColCalc();this._fnGridLayout();this.fnUpdate()},fnRecalculateHeight:function(a){delete a._DTTC_iHeight;a.style.height="auto"},fnSetRowHeight:function(a,b){a.style.height=
b+"px"},fnGetPosition:function(a){var b=this.s.dt.oInstance;if(d(a).parents(".DTFC_Cloned").length){if("tr"===a.nodeName.toLowerCase())return a=d(a).index(),b.fnGetPosition(d("tr",this.s.dt.nTBody)[a]);var c=d(a).index(),a=d(a.parentNode).index();return[b.fnGetPosition(d("tr",this.s.dt.nTBody)[a]),c,b.oApi._fnVisibleToColumnIndex(this.s.dt,c)]}return b.fnGetPosition(a)},_fnConstruct:function(a){var b=this;if("function"!=typeof this.s.dt.oInstance.fnVersionCheck||!0!==this.s.dt.oInstance.fnVersionCheck("1.8.0"))alert("FixedColumns "+
m.VERSION+" required DataTables 1.8.0 or later. Please upgrade your DataTables installation");else if(""===this.s.dt.oScroll.sX)this.s.dt.oInstance.oApi._fnLog(this.s.dt,1,"FixedColumns is not needed (no x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for column fixing when scrolling is not enabled");else{this.s=d.extend(!0,this.s,m.defaults,a);a=this.s.dt.oClasses;this.dom.grid.dt=d(this.s.dt.nTable).parents("div."+a.sScrollWrapper)[0];this.dom.scroller=d("div."+
a.sScrollBody,this.dom.grid.dt)[0];this._fnColCalc();this._fnGridSetup();var c,e=!1;d(this.s.dt.nTableWrapper).on("mousedown.DTFC",function(a){0===a.button&&(e=!0,d(r).one("mouseup",function(){e=!1}))});d(this.dom.scroller).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="main")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="main");if("main"===c&&(0<b.s.iLeftColumns&&(b.dom.grid.left.liner.scrollTop=b.dom.scroller.scrollTop),0<b.s.iRightColumns))b.dom.grid.right.liner.scrollTop=b.dom.scroller.scrollTop});
var f="onwheel"in r.createElement("div")?"wheel.DTFC":"mousewheel.DTFC";if(0<b.s.iLeftColumns)d(b.dom.grid.left.liner).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="left")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="left");"left"===c&&(b.dom.scroller.scrollTop=b.dom.grid.left.liner.scrollTop,0<b.s.iRightColumns&&(b.dom.grid.right.liner.scrollTop=b.dom.grid.left.liner.scrollTop))}).on(f,function(a){b.dom.scroller.scrollLeft-="wheel"===a.type?-a.originalEvent.deltaX:a.originalEvent.wheelDeltaX});
if(0<b.s.iRightColumns)d(b.dom.grid.right.liner).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="right")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="right");"right"===c&&(b.dom.scroller.scrollTop=b.dom.grid.right.liner.scrollTop,0<b.s.iLeftColumns&&(b.dom.grid.left.liner.scrollTop=b.dom.grid.right.liner.scrollTop))}).on(f,function(a){b.dom.scroller.scrollLeft-="wheel"===a.type?-a.originalEvent.deltaX:a.originalEvent.wheelDeltaX});d(p).on("resize.DTFC",function(){b._fnGridLayout.call(b)});
var g=!0,h=d(this.s.dt.nTable);h.on("draw.dt.DTFC",function(){b._fnColCalc();b._fnDraw.call(b,g);g=!1}).on("column-sizing.dt.DTFC",function(){b._fnColCalc();b._fnGridLayout(b)}).on("column-visibility.dt.DTFC",function(a,c,d,e,f){if(f===t||f)b._fnColCalc(),b._fnGridLayout(b),b._fnDraw(!0)}).on("select.dt.DTFC deselect.dt.DTFC",function(a){"dt"===a.namespace&&b._fnDraw(!1)}).on("destroy.dt.DTFC",function(){h.off(".DTFC");d(b.dom.scroller).off(".DTFC");d(p).off(".DTFC");d(b.s.dt.nTableWrapper).off(".DTFC");
d(b.dom.grid.left.liner).off(".DTFC "+f);d(b.dom.grid.left.wrapper).remove();d(b.dom.grid.right.liner).off(".DTFC "+f);d(b.dom.grid.right.wrapper).remove()});this._fnGridLayout();this.s.dt.oInstance.fnDraw(!1)}},_fnColCalc:function(){var a=this,b=0,c=0;this.s.aiInnerWidths=[];this.s.aiOuterWidths=[];d.each(this.s.dt.aoColumns,function(e,f){var g=d(f.nTh),h;if(g.filter(":visible").length){var i=g.outerWidth();0===a.s.aiOuterWidths.length&&(h=d(a.s.dt.nTable).css("border-left-width"),i+="string"===
typeof h&&-1===h.indexOf("px")?1:parseInt(h,10));a.s.aiOuterWidths.length===a.s.dt.aoColumns.length-1&&(h=d(a.s.dt.nTable).css("border-right-width"),i+="string"===typeof h&&-1===h.indexOf("px")?1:parseInt(h,10));a.s.aiOuterWidths.push(i);a.s.aiInnerWidths.push(g.width());e<a.s.iLeftColumns&&(b+=i);a.s.iTableColumns-a.s.iRightColumns<=e&&(c+=i)}else a.s.aiInnerWidths.push(0),a.s.aiOuterWidths.push(0)});this.s.iLeftWidth=b;this.s.iRightWidth=c},_fnGridSetup:function(){var a=this._fnDTOverflow(),b;this.dom.body=
this.s.dt.nTable;this.dom.header=this.s.dt.nTHead.parentNode;this.dom.header.parentNode.parentNode.style.position="relative";var c=d('<div class="DTFC_ScrollWrapper" style="position:relative; clear:both;"><div class="DTFC_LeftWrapper" style="position:absolute; top:0; left:0;" aria-hidden="true"><div class="DTFC_LeftHeadWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div><div class="DTFC_LeftBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_LeftBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_LeftFootWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightWrapper" style="position:absolute; top:0; right:0;" aria-hidden="true"><div class="DTFC_RightHeadWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightHeadBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div><div class="DTFC_RightBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_RightBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_RightFootWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightFootBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div></div></div>')[0],
e=c.childNodes[0],f=c.childNodes[1];this.dom.grid.dt.parentNode.insertBefore(c,this.dom.grid.dt);c.appendChild(this.dom.grid.dt);this.dom.grid.wrapper=c;0<this.s.iLeftColumns&&(this.dom.grid.left.wrapper=e,this.dom.grid.left.head=e.childNodes[0],this.dom.grid.left.body=e.childNodes[1],this.dom.grid.left.liner=d("div.DTFC_LeftBodyLiner",c)[0],c.appendChild(e));0<this.s.iRightColumns&&(this.dom.grid.right.wrapper=f,this.dom.grid.right.head=f.childNodes[0],this.dom.grid.right.body=f.childNodes[1],this.dom.grid.right.liner=
d("div.DTFC_RightBodyLiner",c)[0],f.style.right=a.bar+"px",b=d("div.DTFC_RightHeadBlocker",c)[0],b.style.width=a.bar+"px",b.style.right=-a.bar+"px",this.dom.grid.right.headBlock=b,b=d("div.DTFC_RightFootBlocker",c)[0],b.style.width=a.bar+"px",b.style.right=-a.bar+"px",this.dom.grid.right.footBlock=b,c.appendChild(f));if(this.s.dt.nTFoot&&(this.dom.footer=this.s.dt.nTFoot.parentNode,0<this.s.iLeftColumns&&(this.dom.grid.left.foot=e.childNodes[2]),0<this.s.iRightColumns))this.dom.grid.right.foot=f.childNodes[2];
this.s.rtl&&d("div.DTFC_RightHeadBlocker",c).css({left:-a.bar+"px",right:""})},_fnGridLayout:function(){var a=this,b=this.dom.grid;d(b.wrapper).width();var c=this.s.dt.nTable.parentNode.offsetHeight,e=this.s.dt.nTable.parentNode.parentNode.offsetHeight,f=this._fnDTOverflow(),g=this.s.iLeftWidth,h=this.s.iRightWidth,i="rtl"===d(this.dom.body).css("direction"),j=function(b,c){f.bar?a._firefoxScrollError()?34<d(b).height()&&(b.style.width=c+f.bar+"px"):b.style.width=c+f.bar+"px":(b.style.width=c+20+
"px",b.style.paddingRight="20px",b.style.boxSizing="border-box")};f.x&&(c-=f.bar);b.wrapper.style.height=e+"px";0<this.s.iLeftColumns&&(e=b.left.wrapper,e.style.width=g+"px",e.style.height="1px",i?(e.style.left="",e.style.right=0):(e.style.left=0,e.style.right=""),b.left.body.style.height=c+"px",b.left.foot&&(b.left.foot.style.top=(f.x?f.bar:0)+"px"),j(b.left.liner,g),b.left.liner.style.height=c+"px",b.left.liner.style.maxHeight=c+"px");0<this.s.iRightColumns&&(e=b.right.wrapper,e.style.width=h+"px",
e.style.height="1px",this.s.rtl?(e.style.left=f.y?f.bar+"px":0,e.style.right=""):(e.style.left="",e.style.right=f.y?f.bar+"px":0),b.right.body.style.height=c+"px",b.right.foot&&(b.right.foot.style.top=(f.x?f.bar:0)+"px"),j(b.right.liner,h),b.right.liner.style.height=c+"px",b.right.liner.style.maxHeight=c+"px",b.right.headBlock.style.display=f.y?"block":"none",b.right.footBlock.style.display=f.y?"block":"none")},_fnDTOverflow:function(){var a=this.s.dt.nTable,b=a.parentNode,c={x:!1,y:!1,bar:this.s.dt.oScroll.iBarWidth};
a.offsetWidth>b.clientWidth&&(c.x=!0);a.offsetHeight>b.clientHeight&&(c.y=!0);return c},_fnDraw:function(a){this._fnGridLayout();this._fnCloneLeft(a);this._fnCloneRight(a);null!==this.s.fnDrawCallback&&this.s.fnDrawCallback.call(this,this.dom.clone.left,this.dom.clone.right);d(this).trigger("draw.dtfc",{leftClone:this.dom.clone.left,rightClone:this.dom.clone.right})},_fnCloneRight:function(a){if(!(0>=this.s.iRightColumns)){var b,c=[];for(b=this.s.iTableColumns-this.s.iRightColumns;b<this.s.iTableColumns;b++)this.s.dt.aoColumns[b].bVisible&&
c.push(b);this._fnClone(this.dom.clone.right,this.dom.grid.right,c,a)}},_fnCloneLeft:function(a){if(!(0>=this.s.iLeftColumns)){var b,c=[];for(b=0;b<this.s.iLeftColumns;b++)this.s.dt.aoColumns[b].bVisible&&c.push(b);this._fnClone(this.dom.clone.left,this.dom.grid.left,c,a)}},_fnCopyLayout:function(a,b,c){for(var e=[],f=[],g=[],h=0,i=a.length;h<i;h++){var j=[];j.nTr=d(a[h].nTr).clone(c,!1)[0];for(var l=0,o=this.s.iTableColumns;l<o;l++)if(-1!==d.inArray(l,b)){var q=d.inArray(a[h][l].cell,g);-1===q?(q=
d(a[h][l].cell).clone(c,!1)[0],f.push(q),g.push(a[h][l].cell),j.push({cell:q,unique:a[h][l].unique})):j.push({cell:f[q],unique:a[h][l].unique})}e.push(j)}return e},_fnClone:function(a,b,c,e){var f=this,g,h,i,j,l,o,q,n,m,k=this.s.dt;if(e){d(a.header).remove();a.header=d(this.dom.header).clone(!0,!1)[0];a.header.className+=" DTFC_Cloned";a.header.style.width="100%";b.head.appendChild(a.header);n=this._fnCopyLayout(k.aoHeader,c,!0);j=d(">thead",a.header);j.empty();g=0;for(h=n.length;g<h;g++)j[0].appendChild(n[g].nTr);
k.oApi._fnDrawHead(k,n,!0)}else{n=this._fnCopyLayout(k.aoHeader,c,!1);m=[];k.oApi._fnDetectHeader(m,d(">thead",a.header)[0]);g=0;for(h=n.length;g<h;g++){i=0;for(j=n[g].length;i<j;i++)m[g][i].cell.className=n[g][i].cell.className,d("span.DataTables_sort_icon",m[g][i].cell).each(function(){this.className=d("span.DataTables_sort_icon",n[g][i].cell)[0].className})}}this._fnEqualiseHeights("thead",this.dom.header,a.header);"auto"==this.s.sHeightMatch&&d(">tbody>tr",f.dom.body).css("height","auto");null!==
a.body&&(d(a.body).remove(),a.body=null);a.body=d(this.dom.body).clone(!0)[0];a.body.className+=" DTFC_Cloned";a.body.style.paddingBottom=k.oScroll.iBarWidth+"px";a.body.style.marginBottom=2*k.oScroll.iBarWidth+"px";null!==a.body.getAttribute("id")&&a.body.removeAttribute("id");d(">thead>tr",a.body).empty();d(">tfoot",a.body).remove();var p=d("tbody",a.body)[0];d(p).empty();if(0<k.aiDisplay.length){h=d(">thead>tr",a.body)[0];for(q=0;q<c.length;q++)l=c[q],o=d(k.aoColumns[l].nTh).clone(!0)[0],o.innerHTML=
"",j=o.style,j.paddingTop="0",j.paddingBottom="0",j.borderTopWidth="0",j.borderBottomWidth="0",j.height=0,j.width=f.s.aiInnerWidths[l]+"px",h.appendChild(o);d(">tbody>tr",f.dom.body).each(function(a){var a=f.s.dt.oFeatures.bServerSide===false?f.s.dt.aiDisplay[f.s.dt._iDisplayStart+a]:a,b=f.s.dt.aoData[a].anCells||d(this).children("td, th"),e=this.cloneNode(false);e.removeAttribute("id");e.setAttribute("data-dt-row",a);for(q=0;q<c.length;q++){l=c[q];if(b.length>0){o=d(b[l]).clone(true,true)[0];o.removeAttribute("id");
o.setAttribute("data-dt-row",a);o.setAttribute("data-dt-column",l);e.appendChild(o)}}p.appendChild(e)})}else d(">tbody>tr",f.dom.body).each(function(){o=this.cloneNode(true);o.className=o.className+" DTFC_NoData";d("td",o).html("");p.appendChild(o)});a.body.style.width="100%";a.body.style.margin="0";a.body.style.padding="0";k.oScroller!==t&&(h=k.oScroller.dom.force,b.forcer?b.forcer.style.height=h.style.height:(b.forcer=h.cloneNode(!0),b.liner.appendChild(b.forcer)));b.liner.appendChild(a.body);this._fnEqualiseHeights("tbody",
f.dom.body,a.body);if(null!==k.nTFoot){if(e){null!==a.footer&&a.footer.parentNode.removeChild(a.footer);a.footer=d(this.dom.footer).clone(!0,!0)[0];a.footer.className+=" DTFC_Cloned";a.footer.style.width="100%";b.foot.appendChild(a.footer);n=this._fnCopyLayout(k.aoFooter,c,!0);b=d(">tfoot",a.footer);b.empty();g=0;for(h=n.length;g<h;g++)b[0].appendChild(n[g].nTr);k.oApi._fnDrawHead(k,n,!0)}else{n=this._fnCopyLayout(k.aoFooter,c,!1);b=[];k.oApi._fnDetectHeader(b,d(">tfoot",a.footer)[0]);g=0;for(h=n.length;g<
h;g++){i=0;for(j=n[g].length;i<j;i++)b[g][i].cell.className=n[g][i].cell.className}}this._fnEqualiseHeights("tfoot",this.dom.footer,a.footer)}b=k.oApi._fnGetUniqueThs(k,d(">thead",a.header)[0]);d(b).each(function(a){l=c[a];this.style.width=f.s.aiInnerWidths[l]+"px"});null!==f.s.dt.nTFoot&&(b=k.oApi._fnGetUniqueThs(k,d(">tfoot",a.footer)[0]),d(b).each(function(a){l=c[a];this.style.width=f.s.aiInnerWidths[l]+"px"}))},_fnGetTrNodes:function(a){for(var b=[],c=0,d=a.childNodes.length;c<d;c++)"TR"==a.childNodes[c].nodeName.toUpperCase()&&
b.push(a.childNodes[c]);return b},_fnEqualiseHeights:function(a,b,c){if(!("none"==this.s.sHeightMatch&&"thead"!==a&&"tfoot"!==a)){var e,f,g=b.getElementsByTagName(a)[0],c=c.getElementsByTagName(a)[0],a=d(">"+a+">tr:eq(0)",b).children(":first");a.outerHeight();a.height();for(var g=this._fnGetTrNodes(g),b=this._fnGetTrNodes(c),h=[],c=0,a=b.length;c<a;c++)e=g[c].offsetHeight,f=b[c].offsetHeight,e=f>e?f:e,"semiauto"==this.s.sHeightMatch&&(g[c]._DTTC_iHeight=e),h.push(e);c=0;for(a=b.length;c<a;c++)b[c].style.height=
h[c]+"px",g[c].style.height=h[c]+"px"}},_firefoxScrollError:function(){if(u===t){var a=d("<div/>").css({position:"absolute",top:0,left:0,height:10,width:50,overflow:"scroll"}).appendTo("body");u=a[0].clientWidth===a[0].offsetWidth&&0!==this._fnDTOverflow().bar;a.remove()}return u}});m.defaults={iLeftColumns:1,iRightColumns:0,fnDrawCallback:null,sHeightMatch:"semiauto"};m.version="3.2.6";s.Api.register("fixedColumns()",function(){return this});s.Api.register("fixedColumns().update()",function(){return this.iterator("table",
function(a){a._oFixedColumns&&a._oFixedColumns.fnUpdate()})});s.Api.register("fixedColumns().relayout()",function(){return this.iterator("table",function(a){a._oFixedColumns&&a._oFixedColumns.fnRedrawLayout()})});s.Api.register("rows().recalcHeight()",function(){return this.iterator("row",function(a,b){a._oFixedColumns&&a._oFixedColumns.fnRecalculateHeight(this.row(b).node())})});s.Api.register("fixedColumns().rowIndex()",function(a){a=d(a);return a.parents(".DTFC_Cloned").length?this.rows({page:"current"}).indexes()[a.index()]:
this.row(a).index()});s.Api.register("fixedColumns().cellIndex()",function(a){a=d(a);if(a.parents(".DTFC_Cloned").length){var b=a.parent().index(),b=this.rows({page:"current"}).indexes()[b],a=a.parents(".DTFC_LeftWrapper").length?a.index():this.columns().flatten().length-this.context[0]._oFixedColumns.s.iRightColumns+a.index();return{row:b,column:this.column.index("toData",a),columnVisible:a}}return this.cell(a).index()});d(r).on("init.dt.fixedColumns",function(a,b){if("dt"===a.namespace){var c=b.oInit.fixedColumns,
e=s.defaults.fixedColumns;if(c||e)e=d.extend({},c,e),!1!==c&&new m(b,e)}});d.fn.dataTable.FixedColumns=m;return d.fn.DataTable.FixedColumns=m});

/*!
 FixedHeader 3.1.5
 Â©2009-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(g){return d(g,window,document)}):"object"===typeof exports?module.exports=function(g,i){g||(g=window);if(!i||!i.fn.dataTable)i=require("datatables.net")(g,i).$;return d(i,g,g.document)}:d(jQuery,window,document)})(function(d,g,i,k){var j=d.fn.dataTable,l=0,h=function(a,b){if(!(this instanceof h))throw"FixedHeader must be initialised with the 'new' keyword.";!0===b&&(b={});a=new j.Api(a);this.c=d.extend(!0,
{},h.defaults,b);this.s={dt:a,position:{theadTop:0,tbodyTop:0,tfootTop:0,tfootBottom:0,width:0,left:0,tfootHeight:0,theadHeight:0,windowHeight:d(g).height(),visible:!0},headerMode:null,footerMode:null,autoWidth:a.settings()[0].oFeatures.bAutoWidth,namespace:".dtfc"+l++,scrollLeft:{header:-1,footer:-1},enable:!0};this.dom={floatingHeader:null,thead:d(a.table().header()),tbody:d(a.table().body()),tfoot:d(a.table().footer()),header:{host:null,floating:null,placeholder:null},footer:{host:null,floating:null,
placeholder:null}};this.dom.header.host=this.dom.thead.parent();this.dom.footer.host=this.dom.tfoot.parent();var e=a.settings()[0];if(e._fixedHeader)throw"FixedHeader already initialised on table "+e.nTable.id;e._fixedHeader=this;this._constructor()};d.extend(h.prototype,{enable:function(a){this.s.enable=a;this.c.header&&this._modeChange("in-place","header",!0);this.c.footer&&this.dom.tfoot.length&&this._modeChange("in-place","footer",!0);this.update()},headerOffset:function(a){a!==k&&(this.c.headerOffset=
a,this.update());return this.c.headerOffset},footerOffset:function(a){a!==k&&(this.c.footerOffset=a,this.update());return this.c.footerOffset},update:function(){this._positions();this._scroll(!0)},_constructor:function(){var a=this,b=this.s.dt;d(g).on("scroll"+this.s.namespace,function(){a._scroll()}).on("resize"+this.s.namespace,j.util.throttle(function(){a.s.position.windowHeight=d(g).height();a.update()},50));var e=d(".fh-fixedHeader");!this.c.headerOffset&&e.length&&(this.c.headerOffset=e.outerHeight());
e=d(".fh-fixedFooter");!this.c.footerOffset&&e.length&&(this.c.footerOffset=e.outerHeight());b.on("column-reorder.dt.dtfc column-visibility.dt.dtfc draw.dt.dtfc column-sizing.dt.dtfc responsive-display.dt.dtfc",function(){a.update()});b.on("destroy.dtfc",function(){a.c.header&&a._modeChange("in-place","header",true);a.c.footer&&a.dom.tfoot.length&&a._modeChange("in-place","footer",true);b.off(".dtfc");d(g).off(a.s.namespace)});this._positions();this._scroll()},_clone:function(a,b){var e=this.s.dt,
c=this.dom[a],f="header"===a?this.dom.thead:this.dom.tfoot;!b&&c.floating?c.floating.removeClass("fixedHeader-floating fixedHeader-locked"):(c.floating&&(c.placeholder.remove(),this._unsize(a),c.floating.children().detach(),c.floating.remove()),c.floating=d(e.table().node().cloneNode(!1)).css("table-layout","fixed").attr("aria-hidden","true").removeAttr("id").append(f).appendTo("body"),c.placeholder=f.clone(!1),c.placeholder.find("*[id]").removeAttr("id"),c.host.prepend(c.placeholder),this._matchWidths(c.placeholder,
c.floating))},_matchWidths:function(a,b){var e=function(b){return d(b,a).map(function(){return d(this).width()}).toArray()},c=function(a,c){d(a,b).each(function(a){d(this).css({width:c[a],minWidth:c[a]})})},f=e("th"),e=e("td");c("th",f);c("td",e)},_unsize:function(a){var b=this.dom[a].floating;b&&("footer"===a||"header"===a&&!this.s.autoWidth)?d("th, td",b).css({width:"",minWidth:""}):b&&"header"===a&&d("th, td",b).css("min-width","")},_horizontal:function(a,b){var e=this.dom[a],c=this.s.position,
d=this.s.scrollLeft;e.floating&&d[a]!==b&&(e.floating.css("left",c.left-b),d[a]=b)},_modeChange:function(a,b,e){var c=this.dom[b],f=this.s.position,g=this.dom["footer"===b?"tfoot":"thead"],h=d.contains(g[0],i.activeElement)?i.activeElement:null;h&&h.blur();if("in-place"===a){if(c.placeholder&&(c.placeholder.remove(),c.placeholder=null),this._unsize(b),"header"===b?c.host.prepend(g):c.host.append(g),c.floating)c.floating.remove(),c.floating=null}else"in"===a?(this._clone(b,e),c.floating.addClass("fixedHeader-floating").css("header"===
b?"top":"bottom",this.c[b+"Offset"]).css("left",f.left+"px").css("width",f.width+"px"),"footer"===b&&c.floating.css("top","")):"below"===a?(this._clone(b,e),c.floating.addClass("fixedHeader-locked").css("top",f.tfootTop-f.theadHeight).css("left",f.left+"px").css("width",f.width+"px")):"above"===a&&(this._clone(b,e),c.floating.addClass("fixedHeader-locked").css("top",f.tbodyTop).css("left",f.left+"px").css("width",f.width+"px"));h&&h!==i.activeElement&&setTimeout(function(){h.focus()},10);this.s.scrollLeft.header=
-1;this.s.scrollLeft.footer=-1;this.s[b+"Mode"]=a},_positions:function(){var a=this.s.dt.table(),b=this.s.position,e=this.dom,a=d(a.node()),c=a.children("thead"),f=a.children("tfoot"),e=e.tbody;b.visible=a.is(":visible");b.width=a.outerWidth();b.left=a.offset().left;b.theadTop=c.offset().top;b.tbodyTop=e.offset().top;b.theadHeight=b.tbodyTop-b.theadTop;f.length?(b.tfootTop=f.offset().top,b.tfootBottom=b.tfootTop+f.outerHeight(),b.tfootHeight=b.tfootBottom-b.tfootTop):(b.tfootTop=b.tbodyTop+e.outerHeight(),
b.tfootBottom=b.tfootTop,b.tfootHeight=b.tfootTop)},_scroll:function(a){var b=d(i).scrollTop(),e=d(i).scrollLeft(),c=this.s.position,f;if(this.s.enable&&(this.c.header&&(f=!c.visible||b<=c.theadTop-this.c.headerOffset?"in-place":b<=c.tfootTop-c.theadHeight-this.c.headerOffset?"in":"below",(a||f!==this.s.headerMode)&&this._modeChange(f,"header",a),this._horizontal("header",e)),this.c.footer&&this.dom.tfoot.length))b=!c.visible||b+c.windowHeight>=c.tfootBottom+this.c.footerOffset?"in-place":c.windowHeight+
b>c.tbodyTop+c.tfootHeight+this.c.footerOffset?"in":"above",(a||b!==this.s.footerMode)&&this._modeChange(b,"footer",a),this._horizontal("footer",e)}});h.version="3.1.5";h.defaults={header:!0,footer:!1,headerOffset:0,footerOffset:0};d.fn.dataTable.FixedHeader=h;d.fn.DataTable.FixedHeader=h;d(i).on("init.dt.dtfh",function(a,b){if("dt"===a.namespace){var e=b.oInit.fixedHeader,c=j.defaults.fixedHeader;if((e||c)&&!b._fixedHeader)c=d.extend({},c,e),!1!==e&&new h(b,c)}});j.Api.register("fixedHeader()",function(){});
j.Api.register("fixedHeader.adjust()",function(){return this.iterator("table",function(a){(a=a._fixedHeader)&&a.update()})});j.Api.register("fixedHeader.enable()",function(a){return this.iterator("table",function(b){b=b._fixedHeader;a=a!==k?a:!0;b&&a!==b.s.enable&&b.enable(a)})});j.Api.register("fixedHeader.disable()",function(){return this.iterator("table",function(a){(a=a._fixedHeader)&&a.s.enable&&a.enable(!1)})});d.each(["header","footer"],function(a,b){j.Api.register("fixedHeader."+b+"Offset()",
function(a){var c=this.context;return a===k?c.length&&c[0]._fixedHeader?c[0]._fixedHeader[b+"Offset"]():k:this.iterator("table",function(c){if(c=c._fixedHeader)c[b+"Offset"](a)})})});return h});

/*!
 KeyTable 2.5.0
 Â©2009-2018 SpryMedia Ltd - datatables.net/license
*/
(function(f){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(k){return f(k,window,document)}):"object"===typeof exports?module.exports=function(k,h){k||(k=window);if(!h||!h.fn.dataTable)h=require("datatables.net")(k,h).$;return f(h,k,k.document)}:f(jQuery,window,document)})(function(f,k,h,o){var l=f.fn.dataTable,n=function(a,b){if(!l.versionCheck||!l.versionCheck("1.10.8"))throw"KeyTable requires DataTables 1.10.8 or newer";this.c=f.extend(!0,{},l.defaults.keyTable,
n.defaults,b);this.s={dt:new l.Api(a),enable:!0,focusDraw:!1,waitingForDraw:!1,lastFocus:null};this.dom={};var c=this.s.dt.settings()[0],d=c.keytable;if(d)return d;c.keytable=this;this._constructor()};f.extend(n.prototype,{blur:function(){this._blur()},enable:function(a){this.s.enable=a},focus:function(a,b){this._focus(this.s.dt.cell(a,b))},focused:function(a){if(!this.s.lastFocus)return!1;var b=this.s.lastFocus.cell.index();return a.row===b.row&&a.column===b.column},_constructor:function(){this._tabInput();
var a=this,b=this.s.dt,c=f(b.table().node());"static"===c.css("position")&&c.css("position","relative");f(b.table().body()).on("click.keyTable","th, td",function(c){if(!1!==a.s.enable){var d=b.cell(this);d.any()&&a._focus(d,null,!1,c)}});f(h).on("keydown.keyTable",function(b){a._key(b)});if(this.c.blurable)f(h).on("mousedown.keyTable",function(c){f(c.target).parents(".dataTables_filter").length&&a._blur();f(c.target).parents().filter(b.table().container()).length||f(c.target).parents("div.DTE").length||
f(c.target).parents("div.editor-datetime").length||f(c.target).parents().filter(".DTFC_Cloned").length||a._blur()});if(this.c.editor){var d=this.c.editor;d.on("open.keyTableMain",function(b,c){"inline"!==c&&a.s.enable&&(a.enable(!1),d.one("close.keyTable",function(){a.enable(!0)}))});if(this.c.editOnFocus)b.on("key-focus.keyTable key-refocus.keyTable",function(b,c,d,e){a._editor(null,e,!0)});b.on("key.keyTable",function(b,c,d,e,f){a._editor(d,f,!1)});f(b.table().body()).on("dblclick.keyTable","th, td",
function(c){!1!==a.s.enable&&b.cell(this).any()&&a._editor(null,c,!0)})}if(b.settings()[0].oFeatures.bStateSave)b.on("stateSaveParams.keyTable",function(b,c,d){d.keyTable=a.s.lastFocus?a.s.lastFocus.cell.index():null});b.on("draw.keyTable",function(c){if(!a.s.focusDraw){var d=a.s.lastFocus;if(d&&d.node&&f(d.node).closest("body")===h.body){var d=a.s.lastFocus.relative,e=b.page.info(),m=d.row+e.start;0!==e.recordsDisplay&&(m>=e.recordsDisplay&&(m=e.recordsDisplay-1),a._focus(m,d.column,!0,c))}}});this.c.clipboard&&
this._clipboard();b.on("destroy.keyTable",function(){b.off(".keyTable");f(b.table().body()).off("click.keyTable","th, td");f(h).off("keydown.keyTable").off("click.keyTable").off("copy.keyTable").off("paste.keyTable")});var e=b.state.loaded();if(e&&e.keyTable)b.one("init",function(){var a=b.cell(e.keyTable);a.any()&&a.focus()});else this.c.focus&&b.cell(this.c.focus).focus()},_blur:function(){if(this.s.enable&&this.s.lastFocus){var a=this.s.lastFocus.cell;f(a.node()).removeClass(this.c.className);
this.s.lastFocus=null;this._updateFixedColumns(a.index().column);this._emitEvent("key-blur",[this.s.dt,a])}},_clipboard:function(){var a=this.s.dt,b=this;k.getSelection&&(f(h).on("copy.keyTable",function(a){var a=a.originalEvent,d=k.getSelection().toString(),e=b.s.lastFocus;!d&&e&&(a.clipboardData.setData("text/plain",e.cell.render(b.c.clipboardOrthogonal)),a.preventDefault())}),f(h).on("paste.keyTable",function(c){var c=c.originalEvent,d=b.s.lastFocus,e=h.activeElement,f=b.c.editor,g;if(d&&(!e||
"body"===e.nodeName.toLowerCase()))c.preventDefault(),k.clipboardData&&k.clipboardData.getData?g=k.clipboardData.getData("Text"):c.clipboardData&&c.clipboardData.getData&&(g=c.clipboardData.getData("text/plain")),f?f.inline(d.cell.index()).set(f.displayed()[0],g).submit():(d.cell.data(g),a.draw(!1))}))},_columns:function(){var a=this.s.dt,b=a.columns(this.c.columns).indexes(),c=[];a.columns(":visible").every(function(a){-1!==b.indexOf(a)&&c.push(a)});return c},_editor:function(a,b,c){var d=this,e=
this.s.dt,j=this.c.editor,g=this.s.lastFocus.cell;if(!f("div.DTE",g.node()).length&&!(null!==a&&(0<=a&&9>=a||11===a||12===a||14<=a&&31>=a||112<=a&&123>=a||127<=a&&159>=a))){b.stopPropagation();13===a&&b.preventDefault();var i=function(){j.one("open.keyTable",function(){j.off("cancelOpen.keyTable");c||f("div.DTE_Field_InputControl input, div.DTE_Field_InputControl textarea").select();e.keys.enable(c?"tab-only":"navigation-only");e.on("key-blur.editor",function(){j.displayed()&&j.submit()});c&&f(e.table().container()).addClass("dtk-focus-alt");
j.on("submitUnsuccessful.keyTable",function(){d._focus(g,null,!1)});j.one("close",function(){e.keys.enable(!0);e.off("key-blur.editor");j.off(".keyTable");f(e.table().container()).removeClass("dtk-focus-alt")})}).one("cancelOpen.keyTable",function(){j.off(".keyTable")}).inline(g.index())};13===a?(c=!0,f(h).one("keyup",function(){i()})):i()}},_emitEvent:function(a,b){this.s.dt.iterator("table",function(c){f(c.nTable).triggerHandler(a,b)})},_focus:function(a,b,c,d){var e=this,j=this.s.dt,g=j.page.info(),
i=this.s.lastFocus;d||(d=null);if(this.s.enable){if("number"!==typeof a){if(!a.any())return;var m=a.index(),b=m.column,a=j.rows({filter:"applied",order:"applied"}).indexes().indexOf(m.row);if(0>a)return;g.serverSide&&(a+=g.start)}if(-1!==g.length&&(a<g.start||a>=g.start+g.length))this.s.focusDraw=!0,this.s.waitingForDraw=!0,j.one("draw",function(){e.s.focusDraw=!1;e.s.waitingForDraw=!1;e._focus(a,b,o,d)}).page(Math.floor(a/g.length)).draw(!1);else if(-1!==f.inArray(b,this._columns())){g.serverSide&&
(a-=g.start);g=j.cells(null,b,{search:"applied",order:"applied"}).flatten();g=j.cell(g[a]);if(i){if(i.node===g.node()){this._emitEvent("key-refocus",[this.s.dt,g,d||null]);return}this._blur()}i=f(g.node());i.addClass(this.c.className);this._updateFixedColumns(b);if(c===o||!0===c)this._scroll(f(k),f(h.body),i,"offset"),c=j.table().body().parentNode,c!==j.table().header().parentNode&&(c=f(c.parentNode),this._scroll(c,c,i,"position"));this.s.lastFocus={cell:g,node:g.node(),relative:{row:j.rows({page:"current"}).indexes().indexOf(g.index().row),
column:g.index().column}};this._emitEvent("key-focus",[this.s.dt,g,d||null]);j.state.save()}}},_key:function(a){if(this.s.waitingForDraw)a.preventDefault();else{var b=this.s.enable,c=!0===b||"navigation-only"===b;if(b&&(!(0===a.keyCode||a.ctrlKey||a.metaKey||a.altKey)||a.ctrlKey&&a.altKey)&&this.s.lastFocus){var d=this.s.dt,e=this.s.dt.settings()[0].oScroll.sY?!0:!1;if(!(this.c.keys&&-1===f.inArray(a.keyCode,this.c.keys)))switch(a.keyCode){case 9:this._shift(a,a.shiftKey?"left":"right",!0);break;
case 27:this.s.blurable&&!0===b&&this._blur();break;case 33:case 34:c&&!e&&(a.preventDefault(),d.page(33===a.keyCode?"previous":"next").draw(!1));break;case 35:case 36:c&&(a.preventDefault(),b=d.cells({page:"current"}).indexes(),c=this._columns(),this._focus(d.cell(b[35===a.keyCode?b.length-1:c[0]]),null,!0,a));break;case 37:c&&this._shift(a,"left");break;case 38:c&&this._shift(a,"up");break;case 39:c&&this._shift(a,"right");break;case 40:c&&this._shift(a,"down");break;default:!0===b&&this._emitEvent("key",
[d,a.keyCode,this.s.lastFocus.cell,a])}}}},_scroll:function(a,b,c,d){var e=c[d](),f=c.outerHeight(),g=c.outerWidth(),i=b.scrollTop(),m=b.scrollLeft(),h=a.height(),a=a.width();"position"===d&&(e.top+=parseInt(c.closest("table").css("top"),10));e.top<i&&b.scrollTop(e.top);e.left<m&&b.scrollLeft(e.left);e.top+f>i+h&&f<h&&b.scrollTop(e.top+f-h);e.left+g>m+a&&g<a&&b.scrollLeft(e.left+g-a)},_shift:function(a,b,c){var d=this.s.dt,e=d.page.info(),j=e.recordsDisplay,g=this.s.lastFocus.cell,i=this._columns();
if(g){var h=d.rows({filter:"applied",order:"applied"}).indexes().indexOf(g.index().row);e.serverSide&&(h+=e.start);d=d.columns(i).indexes().indexOf(g.index().column);e=i[d];"right"===b?d>=i.length-1?(h++,e=i[0]):e=i[d+1]:"left"===b?0===d?(h--,e=i[i.length-1]):e=i[d-1]:"up"===b?h--:"down"===b&&h++;0<=h&&h<j&&-1!==f.inArray(e,i)?(a.preventDefault(),this._focus(h,e,!0,a)):!c||!this.c.blurable?a.preventDefault():this._blur()}},_tabInput:function(){var a=this,b=this.s.dt,c=null!==this.c.tabIndex?this.c.tabIndex:
b.settings()[0].iTabIndex;if(-1!=c)f('<div><input type="text" tabindex="'+c+'"/></div>').css({position:"absolute",height:1,width:0,overflow:"hidden"}).insertBefore(b.table().node()).children().on("focus",function(c){b.cell(":eq(0)",{page:"current"}).any()&&a._focus(b.cell(":eq(0)","0:visible",{page:"current"}),null,!0,c)})},_updateFixedColumns:function(a){var b=this.s.dt,c=b.settings()[0];if(c._oFixedColumns){var d=c.aoColumns.length-c._oFixedColumns.s.iRightColumns;(a<c._oFixedColumns.s.iLeftColumns||
a>=d)&&b.fixedColumns().update()}}});n.defaults={blurable:!0,className:"focus",clipboard:!0,clipboardOrthogonal:"display",columns:"",editor:null,editOnFocus:!1,focus:null,keys:null,tabIndex:null};n.version="2.5.0";f.fn.dataTable.KeyTable=n;f.fn.DataTable.KeyTable=n;l.Api.register("cell.blur()",function(){return this.iterator("table",function(a){a.keytable&&a.keytable.blur()})});l.Api.register("cell().focus()",function(){return this.iterator("cell",function(a,b,c){a.keytable&&a.keytable.focus(b,c)})});
l.Api.register("keys.disable()",function(){return this.iterator("table",function(a){a.keytable&&a.keytable.enable(!1)})});l.Api.register("keys.enable()",function(a){return this.iterator("table",function(b){b.keytable&&b.keytable.enable(a===o?!0:a)})});l.ext.selector.cell.push(function(a,b,c){var b=b.focused,a=a.keytable,d=[];if(!a||b===o)return c;for(var e=0,f=c.length;e<f;e++)(!0===b&&a.focused(c[e])||!1===b&&!a.focused(c[e]))&&d.push(c[e]);return d});f(h).on("preInit.dt.dtk",function(a,b){if("dt"===
a.namespace){var c=b.oInit.keys,d=l.defaults.keys;if(c||d)d=f.extend({},d,c),!1!==c&&new n(b,d)}});return n});

/*!
 Responsive 2.2.3
 2014-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(l){return d(l,window,document)}):"object"===typeof exports?module.exports=function(l,j){l||(l=window);if(!j||!j.fn.dataTable)j=require("datatables.net")(l,j).$;return d(j,l,l.document)}:d(jQuery,window,document)})(function(d,l,j,q){function t(a,b,c){var e=b+"-"+c;if(n[e])return n[e];for(var d=[],a=a.cell(b,c).node().childNodes,b=0,c=a.length;b<c;b++)d.push(a[b]);return n[e]=d}function r(a,b,d){var e=b+
"-"+d;if(n[e]){for(var a=a.cell(b,d).node(),d=n[e][0].parentNode.childNodes,b=[],f=0,g=d.length;f<g;f++)b.push(d[f]);d=0;for(f=b.length;d<f;d++)a.appendChild(b[d]);n[e]=q}}var o=d.fn.dataTable,i=function(a,b){if(!o.versionCheck||!o.versionCheck("1.10.10"))throw"DataTables Responsive requires DataTables 1.10.10 or newer";this.s={dt:new o.Api(a),columns:[],current:[]};this.s.dt.settings()[0].responsive||(b&&"string"===typeof b.details?b.details={type:b.details}:b&&!1===b.details?b.details={type:!1}:
b&&!0===b.details&&(b.details={type:"inline"}),this.c=d.extend(!0,{},i.defaults,o.defaults.responsive,b),a.responsive=this,this._constructor())};d.extend(i.prototype,{_constructor:function(){var a=this,b=this.s.dt,c=b.settings()[0],e=d(l).width();b.settings()[0]._responsive=this;d(l).on("resize.dtr orientationchange.dtr",o.util.throttle(function(){var b=d(l).width();b!==e&&(a._resize(),e=b)}));c.oApi._fnCallbackReg(c,"aoRowCreatedCallback",function(e){-1!==d.inArray(!1,a.s.current)&&d(">td, >th",
e).each(function(e){e=b.column.index("toData",e);!1===a.s.current[e]&&d(this).css("display","none")})});b.on("destroy.dtr",function(){b.off(".dtr");d(b.table().body()).off(".dtr");d(l).off("resize.dtr orientationchange.dtr");d.each(a.s.current,function(b,e){!1===e&&a._setColumnVis(b,!0)})});this.c.breakpoints.sort(function(a,b){return a.width<b.width?1:a.width>b.width?-1:0});this._classLogic();this._resizeAuto();c=this.c.details;!1!==c.type&&(a._detailsInit(),b.on("column-visibility.dtr",function(){a._timer&&
clearTimeout(a._timer);a._timer=setTimeout(function(){a._timer=null;a._classLogic();a._resizeAuto();a._resize();a._redrawChildren()},100)}),b.on("draw.dtr",function(){a._redrawChildren()}),d(b.table().node()).addClass("dtr-"+c.type));b.on("column-reorder.dtr",function(){a._classLogic();a._resizeAuto();a._resize()});b.on("column-sizing.dtr",function(){a._resizeAuto();a._resize()});b.on("preXhr.dtr",function(){var e=[];b.rows().every(function(){this.child.isShown()&&e.push(this.id(true))});b.one("draw.dtr",
function(){a._resizeAuto();a._resize();b.rows(e).every(function(){a._detailsDisplay(this,false)})})});b.on("init.dtr",function(){a._resizeAuto();a._resize();d.inArray(false,a.s.current)&&b.columns.adjust()});this._resize()},_columnsVisiblity:function(a){var b=this.s.dt,c=this.s.columns,e,f,g=c.map(function(a,b){return{columnIdx:b,priority:a.priority}}).sort(function(a,b){return a.priority!==b.priority?a.priority-b.priority:a.columnIdx-b.columnIdx}),h=d.map(c,function(e,c){return!1===b.column(c).visible()?
"not-visible":e.auto&&null===e.minWidth?!1:!0===e.auto?"-":-1!==d.inArray(a,e.includeIn)}),m=0;e=0;for(f=h.length;e<f;e++)!0===h[e]&&(m+=c[e].minWidth);e=b.settings()[0].oScroll;e=e.sY||e.sX?e.iBarWidth:0;m=b.table().container().offsetWidth-e-m;e=0;for(f=h.length;e<f;e++)c[e].control&&(m-=c[e].minWidth);var s=!1;e=0;for(f=g.length;e<f;e++){var k=g[e].columnIdx;"-"===h[k]&&(!c[k].control&&c[k].minWidth)&&(s||0>m-c[k].minWidth?(s=!0,h[k]=!1):h[k]=!0,m-=c[k].minWidth)}g=!1;e=0;for(f=c.length;e<f;e++)if(!c[e].control&&
!c[e].never&&!1===h[e]){g=!0;break}e=0;for(f=c.length;e<f;e++)c[e].control&&(h[e]=g),"not-visible"===h[e]&&(h[e]=!1);-1===d.inArray(!0,h)&&(h[0]=!0);return h},_classLogic:function(){var a=this,b=this.c.breakpoints,c=this.s.dt,e=c.columns().eq(0).map(function(a){var b=this.column(a),e=b.header().className,a=c.settings()[0].aoColumns[a].responsivePriority;a===q&&(b=d(b.header()).data("priority"),a=b!==q?1*b:1E4);return{className:e,includeIn:[],auto:!1,control:!1,never:e.match(/\bnever\b/)?!0:!1,priority:a}}),
f=function(a,b){var c=e[a].includeIn;-1===d.inArray(b,c)&&c.push(b)},g=function(d,c,g,k){if(g)if("max-"===g){k=a._find(c).width;c=0;for(g=b.length;c<g;c++)b[c].width<=k&&f(d,b[c].name)}else if("min-"===g){k=a._find(c).width;c=0;for(g=b.length;c<g;c++)b[c].width>=k&&f(d,b[c].name)}else{if("not-"===g){c=0;for(g=b.length;c<g;c++)-1===b[c].name.indexOf(k)&&f(d,b[c].name)}}else e[d].includeIn.push(c)};e.each(function(a,e){for(var c=a.className.split(" "),f=!1,i=0,l=c.length;i<l;i++){var j=d.trim(c[i]);
if("all"===j){f=!0;a.includeIn=d.map(b,function(a){return a.name});return}if("none"===j||a.never){f=!0;return}if("control"===j){f=!0;a.control=!0;return}d.each(b,function(a,b){var d=b.name.split("-"),c=j.match(RegExp("(min\\-|max\\-|not\\-)?("+d[0]+")(\\-[_a-zA-Z0-9])?"));c&&(f=!0,c[2]===d[0]&&c[3]==="-"+d[1]?g(e,b.name,c[1],c[2]+c[3]):c[2]===d[0]&&!c[3]&&g(e,b.name,c[1],c[2]))})}f||(a.auto=!0)});this.s.columns=e},_detailsDisplay:function(a,b){var c=this,e=this.s.dt,f=this.c.details;if(f&&!1!==f.type){var g=
f.display(a,b,function(){return f.renderer(e,a[0],c._detailsObj(a[0]))});(!0===g||!1===g)&&d(e.table().node()).triggerHandler("responsive-display.dt",[e,a,g,b])}},_detailsInit:function(){var a=this,b=this.s.dt,c=this.c.details;"inline"===c.type&&(c.target="td:first-child, th:first-child");b.on("draw.dtr",function(){a._tabIndexes()});a._tabIndexes();d(b.table().body()).on("keyup.dtr","td, th",function(a){a.keyCode===13&&d(this).data("dtr-keyboard")&&d(this).click()});var e=c.target;d(b.table().body()).on("click.dtr mousedown.dtr mouseup.dtr",
"string"===typeof e?e:"td, th",function(c){if(d(b.table().node()).hasClass("collapsed")&&d.inArray(d(this).closest("tr").get(0),b.rows().nodes().toArray())!==-1){if(typeof e==="number"){var g=e<0?b.columns().eq(0).length+e:e;if(b.cell(this).index().column!==g)return}g=b.row(d(this).closest("tr"));c.type==="click"?a._detailsDisplay(g,false):c.type==="mousedown"?d(this).css("outline","none"):c.type==="mouseup"&&d(this).blur().css("outline","")}})},_detailsObj:function(a){var b=this,c=this.s.dt;return d.map(this.s.columns,
function(e,d){if(!e.never&&!e.control)return{title:c.settings()[0].aoColumns[d].sTitle,data:c.cell(a,d).render(b.c.orthogonal),hidden:c.column(d).visible()&&!b.s.current[d],columnIndex:d,rowIndex:a}})},_find:function(a){for(var b=this.c.breakpoints,c=0,e=b.length;c<e;c++)if(b[c].name===a)return b[c]},_redrawChildren:function(){var a=this,b=this.s.dt;b.rows({page:"current"}).iterator("row",function(c,e){b.row(e);a._detailsDisplay(b.row(e),!0)})},_resize:function(){var a=this,b=this.s.dt,c=d(l).width(),
e=this.c.breakpoints,f=e[0].name,g=this.s.columns,h,m=this.s.current.slice();for(h=e.length-1;0<=h;h--)if(c<=e[h].width){f=e[h].name;break}var i=this._columnsVisiblity(f);this.s.current=i;e=!1;h=0;for(c=g.length;h<c;h++)if(!1===i[h]&&!g[h].never&&!g[h].control&&!1===!b.column(h).visible()){e=!0;break}d(b.table().node()).toggleClass("collapsed",e);var k=!1,j=0;b.columns().eq(0).each(function(b,c){!0===i[c]&&j++;i[c]!==m[c]&&(k=!0,a._setColumnVis(b,i[c]))});k&&(this._redrawChildren(),d(b.table().node()).trigger("responsive-resize.dt",
[b,this.s.current]),0===b.page.info().recordsDisplay&&d("td",b.table().body()).eq(0).attr("colspan",j))},_resizeAuto:function(){var a=this.s.dt,b=this.s.columns;if(this.c.auto&&-1!==d.inArray(!0,d.map(b,function(a){return a.auto}))){d.isEmptyObject(n)||d.each(n,function(b){b=b.split("-");r(a,1*b[0],1*b[1])});a.table().node();var c=a.table().node().cloneNode(!1),e=d(a.table().header().cloneNode(!1)).appendTo(c),f=d(a.table().body()).clone(!1,!1).empty().appendTo(c),g=a.columns().header().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display",
"table-cell").css("min-width",0);d(f).append(d(a.rows({page:"current"}).nodes()).clone(!1)).find("th, td").css("display","");if(f=a.table().footer()){var f=d(f.cloneNode(!1)).appendTo(c),h=a.columns().footer().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display","table-cell");d("<tr/>").append(h).appendTo(f)}d("<tr/>").append(g).appendTo(e);"inline"===this.c.details.type&&d(c).addClass("dtr-inline collapsed");d(c).find("[name]").removeAttr("name");d(c).css("position","relative");
c=d("<div/>").css({width:1,height:1,overflow:"hidden",clear:"both"}).append(c);c.insertBefore(a.table().node());g.each(function(c){c=a.column.index("fromVisible",c);b[c].minWidth=this.offsetWidth||0});c.remove()}},_setColumnVis:function(a,b){var c=this.s.dt,e=b?"":"none";d(c.column(a).header()).css("display",e);d(c.column(a).footer()).css("display",e);c.column(a).nodes().to$().css("display",e);d.isEmptyObject(n)||c.cells(null,a).indexes().each(function(a){r(c,a.row,a.column)})},_tabIndexes:function(){var a=
this.s.dt,b=a.cells({page:"current"}).nodes().to$(),c=a.settings()[0],e=this.c.details.target;b.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");"number"===typeof e?a.cells(null,e,{page:"current"}).nodes().to$().attr("tabIndex",c.iTabIndex).data("dtr-keyboard",1):("td:first-child, th:first-child"===e&&(e=">td:first-child, >th:first-child"),d(e,a.rows({page:"current"}).nodes()).attr("tabIndex",c.iTabIndex).data("dtr-keyboard",1))}});i.breakpoints=[{name:"desktop",width:Infinity},{name:"tablet-l",
width:1024},{name:"tablet-p",width:768},{name:"mobile-l",width:480},{name:"mobile-p",width:320}];i.display={childRow:function(a,b,c){if(b){if(d(a.node()).hasClass("parent"))return a.child(c(),"child").show(),!0}else{if(a.child.isShown())return a.child(!1),d(a.node()).removeClass("parent"),!1;a.child(c(),"child").show();d(a.node()).addClass("parent");return!0}},childRowImmediate:function(a,b,c){if(!b&&a.child.isShown()||!a.responsive.hasHidden())return a.child(!1),d(a.node()).removeClass("parent"),
!1;a.child(c(),"child").show();d(a.node()).addClass("parent");return!0},modal:function(a){return function(b,c,e){if(c)d("div.dtr-modal-content").empty().append(e());else{var f=function(){g.remove();d(j).off("keypress.dtr")},g=d('<div class="dtr-modal"/>').append(d('<div class="dtr-modal-display"/>').append(d('<div class="dtr-modal-content"/>').append(e())).append(d('<div class="dtr-modal-close">&times;</div>').click(function(){f()}))).append(d('<div class="dtr-modal-background"/>').click(function(){f()})).appendTo("body");
d(j).on("keyup.dtr",function(a){27===a.keyCode&&(a.stopPropagation(),f())})}a&&a.header&&d("div.dtr-modal-content").prepend("<h2>"+a.header(b)+"</h2>")}}};var n={};i.renderer={listHiddenNodes:function(){return function(a,b,c){var e=d('<ul data-dtr-index="'+b+'" class="dtr-details"/>'),f=!1;d.each(c,function(b,c){c.hidden&&(d('<li data-dtr-index="'+c.columnIndex+'" data-dt-row="'+c.rowIndex+'" data-dt-column="'+c.columnIndex+'"><span class="dtr-title">'+c.title+"</span> </li>").append(d('<span class="dtr-data"/>').append(t(a,
c.rowIndex,c.columnIndex))).appendTo(e),f=!0)});return f?e:!1}},listHidden:function(){return function(a,b,c){return(a=d.map(c,function(a){return a.hidden?'<li data-dtr-index="'+a.columnIndex+'" data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><span class="dtr-title">'+a.title+'</span> <span class="dtr-data">'+a.data+"</span></li>":""}).join(""))?d('<ul data-dtr-index="'+b+'" class="dtr-details"/>').append(a):!1}},tableAll:function(a){a=d.extend({tableClass:""},a);return function(b,
c,e){b=d.map(e,function(a){return'<tr data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><td>'+a.title+":</td> <td>"+a.data+"</td></tr>"}).join("");return d('<table class="'+a.tableClass+' dtr-details" width="100%"/>').append(b)}}};i.defaults={breakpoints:i.breakpoints,auto:!0,details:{display:i.display.childRow,renderer:i.renderer.listHidden(),target:0,type:"inline"},orthogonal:"display"};var p=d.fn.dataTable.Api;p.register("responsive()",function(){return this});p.register("responsive.index()",
function(a){a=d(a);return{column:a.data("dtr-index"),row:a.parent().data("dtr-index")}});p.register("responsive.rebuild()",function(){return this.iterator("table",function(a){a._responsive&&a._responsive._classLogic()})});p.register("responsive.recalc()",function(){return this.iterator("table",function(a){a._responsive&&(a._responsive._resizeAuto(),a._responsive._resize())})});p.register("responsive.hasHidden()",function(){var a=this.context[0];return a._responsive?-1!==d.inArray(!1,a._responsive.s.current):
!1});p.registerPlural("columns().responsiveHidden()","column().responsiveHidden()",function(){return this.iterator("column",function(a,b){return a._responsive?a._responsive.s.current[b]:!1},1)});i.version="2.2.3";d.fn.dataTable.Responsive=i;d.fn.DataTable.Responsive=i;d(j).on("preInit.dt.dtr",function(a,b){if("dt"===a.namespace&&(d(b.nTable).hasClass("responsive")||d(b.nTable).hasClass("dt-responsive")||b.oInit.responsive||o.defaults.responsive)){var c=b.oInit.responsive;!1!==c&&new i(b,d.isPlainObject(c)?
c:{})}});return i});

/*!
 Bootstrap 4 integration for DataTables' Responsive
 Â©2016 SpryMedia Ltd - datatables.net/license
*/
(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-bs4","datatables.net-responsive"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net-bs4")(a,b).$;b.fn.dataTable.Responsive||require("datatables.net-responsive")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c){var a=c.fn.dataTable,b=a.Responsive.display,g=b.modal,e=c('<div class="modal fade dtr-bs-modal" role="dialog"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button></div><div class="modal-body"/></div></div></div>');
b.modal=function(a){return function(b,d,f){if(c.fn.modal){if(!d){if(a&&a.header){var d=e.find("div.modal-header"),h=d.find("button").detach();d.empty().append('<h4 class="modal-title">'+a.header(b)+"</h4>").append(h)}e.find("div.modal-body").empty().append(f());e.appendTo("body").modal()}}else g(b,d,f)}};return a.Responsive});

/*!
 RowGroup 1.1.0
 Â©2017-2018 SpryMedia Ltd - datatables.net/license
*/
(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(d){return c(d,window,document)}):"object"===typeof exports?module.exports=function(d,h){d||(d=window);if(!h||!h.fn.dataTable)h=require("datatables.net")(d,h).$;return c(h,d,d.document)}:c(jQuery,window,document)})(function(c,d,h,k){var i=c.fn.dataTable,e=function(a,b){if(!i.versionCheck||!i.versionCheck("1.10.8"))throw"RowGroup requires DataTables 1.10.8 or newer";this.c=c.extend(!0,{},i.defaults.rowGroup,
e.defaults,b);this.s={dt:new i.Api(a)};this.dom={};var m=this.s.dt.settings()[0],f=m.rowGroup;if(f)return f;m.rowGroup=this;this._constructor()};c.extend(e.prototype,{dataSrc:function(a){if(a===k)return this.c.dataSrc;var b=this.s.dt;this.c.dataSrc=a;c(b.table().node()).triggerHandler("rowgroup-datasrc.dt",[b,a]);return this},disable:function(){this.c.enable=!1;return this},enable:function(a){if(!1===a)return this.disable();this.c.enable=!0;return this},_constructor:function(){var a=this,b=this.s.dt;
b.on("draw.dtrg",function(){a.c.enable&&a._draw()});b.on("column-visibility.dt.dtrg responsive-resize.dt.dtrg",function(){a._adjustColspan()});b.on("destroy",function(){b.off(".dtrg")});b.on("responsive-resize.dt",function(){a._adjustColspan()})},_adjustColspan:function(){c("tr."+this.c.className,this.s.dt.table().body()).find("td").attr("colspan",this._colspan())},_colspan:function(){return this.s.dt.columns().visible().reduce(function(a,b){return a+b},0)},_draw:function(){var a=this._group(0,this.s.dt.rows({page:"current"}).indexes());
this._groupDisplay(0,a)},_group:function(a,b){for(var m=c.isArray(this.c.dataSrc)?this.c.dataSrc:[this.c.dataSrc],f=i.ext.oApi._fnGetObjectDataFn(m[a]),d=this.s.dt,j,e,l=[],g=0,h=b.length;g<h;g++){var n=b[g];j=d.row(n).data();j=f(j);if(null===j||j===k)j=that.c.emptyDataGroup;if(e===k||j!==e)l.push({dataPoint:j,rows:[]}),e=j;l[l.length-1].rows.push(n)}if(m[a+1]!==k){g=0;for(h=l.length;g<h;g++)l[g].children=this._group(a+1,l[g].rows)}return l},_groupDisplay:function(a,b){for(var c=this.s.dt,f,e=0,h=
b.length;e<h;e++){var d=b[e],i=d.dataPoint,g=d.rows;this.c.startRender&&(f=this.c.startRender.call(this,c.rows(g),i,a),(f=this._rowWrap(f,this.c.startClassName,a))&&f.insertBefore(c.row(g[0]).node()));this.c.endRender&&(f=this.c.endRender.call(this,c.rows(g),i,a),(f=this._rowWrap(f,this.c.endClassName,a))&&f.insertAfter(c.row(g[g.length-1]).node()));d.children&&this._groupDisplay(a+1,d.children)}},_rowWrap:function(a,b,e){if(null===a||""===a)a=this.c.emptyDataGroup;return a===k?null:("object"===typeof a&&
a.nodeName&&"tr"===a.nodeName.toLowerCase()?c(a):a instanceof c&&a.length&&"tr"===a[0].nodeName.toLowerCase()?a:c("<tr/>").append(c("<td/>").attr("colspan",this._colspan()).append(a))).addClass(this.c.className).addClass(b).addClass("dtrg-level-"+e)}});e.defaults={className:"dtrg-group",dataSrc:0,emptyDataGroup:"No group",enable:!0,endClassName:"dtrg-end",endRender:null,startClassName:"dtrg-start",startRender:function(a,b){return b}};e.version="1.1.0";c.fn.dataTable.RowGroup=e;c.fn.DataTable.RowGroup=
e;i.Api.register("rowGroup()",function(){return this});i.Api.register("rowGroup().disable()",function(){return this.iterator("table",function(a){a.rowGroup&&a.rowGroup.enable(!1)})});i.Api.register("rowGroup().enable()",function(a){return this.iterator("table",function(b){b.rowGroup&&b.rowGroup.enable(a===k?!0:a)})});i.Api.register("rowGroup().dataSrc()",function(a){return a===k?this.context[0].rowGroup.dataSrc():this.iterator("table",function(b){b.rowGroup&&b.rowGroup.dataSrc(a)})});c(h).on("preInit.dt.dtrg",
function(a,b){if("dt"===a.namespace){var d=b.oInit.rowGroup,f=i.defaults.rowGroup;if(d||f)f=c.extend({},f,d),!1!==d&&new e(b,f)}});return e});

/*!
 RowReorder 1.2.5
 2015-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(f){return d(f,window,document)}):"object"===typeof exports?module.exports=function(f,g){f||(f=window);if(!g||!g.fn.dataTable)g=require("datatables.net")(f,g).$;return d(g,f,f.document)}:d(jQuery,window,document)})(function(d,f,g,m){var h=d.fn.dataTable,k=function(c,b){if(!h.versionCheck||!h.versionCheck("1.10.8"))throw"DataTables RowReorder requires DataTables 1.10.8 or newer";this.c=d.extend(!0,{},h.defaults.rowReorder,
k.defaults,b);this.s={bodyTop:null,dt:new h.Api(c),getDataFn:h.ext.oApi._fnGetObjectDataFn(this.c.dataSrc),middles:null,scroll:{},scrollInterval:null,setDataFn:h.ext.oApi._fnSetObjectDataFn(this.c.dataSrc),start:{top:0,left:0,offsetTop:0,offsetLeft:0,nodes:[]},windowHeight:0,documentOuterHeight:0,domCloneOuterHeight:0};this.dom={clone:null,dtScroll:d("div.dataTables_scrollBody",this.s.dt.table().container())};var a=this.s.dt.settings()[0],e=a.rowreorder;if(e)return e;a.rowreorder=this;this._constructor()};
d.extend(k.prototype,{_constructor:function(){var c=this,b=this.s.dt,a=d(b.table().node());"static"===a.css("position")&&a.css("position","relative");d(b.table().container()).on("mousedown.rowReorder touchstart.rowReorder",this.c.selector,function(a){if(c.c.enable){if(d(a.target).is(c.c.excludedChildren))return!0;var i=d(this).closest("tr"),j=b.row(i);if(j.any())return c._emitEvent("pre-row-reorder",{node:j.node(),index:j.index()}),c._mouseDown(a,i),!1}});b.on("destroy.rowReorder",function(){d(b.table().container()).off(".rowReorder");
b.off(".rowReorder")})},_cachePositions:function(){var c=this.s.dt,b=d(c.table().node()).find("thead").outerHeight(),a=d.unique(c.rows({page:"current"}).nodes().toArray()),e=d.map(a,function(a){return d(a).position().top-b}),a=d.map(e,function(a,b){return e.length<b-1?(a+e[b+1])/2:(a+a+d(c.row(":last-child").node()).outerHeight())/2});this.s.middles=a;this.s.bodyTop=d(c.table().body()).offset().top;this.s.windowHeight=d(f).height();this.s.documentOuterHeight=d(g).outerHeight()},_clone:function(c){var b=
d(this.s.dt.table().node().cloneNode(!1)).addClass("dt-rowReorder-float").append("<tbody/>").append(c.clone(!1)),a=c.outerWidth(),e=c.outerHeight(),i=c.children().map(function(){return d(this).width()});b.width(a).height(e).find("tr").children().each(function(a){this.style.width=i[a]+"px"});b.appendTo("body");this.dom.clone=b;this.s.domCloneOuterHeight=b.outerHeight()},_clonePosition:function(c){var b=this.s.start,a=this._eventToPage(c,"Y")-b.top,c=this._eventToPage(c,"X")-b.left,e=this.c.snapX,a=
a+b.offsetTop,b=!0===e?b.offsetLeft:"number"===typeof e?b.offsetLeft+e:c+b.offsetLeft;0>a?a=0:a+this.s.domCloneOuterHeight>this.s.documentOuterHeight&&(a=this.s.documentOuterHeight-this.s.domCloneOuterHeight);this.dom.clone.css({top:a,left:b})},_emitEvent:function(c,b){this.s.dt.iterator("table",function(a){d(a.nTable).triggerHandler(c+".dt",b)})},_eventToPage:function(c,b){return-1!==c.type.indexOf("touch")?c.originalEvent.touches[0]["page"+b]:c["page"+b]},_mouseDown:function(c,b){var a=this,e=this.s.dt,
i=this.s.start,j=b.offset();i.top=this._eventToPage(c,"Y");i.left=this._eventToPage(c,"X");i.offsetTop=j.top;i.offsetLeft=j.left;i.nodes=d.unique(e.rows({page:"current"}).nodes().toArray());this._cachePositions();this._clone(b);this._clonePosition(c);this.dom.target=b;b.addClass("dt-rowReorder-moving");d(g).on("mouseup.rowReorder touchend.rowReorder",function(b){a._mouseUp(b)}).on("mousemove.rowReorder touchmove.rowReorder",function(b){a._mouseMove(b)});d(f).width()===d(g).width()&&d(g.body).addClass("dt-rowReorder-noOverflow");
e=this.dom.dtScroll;this.s.scroll={windowHeight:d(f).height(),windowWidth:d(f).width(),dtTop:e.length?e.offset().top:null,dtLeft:e.length?e.offset().left:null,dtHeight:e.length?e.outerHeight():null,dtWidth:e.length?e.outerWidth():null}},_mouseMove:function(c){this._clonePosition(c);for(var b=this._eventToPage(c,"Y")-this.s.bodyTop,a=this.s.middles,e=null,i=this.s.dt,j=i.table().body(),g=0,f=a.length;g<f;g++)if(b<a[g]){e=g;break}null===e&&(e=a.length);if(null===this.s.lastInsert||this.s.lastInsert!==
e)0===e?this.dom.target.prependTo(j):(b=d.unique(i.rows({page:"current"}).nodes().toArray()),e>this.s.lastInsert?this.dom.target.insertAfter(b[e-1]):this.dom.target.insertBefore(b[e])),this._cachePositions(),this.s.lastInsert=e;this._shiftScroll(c)},_mouseUp:function(){var c=this,b=this.s.dt,a,e,i=this.c.dataSrc;this.dom.clone.remove();this.dom.clone=null;this.dom.target.removeClass("dt-rowReorder-moving");d(g).off(".rowReorder");d(g.body).removeClass("dt-rowReorder-noOverflow");clearInterval(this.s.scrollInterval);
this.s.scrollInterval=null;var j=this.s.start.nodes,f=d.unique(b.rows({page:"current"}).nodes().toArray()),k={},h=[],l=[],n=this.s.getDataFn,m=this.s.setDataFn;a=0;for(e=j.length;a<e;a++)if(j[a]!==f[a]){var o=b.row(f[a]).id(),s=b.row(f[a]).data(),p=b.row(j[a]).data();o&&(k[o]=n(p));h.push({node:f[a],oldData:n(s),newData:n(p),newPosition:a,oldPosition:d.inArray(f[a],j)});l.push(f[a])}var q=[h,{dataSrc:i,nodes:l,values:k,triggerRow:b.row(this.dom.target)}];this._emitEvent("row-reorder",q);var r=function(){if(c.c.update){a=
0;for(e=h.length;a<e;a++){var d=b.row(h[a].node).data();m(d,h[a].newData);b.columns().every(function(){this.dataSrc()===i&&b.cell(h[a].node,this.index()).invalidate("data")})}c._emitEvent("row-reordered",q);b.draw(!1)}};this.c.editor?(this.c.enable=!1,this.c.editor.edit(l,!1,d.extend({submit:"changed"},this.c.formOptions)).multiSet(i,k).one("preSubmitCancelled.rowReorder",function(){c.c.enable=!0;c.c.editor.off(".rowReorder");b.draw(!1)}).one("submitUnsuccessful.rowReorder",function(){b.draw(!1)}).one("submitSuccess.rowReorder",
function(){r()}).one("submitComplete",function(){c.c.enable=!0;c.c.editor.off(".rowReorder")}).submit()):r()},_shiftScroll:function(c){var b=this,a=this.s.scroll,e=!1,d=c.pageY-g.body.scrollTop,f,h;65>d?f=-5:d>a.windowHeight-65&&(f=5);null!==a.dtTop&&c.pageY<a.dtTop+65?h=-5:null!==a.dtTop&&c.pageY>a.dtTop+a.dtHeight-65&&(h=5);f||h?(a.windowVert=f,a.dtVert=h,e=!0):this.s.scrollInterval&&(clearInterval(this.s.scrollInterval),this.s.scrollInterval=null);!this.s.scrollInterval&&e&&(this.s.scrollInterval=
setInterval(function(){if(a.windowVert)g.body.scrollTop=g.body.scrollTop+a.windowVert;if(a.dtVert){var c=b.dom.dtScroll[0];if(a.dtVert)c.scrollTop=c.scrollTop+a.dtVert}},20))}});k.defaults={dataSrc:0,editor:null,enable:!0,formOptions:{},selector:"td:first-child",snapX:!1,update:!0,excludedChildren:"a"};var l=d.fn.dataTable.Api;l.register("rowReorder()",function(){return this});l.register("rowReorder.enable()",function(c){c===m&&(c=!0);return this.iterator("table",function(b){b.rowreorder&&(b.rowreorder.c.enable=
c)})});l.register("rowReorder.disable()",function(){return this.iterator("table",function(c){c.rowreorder&&(c.rowreorder.c.enable=!1)})});k.version="1.2.5";d.fn.dataTable.RowReorder=k;d.fn.DataTable.RowReorder=k;d(g).on("init.dt.dtr",function(c,b){if("dt"===c.namespace){var a=b.oInit.rowReorder,e=h.defaults.rowReorder;if(a||e)e=d.extend({},a,e),!1!==a&&new k(b,e)}});return k});

/*!
 Scroller 1.5.1
 Â©2011-2018 SpryMedia Ltd - datatables.net/license
*/
(function(e){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(h){return e(h,window,document)}):"object"===typeof exports?module.exports=function(h,i){h||(h=window);if(!i||!i.fn.dataTable)i=require("datatables.net")(h,i).$;return e(i,h,h.document)}:e(jQuery,window,document)})(function(e,h,i,l){var m=e.fn.dataTable,g=function(a,b){if(this instanceof g){b===l&&(b={});var c=e.fn.dataTable.Api(a);this.s={dt:c.settings()[0],dtApi:c,tableTop:0,tableBottom:0,redrawTop:0,
redrawBottom:0,autoHeight:!0,viewportRows:0,stateTO:null,drawTO:null,heights:{jump:null,page:null,virtual:null,scroll:null,row:null,viewport:null},topRowFloat:0,scrollDrawDiff:null,loaderVisible:!1,forceReposition:!1};this.s=e.extend(this.s,g.oDefaults,b);this.s.heights.row=this.s.rowHeight;this.dom={force:i.createElement("div"),scroller:null,table:null,loader:null};this.s.dt.oScroller||(this.s.dt.oScroller=this,this._fnConstruct())}else alert("Scroller warning: Scroller must be initialised with the 'new' keyword.")};
e.extend(g.prototype,{fnRowToPixels:function(a,b,c){a-=this.s.baseRowTop;c=c?this._domain("virtualToPhysical",this.s.baseScrollTop):this.s.baseScrollTop;c+=a*this.s.heights.row;return b||b===l?parseInt(c,10):c},fnPixelsToRow:function(a,b,c){a-=this.s.baseScrollTop;c=c?(this._domain("physicalToVirtual",this.s.baseScrollTop)+a)/this.s.heights.row:a/this.s.heights.row+this.s.baseRowTop;return b||b===l?parseInt(c,10):c},fnScrollToRow:function(a,b){var c=this,d=!1,f=this.fnRowToPixels(a),j=a-(this.s.displayBuffer-
1)/2*this.s.viewportRows;0>j&&(j=0);if((f>this.s.redrawBottom||f<this.s.redrawTop)&&this.s.dt._iDisplayStart!==j)d=!0,f=this._domain("virtualToPhysical",a*this.s.heights.row),this.s.redrawTop<f&&f<this.s.redrawBottom&&(this.s.forceReposition=!0,b=!1);"undefined"==typeof b||b?(this.s.ani=d,e(this.dom.scroller).animate({scrollTop:f},function(){setTimeout(function(){c.s.ani=!1},25)})):e(this.dom.scroller).scrollTop(f)},fnMeasure:function(a){this.s.autoHeight&&this._fnCalcRowHeight();var b=this.s.heights;
b.row&&(b.viewport=e.contains(i,this.dom.scroller)?e(this.dom.scroller).height():this._parseHeight(e(this.dom.scroller).css("height")),b.viewport||(b.viewport=this._parseHeight(e(this.dom.scroller).css("max-height"))),this.s.viewportRows=parseInt(b.viewport/b.row,10)+1,this.s.dt._iDisplayLength=this.s.viewportRows*this.s.displayBuffer);(a===l||a)&&this.s.dt.oInstance.fnDraw(!1)},fnPageInfo:function(){var a=this.dom.scroller.scrollTop,b=this.s.dt.fnRecordsDisplay(),c=Math.ceil(this.fnPixelsToRow(a+
this.s.heights.viewport,!1,this.s.ani));return{start:Math.floor(this.fnPixelsToRow(a,!1,this.s.ani)),end:b<c?b-1:c-1}},_fnConstruct:function(){var a=this,b=this.s.dtApi;if(this.s.dt.oFeatures.bPaginate){this.dom.force.style.position="relative";this.dom.force.style.top="0px";this.dom.force.style.left="0px";this.dom.force.style.width="1px";this.dom.scroller=e("div."+this.s.dt.oClasses.sScrollBody,this.s.dt.nTableWrapper)[0];this.dom.scroller.appendChild(this.dom.force);this.dom.scroller.style.position=
"relative";this.dom.table=e(">table",this.dom.scroller)[0];this.dom.table.style.position="absolute";this.dom.table.style.top="0px";this.dom.table.style.left="0px";e(b.table().container()).addClass("DTS");this.s.loadingIndicator&&(this.dom.loader=e('<div class="dataTables_processing DTS_Loading">'+this.s.dt.oLanguage.sLoadingRecords+"</div>").css("display","none"),e(this.dom.scroller.parentNode).css("position","relative").append(this.dom.loader));this.s.heights.row&&"auto"!=this.s.heights.row&&(this.s.autoHeight=
!1);this.fnMeasure(!1);this.s.ingnoreScroll=!0;this.s.stateSaveThrottle=this.s.dt.oApi._fnThrottle(function(){a.s.dtApi.state.save()},500);e(this.dom.scroller).on("scroll.dt-scroller",function(){a._fnScroll.call(a)});e(this.dom.scroller).on("touchstart.dt-scroller",function(){a._fnScroll.call(a)});e(h).on("resize.dt-scroller",function(){a.fnMeasure(false);a._fnInfo()});var c=!0,d=b.state.loaded();b.on("stateSaveParams.scroller",function(b,e,g){g.scroller={topRow:c&&d&&d.scroller?d.scroller.topRow:
a.s.topRowFloat,baseScrollTop:a.s.baseScrollTop,baseRowTop:a.s.baseRowTop};c=false});d&&d.scroller&&(this.s.topRowFloat=d.scroller.topRow,this.s.baseScrollTop=d.scroller.baseScrollTop,this.s.baseRowTop=d.scroller.baseRowTop);b.on("init.scroller",function(){a.fnMeasure(false);a._fnDrawCallback();b.on("draw.scroller",function(){a._fnDrawCallback()})});b.on("preDraw.dt.scroller",function(){a._fnScrollForce()});b.on("destroy.scroller",function(){e(h).off("resize.dt-scroller");e(a.dom.scroller).off(".dt-scroller");
e(a.s.dt.nTable).off(".scroller");e(a.s.dt.nTableWrapper).removeClass("DTS");e("div.DTS_Loading",a.dom.scroller.parentNode).remove();a.dom.table.style.position="";a.dom.table.style.top="";a.dom.table.style.left=""})}else this.s.dt.oApi._fnLog(this.s.dt,0,"Pagination must be enabled for Scroller")},_fnScroll:function(){var a=this,b=this.s.heights,c=this.dom.scroller.scrollTop,d;if(!this.s.skip&&!this.s.ingnoreScroll)if(this.s.dt.bFiltered||this.s.dt.bSorted)this.s.lastScrollTop=0;else{this._fnInfo();
clearTimeout(this.s.stateTO);this.s.stateTO=setTimeout(function(){a.s.dtApi.state.save()},250);if(this.s.forceReposition||c<this.s.redrawTop||c>this.s.redrawBottom){var f=Math.ceil((this.s.displayBuffer-1)/2*this.s.viewportRows);d=parseInt(this._domain("physicalToVirtual",c)/b.row,10)-f;this.s.topRowFloat=this._domain("physicalToVirtual",c)/b.row;this.s.forceReposition=!1;0>=d?d=0:d+this.s.dt._iDisplayLength>this.s.dt.fnRecordsDisplay()?(d=this.s.dt.fnRecordsDisplay()-this.s.dt._iDisplayLength,0>
d&&(d=0)):0!==d%2&&d++;if(d!=this.s.dt._iDisplayStart&&(this.s.tableTop=e(this.s.dt.nTable).offset().top,this.s.tableBottom=e(this.s.dt.nTable).height()+this.s.tableTop,b=function(){if(a.s.scrollDrawReq===null)a.s.scrollDrawReq=c;a.s.dt._iDisplayStart=d;a.s.dt.oApi._fnDraw(a.s.dt)},this.s.dt.oFeatures.bServerSide?(clearTimeout(this.s.drawTO),this.s.drawTO=setTimeout(b,this.s.serverWait)):b(),this.dom.loader&&!this.s.loaderVisible))this.dom.loader.css("display","block"),this.s.loaderVisible=!0}else this.s.topRowFloat=
this.fnPixelsToRow(c,!1,!0);this.s.lastScrollTop=c;this.s.stateSaveThrottle()}},_domain:function(a,b){var c=this.s.heights,d;if(c.virtual===c.scroll)return b;var e=(c.scroll-c.viewport)/2,j=(c.virtual-c.viewport)/2;d=j/(e*e);if("virtualToPhysical"===a){if(b<j)return Math.pow(b/d,0.5);b=2*j-b;return 0>b?c.scroll:2*e-Math.pow(b/d,0.5)}if("physicalToVirtual"===a){if(b<e)return b*b*d;b=2*e-b;return 0>b?c.virtual:2*j-b*b*d}},_parseHeight:function(a){var b,c=/^([+-]?(?:\d+(?:\.\d+)?|\.\d+))(px|em|rem|vh)$/.exec(a);
if(null===c)return 0;a=parseFloat(c[1]);c=c[2];"px"===c?b=a:"vh"===c?b=a/100*e(h).height():"rem"===c?b=a*parseFloat(e(":root").css("font-size")):"em"===c&&(b=a*parseFloat(e("body").css("font-size")));return b?b:0},_fnDrawCallback:function(){var a=this,b=this.s.heights,c=this.dom.scroller.scrollTop,d=e(this.s.dt.nTable).height(),f=this.s.dt._iDisplayStart,j=this.s.dt._iDisplayLength,g=this.s.dt.fnRecordsDisplay();this.s.skip=!0;if((this.s.dt.bSorted||this.s.dt.bFiltered)&&0===f)this.s.topRowFloat=
0;c=0===f?this.s.topRowFloat*b.row:f+j>=g?b.scroll-(g-this.s.topRowFloat)*b.row:this._domain("virtualToPhysical",this.s.topRowFloat*b.row);this.dom.scroller.scrollTop=c;this.s.baseScrollTop=c;this.s.baseRowTop=this.s.topRowFloat;var h=c-(this.s.topRowFloat-f)*b.row;0===f?h=0:f+j>=g&&(h=b.scroll-d);this.dom.table.style.top=h+"px";this.s.tableTop=h;this.s.tableBottom=d+this.s.tableTop;d=(c-this.s.tableTop)*this.s.boundaryScale;this.s.redrawTop=c-d;this.s.redrawBottom=c+d>b.scroll-b.viewport-b.row?b.scroll-
b.viewport-b.row:c+d;this.s.skip=!1;this.s.dt.oFeatures.bStateSave&&null!==this.s.dt.oLoadedState&&"undefined"!=typeof this.s.dt.oLoadedState.iScroller?((c=(this.s.dt.sAjaxSource||a.s.dt.ajax)&&!this.s.dt.oFeatures.bServerSide?!0:!1)&&2==this.s.dt.iDraw||!c&&1==this.s.dt.iDraw)&&setTimeout(function(){e(a.dom.scroller).scrollTop(a.s.dt.oLoadedState.iScroller);a.s.redrawTop=a.s.dt.oLoadedState.iScroller-b.viewport/2;setTimeout(function(){a.s.ingnoreScroll=!1},0)},0):a.s.ingnoreScroll=!1;this.s.dt.oFeatures.bInfo&&
setTimeout(function(){a._fnInfo.call(a)},0);this.dom.loader&&this.s.loaderVisible&&(this.dom.loader.css("display","none"),this.s.loaderVisible=!1)},_fnScrollForce:function(){var a=this.s.heights;a.virtual=a.row*this.s.dt.fnRecordsDisplay();a.scroll=a.virtual;1E6<a.scroll&&(a.scroll=1E6);this.dom.force.style.height=a.scroll>this.s.heights.row?a.scroll+"px":this.s.heights.row+"px"},_fnCalcRowHeight:function(){var a=this.s.dt,b=a.nTable,c=b.cloneNode(!1),d=e("<tbody/>").appendTo(c),f=e('<div class="'+
a.oClasses.sWrapper+' DTS"><div class="'+a.oClasses.sScrollWrapper+'"><div class="'+a.oClasses.sScrollBody+'"></div></div></div>');for(e("tbody tr:lt(4)",b).clone().appendTo(d);3>e("tr",d).length;)d.append("<tr><td>&nbsp;</td></tr>");e("div."+a.oClasses.sScrollBody,f).append(c);a=this.s.dt.nHolding||b.parentNode;e(a).is(":visible")||(a="body");f.appendTo(a);this.s.heights.row=e("tr",d).eq(1).outerHeight();f.remove()},_fnInfo:function(){if(this.s.dt.oFeatures.bInfo){var a=this.s.dt,b=a.oLanguage,c=
this.dom.scroller.scrollTop,d=Math.floor(this.fnPixelsToRow(c,!1,this.s.ani)+1),f=a.fnRecordsTotal(),g=a.fnRecordsDisplay(),c=Math.ceil(this.fnPixelsToRow(c+this.s.heights.viewport,!1,this.s.ani)),c=g<c?g:c,h=a.fnFormatNumber(d),i=a.fnFormatNumber(c),k=a.fnFormatNumber(f),l=a.fnFormatNumber(g),h=0===a.fnRecordsDisplay()&&a.fnRecordsDisplay()==a.fnRecordsTotal()?b.sInfoEmpty+b.sInfoPostFix:0===a.fnRecordsDisplay()?b.sInfoEmpty+" "+b.sInfoFiltered.replace("_MAX_",k)+b.sInfoPostFix:a.fnRecordsDisplay()==
a.fnRecordsTotal()?b.sInfo.replace("_START_",h).replace("_END_",i).replace("_MAX_",k).replace("_TOTAL_",l)+b.sInfoPostFix:b.sInfo.replace("_START_",h).replace("_END_",i).replace("_MAX_",k).replace("_TOTAL_",l)+" "+b.sInfoFiltered.replace("_MAX_",a.fnFormatNumber(a.fnRecordsTotal()))+b.sInfoPostFix;(b=b.fnInfoCallback)&&(h=b.call(a.oInstance,a,d,c,f,g,h));d=a.aanFeatures.i;if("undefined"!=typeof d){f=0;for(g=d.length;f<g;f++)e(d[f]).html(h)}e(a.nTable).triggerHandler("info.dt")}}});g.defaults={trace:!1,
rowHeight:"auto",serverWait:200,displayBuffer:9,boundaryScale:0.5,loadingIndicator:!1};g.oDefaults=g.defaults;g.version="1.5.1";"function"==typeof e.fn.dataTable&&"function"==typeof e.fn.dataTableExt.fnVersionCheck&&e.fn.dataTableExt.fnVersionCheck("1.10.0")?e.fn.dataTableExt.aoFeatures.push({fnInit:function(a){var b=a.oInit;new g(a,b.scroller||b.oScroller||{})},cFeature:"S",sFeature:"Scroller"}):alert("Warning: Scroller requires DataTables 1.10.0 or greater - www.datatables.net/download");e(i).on("preInit.dt.dtscroller",
function(a,b){if("dt"===a.namespace){var c=b.oInit.scroller,d=m.defaults.scroller;if(c||d)d=e.extend({},c,d),!1!==c&&new g(b,d)}});e.fn.dataTable.Scroller=g;e.fn.DataTable.Scroller=g;var k=e.fn.dataTable.Api;k.register("scroller()",function(){return this});k.register("scroller().rowToPixels()",function(a,b,c){var d=this.context;if(d.length&&d[0].oScroller)return d[0].oScroller.fnRowToPixels(a,b,c)});k.register("scroller().pixelsToRow()",function(a,b,c){var d=this.context;if(d.length&&d[0].oScroller)return d[0].oScroller.fnPixelsToRow(a,
b,c)});k.register(["scroller().scrollToRow()","scroller.toPosition()"],function(a,b){this.iterator("table",function(c){c.oScroller&&c.oScroller.fnScrollToRow(a,b)});return this});k.register("row().scrollTo()",function(a){var b=this;this.iterator("row",function(c,d){if(c.oScroller){var e=b.rows({order:"applied",search:"applied"}).indexes().indexOf(d);c.oScroller.fnScrollToRow(e,a)}});return this});k.register("scroller.measure()",function(a){this.iterator("table",function(b){b.oScroller&&b.oScroller.fnMeasure(a)});
return this});k.register("scroller.page()",function(){var a=this.context;if(a.length&&a[0].oScroller)return a[0].oScroller.fnPageInfo()});return g});

/*!
 Select for DataTables 1.3.0
 2015-2018 SpryMedia Ltd - datatables.net/license/mit
*/
(function(e){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(i){return e(i,window,document)}):"object"===typeof exports?module.exports=function(i,l){i||(i=window);if(!l||!l.fn.dataTable)l=require("datatables.net")(i,l).$;return e(l,i,i.document)}:e(jQuery,window,document)})(function(e,i,l,h){function u(a,c,b){var d;d=function(b,c){if(b>c)var d=c,c=b,b=d;var f=!1;return a.columns(":visible").indexes().filter(function(a){a===b&&(f=!0);return a===c?(f=!1,!0):f})};var f=
function(b,c){var d=a.rows({search:"applied"}).indexes();if(d.indexOf(b)>d.indexOf(c))var f=c,c=b,b=f;var e=!1;return d.filter(function(a){a===b&&(e=!0);return a===c?(e=!1,!0):e})};!a.cells({selected:!0}).any()&&!b?(d=d(0,c.column),b=f(0,c.row)):(d=d(b.column,c.column),b=f(b.row,c.row));b=a.cells(b,d).flatten();a.cells(c,{selected:!0}).any()?a.cells(b).deselect():a.cells(b).select()}function q(a){var c=a.settings()[0]._select.selector;e(a.table().container()).off("mousedown.dtSelect",c).off("mouseup.dtSelect",
c).off("click.dtSelect",c);e("body").off("click.dtSelect"+a.table().node().id)}function x(a){var c=e(a.table().container()),b=a.settings()[0],d=b._select.selector,f;c.on("mousedown.dtSelect",d,function(b){if(b.shiftKey||b.metaKey||b.ctrlKey)c.css("-moz-user-select","none").one("selectstart.dtSelect",d,function(){return!1});i.getSelection&&(f=i.getSelection())}).on("mouseup.dtSelect",d,function(){c.css("-moz-user-select","")}).on("click.dtSelect",d,function(b){var c=a.select.items();if(f){var d=i.getSelection();
if((!d.anchorNode||e(d.anchorNode).closest("table")[0]===a.table().node())&&d!==f)return}var d=a.settings()[0],g=e.trim(a.settings()[0].oClasses.sWrapper).replace(/ +/g,".");if(e(b.target).closest("div."+g)[0]==a.table().container()&&(g=a.cell(e(b.target).closest("td, th")),g.any())){var h=e.Event("user-select.dt");j(a,h,[c,g,b]);h.isDefaultPrevented()||(h=g.index(),"row"===c?(c=h.row,r(b,a,d,"row",c)):"column"===c?(c=g.index().column,r(b,a,d,"column",c)):"cell"===c&&(c=g.index(),r(b,a,d,"cell",c)),
d._select_lastCell=h)}});e("body").on("click.dtSelect"+a.table().node().id,function(c){b._select.blurable&&!e(c.target).parents().filter(a.table().container()).length&&(0!==e(c.target).parents("html").length&&!e(c.target).parents("div.DTE").length)&&o(b,!0)})}function j(a,c,b,d){if(!d||a.flatten().length)"string"===typeof c&&(c+=".dt"),b.unshift(a),e(a.table().node()).trigger(c,b)}function y(a){var c=a.settings()[0];if(c._select.info&&c.aanFeatures.i&&"api"!==a.select.style()){var b=a.rows({selected:!0}).flatten().length,
d=a.columns({selected:!0}).flatten().length,f=a.cells({selected:!0}).flatten().length,k=function(b,c,d){b.append(e('<span class="select-item"/>').append(a.i18n("select."+c+"s",{_:"%d "+c+"s selected","0":"",1:"1 "+c+" selected"},d)))};e.each(c.aanFeatures.i,function(c,a){var a=e(a),g=e('<span class="select-info"/>');k(g,"row",b);k(g,"column",d);k(g,"cell",f);var h=a.children("span.select-info");h.length&&h.remove();""!==g.text()&&a.append(g)})}}function z(a,c,b,d){var f=a[c+"s"]({search:"applied"}).indexes(),
d=e.inArray(d,f),k=e.inArray(b,f);if(!a[c+"s"]({selected:!0}).any()&&-1===d)f.splice(e.inArray(b,f)+1,f.length);else{if(d>k)var g=k,k=d,d=g;f.splice(k+1,f.length);f.splice(0,d)}a[c](b,{selected:!0}).any()?(f.splice(e.inArray(b,f),1),a[c+"s"](f).deselect()):a[c+"s"](f).select()}function o(a,c){if(c||"single"===a._select.style){var b=new g.Api(a);b.rows({selected:!0}).deselect();b.columns({selected:!0}).deselect();b.cells({selected:!0}).deselect()}}function r(a,c,b,d,f){var e=c.select.style(),g=c[d](f,
{selected:!0}).any();"os"===e?a.ctrlKey||a.metaKey?c[d](f).select(!g):a.shiftKey?"cell"===d?u(c,f,b._select_lastCell||null):z(c,d,f,b._select_lastCell?b._select_lastCell[d]:null):(a=c[d+"s"]({selected:!0}),g&&1===a.flatten().length?c[d](f).deselect():(a.deselect(),c[d](f).select())):"multi+shift"==e?a.shiftKey?"cell"===d?u(c,f,b._select_lastCell||null):z(c,d,f,b._select_lastCell?b._select_lastCell[d]:null):c[d](f).select(!g):c[d](f).select(!g)}function p(a,c){return function(b){return b.i18n("buttons."+
a,c)}}function s(a){a=a._eventNamespace;return"draw.dt.DT"+a+" select.dt.DT"+a+" deselect.dt.DT"+a}var g=e.fn.dataTable;g.select={};g.select.version="1.3.0";g.select.init=function(a){var c=a.settings()[0],b=c.oInit.select,d=g.defaults.select,b=b===h?d:b,d="row",f="api",k=!1,v=!0,w="td, th",i="selected",j=!1;c._select={};if(!0===b)f="os",j=!0;else if("string"===typeof b)f=b,j=!0;else if(e.isPlainObject(b)&&(b.blurable!==h&&(k=b.blurable),b.info!==h&&(v=b.info),b.items!==h&&(d=b.items),f=b.style!==
h?b.style:"os",j=!0,b.selector!==h&&(w=b.selector),b.className!==h))i=b.className;a.select.selector(w);a.select.items(d);a.select.style(f);a.select.blurable(k);a.select.info(v);c._select.className=i;e.fn.dataTable.ext.order["select-checkbox"]=function(b,c){return this.api().column(c,{order:"index"}).nodes().map(function(c){return"row"===b._select.items?e(c).parent().hasClass(b._select.className):"cell"===b._select.items?e(c).hasClass(b._select.className):!1})};!j&&e(a.table().node()).hasClass("selectable")&&
a.select.style("os")};e.each([{type:"row",prop:"aoData"},{type:"column",prop:"aoColumns"}],function(a,c){g.ext.selector[c.type].push(function(b,a,f){var a=a.selected,e,g=[];if(!0!==a&&!1!==a)return f;for(var h=0,i=f.length;h<i;h++)e=b[c.prop][f[h]],(!0===a&&!0===e._select_selected||!1===a&&!e._select_selected)&&g.push(f[h]);return g})});g.ext.selector.cell.push(function(a,c,b){var c=c.selected,d,f=[];if(c===h)return b;for(var e=0,g=b.length;e<g;e++)d=a.aoData[b[e].row],(!0===c&&d._selected_cells&&
!0===d._selected_cells[b[e].column]||!1===c&&(!d._selected_cells||!d._selected_cells[b[e].column]))&&f.push(b[e]);return f});var m=g.Api.register,n=g.Api.registerPlural;m("select()",function(){return this.iterator("table",function(a){g.select.init(new g.Api(a))})});m("select.blurable()",function(a){return a===h?this.context[0]._select.blurable:this.iterator("table",function(c){c._select.blurable=a})});m("select.info()",function(a){return y===h?this.context[0]._select.info:this.iterator("table",function(c){c._select.info=
a})});m("select.items()",function(a){return a===h?this.context[0]._select.items:this.iterator("table",function(c){c._select.items=a;j(new g.Api(c),"selectItems",[a])})});m("select.style()",function(a){return a===h?this.context[0]._select.style:this.iterator("table",function(c){c._select.style=a;if(!c._select_init){var b=new g.Api(c);c.aoRowCreatedCallback.push({fn:function(b,a,d){a=c.aoData[d];a._select_selected&&e(b).addClass(c._select.className);b=0;for(d=c.aoColumns.length;b<d;b++)(c.aoColumns[b]._select_selected||
a._selected_cells&&a._selected_cells[b])&&e(a.anCells[b]).addClass(c._select.className)},sName:"select-deferRender"});b.on("preXhr.dt.dtSelect",function(){var a=b.rows({selected:!0}).ids(!0).filter(function(b){return b!==h}),c=b.cells({selected:!0}).eq(0).map(function(c){var a=b.row(c.row).id(!0);return a?{row:a,column:c.column}:h}).filter(function(b){return b!==h});b.one("draw.dt.dtSelect",function(){b.rows(a).select();c.any()&&c.each(function(c){b.cells(c.row,c.column).select()})})});b.on("draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt",
function(){y(b)});b.on("destroy.dtSelect",function(){q(b);b.off(".dtSelect")})}var d=new g.Api(c);q(d);"api"!==a&&x(d);j(new g.Api(c),"selectStyle",[a])})});m("select.selector()",function(a){return a===h?this.context[0]._select.selector:this.iterator("table",function(c){q(new g.Api(c));c._select.selector=a;"api"!==c._select.style&&x(new g.Api(c))})});n("rows().select()","row().select()",function(a){var c=this;if(!1===a)return this.deselect();this.iterator("row",function(b,c){o(b);b.aoData[c]._select_selected=
!0;e(b.aoData[c].nTr).addClass(b._select.className)});this.iterator("table",function(b,a){j(c,"select",["row",c[a]],!0)});return this});n("columns().select()","column().select()",function(a){var c=this;if(!1===a)return this.deselect();this.iterator("column",function(b,c){o(b);b.aoColumns[c]._select_selected=!0;var a=(new g.Api(b)).column(c);e(a.header()).addClass(b._select.className);e(a.footer()).addClass(b._select.className);a.nodes().to$().addClass(b._select.className)});this.iterator("table",
function(b,a){j(c,"select",["column",c[a]],!0)});return this});n("cells().select()","cell().select()",function(a){var c=this;if(!1===a)return this.deselect();this.iterator("cell",function(b,c,a){o(b);c=b.aoData[c];c._selected_cells===h&&(c._selected_cells=[]);c._selected_cells[a]=!0;c.anCells&&e(c.anCells[a]).addClass(b._select.className)});this.iterator("table",function(b,a){j(c,"select",["cell",c[a]],!0)});return this});n("rows().deselect()","row().deselect()",function(){var a=this;this.iterator("row",
function(c,b){c.aoData[b]._select_selected=!1;e(c.aoData[b].nTr).removeClass(c._select.className)});this.iterator("table",function(c,b){j(a,"deselect",["row",a[b]],!0)});return this});n("columns().deselect()","column().deselect()",function(){var a=this;this.iterator("column",function(c,b){c.aoColumns[b]._select_selected=!1;var a=new g.Api(c),f=a.column(b);e(f.header()).removeClass(c._select.className);e(f.footer()).removeClass(c._select.className);a.cells(null,b).indexes().each(function(b){var a=
c.aoData[b.row],d=a._selected_cells;a.anCells&&(!d||!d[b.column])&&e(a.anCells[b.column]).removeClass(c._select.className)})});this.iterator("table",function(c,b){j(a,"deselect",["column",a[b]],!0)});return this});n("cells().deselect()","cell().deselect()",function(){var a=this;this.iterator("cell",function(a,b,d){b=a.aoData[b];b._selected_cells[d]=!1;b.anCells&&!a.aoColumns[d]._select_selected&&e(b.anCells[d]).removeClass(a._select.className)});this.iterator("table",function(c,b){j(a,"deselect",
["cell",a[b]],!0)});return this});var t=0;e.extend(g.ext.buttons,{selected:{text:p("selected","Selected"),className:"buttons-selected",limitTo:["rows","columns","cells"],init:function(a,c,b){var d=this;b._eventNamespace=".select"+t++;a.on(s(b),function(){d.enable(-1!==e.inArray("rows",b.limitTo)&&a.rows({selected:!0}).any()||-1!==e.inArray("columns",b.limitTo)&&a.columns({selected:!0}).any()||-1!==e.inArray("cells",b.limitTo)&&a.cells({selected:!0}).any()?!0:!1)});this.disable()},destroy:function(a,
c,b){a.off(b._eventNamespace)}},selectedSingle:{text:p("selectedSingle","Selected single"),className:"buttons-selected-single",init:function(a,c,b){var d=this;b._eventNamespace=".select"+t++;a.on(s(b),function(){var b=a.rows({selected:!0}).flatten().length+a.columns({selected:!0}).flatten().length+a.cells({selected:!0}).flatten().length;d.enable(1===b)});this.disable()},destroy:function(a,c,b){a.off(b._eventNamespace)}},selectAll:{text:p("selectAll","Select all"),className:"buttons-select-all",action:function(){this[this.select.items()+
"s"]().select()}},selectNone:{text:p("selectNone","Deselect all"),className:"buttons-select-none",action:function(){o(this.settings()[0],!0)},init:function(a,c,b){var d=this;b._eventNamespace=".select"+t++;a.on(s(b),function(){var b=a.rows({selected:!0}).flatten().length+a.columns({selected:!0}).flatten().length+a.cells({selected:!0}).flatten().length;d.enable(0<b)});this.disable()},destroy:function(a,c,b){a.off(b._eventNamespace)}}});e.each(["Row","Column","Cell"],function(a,c){var b=c.toLowerCase();
g.ext.buttons["select"+c+"s"]={text:p("select"+c+"s","Select "+b+"s"),className:"buttons-select-"+b+"s",action:function(){this.select.items(b)},init:function(a){var c=this;a.on("selectItems.dt.DT",function(a,d,e){c.active(e===b)})}}});e(l).on("preInit.dt.dtSelect",function(a,c){"dt"===a.namespace&&g.select.init(new g.Api(c))});return g.select});
